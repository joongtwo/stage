{
    "BusinessObjectInterface": [
      {
        "createRelease": "Awp06.2.0",
        "description": "Interface Name for Business Object Pca0AllocationsProvider",
        "libraryName": "Pca0awconfigurator",
        "name": "Pca0AllocationsProvider",
        "namespace": "Teamcenter::Pca0awconfigurator",
        "primaryInterface": "true",
        "typeName": "Pca0AllocationsProvider"
      },
      {
        "createRelease": "Awp05.2.0",
        "description": "Interface Name for Business Object Pca0ConfigMembersProvider",
        "libraryName": "Pca0awconfigurator",
        "name": "Pca0ConfigMembersProvider",
        "namespace": "Teamcenter::Pca0awconfigurator",
        "primaryInterface": "true",
        "typeName": "Pca0ConfigMembersProvider"
      },
      {
        "createRelease": "Awp06.1.0",
        "description": "Interface Name for Business Object Pca0ConstraintsProvider",
        "libraryName": "Pca0awconfigurator",
        "name": "Pca0ConstraintsProvider",
        "namespace": "Teamcenter::Pca0awconfigurator",
        "primaryInterface": "true",
        "typeName": "Pca0ConstraintsProvider"
      },
      {
        "createRelease": "Awp05.2.0",
        "description": "Interface Name for Business Object Pca0PackagedByProvider",
        "libraryName": "Pca0awconfigurator",
        "name": "Pca0PackagedByProvider",
        "namespace": "Teamcenter::Pca0awconfigurator",
        "primaryInterface": "true",
        "typeName": "Pca0PackagedByProvider"
      },
      {
        "createRelease": "Awp05.1.0",
        "description": "Interface Name for Business Object Pca0SavedVariantsProvider",
        "libraryName": "Pca0awconfigurator",
        "name": "Pca0SavedVariantsProvider",
        "namespace": "Teamcenter::Pca0awconfigurator",
        "primaryInterface": "true",
        "typeName": "Pca0SavedVariantsProvider"
      },
      {
        "createRelease": "Awp05.2.0",
        "description": "Interface Name for Business Object Pca0SummarizedByProvider",
        "libraryName": "Pca0awconfigurator",
        "name": "Pca0SummarizedByProvider",
        "namespace": "Teamcenter::Pca0awconfigurator",
        "primaryInterface": "true",
        "typeName": "Pca0SummarizedByProvider"
      }
    ],
    "Date": "Tue Aug 16 02:07:12 PM 2022",
    "Library": [
      {
        "createRelease": "Awp03.4.0",
        "description": "This service provides the capabality for configurator management features in Active Workspace module.",
        "isThirdParty": "false",
        "name": "Pca0SoaProductConfiguratorAw",
        "namespace": "Pca0::Soa::ProductConfiguratorAw",
        "serviceLibrary": "true"
      },
      {
        "DependentOn": [
          {
            "name": "metaframework"
          },
          {
            "name": "sa"
          },
          {
            "name": "tccore"
          },
          {
            "name": "tc"
          },
          {
            "name": "cxpom"
          },
          {
            "name": "awp0aws2"
          },
          {
            "name": "Cfg0configurator"
          },
          {
            "name": "srh0apsconfiguredsearch"
          }
        ],
        "createRelease": "tc12000.0.0",
        "description": "Pca0awconfigurator",
        "isThirdParty": "false",
        "name": "Pca0awconfigurator",
        "namespace": "",
        "serviceLibrary": "false"
      }
    ],
    "Operation": [
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "This operation is deprected and replaced with createAndAddObjects2.",
            "deprecatedRelease": "Awp06.2.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "The configurator perspective containing all information about the current configurator context, revision rule and effectivity. It is a mandatory input.",
            "parameterName": "configPerspective"
          },
          {
            "description": "List of objects to be created and allocated under configurator context. Configurator context information is retrieved from <font face=\"courier\" height=\"10\">configPerspective</font>. Objects can only be of type <b>Cfg0AbsConfiguratorWSO</b>. Objects would be added as children to the specified parent in parent attribute.",
            "parameterName": "objectsToCreateAndAdd"
          },
          {
            "description": "Specifies the criteria to use to sort the results that are retrieved. It provides the field to sort and the direction to sort it in.",
            "parameterName": "sortCriteria"
          },
          {
            "description": "A list of filters (<font face=\"courier\" height=\"10\">FilterCriteriaInput</font>) to be applied on the columns.",
            "parameterName": "columnFilters"
          },
          {
            "description": "Map (string, list of strings) used to send information related to request. This is not used in release Active Workspace 6.1.",
            "parameterName": "requestInfo"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp06.1.0",
        "dependencies": "",
        "description": "This operation creates objects specified in <font face=\"courier\" height=\"10\">objectsToCreateAndAdd</font> and allocates them to the configurator context specified via <font face=\"courier\" height=\"10\">configPerspective</font>. Objects to be added are of type <b>Cfg0AbsConfiguratorWSO</b> and each object is added as a child to the parent provided in its <font face=\"courier\" height=\"10\">parent</font> attribute.<br />Created objects are returned along with its siblings under the parent. Objects are sorted and filtered as per the input <font face=\"courier\" height=\"10\">sortCriteria</font> and <font face=\"courier\" height=\"10\">columnFilters</font>. Objects are configured based on configuration settings such as revision rule, rule date and effectivity set on the <font face=\"courier\" height=\"10\">configPerspective</font>.",
        "exceptionCondition": "",
        "id": "createAndAddObjects#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::ObjectsToCreateAndAdd>,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria>,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_12::ConfiguratorManagement::FilterCriteriaInput>,&$const,Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::StringMap4,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "createAndAddObjects",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::CreateAndAddObjectsResponse#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::createAndAddObjects#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::ObjectsToCreateAndAdd>,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria>,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_12::ConfiguratorManagement::FilterCriteriaInput>,&$const,Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::StringMap4,&",
        "returnDescription": "The list of VariabiltyNode corresponding to created objects and their siblings.<br />Response also contains list of UIDs of successfully created objects and clientIDs of failed objects.<br /><br />Operation may return following partial errors &ndash; <br /><ul><ul><li type=\"disc\">77073&nbsp;&nbsp;&nbsp;&nbsp;The operation has failed, because an invalid Configurator Perspective was passed.</li><li type=\"disc\">26019   The value of '<font face=\"courier\" height=\"10\">parent</font>' is invalid.</li></ul></ul>",
        "useCase": "<b>Use case 1: User creates Group, Family and Feature together. </b><br />Group, Family and Feature are created and allocated to given configurator context. Parent child relationship is created between them and returned along with each objects&rsquo; siblings in sorted order which are filtered and configured in by config settings such as revision rule, rule date and effectivity present on configurator perspective.<br /> <br /><b>Use case 2: User creates Family and Feature together under existing Group.</b><br />Family and Feature are created. Parent child relation is created between Family and Features. Family is added to the Group in the input. Created family and its sibling families present under the group are returned to the client in sorted order and are filter and configured by given input.<br /> <br /><b>Use case 3: User creates any of the Group, Family or Feature individually.</b><br />Each object is created and added under the specified parent. In case of family, if parent is not specified, it is added under unassigned family group. Object and its siblings would then be sorted and filtered as per given input and configured by configurator perspective and returned."
      },
      {
        "ParameterInfo": [
          {
            "description": "The configurator perspective (<b>Cfg0ConfiguratorPerspective</b>) containing all information about the current configurator context, revision rule and effectivity. It is a mandatory input.",
            "parameterName": "configPerspective"
          },
          {
            "description": "A list of objects to be created and allocated under configurator context. Configurator context information is retrieved from <font face=\"courier\" height=\"10\">configPerspective</font>. Objects can only be of type <b>Cfg0AbsConfiguratorWSO</b>. Objects would be added as children to the specified parent in <font face=\"courier\" height=\"10\">parent</font> attribute.",
            "parameterName": "objectsToCreateAndAdd"
          },
          {
            "description": "Specifies the criteria to use to sort the results that are retrieved. It provides the field to sort and the direction to sort it in.",
            "parameterName": "sortCriteria"
          },
          {
            "description": "A list of filters (<font face=\"courier\" height=\"10\">FilterCriteriaInput</font>) to be applied on the columns.",
            "parameterName": "columnFilters"
          },
          {
            "description": "A map (string, list of strings) used to send information related to request. This is not used in release Active Workspace 6.2.",
            "parameterName": "requestInfo"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp06.2.0",
        "dependencies": "",
        "description": "This operation creates objects specified in <font face=\"courier\" height=\"10\">ObjectsToCreateAndAdd2</font> and allocates them to the configurator context specified via <font face=\"courier\" height=\"10\">configPerspective</font>. Objects to be added are of type <b>Cfg0AbsConfiguratorWSO</b> and each object is added as a child to the parent provided in its <font face=\"courier\" height=\"10\">parent</font> attribute.<br />Created objects are returned along with its siblings under the parent. Objects are sorted and filtered as per the input <font face=\"courier\" height=\"10\">sortCriteria</font> and <font face=\"courier\" height=\"10\">columnFilters</font>. Objects are configured based on configuration settings such as revision rule, rule date and effectivity set on the <font face=\"courier\" height=\"10\">configPerspective</font>.",
        "exceptionCondition": "",
        "id": "createAndAddObjects2#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ObjectsToCreateAndAdd2>,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria>,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_12::ConfiguratorManagement::FilterCriteriaInput>,&$const,Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::StringMap5,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "createAndAddObjects2",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::CreateAndAddObjectsResponse2#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::createAndAddObjects2#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ObjectsToCreateAndAdd2>,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria>,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_12::ConfiguratorManagement::FilterCriteriaInput>,&$const,Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::StringMap5,&",
        "returnDescription": "The list of <font face=\"courier\" height=\"10\">VariabiltyNode</font> corresponding to created objects and their siblings.<br />Response also contains list of UIDs of successfully created objects and clientIDs of failed objects.<br /><br />Operation may return following partial errors &ndash; <br /><ul><ul><li type=\"disc\">77073&nbsp;&nbsp;&nbsp;&nbsp;The operation has failed, because an invalid Configurator Perspective was passed.</li><li type=\"disc\">333012   The operation &lsquo;<font face=\"courier\" height=\"10\">createAndObjects2</font>&rsquo; has failed because the input &lsquo;<font face=\"courier\" height=\"10\">parent</font>&rsquo; is null or empty.</li></ul></ul>",
        "useCase": "<b>Use case 1: User creates Group, Family and Feature together. <br /></b>Group, Family and Feature are created and allocated to given configurator context. Parent child relationship is created between them and returned along with each objects&rsquo; siblings in sorted order which are filtered and configured in by config settings such as revision rule, rule date and effectivity present on configurator perspective.<br /><b><br />Use case 2: User creates Family and Feature together under existing Group.<br /></b>Family and Feature are created. Parent child relation is created between Family and Features. Family is added to the Group in the input. Created family and its sibling families present under the group are returned to the client in sorted order and are filter and configured by given input.<br /> <br /><b>Use case 3: User creates any of the Group, Family or Feature individually.<br /></b>Each object is created and added under the specified parent. In case of family, if parent is not specified, it is added under unassigned family group. Object and its siblings would then be sorted and filtered as per given input and configured by configurator perspective and returned."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "use setVariantExpressionData2 AW5.1 onwards.",
            "deprecatedRelease": "Awp05.1.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "The list of selections of all option values that form the expression on the input object. If the expression has split then there will be more than one SelectedExpression structure with same affectedObject UID.",
            "parameterName": "selectedExpressions"
          },
          {
            "description": "Input configurator perspective. It is optional. Configurator Perspective object is used as communication mechanism for the configuration and the valid configurator contexts across the Product Configurator and its consuming applications such as 4G Designer, Structure Manager. If it is null then the config perspective is obtained from the selected objects.",
            "parameterName": "configPerspective"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp04.0.0",
        "dependencies": "",
        "description": "This operation sets the configuration expressions for the input business objects. The variant expressions can be set for variant conditions, rules and variant criteria.",
        "exceptionCondition": "",
        "id": "setVariantExpressionData#const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectedExpression>,&$const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "setVariantExpressionData",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::setVariantExpressionData#const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectedExpression>,&$const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&",
        "returnDescription": "<font face=\"courier\" height=\"10\">ServiceData</font> containing list of objects updated with variant formula, and partial error if any.<br /><br />The following partial errors may be returned:<br />333006   The input configPerspective is null.<br />77073&nbsp;&nbsp;&nbsp;&nbsp; The operation has failed, because an invalid Configurator Perspective was passed.<br />77074&nbsp;&nbsp;&nbsp;&nbsp; The operation must contain a product item or dictionary in the Configurator Perspective",
        "useCase": ""
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "Use setVariantExpressionData3 from AW6.2 onwards",
            "deprecatedRelease": "Awp06.2.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "Input containing the configuration details and user selections that represent variability to be set on variant configurable objects for e.g <b>VariantRule</b>",
            "parameterName": "input"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp05.1.0",
        "dependencies": "",
        "description": "This operation sets the configuration expressions for the input business objects. The variant expressions can be set for variant conditions, rules and variant criteria.",
        "exceptionCondition": "",
        "id": "setVariantExpressionData2#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::SetVariantExpressionDataInput,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "setVariantExpressionData2",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::setVariantExpressionData2#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::SetVariantExpressionDataInput,&",
        "returnDescription": "<font face=\"courier\" height=\"10\">ServiceData</font> containing list of objects updated with variant formula, and partial error if any.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">333006   The input configPerspective is null.</li><li type=\"disc\">77073&nbsp;&nbsp;&nbsp;&nbsp; The operation has failed, because an invalid Configurator Perspective was passed.</li><li type=\"disc\">77074&nbsp;&nbsp;&nbsp;&nbsp; The operation must contain a product item or dictionary in the Configurator Perspective</li></ul></ul>",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": " Input containing the configuration details and user selections that represent variability to be set on variant configurable objects for e.g <b>VariantRule</b>",
            "parameterName": "input"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp06.2.0",
        "dependencies": "",
        "description": "This operation sets the configuration expressions for the input business objects. The variant expressions can be set for variant conditions, rules and variant criteria.",
        "exceptionCondition": "",
        "id": "setVariantExpressionData3#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::SetVariantExpressionDataInput3,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "setVariantExpressionData3",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::SetVariantExpressionDataResponse3#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::setVariantExpressionData3#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::SetVariantExpressionDataInput3,&",
        "returnDescription": "ServiceData containing list of objects updated with variant formula, responseInfo containing extra information and partial error if any.<br /><br />The following partial errors may be returned:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&bull;333006 The input configPerspective is null.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&bull;77074&nbsp;&nbsp;&nbsp;&nbsp; The operation must contain a product item or dictionary in the Configurator Perspective",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": "Instance of <b>Cfg0ConfiguratorPerspective</b> business object. This is a required parameter.",
            "parameterName": "configPerspective"
          },
          {
            "description": "The constraint rules application. The parameter is a bitwise OR of the following values: <br />0: Disable configurator constraint evaluation. <br />1: Enable configurator constraint evaluation.<br />2: Skip constraints if they only reference unset families.<br />4: Skip constraints that don't reference all Expression families.<br />8: Report warnings in addition to errors.<br />16: Report informational messages.<br />64: Treat constraints with warning severity as if they had error severity.<br />256: Skip allocation constraints in solve.<br />1024: Skip criteria update based on validation rules (For example configurator exclusion rule). If this flag is not set then the operation will update the variant criteria after applying validation rules.<br />2048: Enable Availability Constraint evaluation. <br />4096: Include Default Rules in the violations.",
            "parameterName": "applyConstraints"
          },
          {
            "description": "A list of selections of all option values that form the expression on the input object. If the expression has split then there will be more than one SelectedExpression structure with same affectedObject UID.",
            "parameterName": "selectedExpressions"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp04.0.0",
        "dependencies": "",
        "description": "This operation validates the input selections by applying the constraint rules such as inclusion rule,  exclusion rule or feasibility rule for the input configurator perspective.<br />The operation also returns validation status, violations and selections by considering input selections and the rules in the context. The response parameter <font face=\"courier\" height=\"10\">criteriaStatus</font> conveys the information about the status of the configuration which is either valid or invalid. The parameter <font face=\"courier\" height=\"10\">valueToViolationsMap</font> represents map of values having voilations. Each value in this map have list of vloilations. The paramter <font face=\"courier\" height=\"10\">UserSelectionMap2</font> conveys the information about family to option values. This map contains entries accordance with the given input selections and the rules in the context.",
        "exceptionCondition": "The following service exception may be returned.<br /><br />77073     The operation has failed, because an invalid Configurator Perspective was passed.<br />77074     The operation must contain a product item in the Configurator Perspective.<br />256054   The value for the applyConstraints bit pattern is invalid.",
        "id": "validateProductConfigurations#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$int$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectedExpression>,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "validateProductConfigurations",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::ValidateProductConfigResponse#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::validateProductConfigurations#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$int$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectedExpression>,&",
        "returnDescription": "The operation returns validation status, list of violations and updated selections.",
        "useCase": ""
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "use validateProductConfigurations3 from AW6.2 onwards",
            "deprecatedRelease": "Awp06.2.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "Validate Product Configuration Input.",
            "parameterName": "validateProductConfigsInput"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp05.1.0",
        "dependencies": "",
        "description": "This operation validates the input selections by applying the constraint rules such as inclusion rule,  exclusion rule or feasibility rule for the input configurator perspective.<br /><br />The operation also returns validation status, violations and selections by considering input selections and the rules in the context. The response parameter criteriaStatus conveys the information about the status of the configuration which is either valid or invalid. The parameter valueToViolationsMap represents map of values having voilations. Each value in this map have list of vloilations.",
        "exceptionCondition": "The following error code may be returned:<br />77073&nbsp;&nbsp;&nbsp;&nbsp;The operation has failed, because an invalid Configurator Perspective was passed.<br />77074&nbsp;&nbsp;&nbsp;&nbsp;The operation must contain a product item in the Configurator Perspective.<br />256054 The value for the applyConstraints bit pattern is invalid.<br />77146&nbsp;&nbsp;&nbsp;&nbsp;The operation has failed, because invalid key/value is passed in requestInfo.",
        "id": "validateProductConfigurations2#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ValidateProductConfigsInput,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "validateProductConfigurations2",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ValidateProductConfigsResponse2#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::validateProductConfigurations2#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ValidateProductConfigsInput,&",
        "returnDescription": "The operation returns validation status, list of violations and updated selections.",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": "Validate Product Configuration Input.",
            "parameterName": "validateProductConfigsInput"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp06.2.0",
        "dependencies": "",
        "description": "This operation validates the input selections by applying the constraint rules such as inclusion rule,  exclusion rule or feasibility rule for the input configurator perspective.<br /><br />The operation also returns validation status, violations and selections by considering input selections and the rules in the context. The response parameter criteriaStatus conveys the information about the status of the configuration which is either valid or invalid. The parameter valueToViolationsMap represents map of values having voilations. Each value in this map have list of violations.",
        "exceptionCondition": "",
        "id": "validateProductConfigurations3#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ValidateProductConfigsInput3,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "validateProductConfigurations3",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ValidateProductConfigsResponse3#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::validateProductConfigurations3#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ValidateProductConfigsInput3,&",
        "returnDescription": "The operation returns validation status, list of violations and updated selections. <br /><br /><br /><b>Throws</b> Teamcenter::Soa::Server::ServiceException:<br /><br />The following error code may be returned:<br />77073&nbsp;&nbsp;&nbsp;&nbsp;The operation has failed, because an invalid Configurator Perspective was passed.<br />77074&nbsp;&nbsp;&nbsp;&nbsp;The operation must contain a product item in the Configurator Perspective.<br />256054 The value for the applyConstraints bit pattern is invalid.<br />77146&nbsp;&nbsp;&nbsp;&nbsp;The operation has failed, because invalid key/value is passed in requestInfo.",
        "useCase": ""
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "Use variantConfigurationView2 from AW5.1 onwards.",
            "deprecatedRelease": "Awp05.1.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "The input containing the selected context and selections (family and value) to fetch the variant configuration.",
            "parameterName": "input"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp04.0.0",
        "dependencies": "",
        "description": "This operation retrieves variant configuration data required to create a custom variant rule.<br />For a given Cfg0ConfiguratorPerspective and selected context or a seed variant rule, the following is retrieved:<br /><ul><ul><li type=\"disc\">The valid selections for given groups by optionally applying constraints</li><li type=\"disc\">All scope objects (<b>Cfg0AbsFamilyGroup</b>, <b>Ptn0Partition</b>) available in the current Configurator Context</li><li type=\"disc\">Violations and other indicators like incomplete, invalid, package.</li><li type=\"disc\">The payload that should be retained by the client for subsequent calls.</li></ul></ul>",
        "exceptionCondition": "",
        "id": "variantConfigurationView#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantConfigurationViewIn,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "variantConfigurationView",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantConfigurationViewResponse#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::variantConfigurationView#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantConfigurationViewIn,&",
        "returnDescription": "The variant configuration data and a custom variant rule.<br /><br />The following partial errors may be returned:<br /><br />333001 The variant configuration cannot be performed because both the configuration context and the configuration perspective must be provided.<br /><br />333002 The variability cannot be displayed because the existing configuration has violations.<br /><br />77073 The operation has failed, because an invalid Configurator Perspective was passed.<br /><br />77074 The operation must contain a product item in the Configurator Perspective.<br /><br />333010 The input expression is not valid.<br /><br />333011 The variant configuration cannot be retrieved because input is not valid.",
        "useCase": ""
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "use variantConfigurationView3 from Aw6.2 onwards",
            "deprecatedRelease": "Awp06.2.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "The input containing the selected context and selections (family and value) to fetch the variant configuration.",
            "parameterName": "input"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp05.1.0",
        "dependencies": "",
        "description": "This operation retrieves variant configuration data available in the current Configurator Context<br />required to create a custom variant rule.<br />For a given <b>Cfg0ConfiguratorPerspective</b> and selected context or a seed variant rule, the following is retrieved:<br /><ul><ul><li type=\"disc\">The valid selections for given groups by optionally applying constraints</li><li type=\"disc\">Violations and other indicators like incomplete, invalid, package.</li><li type=\"disc\">The payload that should be retained by the client for subsequent calls.</li></ul></ul>",
        "exceptionCondition": "",
        "id": "variantConfigurationView2#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantConfigurationViewIn2,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "variantConfigurationView2",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantConfigurationViewResponse2#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::variantConfigurationView2#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantConfigurationViewIn2,&",
        "returnDescription": "The variant configuration data and a custom variant rule.<br /><br />The following partial errors may be returned:<br /><br />333001 The variant configuration cannot be performed because both the configuration context and the configuration perspective must be provided.<br /><br />333002 The variability cannot be displayed because the existing configuration has violations.<br /><br />77073 The operation has failed, because an invalid Configurator Perspective was passed.<br /><br />77074 The operation must contain a product item in the Configurator Perspective.<br /><br />333010 The input expression is not valid.<br /><br />333011 The variant configuration cannot be retrieved because input is not valid. <br /><br />257005  The object of type is not a variant configurable object.",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": "The input containing the selected context and selections (family and value) to fetch the variant configuration.",
            "parameterName": "input"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp06.2.0",
        "dependencies": "",
        "description": "This operation retrieves variant configuration data available in the current Configurator Context<br />required to create a custom variant rule.<br />For a given Cfg0ConfiguratorPerspective and selected context or a seed variant rule, the following is retrieved:<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;The valid selections for given groups by optionally applying constraints<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Violations and other indicators like incomplete, invalid, package.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;The payload that should be retained by the client for subsequent calls.",
        "exceptionCondition": "",
        "id": "variantConfigurationView3#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::VariantConfigurationViewIn3,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "variantConfigurationView3",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::VariantConfigurationViewResponse3#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::variantConfigurationView3#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::VariantConfigurationViewIn3,&",
        "returnDescription": "The variant configuration data and a custom variant rule.<br /><br />The following partial errors may be returned:<br /><br />333001 The variant configuration cannot be performed because both the configuration context and the configuration perspective must be provided.<br /><br />333002 The variability cannot be displayed because the existing configuration has violations.<br /><br />77073 The operation has failed, because an invalid Configurator Perspective was passed.<br /><br />77074 The operation must contain a product item in the Configurator Perspective.<br /><br />333010 The input expression is not valid.<br /><br />333011 The variant configuration cannot be retrieved because input is not valid. <br /><br />257005 The object of type is not a variant configurable object.",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": "The object  to retrieve the associated configurator context. The configurator context  is used to get the families to provide filter based on families. Supported object types are: Awb0Element and its subtypes.",
            "parameterName": "selectedObject"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp04.0.0",
        "dependencies": "",
        "description": "This operation returns the filter panel data which is necessary to render filter panel on the client.",
        "exceptionCondition": "The following service exception may be returned.<br /><br />333003 No callback is registered to retrieve the configurator context for Business Objects of the given type.<br />333008 Only objects of type Awb0Element and its subtypes are supported.",
        "id": "getFilterPanelData#const,Teamcenter::BusinessObject,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getFilterPanelData",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::FilterPanelDataResponse#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getFilterPanelData#const,Teamcenter::BusinessObject,&",
        "returnDescription": "The user specific filter information and the intents information.",
        "useCase": ""
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "Deprecated to add support for column sorting and filtering. Replace this operation with Pca0::Soa::Internal::ProductConfiguratorAw::_2021_12::ConfiguratorManagement::getVariability2.",
            "deprecatedRelease": "Awp06.0.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "The Configurator Perspective (<b>Cfg0ConfiguratorPerspective</b>) containing all information about the current Configurator Context (<b>Cfg0ConfContext</b>), Revision Rule, Effectivity, Rule Date.  First call of this operation can pass  this paramater as null, in such case <font face=\"courier\" height=\"10\">configContext</font> must be passed as input. When passed as null the Configuration Perspective (<b>Cfg0ConfiguratorPerspective</b>) is obtained from the <font face=\"courier\" height=\"10\">configContext</font> and returned as part of response.",
            "parameterName": "configPerspective"
          },
          {
            "description": "The variant configurator context (<b>Cfg0ConfContext</b>). This is an optional parameter, however must be passed as a valid value when <font face=\"courier\" height=\"10\">configPerspective</font> is null. This parameter is ignored if the <font face=\"courier\" height=\"10\">configPerspective</font> parameter is provided. Passing either <font face=\"courier\" height=\"10\">configPerspective</font> or <font face=\"courier\" height=\"10\">configContext</font> is mandatory. Both cannot be null in same call.",
            "parameterName": "configContext"
          },
          {
            "description": "A list of <font face=\"courier\" height=\"10\">requestType</font> attributes to specify the type of variability to retrieve for the Configuration Context (<b>Cfg0ConfContext</b>). This is used in combination with the <font face=\"courier\" height=\"10\">configContext</font>. If it is empty then all variability related to the context is returned. This is case sensitive parameter and multiple values can be passed in the list.<br />       Valid values are &ndash; <br /><ul><ul><li type=\"disc\">Model - Retrieves Product Model Families (<b>Cfg0AbsProductModelFamily</b>), Summary Model Families (<b>Cfg0AbsSummaryModelFamily</b>) and Product Line Families (<b>Cfg0AbsProductLineFamily</b>).</li><li type=\"disc\">Group - Retrieves Groups (<b>Cfg0AbsFamilyGroup</b>).</li><li type=\"disc\">Unassigned - Retrieves all unassigned families (<b>Cfg0AbsFeatureFamily</b>).</li></ul></ul>",
            "parameterName": "requestType"
          },
          {
            "description": "List of parent node uids for which variability is to be retrieved. This parameter is ignored if configContext is not null. In such case all variability will be returned with Configurator Context (Cfg0ConfContext) as parent. Children up to the provided level are returned.",
            "parameterName": "parentUids"
          },
          {
            "description": "The expansion level for the variability of the specified parent.  All interger values greater than and equal to -1 are legal. -1 returns all variability expanded up to the leaf level and 0 returns immediate children of given parents in parentsList input. For now only 0 is supported as level. Level support will be available in later releases.",
            "parameterName": "level"
          },
          {
            "description": "The criteria (field and direciton) to sort the results.",
            "parameterName": "sortCriteria"
          },
          {
            "description": "Configuration related settings such as Revision Rule (<b>RevisionRule</b>), Rule Date and Effectivity. Default perspective from <font face=\"courier\" height=\"10\">configContext</font> is updated with <font face=\"courier\" height=\"10\">configSettings</font> if input configuration perspective is null. It is ignored if <font face=\"courier\" height=\"10\">configPerspective</font> is provided as input.",
            "parameterName": "configSettings"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp05.2.0",
        "dependencies": "",
        "description": "This operation retrieves variability for the given configurator context or the list of parent objects in a tree structure.<br />The variability can be Model Families (<b>Cfg0AbsProductModelFamily</b>), Models (<b>Cfg0AbsModel</b>), Groups (<b>Cfg0AbsFamilyGroup</b>), Option Families (<b>Cfg0AbsFeatureFamily</b>) and Features (<b>Cfg0AbsValue</b>) configured by Revision Rule (<b>RevisionRule</b>), Effectivity and Rule date in the input Configurator Perspective (<b>Cfg0ConfiguratorPerspective</b>). Input parameters <font face=\"courier\" height=\"10\">requestType</font>, <font face=\"courier\" height=\"10\">level</font> and <font face=\"courier\" height=\"10\">sortCriteria</font> are used to configure the type and scope of the variability.",
        "exceptionCondition": "",
        "id": "getVariability#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,Teamcenter::Cfg0configurator::Cfg0ConfContext,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&$int$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria>,&$const,Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::ConfigSettings,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getVariability",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::GetVariabilityOutput#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariability#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,Teamcenter::Cfg0configurator::Cfg0ConfContext,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&$int$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria>,&$const,Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::ConfigSettings,&",
        "returnDescription": "The tree structure representing variability data. This holds list of a structure <font face=\"courier\" height=\"10\">VariabiltyNode</font>. Each element contains the UID of the group, family and feature in the response and list of UIDs of all children. For features, no children data is populated.<br /><br />Operation may return following partial errors:<br /><ul><ul><li type=\"disc\">77073&nbsp;&nbsp;&nbsp;&nbsp;The Configurator Perspective (<b>Cfg0ConfiguratorPerspective</b>) is invalid.</li><li type=\"disc\">333013   Either a <font face=\"courier\" height=\"10\">configPerspective</font> or <font face=\"courier\" height=\"10\">configContext</font> must be provided.</li><li type=\"disc\">333012  The &quot;sortDirection&quot; contains invalid value.</li><li type=\"disc\">38015&nbsp;&nbsp;&nbsp;&nbsp; Unable to find a property with name &quot;InValidProperty&quot;.</li></ul></ul>",
        "useCase": "The getVariability operation should be invoked to fetch variability such as all configured model families, models, groups, families and values based on the corresponding configContext or configPerspective. <br /><br />Example:<br /> Consider the following Variability data in a Configurator context:<br /> Car_Product_Context<br /> Models<br /> &nbsp;&nbsp;&nbsp;&nbsp;ATS<br />&nbsp;&nbsp;&nbsp;&nbsp;CTS<br /> Group<br />&nbsp;&nbsp;&nbsp;&nbsp;Engine (Cfg0LiteralValueFamily) - Released<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.0L Turbo (Cfg0LiteralOptionValue) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.0L (Cfg0LiteralOptionValue) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SumValue1 <br />&nbsp;&nbsp;&nbsp;&nbsp;Fuel (Cfg0LiteralValueFamily) - Working<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Diesel (Cfg0LiteralOptionValue) - Working Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Electrical (Cfg0LiteralOptionValue) - Working Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;Transmission (Cfg0LiteralValueFamily) - Released<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Automatic (Cfg0LiteralOptionValue) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Manual (Cfg0LiteralOptionValue) - Released Effectivity: 01-Jan-2026&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;FeatureColor (Cfg0FeatureFamily) - Released<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Red (Cfg0Feature) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Green (Cfg0Feature) - Released Effectivity: 01-Jan-2026&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;StandAloneFeature (Cfg0Feature)<br /> &nbsp;&nbsp;&nbsp;&nbsp;StandAloneFeature (Cfg0Feature) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;Unassigned Families<br /> &nbsp;&nbsp;&nbsp;&nbsp;FeatureSet (Cfg0FeatureSet) - Released<br /> &nbsp;&nbsp;&nbsp;&nbsp;StandAloneFeature (Cfg0Feature) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;Green (Cfg0Feature) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;SummaryFamily (Cfg0SummaryOptionFamily) - Released<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SumValue1 (Cfg0SummaryOptionValue) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;PackageFamily (Cfg0PackageOptionFamily) - Released<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PackageValue1 (Cfg0PackageOptionValue) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Electrical<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Green<br /> <br /><br />Use case 1: Retrieve all variability related to a context<br />On the first call to this operation, you need to pass configContext and Revision Rule, Rule Date and Effectivity Formula in configSettings to construct the perspective.<br />If configSettings is not passed, default perspective from configContext is used.<br /><ul><ul><li type=\"disc\">configContext: Car_Product_Context</li><li type=\"disc\">configSettings - </li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;Revision Rule: &quot;Q0R9YlxEJRpHJA&quot;  ( assumed id for Any Status; Working )</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;EffectivityFormula: &quot;&quot; ( Specifies No Effectivity)</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;Rule date: &quot;2020-11-09T09:30:00.000Z&quot; </li><li type=\"disc\">sortCriteria &ndash;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;fieldName: &quot;object_desc&quot;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;sortDirection: &quot;Asc&quot;</li><li type=\"disc\">level &ndash; -1 ( -1 expands the variability tree to the leaf level )</li><li type=\"disc\">requestType &ndash; {} ( Empty retrieves all 4 types of variability i.e. models, groups, unassigned and partitions )</li></ul></ul><br /><br />The output of getVariability operation will be all the variability mentioned above sorted in ascending order of &quot;object_desc&quot;.<br /><br />Use case 2: Retrieve partial variability related to a context<br /><br />On the first call to this operation, you need to pass configContext and Revision Rule, Rule Date and Effectivity Formula in configSettings to construct the perspective.<br />If configSettings is not passed, default perspective from configContext is used.<br /><ul><ul><li type=\"disc\">configContext: Car_Product_Context</li><li type=\"disc\">configSettings - </li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;Revision Rule: &quot;Q0R9YlxEJRpHJA&quot;  ( assume for Any Status; Working )</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;EffectivityFormula: &quot;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ( Specifies No Effectivity )</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;Rule date: &quot;2020-11-09T09:30:00.000Z&quot; </li><li type=\"disc\">sortCriteria &ndash;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;fieldName: &quot;object_desc&quot;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;sortDirection: &quot;Asc&quot;</li><li type=\"disc\">level &ndash; 1</li><li type=\"disc\">requestType &ndash; { Model, Groups }</li></ul></ul><br /><br />The output of getVariability operation will be all Product Model Families, Summary Model Families, Product Line Families and Groups sorted in ascending order of &quot;object_desc&quot;.<br /> <br />Use case 3: Subsequest calls to the operation<br />Once you have obtained the perspective after the first call to the operation, you need to use it to obtain any further variability for specific items.<br /><ul><ul><li type=\"disc\">configPerspective : Obtained via previous calls.</li><li type=\"disc\">parentsList &ndash; {&quot;Engine&quot; }</li><li type=\"disc\">sortCriteria &ndash;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;fieldName: &quot;object_desc&quot;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;sortDirection: &quot;Asc&quot;</li><li type=\"disc\">level &ndash; -1</li></ul></ul><br /><br />The output of getVariability operation will be all features present under specified family i.e., 2.0L, 3.0L sorted in ascending order of &quot;object_desc&quot;.<br /><br />Use case 4: Gettings configured variability by perspective<br />Either you pass configPerspective with following values of revision rule, rule date and effectivity or null perspective and following configSttings, retrieved variability is same.<br />Note- In case of passing configPerspective, variability will be limited to items present in parentsList.<br /><ul><ul><li type=\"disc\">configContext: Car_Product_Context</li><li type=\"disc\">configSettings - </li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;Revision Rule: &quot;Q0R9YlxEJRpHJA&quot;  ( assume for Any Status; Working )</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;EffectivityFormula: &quot;[Teamcenter::]Date &gt;= 2020-01-01T00:00:00+0530 &amp; [Teamcenter::]Date &lt; 2025-01-31T00:00:00+0530&quot;  ( 01-Jan-2020&hellip;31-Dec-2025 )</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;Rule date: &quot;2020-01-01T00:00:00.000Z&quot;</li><li type=\"disc\">sortCriteria &ndash;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;fieldName: &quot;object_desc&quot;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;sortDirection: &quot;Asc&quot;</li><li type=\"disc\">level &ndash; -1</li><li type=\"disc\">requestType &ndash; {}</li></ul></ul><br /><br />The output of getVariability operation will be all the variability mentioned above except Manual value of Transmission family and Green feature of FeatureColor family, because their effectivity is not present in the input effectivity criteria."
      },
      {
        "ParameterInfo": [
          {
            "description": "The Configurator Perspective (<b>Cfg0ConfiguratorPerspective</b>) containing all information about the current Configurator Context (<b>Cfg0ConfContext</b>), Revision Rule, Effectivity, Rule Date.  First call of this operation can pass  this paramater as null, in such case <font face=\"courier\" height=\"10\">configContext</font> must be passed as input. When passed as null the Configuration Perspective (<b>Cfg0ConfiguratorPerspective</b>) is obtained from the <font face=\"courier\" height=\"10\">configContext</font> and returned as part of response.",
            "parameterName": "configPerspective"
          },
          {
            "description": "The variant configurator context (<b>Cfg0ConfContext</b>). This is an optional parameter, however must be passed as a valid value when <font face=\"courier\" height=\"10\">configPerspective</font> is null. This parameter is ignored if the <font face=\"courier\" height=\"10\">configPerspective</font> parameter is provided. Passing either <font face=\"courier\" height=\"10\">configPerspective</font> or <font face=\"courier\" height=\"10\">configContext</font> is mandatory. Both cannot be null in same call.",
            "parameterName": "configContext"
          },
          {
            "description": "A list of <font face=\"courier\" height=\"10\">requestType</font> attributes to specify the type of variability to retrieve for the Configuration Context (<b>Cfg0ConfContext</b>). This is used in combination with the <font face=\"courier\" height=\"10\">configContext</font>. If it is empty then all variability related to the context is returned. This is case sensitive parameter and multiple values can be passed in the list.<br />       Valid values are &ndash; <br /><ul><ul><li type=\"disc\">Model - Retrieves Product Model Families (<b>Cfg0AbsProductModelFamily</b>), Summary Model Families (<b>Cfg0AbsSummaryModelFamily</b>) and Product Line Families (<b>Cfg0AbsProductLineFamily</b>).</li><li type=\"disc\">Group - Retrieves Groups (<b>Cfg0AbsFamilyGroup</b>).</li><li type=\"disc\">Unassigned - Retrieves all unassigned families (<b>Cfg0AbsFeatureFamily</b>).</li></ul></ul>",
            "parameterName": "requestType"
          },
          {
            "description": "List of parent node uids for which variability is to be retrieved. This parameter is ignored if configContext is not null. In such case all variability will be returned with Configurator Context (Cfg0ConfContext) as parent. Children up to the provided level are returned.",
            "parameterName": "parentUids"
          },
          {
            "description": "The expansion level for the variability of the specified parent.  All interger values greater than and equal to -1 are legal. -1 returns all variability expanded up to the leaf level and 0 returns immediate children of given parents in parentsList input. For now only 0 is supported as level. Level support will be available in later releases.",
            "parameterName": "level"
          },
          {
            "description": "Configuration related settings such as Revision Rule (<b>RevisionRule</b>), Rule Date and Effectivity. Default perspective from <font face=\"courier\" height=\"10\">configContext</font> is updated with <font face=\"courier\" height=\"10\">configSettings</font> if input configuration perspective is null. It is ignored if <font face=\"courier\" height=\"10\">configPerspective</font> is provided as input.",
            "parameterName": "configSettings"
          },
          {
            "description": "The criteria (field and direciton) to sort the results.",
            "parameterName": "sortCriteria"
          },
          {
            "description": "A list of filters (FilterCriteriaInput) to be applied on the columns.",
            "parameterName": "columnFilters"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp06.0.0",
        "dependencies": "",
        "description": "This operation retrieves variability for the given configurator context or the list of parent objects in a tree structure. It also allows user to sort and filter the data based in input criteria. The variability can be Model Families (<b>Cfg0AbsProductModelFamily</b>), Models (<b>Cfg0AbsModel</b>), Groups (<b>Cfg0AbsFamilyGroup</b>), Option Families (<b>Cfg0AbsFeatureFamily</b>) and Features (<b>Cfg0AbsValue</b>) configured by Revision Rule (<b>RevisionRule</b>), Effectivity and Rule date in the input Configurator Perspective (<b>Cfg0ConfiguratorPerspective</b>). Input parameters <font face=\"courier\" height=\"10\">requestType</font>, <font face=\"courier\" height=\"10\">level</font> and <font face=\"courier\" height=\"10\">sortCriteria</font> are used to configure the type and scope of the variability.",
        "exceptionCondition": "",
        "id": "getVariability2#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,Teamcenter::Cfg0configurator::Cfg0ConfContext,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&$int$const,Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::ConfigSettings,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria>,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_12::ConfiguratorManagement::FilterCriteriaInput>,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getVariability2",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::GetVariabilityOutput#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariability2#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,Teamcenter::Cfg0configurator::Cfg0ConfContext,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&$int$const,Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::ConfigSettings,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria>,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_12::ConfiguratorManagement::FilterCriteriaInput>,&",
        "returnDescription": "The tree structure representing variability data. This holds list of a structure <font face=\"courier\" height=\"10\">VariabiltyNode</font>. Each element contains the UID of the group, family and feature in the response and list of UIDs of all children. For features, no children data is populated.<br /><br />Operation may return following partial errors:<br /><ul><ul><li type=\"disc\">77073&nbsp;&nbsp;&nbsp;&nbsp;The Configurator Perspective (<b>Cfg0ConfiguratorPerspective</b>) is invalid.</li><li type=\"disc\">333013   Either a <font face=\"courier\" height=\"10\">configPerspective</font> or <font face=\"courier\" height=\"10\">configContext</font> must be provided.</li><li type=\"disc\">333012  The &quot;sortDirection&quot; contains invalid value.</li><li type=\"disc\">38015&nbsp;&nbsp;&nbsp;&nbsp; Unable to find a property with name &quot;InValidProperty&quot;.</li></ul></ul>",
        "useCase": "The getVariability2 operation should be invoked to fetch variability such as all configured model families, models, groups, families and values based on the corresponding configContext or configPerspective. <br /><br />Example:<br /> Consider the following Variability data in a Configurator context:<br /> Car_Product_Context<br /> Models<br /> &nbsp;&nbsp;&nbsp;&nbsp;ATS<br />&nbsp;&nbsp;&nbsp;&nbsp;CTS<br /> Group<br />    Eng_options&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(Cfg0FamilyGroup)<br />&nbsp;&nbsp;&nbsp;&nbsp;Engine (Cfg0LiteralValueFamily) - Released<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.0L Turbo (Cfg0LiteralOptionValue) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.0L (Cfg0LiteralOptionValue) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SumValue1 <br />&nbsp;&nbsp;&nbsp;&nbsp;Fuel (Cfg0LiteralValueFamily) - Working<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Diesel (Cfg0LiteralOptionValue) - Working Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Electrical (Cfg0LiteralOptionValue) - Working Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;Transmission (Cfg0LiteralValueFamily) - Released<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Automatic (Cfg0LiteralOptionValue) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Manual (Cfg0LiteralOptionValue) - Released Effectivity: 01-Jan-2026&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;FeatureColor (Cfg0FeatureFamily) - Released<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Red (Cfg0Feature) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Green (Cfg0Feature) - Released Effectivity: 01-Jan-2026&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;StandAloneFeature (Cfg0Feature)<br /> &nbsp;&nbsp;&nbsp;&nbsp;StandAloneFeature (Cfg0Feature) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;Unassigned Families<br /> &nbsp;&nbsp;&nbsp;&nbsp;FeatureSet (Cfg0FeatureSet) - Released<br /> &nbsp;&nbsp;&nbsp;&nbsp;StandAloneFeature (Cfg0Feature) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;Green (Cfg0Feature) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;SummaryFamily (Cfg0SummaryOptionFamily) - Released<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SumValue1 (Cfg0SummaryOptionValue) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;PackageFamily (Cfg0PackageOptionFamily) - Released<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PackageValue1 (Cfg0PackageOptionValue) - Released Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Electrical<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Green<br /> <br /><br />Use case 1: Retrieve all variability related to a context<br />On the first call to this operation, you need to pass configContext and Revision Rule, Rule Date and Effectivity Formula in configSettings to construct the perspective.<br />If configSettings is not passed, default perspective from configContext is used.<br /><ul><ul><li type=\"disc\">configContext: Car_Product_Context</li><li type=\"disc\">configSettings - </li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;Revision Rule: &quot;Q0R9YlxEJRpHJA&quot;  ( assumed id for Any Status; Working )</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;EffectivityFormula: &quot;&quot; ( Specifies No Effectivity)</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;Rule date: &quot;2020-11-09T09:30:00.000Z&quot; </li><li type=\"disc\">sortCriteria &ndash;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;fieldName: &quot;object_desc&quot;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;sortDirection: &quot;ASC&quot;</li><li type=\"disc\">level &ndash; -1 ( -1 expands the variability tree to the leaf level )</li><li type=\"disc\">requestType &ndash; {} ( Empty retrieves all 4 types of variability i.e. models, groups, unassigned and partitions )</li></ul></ul><br /><br />The output of getVariability2 operation will be all the variability mentioned above sorted in ascending order of &quot;object_desc&quot;.<br /><br />Use case 2: Retrieve partial variability related to a context<br /><br />On the first call to this operation, you need to pass configContext and Revision Rule, Rule Date and Effectivity Formula in configSettings to construct the perspective.<br />If configSettings is not passed, default perspective from configContext is used.<br /><ul><ul><li type=\"disc\">configContext: Car_Product_Context</li><li type=\"disc\">configSettings - </li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;Revision Rule: &quot;Q0R9YlxEJRpHJA&quot;  ( assume for Any Status; Working )</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;EffectivityFormula: &quot;&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ( Specifies No Effectivity )</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;Rule date: &quot;2020-11-09T09:30:00.000Z&quot; </li><li type=\"disc\">sortCriteria &ndash;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;fieldName: &quot;object_desc&quot;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;sortDirection: &quot;ASC&quot;</li><li type=\"disc\">level &ndash; 1</li><li type=\"disc\">requestType &ndash; { Model, Groups }</li></ul></ul><br /><br />The output of getVariability2 operation will be all Product Model Families, Summary Model Families, Product Line Families and Groups sorted in ascending order of &quot;object_desc&quot;.<br /> <br />Use case 3: Subsequest calls to the operation<br />Once you have obtained the perspective after the first call to the operation, you need to use it to obtain any further variability for specific items.<br /><ul><ul><li type=\"disc\">configPerspective : Obtained via previous calls.</li><li type=\"disc\">parentsList &ndash; {&quot;Engine&quot; }</li><li type=\"disc\">sortCriteria &ndash;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;fieldName: &quot;object_desc&quot;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;sortDirection: &quot;ASC&quot;</li><li type=\"disc\">level &ndash; -1</li></ul></ul><br /><br />The output of getVariability2 operation will be all features present under specified family i.e., 2.0L, 3.0L sorted in ascending order of &quot;object_desc&quot;.<br /><br />Use case 4: Gettings configured variability by perspective<br />Either you pass configPerspective with following values of revision rule, rule date and effectivity or null perspective and following configSttings, retrieved variability is same.<br />Note- In case of passing configPerspective, variability will be limited to items present in parentsList.<br /><ul><ul><li type=\"disc\">configContext: Car_Product_Context</li><li type=\"disc\">configSettings - </li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;Revision Rule: &quot;Q0R9YlxEJRpHJA&quot;  ( assume for Any Status; Working )</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;EffectivityFormula: &quot;[Teamcenter::]Date &gt;= 2020-01-01T00:00:00+0530 &amp; [Teamcenter::]Date &lt; 2025-01-31T00:00:00+0530&quot;  ( 01-Jan-2020&hellip;31-Dec-2025 )</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;Rule date: &quot;2020-01-01T00:00:00.000Z&quot;</li><li type=\"disc\">sortCriteria &ndash;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;fieldName: &quot;object_desc&quot;</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;sortDirection: &quot;ASC&quot;</li><li type=\"disc\">level &ndash; -1</li><li type=\"disc\">requestType &ndash; {}</li></ul></ul><br /><br />The output of getVariability2 operation will be all the variability mentioned above except Manual value of Transmission family and Green feature of FeatureColor family, because their effectivity is not present in the input effectivity criteria.<br /><br />Use case 5: <b>Filter variability data</b><br />Once you have obtained the perspective after the first call to the operation, you need to use it to obtain any further variability for specific items.<br /><ul><ul><li type=\"disc\">configPerspective: Obtained via previous calls.</li><li type=\"disc\">filterCriteria</li></ul></ul><br />                    - columnName: &quot;cfg0ObjectId&quot;<br />                    - operation: &quot;CONTAINS<br />                    - values: &quot;2.0&quot;<br /><ul><ul><li type=\"disc\">level &ndash; 1</li><li type=\"disc\">requestType &ndash; {}</li></ul></ul><br /><br />The output of getVariability2 operation will be the feature &quot;2.0L&quot; matching with input filter criteria, its parent family object &quot;Engine&quot; and its parent group object &quot;Eng_options&quot;. Note that peer features will not be returned. However, if filter criteria matches with object at the Group level then only the matched Group object will be returned. Family and Features objects under Group will not be returned by default. User can however expand filtered Group object to reach to Family and Features under it."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "use getVariantExpressionData2 AW5.1 onwards.",
            "deprecatedRelease": "Awp05.1.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "Variant expression data input.",
            "parameterName": "variantExpressionDataInput"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp04.0.0",
        "dependencies": "",
        "description": "This operation returns the variant configuration expression data of the input objects.",
        "exceptionCondition": "",
        "id": "getVariantExpressionData#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantExpressionDataInput,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getVariantExpressionData",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantExpressionDataResponse#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariantExpressionData#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantExpressionDataInput,&",
        "returnDescription": "Either returns the Variant expression for the input objects along with Option families and values or return option values of the expanded option families.",
        "useCase": ""
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "use getVariantExpressionData3 from AW6.2 onwards",
            "deprecatedRelease": "Awp06.2.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "Variant expression data input.",
            "parameterName": "variantExpressionDataInput"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp05.1.0",
        "dependencies": "",
        "description": "This operation returns the variant configuration expression data of the input objects.",
        "exceptionCondition": "",
        "id": "getVariantExpressionData2#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantExpressionDataInput2,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getVariantExpressionData2",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantExpressionDataResponse2#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariantExpressionData2#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantExpressionDataInput2,&",
        "returnDescription": "Either returns the Variant expression for the input objects along with Option families and values or return option values of the expanded option families.",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": "This operation returns the variant configuration expression data of the input objects.",
            "parameterName": "variantExpressionDataInput"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp06.2.0",
        "dependencies": "",
        "description": "This operation returns the variant configuration expression data of the input objects.",
        "exceptionCondition": "",
        "id": "getVariantExpressionData3#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantExpressionDataInput2,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getVariantExpressionData3",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::VariantExpressionDataResponse3#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariantExpressionData3#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantExpressionDataInput2,&",
        "returnDescription": "Either returns the Variant expression for the input objects along with Option families and values or return option values of the expanded option families. <br /><br />The following partial errors may be returned:<br /><br />77073 An invalid Configurator Perspective was passed.<br /><br />77074 Product item is not present in the Configurator Perspective.<br /><br />333010 The input expression is not valid.<br /><br />333011 The variant configuration cannot be retrieved because input is not valid. <br /><br />257005 The object of type is not a variant configurable object.",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": "The <b>Cfg0ConfiguratorPerspective</b>  has revision rule information for the displayable formula. <br />This is optional when formulatType is set to tcFormula.",
            "parameterName": "configPerspective"
          },
          {
            "description": "Type of the formula to retrieve.<br />Valid values are:<br /><ul><ul><li type=\"disc\">tcFormula &ndash; Returns only the internal Teamcenter representation for the given <b>VariantObject</b> input.</li><li type=\"disc\">displayFormula &ndash; Returns only the displayable representation for the given <b>VariantObject</b> input.</li><li type=\"disc\">bothFormulae &ndash; returns both Teamcenter and displayable formulae.</li></ul></ul>",
            "parameterName": "formulaType"
          },
          {
            "description": "A list of <b>VariantObject</b> objects for which the display formula or teamcenter formula has to be retrieved. Each item in this list either contains affected object or expression with which formulae can be computed. In case both are present, expression is ignored.",
            "parameterName": "variantObjects"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp05.2.0",
        "dependencies": "",
        "description": "This operation retrieves Teamcenter formula and/or displayable formula for the given <b>VariantObject</b> inputs.",
        "exceptionCondition": "",
        "id": "getVariantFormulae#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::string,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::VariantObject>,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getVariantFormulae",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::GetVariantFormulaeResponse#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariantFormulae#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::string,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::VariantObject>,&",
        "returnDescription": "Returns the list of required formulae for given <b>VariantObject</b> objects.<br /><br />The following partial errors may be returned:<br /><br />333012&nbsp;&nbsp;&nbsp;&nbsp;The  &quot;affectedObjectUid&rdquo; is not valid.  <br /><br />333013&nbsp;&nbsp;&nbsp;&nbsp;The &quot;formulaType&quot; is not valid. Valid values are &ldquo;tcFormula&rdquo;, &ldquo;displayFormula&rdquo; or &ldquo;bothFormulae&rdquo;.<br /><br />333014&nbsp;&nbsp;&nbsp;&nbsp;Configurator Perspective must have a product Item.",
        "useCase": "The getVariantFormulae operation should be invoked to get the Teamcenter or Display representation of the variant formula.<br /><br />Example:<br /><br />Use Case 1:<br />When only tcFormula is required:<br />Input:<br />configPerspective: &ldquo;&rdquo;, ( not required for tcFormula )<br />formulaType: &ldquo;tcFormula&rdquo;<br />variantObjects: [ {<br />   variantObjectId: &ldquo;id1&rdquo;,<br />   affectedObject: &ldquo;Engine1&rdquo; ( Uid of the Engine1  awb0Element )<br />} ]<br /><br />Output:<br />Variantformulae: [<br />{<br />   variantObjectId: &ldquo;id1&rdquo;,<br />   tcFormula: &ldquo;Engine1 = v4 | Engine1 = v6&rdquo;<br />}],<br />ServiceData: &ldquo;&rdquo;<br /><br />Use Case 2:<br />When only dispalyable formula is required.<br /><br />Input:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;configPerspective: ConfiguratorPerspectiveObject<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formulaType: &ldquo;displayFormula&rdquo;,<br />variantObjects: [ {<br />   variantObjectId: &ldquo;id1&rdquo;,<br />   affectedObject: &ldquo;Engine1&rdquo; ( Uid of the Engine1  awb0Element )<br />} ]<br /><br />Output:<br />Variantformulae: [<br />{<br />   variantObjectId: &ldquo;id1&rdquo;,<br />   dispalyFormula: &ldquo;Engine1 = v4 OR Engine1 = v6&rdquo;<br />}]<br /><br />Use Case 3:<br />When both teamcenter and dispalyable formulae are required.<br /><br />Input:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;configPerspective: ConfiguratorPerspectiveObject<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formulaType: &ldquo;bothFormulae&rdquo;,<br />variantObjects: [ {<br />   variantObjectId: &ldquo;id1&rdquo;,<br />   affectedObject: &ldquo;Engine1&rdquo; ( Uid of the Engine1  awb0Element )<br />} ]<br /><br />Output:<br />Variantformulae: [<br />{<br />   variantObjectId: &ldquo;id1&rdquo;,<br />   tcFormula: &ldquo;Engine1 = v4 | Engine1 = v6&rdquo;<br />   dispalyFormula: &ldquo;Engine1 = v4 OR Engine1 = v6&rdquo;<br />}]<br /><br />Use Case 4:<br />Get display formulae for multiple objects.<br /><br />Input:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;configPerspective: ConfiguratorPerspectiveObject<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formulaType: &ldquo;displayFormula&rdquo;,<br />variantObjects: [ <br />{<br />   variantObjectId: &ldquo;id1&rdquo;,<br />   affectedObject: &ldquo;Engine1&rdquo; ( Uid of the Engine1  awb0Element )<br />},<br />{<br />   variantObjectId: &ldquo;id2&rdquo;,<br />   affectedObject: &ldquo;Engine2&rdquo; ( Uid of the Engine2  awb0Element )<br />} ]<br /><br />Output:<br />Variantformulae: [<br />{<br />   variantObjectId: &ldquo;id1&rdquo;,<br />   tcFormula: &ldquo;Engine1 = v4 | Engine1 = v6&rdquo;<br />   dispalyFormula: &ldquo;Engine1 = v4 OR Engine1 = v6&rdquo;<br />},<br />{<br />   variantObjectId: &ldquo;id2&rdquo;,<br />   tcFormula: &ldquo;Engine2 = v5 | Engine2 = v7&rdquo;<br />   dispalyFormula: &ldquo;Engine2 = v5 OR Engine2 = v7&rdquo;<br />}]"
      },
      {
        "ParameterInfo": [
          {
            "description": "A business object type name of the object to be created. Supported values are subtype of <b>Cfg0AbsConfiguratorWSO</b>.",
            "parameterName": "businessObjectType"
          },
          {
            "description": "A list of property names currently visible in the table.",
            "parameterName": "propertyNames"
          },
          {
            "description": "The variant configurator context(<b>Cfg0ConfContext</b>) under which object is to be created.",
            "parameterName": "configContext"
          }
        ],
        "canOverride": "false",
        "component": "Pca0ProductConfiguratorAw",
        "createRelease": "Awp06.1.0",
        "dependencies": "",
        "description": "This operation retrieves the view model definition to author <b>Cfg0AbsConfiguratorWSO</b> object. The response contains the definition of View Model information based on the input. Active Workspace client derives data to render the editable row in Active Workspace user interface element or widget to create an object.",
        "exceptionCondition": "",
        "id": "getViewModelForCreate#const,std::string,&$const,std::vector<std::string>,&$const,Teamcenter::Cfg0configurator::Cfg0ConfContext,&",
        "interface": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getViewModelForCreate",
        "opTemplate": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::GetViewModelForCreateResponse#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getViewModelForCreate#const,std::string,&$const,std::vector<std::string>,&$const,Teamcenter::Cfg0configurator::Cfg0ConfContext,&",
        "returnDescription": "The view model definition as JSON string for the type of object being authored.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">333015 : The following mandatory properties are missing on the Inline Authoring View for the input business object type &quot;BusinessObjectType&quot;: PropertyNames. Please report this configuration error to your system administrator.</li><li type=\"disc\">26019 : The value of 'businessObjectType' is invalid.</li><li type=\"disc\">26019 : The value of 'propertyNames' is invalid.</li><li type=\"disc\">26019 : The value of 'configContext' is invalid.</li></ul></ul>",
        "useCase": "<b>Use case 1: Create Group under Configurator Context</b><br />When user selects a root object i.e. Configurator Context in Active Workspace to add new Group, the operation getViewModelForCreate retrieves view model information to render the editable row widget to create a Group.<br /><br /><b>Use case 2: Create Family under Group</b><br />When user selects a Group in Active Workspace to add new Family, the operation getViewModelForCreate retrieves view model information to render the editable row widget to create a Family.<br /><br /><b>Use case 3: Create Feature under Family</b><br />When user selects a Family in Active Workspace to add new Feature, the operation getViewModelForCreate retrieves view model information to render the editable row widget to create a Feature."
      }
    ],
    "OperationTemplate": [
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The configurator perspective containing all information about the current configurator context, revision rule and effectivity. It is a mandatory input.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configPerspective"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::ObjectsToCreateAndAdd",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of objects to be created and allocated under configurator context. Configurator context information is retrieved from <font face=\"courier\" height=\"10\">configPerspective</font>. Objects can only be of type <b>Cfg0AbsConfiguratorWSO</b>. Objects would be added as children to the specified parent in parent attribute.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "objectsToCreateAndAdd"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Specifies the criteria to use to sort the results that are retrieved. It provides the field to sort and the direction to sort it in.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "sortCriteria"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_12::ConfiguratorManagement::FilterCriteriaInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of filters (<font face=\"courier\" height=\"10\">FilterCriteriaInput</font>) to be applied on the columns.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "columnFilters"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::StringMap4",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Map (string, list of strings) used to send information related to request. This is not used in release Active Workspace 6.1.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "requestInfo"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::CreateAndAddObjectsResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp06.1.0",
        "description": "This operation creates objects specified in <font face=\"courier\" height=\"10\">objectsToCreateAndAdd</font> and allocates them to the configurator context specified via <font face=\"courier\" height=\"10\">configPerspective</font>. Objects to be added are of type <b>Cfg0AbsConfiguratorWSO</b> and each object is added as a child to the parent provided in its <font face=\"courier\" height=\"10\">parent</font> attribute.<br />Created objects are returned along with its siblings under the parent. Objects are sorted and filtered as per the input <font face=\"courier\" height=\"10\">sortCriteria</font> and <font face=\"courier\" height=\"10\">columnFilters</font>. Objects are configured based on configuration settings such as revision rule, rule date and effectivity set on the <font face=\"courier\" height=\"10\">configPerspective</font>.",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::CreateAndAddObjectsResponse#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::createAndAddObjects#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::ObjectsToCreateAndAdd>,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria>,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_12::ConfiguratorManagement::FilterCriteriaInput>,&$const,Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::StringMap4,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::createAndAddObjects",
        "returnConst": "false",
        "returnDescription": "The list of VariabiltyNode corresponding to created objects and their siblings.<br />Response also contains list of UIDs of successfully created objects and clientIDs of failed objects.<br /><br />Operation may return following partial errors &ndash; <br /><ul><ul><li type=\"disc\">77073&nbsp;&nbsp;&nbsp;&nbsp;The operation has failed, because an invalid Configurator Perspective was passed.</li><li type=\"disc\">26019   The value of '<font face=\"courier\" height=\"10\">parent</font>' is invalid.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The configurator perspective (<b>Cfg0ConfiguratorPerspective</b>) containing all information about the current configurator context, revision rule and effectivity. It is a mandatory input.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configPerspective"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ObjectsToCreateAndAdd2",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of objects to be created and allocated under configurator context. Configurator context information is retrieved from <font face=\"courier\" height=\"10\">configPerspective</font>. Objects can only be of type <b>Cfg0AbsConfiguratorWSO</b>. Objects would be added as children to the specified parent in <font face=\"courier\" height=\"10\">parent</font> attribute.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "objectsToCreateAndAdd"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Specifies the criteria to use to sort the results that are retrieved. It provides the field to sort and the direction to sort it in.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "sortCriteria"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_12::ConfiguratorManagement::FilterCriteriaInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of filters (<font face=\"courier\" height=\"10\">FilterCriteriaInput</font>) to be applied on the columns.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "columnFilters"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::StringMap5",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A map (string, list of strings) used to send information related to request. This is not used in release Active Workspace 6.2.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "requestInfo"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::CreateAndAddObjectsResponse2",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp06.2.0",
        "description": "This operation creates objects specified in <font face=\"courier\" height=\"10\">ObjectsToCreateAndAdd2</font> and allocates them to the configurator context specified via <font face=\"courier\" height=\"10\">configPerspective</font>. Objects to be added are of type <b>Cfg0AbsConfiguratorWSO</b> and each object is added as a child to the parent provided in its <font face=\"courier\" height=\"10\">parent</font> attribute.<br />Created objects are returned along with its siblings under the parent. Objects are sorted and filtered as per the input <font face=\"courier\" height=\"10\">sortCriteria</font> and <font face=\"courier\" height=\"10\">columnFilters</font>. Objects are configured based on configuration settings such as revision rule, rule date and effectivity set on the <font face=\"courier\" height=\"10\">configPerspective</font>.",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::CreateAndAddObjectsResponse2#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::createAndAddObjects2#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ObjectsToCreateAndAdd2>,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria>,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_12::ConfiguratorManagement::FilterCriteriaInput>,&$const,Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::StringMap5,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::createAndAddObjects2",
        "returnConst": "false",
        "returnDescription": "The list of <font face=\"courier\" height=\"10\">VariabiltyNode</font> corresponding to created objects and their siblings.<br />Response also contains list of UIDs of successfully created objects and clientIDs of failed objects.<br /><br />Operation may return following partial errors &ndash; <br /><ul><ul><li type=\"disc\">77073&nbsp;&nbsp;&nbsp;&nbsp;The operation has failed, because an invalid Configurator Perspective was passed.</li><li type=\"disc\">333012   The operation &lsquo;<font face=\"courier\" height=\"10\">createAndObjects2</font>&rsquo; has failed because the input &lsquo;<font face=\"courier\" height=\"10\">parent</font>&rsquo; is null or empty.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectedExpression",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The list of selections of all option values that form the expression on the input object. If the expression has split then there will be more than one SelectedExpression structure with same affectedObject UID.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "selectedExpressions"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Input configurator perspective. It is optional. Configurator Perspective object is used as communication mechanism for the configuration and the valid configurator contexts across the Product Configurator and its consuming applications such as 4G Designer, Structure Manager. If it is null then the config perspective is obtained from the selected objects.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configPerspective"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp04.0.0",
        "description": "This operation sets the configuration expressions for the input business objects. The variant expressions can be set for variant conditions, rules and variant criteria.",
        "id": "Teamcenter::Soa::Server::ServiceData#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::setVariantExpressionData#const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectedExpression>,&$const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::setVariantExpressionData",
        "returnConst": "false",
        "returnDescription": "<font face=\"courier\" height=\"10\">ServiceData</font> containing list of objects updated with variant formula, and partial error if any.<br /><br />The following partial errors may be returned:<br />333006   The input configPerspective is null.<br />77073&nbsp;&nbsp;&nbsp;&nbsp; The operation has failed, because an invalid Configurator Perspective was passed.<br />77074&nbsp;&nbsp;&nbsp;&nbsp; The operation must contain a product item or dictionary in the Configurator Perspective",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::SetVariantExpressionDataInput",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Input containing the configuration details and user selections that represent variability to be set on variant configurable objects for e.g <b>VariantRule</b>",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "input"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp04.0.0",
        "description": "This operation sets the configuration expressions for the input business objects. The variant expressions can be set for variant conditions, rules and variant criteria.",
        "id": "Teamcenter::Soa::Server::ServiceData#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::setVariantExpressionData2#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::SetVariantExpressionDataInput,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::setVariantExpressionData2",
        "returnConst": "false",
        "returnDescription": "<font face=\"courier\" height=\"10\">ServiceData</font> containing list of objects updated with variant formula, and partial error if any.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">333006   The input configPerspective is null.</li><li type=\"disc\">77073&nbsp;&nbsp;&nbsp;&nbsp; The operation has failed, because an invalid Configurator Perspective was passed.</li><li type=\"disc\">77074&nbsp;&nbsp;&nbsp;&nbsp; The operation must contain a product item or dictionary in the Configurator Perspective</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::SetVariantExpressionDataInput3",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": " Input containing the configuration details and user selections that represent variability to be set on variant configurable objects for e.g <b>VariantRule</b>",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "input"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::SetVariantExpressionDataResponse3",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp06.2.0",
        "description": "This operation sets the configuration expressions for the input business objects. The variant expressions can be set for variant conditions, rules and variant criteria.",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::SetVariantExpressionDataResponse3#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::setVariantExpressionData3#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::SetVariantExpressionDataInput3,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::setVariantExpressionData3",
        "returnConst": "false",
        "returnDescription": "ServiceData containing list of objects updated with variant formula, responseInfo containing extra information and partial error if any.<br /><br />The following partial errors may be returned:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&bull;333006 The input configPerspective is null.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&bull;77074&nbsp;&nbsp;&nbsp;&nbsp; The operation must contain a product item or dictionary in the Configurator Perspective",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "MetaException": [
          {
            "name": "Teamcenter::Soa::Server::ServiceException"
          }
        ],
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Instance of <b>Cfg0ConfiguratorPerspective</b> business object. This is a required parameter.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configPerspective"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "int",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "The constraint rules application. The parameter is a bitwise OR of the following values: <br />0: Disable configurator constraint evaluation. <br />1: Enable configurator constraint evaluation.<br />2: Skip constraints if they only reference unset families.<br />4: Skip constraints that don't reference all Expression families.<br />8: Report warnings in addition to errors.<br />16: Report informational messages.<br />64: Treat constraints with warning severity as if they had error severity.<br />256: Skip allocation constraints in solve.<br />1024: Skip criteria update based on validation rules (For example configurator exclusion rule). If this flag is not set then the operation will update the variant criteria after applying validation rules.<br />2048: Enable Availability Constraint evaluation. <br />4096: Include Default Rules in the violations.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "applyConstraints"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectedExpression",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of selections of all option values that form the expression on the input object. If the expression has split then there will be more than one SelectedExpression structure with same affectedObject UID.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "selectedExpressions"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::ValidateProductConfigResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp04.0.0",
        "description": "This operation validates the input selections by applying the constraint rules such as inclusion rule,  exclusion rule or feasibility rule for the input configurator perspective.<br />The operation also returns validation status, violations and selections by considering input selections and the rules in the context. The response parameter <font face=\"courier\" height=\"10\">criteriaStatus</font> conveys the information about the status of the configuration which is either valid or invalid. The parameter <font face=\"courier\" height=\"10\">valueToViolationsMap</font> represents map of values having voilations. Each value in this map have list of vloilations. The paramter <font face=\"courier\" height=\"10\">UserSelectionMap2</font> conveys the information about family to option values. This map contains entries accordance with the given input selections and the rules in the context.",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::ValidateProductConfigResponse#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::validateProductConfigurations#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$int$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectedExpression>,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::validateProductConfigurations",
        "returnConst": "false",
        "returnDescription": "The operation returns validation status, list of violations and updated selections.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "MetaException": [
          {
            "name": "Teamcenter::Soa::Server::ServiceException"
          }
        ],
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ValidateProductConfigsInput",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Validate Product Configuration Input.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "validateProductConfigsInput"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ValidateProductConfigsResponse2",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp05.1.0",
        "description": "This operation validates the input selections by applying the constraint rules such as inclusion rule,  exclusion rule or feasibility rule for the input configurator perspective.<br /><br />The operation also returns validation status, violations and selections by considering input selections and the rules in the context. The response parameter criteriaStatus conveys the information about the status of the configuration which is either valid or invalid. The parameter valueToViolationsMap represents map of values having voilations. Each value in this map have list of vloilations.",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ValidateProductConfigsResponse2#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::validateProductConfigurations2#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ValidateProductConfigsInput,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::validateProductConfigurations2",
        "returnConst": "false",
        "returnDescription": "The operation returns validation status, list of violations and updated selections.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ValidateProductConfigsInput3",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Validate Product Configuration Input.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "validateProductConfigsInput"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ValidateProductConfigsResponse3",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp06.2.0",
        "description": "This operation validates the input selections by applying the constraint rules such as inclusion rule,  exclusion rule or feasibility rule for the input configurator perspective.<br /><br />The operation also returns validation status, violations and selections by considering input selections and the rules in the context. The response parameter criteriaStatus conveys the information about the status of the configuration which is either valid or invalid. The parameter valueToViolationsMap represents map of values having voilations. Each value in this map have list of violations.",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ValidateProductConfigsResponse3#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::validateProductConfigurations3#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ValidateProductConfigsInput3,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::validateProductConfigurations3",
        "returnConst": "false",
        "returnDescription": "The operation returns validation status, list of violations and updated selections. <br /><br /><br /><b>Throws</b> Teamcenter::Soa::Server::ServiceException:<br /><br />The following error code may be returned:<br />77073&nbsp;&nbsp;&nbsp;&nbsp;The operation has failed, because an invalid Configurator Perspective was passed.<br />77074&nbsp;&nbsp;&nbsp;&nbsp;The operation must contain a product item in the Configurator Perspective.<br />256054 The value for the applyConstraints bit pattern is invalid.<br />77146&nbsp;&nbsp;&nbsp;&nbsp;The operation has failed, because invalid key/value is passed in requestInfo.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantConfigurationViewIn",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The input containing the selected context and selections (family and value) to fetch the variant configuration.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "input"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantConfigurationViewResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp04.0.0",
        "description": "This operation retrieves variant configuration data required to create a custom variant rule.<br />For a given Cfg0ConfiguratorPerspective and selected context or a seed variant rule, the following is retrieved:<br /><ul><ul><li type=\"disc\">The valid selections for given groups by optionally applying constraints</li><li type=\"disc\">All scope objects (<b>Cfg0AbsFamilyGroup</b>, <b>Ptn0Partition</b>) available in the current Configurator Context</li><li type=\"disc\">Violations and other indicators like incomplete, invalid, package.</li><li type=\"disc\">The payload that should be retained by the client for subsequent calls.</li></ul></ul>",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantConfigurationViewResponse#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::variantConfigurationView#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantConfigurationViewIn,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::variantConfigurationView",
        "returnConst": "false",
        "returnDescription": "The variant configuration data and a custom variant rule.<br /><br />The following partial errors may be returned:<br /><br />333001 The variant configuration cannot be performed because both the configuration context and the configuration perspective must be provided.<br /><br />333002 The variability cannot be displayed because the existing configuration has violations.<br /><br />77073 The operation has failed, because an invalid Configurator Perspective was passed.<br /><br />77074 The operation must contain a product item in the Configurator Perspective.<br /><br />333010 The input expression is not valid.<br /><br />333011 The variant configuration cannot be retrieved because input is not valid.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantConfigurationViewIn2",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The input containing the selected context and selections (family and value) to fetch the variant configuration.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "input"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantConfigurationViewResponse2",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp05.1.0",
        "description": "This operation retrieves variant configuration data available in the current Configurator Context<br />required to create a custom variant rule.<br />For a given <b>Cfg0ConfiguratorPerspective</b> and selected context or a seed variant rule, the following is retrieved:<br /><ul><ul><li type=\"disc\">The valid selections for given groups by optionally applying constraints</li><li type=\"disc\">Violations and other indicators like incomplete, invalid, package.</li><li type=\"disc\">The payload that should be retained by the client for subsequent calls.</li></ul></ul>",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantConfigurationViewResponse2#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::variantConfigurationView2#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantConfigurationViewIn2,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::variantConfigurationView2",
        "returnConst": "false",
        "returnDescription": "The variant configuration data and a custom variant rule.<br /><br />The following partial errors may be returned:<br /><br />333001 The variant configuration cannot be performed because both the configuration context and the configuration perspective must be provided.<br /><br />333002 The variability cannot be displayed because the existing configuration has violations.<br /><br />77073 The operation has failed, because an invalid Configurator Perspective was passed.<br /><br />77074 The operation must contain a product item in the Configurator Perspective.<br /><br />333010 The input expression is not valid.<br /><br />333011 The variant configuration cannot be retrieved because input is not valid. <br /><br />257005  The object of type is not a variant configurable object.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::VariantConfigurationViewIn3",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The input containing the selected context and selections (family and value) to fetch the variant configuration.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "input"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::VariantConfigurationViewResponse3",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp06.2.0",
        "description": "This operation retrieves variant configuration data available in the current Configurator Context<br />required to create a custom variant rule.<br />For a given Cfg0ConfiguratorPerspective and selected context or a seed variant rule, the following is retrieved:<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;The valid selections for given groups by optionally applying constraints<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Violations and other indicators like incomplete, invalid, package.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;The payload that should be retained by the client for subsequent calls.",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::VariantConfigurationViewResponse3#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::variantConfigurationView3#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::VariantConfigurationViewIn3,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::variantConfigurationView3",
        "returnConst": "false",
        "returnDescription": "The variant configuration data and a custom variant rule.<br /><br />The following partial errors may be returned:<br /><br />333001 The variant configuration cannot be performed because both the configuration context and the configuration perspective must be provided.<br /><br />333002 The variability cannot be displayed because the existing configuration has violations.<br /><br />77073 The operation has failed, because an invalid Configurator Perspective was passed.<br /><br />77074 The operation must contain a product item in the Configurator Perspective.<br /><br />333010 The input expression is not valid.<br /><br />333011 The variant configuration cannot be retrieved because input is not valid. <br /><br />257005 The object of type is not a variant configurable object.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "MetaException": [
          {
            "name": "Teamcenter::Soa::Server::ServiceException"
          }
        ],
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The object  to retrieve the associated configurator context. The configurator context  is used to get the families to provide filter based on families. Supported object types are: Awb0Element and its subtypes.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "selectedObject"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::FilterPanelDataResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp04.0.0",
        "description": "This operation returns the filter panel data which is necessary to render filter panel on the client.",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::FilterPanelDataResponse#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getFilterPanelData#const,Teamcenter::BusinessObject,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getFilterPanelData",
        "returnConst": "false",
        "returnDescription": "The user specific filter information and the intents information.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The Configurator Perspective (<b>Cfg0ConfiguratorPerspective</b>) containing all information about the current Configurator Context (<b>Cfg0ConfContext</b>), Revision Rule, Effectivity, Rule Date.  First call of this operation can pass  this paramater as null, in such case <font face=\"courier\" height=\"10\">configContext</font> must be passed as input. When passed as null the Configuration Perspective (<b>Cfg0ConfiguratorPerspective</b>) is obtained from the <font face=\"courier\" height=\"10\">configContext</font> and returned as part of response.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configPerspective"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfContext",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The variant configurator context (<b>Cfg0ConfContext</b>). This is an optional parameter, however must be passed as a valid value when <font face=\"courier\" height=\"10\">configPerspective</font> is null. This parameter is ignored if the <font face=\"courier\" height=\"10\">configPerspective</font> parameter is provided. Passing either <font face=\"courier\" height=\"10\">configPerspective</font> or <font face=\"courier\" height=\"10\">configContext</font> is mandatory. Both cannot be null in same call.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configContext"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of <font face=\"courier\" height=\"10\">requestType</font> attributes to specify the type of variability to retrieve for the Configuration Context (<b>Cfg0ConfContext</b>). This is used in combination with the <font face=\"courier\" height=\"10\">configContext</font>. If it is empty then all variability related to the context is returned. This is case sensitive parameter and multiple values can be passed in the list.<br />       Valid values are &ndash; <br /><ul><ul><li type=\"disc\">Model - Retrieves Product Model Families (<b>Cfg0AbsProductModelFamily</b>), Summary Model Families (<b>Cfg0AbsSummaryModelFamily</b>) and Product Line Families (<b>Cfg0AbsProductLineFamily</b>).</li><li type=\"disc\">Group - Retrieves Groups (<b>Cfg0AbsFamilyGroup</b>).</li><li type=\"disc\">Unassigned - Retrieves all unassigned families (<b>Cfg0AbsFeatureFamily</b>).</li></ul></ul>",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "requestType"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of parent node uids for which variability is to be retrieved. This parameter is ignored if configContext is not null. In such case all variability will be returned with Configurator Context (Cfg0ConfContext) as parent. Children up to the provided level are returned.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "parentUids"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "int",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "The expansion level for the variability of the specified parent.  All interger values greater than and equal to -1 are legal. -1 returns all variability expanded up to the leaf level and 0 returns immediate children of given parents in parentsList input. For now only 0 is supported as level. Level support will be available in later releases.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "level"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The criteria (field and direciton) to sort the results.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "sortCriteria"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::ConfigSettings",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Configuration related settings such as Revision Rule (<b>RevisionRule</b>), Rule Date and Effectivity. Default perspective from <font face=\"courier\" height=\"10\">configContext</font> is updated with <font face=\"courier\" height=\"10\">configSettings</font> if input configuration perspective is null. It is ignored if <font face=\"courier\" height=\"10\">configPerspective</font> is provided as input.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configSettings"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::GetVariabilityOutput",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp05.2.0",
        "description": "This operation retrieves variability for the given configurator context or the list of parent objects in a tree structure.<br />The variability can be Model Families (<b>Cfg0AbsProductModelFamily</b>), Models (<b>Cfg0AbsModel</b>), Groups (<b>Cfg0AbsFamilyGroup</b>), Option Families (<b>Cfg0AbsFeatureFamily</b>) and Features (<b>Cfg0AbsValue</b>) configured by Revision Rule (<b>RevisionRule</b>), Effectivity and Rule date in the input Configurator Perspective (<b>Cfg0ConfiguratorPerspective</b>). Input parameters <font face=\"courier\" height=\"10\">requestType</font>, <font face=\"courier\" height=\"10\">level</font> and <font face=\"courier\" height=\"10\">sortCriteria</font> are used to configure the type and scope of the variability.",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::GetVariabilityOutput#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariability#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,Teamcenter::Cfg0configurator::Cfg0ConfContext,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&$int$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria>,&$const,Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::ConfigSettings,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariability",
        "returnConst": "false",
        "returnDescription": "The tree structure representing variability data. This holds list of a structure <font face=\"courier\" height=\"10\">VariabiltyNode</font>. Each element contains the UID of the group, family and feature in the response and list of UIDs of all children. For features, no children data is populated.<br /><br />Operation may return following partial errors:<br /><ul><ul><li type=\"disc\">77073&nbsp;&nbsp;&nbsp;&nbsp;The Configurator Perspective (<b>Cfg0ConfiguratorPerspective</b>) is invalid.</li><li type=\"disc\">333013   Either a <font face=\"courier\" height=\"10\">configPerspective</font> or <font face=\"courier\" height=\"10\">configContext</font> must be provided.</li><li type=\"disc\">333012  The &quot;sortDirection&quot; contains invalid value.</li><li type=\"disc\">38015&nbsp;&nbsp;&nbsp;&nbsp; Unable to find a property with name &quot;InValidProperty&quot;.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The Configurator Perspective (<b>Cfg0ConfiguratorPerspective</b>) containing all information about the current Configurator Context (<b>Cfg0ConfContext</b>), Revision Rule, Effectivity, Rule Date.  First call of this operation can pass  this paramater as null, in such case <font face=\"courier\" height=\"10\">configContext</font> must be passed as input. When passed as null the Configuration Perspective (<b>Cfg0ConfiguratorPerspective</b>) is obtained from the <font face=\"courier\" height=\"10\">configContext</font> and returned as part of response.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configPerspective"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfContext",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The variant configurator context (<b>Cfg0ConfContext</b>). This is an optional parameter, however must be passed as a valid value when <font face=\"courier\" height=\"10\">configPerspective</font> is null. This parameter is ignored if the <font face=\"courier\" height=\"10\">configPerspective</font> parameter is provided. Passing either <font face=\"courier\" height=\"10\">configPerspective</font> or <font face=\"courier\" height=\"10\">configContext</font> is mandatory. Both cannot be null in same call.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configContext"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of <font face=\"courier\" height=\"10\">requestType</font> attributes to specify the type of variability to retrieve for the Configuration Context (<b>Cfg0ConfContext</b>). This is used in combination with the <font face=\"courier\" height=\"10\">configContext</font>. If it is empty then all variability related to the context is returned. This is case sensitive parameter and multiple values can be passed in the list.<br />       Valid values are &ndash; <br /><ul><ul><li type=\"disc\">Model - Retrieves Product Model Families (<b>Cfg0AbsProductModelFamily</b>), Summary Model Families (<b>Cfg0AbsSummaryModelFamily</b>) and Product Line Families (<b>Cfg0AbsProductLineFamily</b>).</li><li type=\"disc\">Group - Retrieves Groups (<b>Cfg0AbsFamilyGroup</b>).</li><li type=\"disc\">Unassigned - Retrieves all unassigned families (<b>Cfg0AbsFeatureFamily</b>).</li></ul></ul>",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "requestType"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of parent node uids for which variability is to be retrieved. This parameter is ignored if configContext is not null. In such case all variability will be returned with Configurator Context (Cfg0ConfContext) as parent. Children up to the provided level are returned.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "parentUids"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "int",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "The expansion level for the variability of the specified parent.  All interger values greater than and equal to -1 are legal. -1 returns all variability expanded up to the leaf level and 0 returns immediate children of given parents in parentsList input. For now only 0 is supported as level. Level support will be available in later releases.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "level"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::ConfigSettings",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Configuration related settings such as Revision Rule (<b>RevisionRule</b>), Rule Date and Effectivity. Default perspective from <font face=\"courier\" height=\"10\">configContext</font> is updated with <font face=\"courier\" height=\"10\">configSettings</font> if input configuration perspective is null. It is ignored if <font face=\"courier\" height=\"10\">configPerspective</font> is provided as input.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configSettings"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The criteria (field and direciton) to sort the results.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "sortCriteria"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_12::ConfiguratorManagement::FilterCriteriaInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of filters (FilterCriteriaInput) to be applied on the columns.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "columnFilters"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::GetVariabilityOutput",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp06.0.0",
        "description": "This operation retrieves variability for the given configurator context or the list of parent objects in a tree structure. It also allows user to sort and filter the data based in input criteria. The variability can be Model Families (<b>Cfg0AbsProductModelFamily</b>), Models (<b>Cfg0AbsModel</b>), Groups (<b>Cfg0AbsFamilyGroup</b>), Option Families (<b>Cfg0AbsFeatureFamily</b>) and Features (<b>Cfg0AbsValue</b>) configured by Revision Rule (<b>RevisionRule</b>), Effectivity and Rule date in the input Configurator Perspective (<b>Cfg0ConfiguratorPerspective</b>). Input parameters <font face=\"courier\" height=\"10\">requestType</font>, <font face=\"courier\" height=\"10\">level</font> and <font face=\"courier\" height=\"10\">sortCriteria</font> are used to configure the type and scope of the variability.",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::GetVariabilityOutput#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariability2#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,Teamcenter::Cfg0configurator::Cfg0ConfContext,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&$int$const,Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::ConfigSettings,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::SortCriteria>,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_12::ConfiguratorManagement::FilterCriteriaInput>,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariability2",
        "returnConst": "false",
        "returnDescription": "The tree structure representing variability data. This holds list of a structure <font face=\"courier\" height=\"10\">VariabiltyNode</font>. Each element contains the UID of the group, family and feature in the response and list of UIDs of all children. For features, no children data is populated.<br /><br />Operation may return following partial errors:<br /><ul><ul><li type=\"disc\">77073&nbsp;&nbsp;&nbsp;&nbsp;The Configurator Perspective (<b>Cfg0ConfiguratorPerspective</b>) is invalid.</li><li type=\"disc\">333013   Either a <font face=\"courier\" height=\"10\">configPerspective</font> or <font face=\"courier\" height=\"10\">configContext</font> must be provided.</li><li type=\"disc\">333012  The &quot;sortDirection&quot; contains invalid value.</li><li type=\"disc\">38015&nbsp;&nbsp;&nbsp;&nbsp; Unable to find a property with name &quot;InValidProperty&quot;.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantExpressionDataInput",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Variant expression data input.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "variantExpressionDataInput"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantExpressionDataResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp04.0.0",
        "description": "This operation returns the variant configuration expression data of the input objects.",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantExpressionDataResponse#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariantExpressionData#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantExpressionDataInput,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariantExpressionData",
        "returnConst": "false",
        "returnDescription": "Either returns the Variant expression for the input objects along with Option families and values or return option values of the expanded option families.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantExpressionDataInput2",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Variant expression data input.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "variantExpressionDataInput"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantExpressionDataResponse2",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp05.1.0",
        "description": "This operation returns the variant configuration expression data of the input objects.",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantExpressionDataResponse2#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariantExpressionData2#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantExpressionDataInput2,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariantExpressionData2",
        "returnConst": "false",
        "returnDescription": "Either returns the Variant expression for the input objects along with Option families and values or return option values of the expanded option families.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantExpressionDataInput2",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "This operation returns the variant configuration expression data of the input objects.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "variantExpressionDataInput"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::VariantExpressionDataResponse3",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp06.2.0",
        "description": "This operation returns the variant configuration expression data of the input objects.",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::VariantExpressionDataResponse3#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariantExpressionData3#const,Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariantExpressionDataInput2,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariantExpressionData3",
        "returnConst": "false",
        "returnDescription": "Either returns the Variant expression for the input objects along with Option families and values or return option values of the expanded option families. <br /><br />The following partial errors may be returned:<br /><br />77073 An invalid Configurator Perspective was passed.<br /><br />77074 Product item is not present in the Configurator Perspective.<br /><br />333010 The input expression is not valid.<br /><br />333011 The variant configuration cannot be retrieved because input is not valid. <br /><br />257005 The object of type is not a variant configurable object.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The <b>Cfg0ConfiguratorPerspective</b>  has revision rule information for the displayable formula. <br />This is optional when formulatType is set to tcFormula.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configPerspective"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Type of the formula to retrieve.<br />Valid values are:<br /><ul><ul><li type=\"disc\">tcFormula &ndash; Returns only the internal Teamcenter representation for the given <b>VariantObject</b> input.</li><li type=\"disc\">displayFormula &ndash; Returns only the displayable representation for the given <b>VariantObject</b> input.</li><li type=\"disc\">bothFormulae &ndash; returns both Teamcenter and displayable formulae.</li></ul></ul>",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "formulaType"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::VariantObject",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of <b>VariantObject</b> objects for which the display formula or teamcenter formula has to be retrieved. Each item in this list either contains affected object or expression with which formulae can be computed. In case both are present, expression is ignored.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "variantObjects"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::GetVariantFormulaeResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp05.2.0",
        "description": "This operation retrieves Teamcenter formula and/or displayable formula for the given <b>VariantObject</b> inputs.",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::GetVariantFormulaeResponse#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariantFormulae#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::string,&$const,std::vector<Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::VariantObject>,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getVariantFormulae",
        "returnConst": "false",
        "returnDescription": "Returns the list of required formulae for given <b>VariantObject</b> objects.<br /><br />The following partial errors may be returned:<br /><br />333012&nbsp;&nbsp;&nbsp;&nbsp;The  &quot;affectedObjectUid&rdquo; is not valid.  <br /><br />333013&nbsp;&nbsp;&nbsp;&nbsp;The &quot;formulaType&quot; is not valid. Valid values are &ldquo;tcFormula&rdquo;, &ldquo;displayFormula&rdquo; or &ldquo;bothFormulae&rdquo;.<br /><br />333014&nbsp;&nbsp;&nbsp;&nbsp;Configurator Perspective must have a product Item.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A business object type name of the object to be created. Supported values are subtype of <b>Cfg0AbsConfiguratorWSO</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "businessObjectType"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of property names currently visible in the table.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "propertyNames"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfContext",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The variant configurator context(<b>Cfg0ConfContext</b>) under which object is to be created.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configContext"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::GetViewModelForCreateResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp06.1.0",
        "description": "This operation retrieves the view model definition to author <b>Cfg0AbsConfiguratorWSO</b> object. The response contains the definition of View Model information based on the input. Active Workspace client derives data to render the editable row in Active Workspace user interface element or widget to create an object.",
        "id": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::GetViewModelForCreateResponse#Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getViewModelForCreate#const,std::string,&$const,std::vector<std::string>,&$const,Teamcenter::Cfg0configurator::Cfg0ConfContext,&",
        "name": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement::getViewModelForCreate",
        "returnConst": "false",
        "returnDescription": "The view model definition as JSON string for the type of object being authored.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">333015 : The following mandatory properties are missing on the Inline Authoring View for the input business object type &quot;BusinessObjectType&quot;: PropertyNames. Please report this configuration error to your system administrator.</li><li type=\"disc\">26019 : The value of 'businessObjectType' is invalid.</li><li type=\"disc\">26019 : The value of 'propertyNames' is invalid.</li><li type=\"disc\">26019 : The value of 'configContext' is invalid.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      }
    ],
    "ServiceInterface": [
      {
        "createRelease": "Awp03.4.0",
        "dependencies": "",
        "description": "This Service contains operations related to variant configuration and variant configurator data for Active Workspace.",
        "libraryName": "Pca0SoaProductConfiguratorAw",
        "name": "ConfiguratorManagement",
        "namespace": "Pca0::Soa::ProductConfiguratorAw",
        "serviceLibraryRef": ""
      }
    ],
    "Struct": [
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The persistent configuration formula string.",
            "name": "formula"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The application expression identifier used to distinguish the current expression from other variant expressions authored for the same business object.",
            "name": "exprID"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "Expression type represents expression category and the intent of this expression. The valid values are as follows: 9  - Variant Condition, 18 - Variant Rule, 25 &ndash; Applicability,44 &ndash; Subject , 28 - Inclusive Constraint,29 - Exclusive Constraint,37 - Default Rule,41 - Availability Rule etc. which are defined in cfg_tokens.h file.",
            "name": "exprType"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ConfigExpressionSet"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of <font face=\"courier\" height=\"10\">ConfigExpressionSet</font> which are relevant to the business object. The variant expression sets are combined by OR operator.",
            "name": "configExprSets"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Structure representing a single variant expression.",
        "isPublished": "false",
        "name": "ApplicationConfigExpression",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "Expression type represents expression category and the intent of this expression. The valid values are as follows: 9 - Variant Condition, 18 - Variant Rule, 25 &ndash; Applicability, 44 &ndash; Subject, 28 - Inclusive Constraint, 29 - Exclusive Constraint, 37 - Default Rule, 41 - Availability Rule. These constants are defined in cfg_tokens.h file.",
            "name": "exprType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Configuration formula for a <font face=\"courier\" height=\"10\">ConfigExpressionSection</font>.",
            "name": "formula"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ConfigSubExpression"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of sub-expressions in a Boolean variant expression. Either formula or sub expressions are populated in a <font face=\"courier\" height=\"10\">ConfigExpressionSection</font> at a time.",
            "name": "subExpressions"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Structure defines a Boolean expression to be used for configuration purposes.",
        "isPublished": "false",
        "name": "ConfigExpressionSection",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::Selection"
              }
            ],
            "description": "This will hold the nodeID of the Feature and its selection state.",
            "name": "selectionInfo"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::ViewModelObject"
              }
            ],
            "description": "ViewModelObject which represents feature object information.",
            "name": "featureObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::vector<int>"
              }
            ],
            "description": "A list of all allowable selection states for option value based on current option value selections and constraint rules. Following are the valid values:<br /><br />NoSelection -&gt;0<br />User positive Selection-&gt;1<br />User negative Selection-&gt;2<br />systemDefault positive Selection-&gt;5<br />systemDefault negative Selection-&gt; 6<br />system positive Selection -&gt; 9<br />system negative Selection -&gt; 10",
            "name": "allowedSelectionStates"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::StringMap"
              }
            ],
            "description": "A map (string, list of strings) of label type and list of nodeID of ViewModelObjects.<br />nodeIDViewModelObjectIf key == &quot;violation&quot;, then:<br />   Value = list of appropriate nodeID of a ViewModelObjects of type &quot;violation&quot;.",
            "name": "labelInfo"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "Feature stores the information for the Variant feature to be displayed to the user. This contains the current selection state of the feature and labels such as violations.",
        "isPublished": "false",
        "name": "Feature",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The internal name of the property on which column filtering is applied.",
            "name": "columnName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "This operation specifies the type of column filter operation applied. The supported operations are: &quot;CONTAINS&quot;, &quot;EQUAL&quot;, &quot;GREATER THAN&quot;, &quot;LESS THAN&quot; and &quot;BETWEEN&quot;.",
            "name": "operation"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The filter values are the criteria entered by the user on the client. These are not a fixed set of values like operation.",
            "name": "values"
          }
        ],
        "createRelease": "Awp06.0.0",
        "description": "A structure representing the input filter criteria for columns.",
        "isPublished": "false",
        "name": "FilterCriteriaInput",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::FilterParameter"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The details of feature filter parameter Current Elements, Show Families and their selection state. Current Elements and Show Families are display name defined in text server locale file.",
            "name": "featureParameters"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::FilterParameter"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The details of Intents filter parameter Manufacturing, Marketing, and Technical. These intents will be retrieve from LOV Cfg0ObjectIntentions.",
            "name": "intentParameters"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "Filter Panel Data response for the selected object.",
        "isPublished": "false",
        "name": "FilterPanelDataResponse",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Internal name of the filter parameter.",
            "name": "internalName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Display name of the filter parameter.",
            "name": "displayName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true the parmeter is selected.",
            "name": "isSelected"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "Filter parameter details and its selection state.",
        "isPublished": "false",
        "name": "FilterParameter",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "The Configurator Perspective (<b>Cfg0ConfiguratorPerspective</b>) containing all information about the current Configurator Context (<b>Cfg0ConfContext</b>), Revision Rule, Effectivity, Rule Date.  First call of this operation can pass  this paramater as null, in such case <font face=\"courier\" height=\"10\">configContext</font> must be passed as input. When passed as null the Configuration Perspective (<b>Cfg0ConfiguratorPerspective</b>) is obtained from the <font face=\"courier\" height=\"10\">configContext</font> and returned as part of response. Caller is expected to keep reference of this parameter and pass as input in subsequent calls of this operation.",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariabilityTreeData"
              }
            ],
            "description": "Tree structure representing variant data. This holds list of a structure <font face=\"courier\" height=\"10\">VariabiltyNode</font>. Each element will represent UID of the group, family and feature in the response and list of UIDs of all children. For features, no children data is populated.",
            "name": "variabilityTreeData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::ViewModelObjectMap3"
              }
            ],
            "description": "A map (string, <font face=\"courier\" height=\"10\">ViewModelObject2</font>) of object UID to its <font face=\"courier\" height=\"10\">ViewModelObject2</font>.",
            "name": "viewModelObjectMap"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "ServiceData containing partial exceptions, if any.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp05.2.0",
        "description": "Output containing perspective and variability for the input configuration context or parent objects in a tree structure. The variability can be all configured model families, models, groups, families and values based on corresponding configPerspective, configContext or parentList. Variability is configured based on configuration settings such as Revision Rule (<b>RevisionRule</b>), Rule Date and Effectivity on the input <font face=\"courier\" height=\"10\">configPerspective</font>.",
        "isPublished": "false",
        "name": "GetVariabilityOutput",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement::VariantFormulae"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of <b>VariantFormulae</b> objects for given <b>VariantObject</b> objects.",
            "name": "formulae"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "<b>ServiceData</b> containing partial exceptions, if any.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp05.2.0",
        "description": "Output containing list of formulae for given <b>VariantObject</b> inputs and <b>ServiceData</b>.",
        "isPublished": "false",
        "name": "GetVariantFormulaeResponse",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "A JSON string containing the ViewModelObject (VMO) representation in Active Workspace Client. The JSON schema is as below:<br />{<br />   &quot;type&quot;: &quot;String&quot;,<br />   &quot;uid&quot;: &quot;String&quot;,      <br />   &quot;props&quot;: {<br />         &quot;String&quot;: {<br />                &quot;srcObjLsd&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;            &quot;hasLOV&quot;: &quot;boolean&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;            &quot;isArray&quot;: &quot;boolean&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;            &quot;isEditable&quot;: &quot;boolean&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;            &quot;isEnabled&quot;: &quot;boolean&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;            &quot;isModifiable&quot;: &quot;boolean&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;            &quot;maxLength&quot;: &quot;integer&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;            &quot;parentUid&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;            &quot;dbValues&quot;: [&quot;String&quot;],<br />&nbsp;&nbsp;&nbsp;&nbsp;            &quot;uiValues&quot;: [&quot;String&quot;],                    <br />&nbsp;&nbsp;&nbsp;&nbsp;           &quot;propertyDisplayName&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;           &quot;propertyName&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;           &quot;srcObjectTypeName&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;           &quot;type&quot;: &quot;Integer&quot;<br />           }<br />     }<br />}",
            "name": "viewModelObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "ServiceData containing partial error, if any.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp06.1.0",
        "description": "The response structure containing information required to render editable row in Active Workspace User Interface to create <b>Cfg0AbsConfiguratorWSO</b> object.",
        "isPublished": "false",
        "name": "GetViewModelForCreateResponse",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::WorkspaceObject"
              }
            ],
            "description": "Parent object under which created object is added. Valid values are of business object type <b>Cfg0ConfContext</b> and <b>Cfg0AbsConfiguratorWSO</b>.",
            "name": "parent"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::CreateInput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List of CreateInput used to capture the inputs required for creation of the business object of type <b>Cfg0AbsConfiguratorWSO</b>.",
            "name": "createInputs"
          }
        ],
        "createRelease": "Awp06.1.0",
        "description": "Struct containing a list of <font face=\"courier\" height=\"10\">createInput</font> to create the objects and a common parent under which all objects would be added.",
        "isPublished": "false",
        "name": "ObjectsToCreateAndAdd",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::WorkspaceObject"
              }
            ],
            "description": "Parent object under which created object is added. Supported types are: <b>Cfg0ConfContext</b> and <b>Cfg0AbsConfiguratorWSO</b>.",
            "name": "parent"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::CreateInput2"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of <font face=\"courier\" height=\"10\">CreateInput2</font> used to capture the inputs required for creation of the business object of type <b>Cfg0AbsConfiguratorWSO</b>.",
            "name": "createInputs"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "Structure containing a list of <font face=\"courier\" height=\"10\">CreateInput2</font> to create the objects and a common parent under which all objects would be added.",
        "isPublished": "false",
        "name": "ObjectsToCreateAndAdd2",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The UID of the variant option family.",
            "name": "family"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The display name of the variant option family.",
            "name": "familyDisplayName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The data type of option values within this family.",
            "name": "familyType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, option values are displayed as tile with thumbnail. If false, option values are displayed as simple text. <br />Value of this parameter is governed by preference PCA_Display_Thumbnail.",
            "name": "isThumbnailDisplay"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2017_12::ConfiguratorManagement::FamilyOptionMap"
              }
            ],
            "description": "A map (string, boolean) indicating the various decorations for this family like, if the family is complete, single/multi-select, freeform etc. Valid keys are:<br /><ul><ul><li type=\"disc\">isComplete: Indicating if at least one option value has been selected in mandatory family.  If true, option family is complete. If false, option family is considered incomplete. Optional families are always considered complete.</li><li type=\"disc\">isSingleSelect: Indicate if multiple option values in a family allowed to be selected. If true, multiple selections are not allowed. If false, multiple selections are allowed.</li></ul></ul>",
            "name": "familyOptions"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2017_12::ConfiguratorManagement::OptionValue"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of option values within this family.",
            "name": "optionValues"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "A collection of option values.",
        "isPublished": "false",
        "name": "OptionFamily",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2017_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ConfigExpressionSection"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of <font face=\"courier\" height=\"10\">ConfigExpressionSection</font> structures which are collected as a set for the business object. Each structure defines a variant expression which can be used for the configuration purposes.",
            "name": "configExprSections"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Structure containing the collection of variant expressions referred as set for the business<br />object. A set collects different type of variant expressions such as applicability and subject. These will be joined together by AND operation and evaluated as part of single expression.",
        "isPublished": "false",
        "name": "ConfigExpressionSet",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::Selection"
              }
            ],
            "description": "This will hold the nodeID of the Feature and its selection state.",
            "name": "selectionInfo"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::ViewModelObject"
              }
            ],
            "description": "ViewModelObject which represents family object information e.g. displayName, type.",
            "name": "familyObj"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::Feature"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of all allowable selection states for option family based on current option value selections and constraint rules. Valid values refer to 1.1.1.10 section.",
            "name": "features"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::vector<int>"
              }
            ],
            "description": "A list of all allowable selection states for option value based on current option value selections and constraint rules. Following are the valid values:<br /><br />NoSelection -&gt;0<br />User positive Selection-&gt;1<br />User negative Selection-&gt;2<br />systemDefault positive Selection-&gt;5<br />systemDefault negative Selection-&gt; 6<br />system positive Selection -&gt; 9<br />system negative Selection -&gt; 10",
            "name": "allowedSelectionStates"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::StringMap"
              }
            ],
            "description": "A map (string, vector&lt;string&gt;) of label type and list of nodeID of <b>ViewModelObject</b>.<br />Valid keys : &quot;violations&quot;, &quot;package&quot;<br /> Values: nodeID of <b>ViewModelObject</b><br /> If key ==  &quot;violation&quot;, then:<br /> Value = list of appropriate nodeID of a ViewModelObject of type &quot;violation&quot;.",
            "name": "labelInfo"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "A collection of features. It also contains selection state and allowed selection states for the current rendered family.",
        "isPublished": "false",
        "name": "OptionFamily",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsValue"
              }
            ],
            "description": "The variant option value object. The value is populated when Thumbnail display is ON.",
            "name": "optValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The UID of the variant option value. The value is popouated when Thumbnail display is off.",
            "name": "optValueStr"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The display name of the variant option value.",
            "name": "valueDisplayName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "The state of value selection. 0 - Unselected, 1 - Selected (equal to), and 2 - Negatively selected (not equal to).",
            "name": "selectionState"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::vector<int>"
              }
            ],
            "description": "A list of all allowable selection states for option value based on current option value selections and constraint rules. Valid values in array are 0 - Unselected, 1 - Selected (equal to), and 2 - Negatively selected (not equal to). If all states are allowed for an option value, the list will be empty.",
            "name": "allowedSelectionStates"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "The Variant option value.",
        "isPublished": "false",
        "name": "OptionValue",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2017_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The UID of the variant option value ( <b>Cfg0AbsValue</b> ).",
            "name": "optionValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "Variant option value (<b>Cfg0AbsValue</b>) selection state. 0 - Unselected, 1 - Selected (equal to), and 2 - Negatively selected (not equal to)",
            "name": "selectionState"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "Option value and its selection state as selected by a user.",
        "isPublished": "false",
        "name": "OptionValueSelection",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2017_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The UID of the variant option group or partition.",
            "name": "nodeID"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::ViewModelObject"
              }
            ],
            "description": "This ViewModelObject store information of scope object such as nodeID, displayName, internalName.",
            "name": "scopeObj"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::OptionFamily"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of option families within this group.",
            "name": "families"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": " Scope stores the collection of variant option families. Scope represents the top level object in the hierarchy of configuration data that is displayed in the client.",
        "isPublished": "false",
        "name": "Scope",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "UID of the Affected Object.",
            "name": "affectedObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Display value of the affected object.",
            "name": "displayValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::UserSelectionMap2"
              }
            ],
            "description": "Represents list of Map (string, OptionValueSelection) of all option values selected by user per family.",
            "name": "userSelections"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::FamilySelectionMap"
              }
            ],
            "description": "Represents list of Map (string, int) of all families selected by user. Key is UID of Cfg0AbsFamily object and value is selection state of the family. <br /> 0 &ndash; Unselected.<br /> 1 - User selected (equal to).<br /> 2 - Negatively user selected (not equal to).<br /> 3 - System Selected (equal to).<br /> 4 - Negatively system selected (not equal to).<br /> 5 - Default Selected (equal to).<br /> 6 - Negatively default selected (not equal to).",
            "name": "familySelections"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "Structure containing expression selection for the given affected object. If the expression has split then there will be more than one SelectedExpression structure with same affectedObject UID.",
        "isPublished": "false",
        "name": "SelectedExpression",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Object UID for which selection is stored, valid values are UIDs of <b>Awb0Element</b>, <b>VariantRule</b>, and <b>Mdl0ModelElement</b>.",
            "name": "affectedObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "For split cases it will hold the column number for given affected object.",
            "name": "columnId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectionMap"
              }
            ],
            "description": "Map of (OptionFamily nodeID and list of Selections) nodeID of <b>OptionFamily</b> or <b>Feature</b> and list of <b>Selection</b>.",
            "name": "selections"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "Store selections against affected object UID.",
        "isPublished": "false",
        "name": "SelectedExpressions",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The nodeID of the OptionFamily or Feature structures in the response.",
            "name": "nodeID"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "The state of object selection. The below are given valid values.<br />Selection state values are<br />NoSelection -&gt;0<br />User positive Selection-&gt;1<br />User negative Selection-&gt;2<br />systemDefault positive Selection-&gt;5<br />systemDefault negative Selection-&gt; 6<br />system positive Selection -&gt; 9<br />system negative Selection -&gt; 10",
            "name": "selectionState"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "This structure stores nodeID of OptionFamily or Feature along with its selection state.",
        "isPublished": "false",
        "name": "Selection",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "The state of Cfg0AbsValue or Cfg0AbsFamily selection.",
            "name": "selectionState"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Display name of the option family (Cfg0AbsFamily) selected. In case of Boolean or multi select families, this parameter would contain the option value display name.",
            "name": "familyDisplayName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Display name of the option value (Cfg0AbsValue) selected. In case of Boolean, multi select families or family selection, this parameter would be empty.",
            "name": "valueDisplayName"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "Pair of option family name to selected option value.",
        "isPublished": "false",
        "name": "SelectionSummary",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectionSummary"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of all selections per family in user friendly displayable format.",
            "name": "summaryOfSelections"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectionSummary"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of families which are mandatory.",
            "name": "requiredFamilies"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Display name of selections summary panel.",
            "name": "displayName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Internal name of selections summary panel. This name is used to identify if user has requested to view selections summary panel.",
            "name": "internalName"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "Summary of all selections in displayable format.",
        "isPublished": "false",
        "name": "SelectionsSummary",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::SelectedExpressions"
              }
            ],
            "description": "A map (string, list of ApplicationConfigExpressions ) of affected object UID to the list of its selected variant expressions. Affected object is any object for which selections are stored. Valid values for affected object are UIDs of <b>VariantRule</b>, <b>Awb0Element</b> or any configurable object.",
            "name": "selectedExpressions"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "<b>Cfg0ConfiguratorPerspective</b> object is used as communication mechanism for the configuration and the valid configurator contexts across the Product Configurator and its consuming applications such as 4G Designer, Structure Manager. If it is empty then the config perspective is obtained from the selected objects",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::StringMap3"
              }
            ],
            "description": "Map (string, list of strings) of request names and value pairs. <br /><br />1. &quot;configurationControlMode&quot; is the configuration control view.<br />Supported values are: &quot;guided&quot; and &quot;manual&quot;.<br />guided: In this mode, configuration is always valid. This mode is used to configure products by optimizing the required input by pre-populating choices and at the same time provide maximum flexibility to users to get exactly what they want by overriding the system selections.<br />manual: Manual mode does not give system selections unless user validates or applies his configuration.<br /><br />2.&quot;severity&quot;: This gives information what all violations to be returned.<br />Supported values are: &quot;error&quot;, &quot;warn&quot; and &quot;info&quot;.<br /><br />3. &quot;viewName&quot;: This holds the current configuration view name which decides how to display configuration data. Supported values are: &quot;listView&quot; and &quot;treeView&quot;.<br />listView: In this view Configurator data is displayed in simple list format.<br />treeView: In this view Configurator data is displayed in tree format. Families are shown as children of Groups. Features are shown as children of respective families.",
            "name": "requestInfo"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Input containing the user selections that represent variability to be set on variant configurable objects for e.g <b>VariantRule</b>.",
        "isPublished": "false",
        "name": "SetVariantExpressionDataInput",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The unique ID to represent a node in the hierarchy which can be family (<b>Cfg0AbsFamily</b>) or a feature (<b>Cfg0AbsFeature</b>).",
            "name": "nodeUid"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The string value of feature to be used in case of free form families.",
            "name": "valueText"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The UID of the family (<b>Cfg0AbsFamily</b>).",
            "name": "family"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The unique Object identifier for the Family (<b>Cfg0AbsFamily</b>).",
            "name": "familyId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The family namespace by which the family object is uniquely identified. This is used for unconfigured families where no UID is available.",
            "name": "familyNamespace"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "The state of object selection. Selection state values are:<br />0 - No Selection.<br />1 - User positive Selection.<br />2 - User negative Selection.<br />5 - Default positive Selection by System.<br />6 - Default negative Selection by system.<br />9 - positive Selection by System. <br />10 - negative Selection by System.",
            "name": "selectionState"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::StringMap3"
              }
            ],
            "description": "A map (string, list of strings) to store meta data about config object. It is used to indicate free form, unconfigured selection.",
            "name": "props"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Structure representing a single selection which will hold variant option and its selection state.",
        "isPublished": "false",
        "name": "ConfigExpressionTerm",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of JSON String consisting of affected object UID as key to the list of its selected variant expressions as its value. Affected object is any object for which selections are stored. Valid values for affected object are UIDs of <b>VariantRule</b>, <b>Awb0Element</b> or any configurable object.<br /><br />JSON string has the following schema:<br /><br />{&lt;Object ID&gt;: {<br />&nbsp;&nbsp;&nbsp;&nbsp;exprId: <br />&nbsp;&nbsp;&nbsp;&nbsp;exprType:<br />&nbsp;&nbsp;&nbsp;&nbsp;formula:<br />&nbsp;&nbsp;&nbsp;&nbsp;configExprSets: [{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;configExprSections: [{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exprType:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formula:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subExpressions: [{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;configExpressionGroupMap: {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;FamilyUid&gt;: [{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;familyID:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;familyNamespace:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodeUid:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;props:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectionState:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valueText:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}]<br />&nbsp;&nbsp;&nbsp;&nbsp;}]<br />}]&nbsp;&nbsp;&nbsp;&nbsp;<br />}<br />}",
            "name": "selectedExpressions"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "<b>Cfg0ConfiguratorPerspective</b> object is used as communication mechanism for the configuration and the valid configurator contexts across the Product Configurator and its consuming applications such as 4G Designer, Structure Manager. If it is empty then the config perspective is obtained from the selected objects.",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::StringMap5"
              }
            ],
            "description": "Map (string, list of strings) of request names and value pairs. <br /><br />1. &quot;configurationControlMode&quot; is the configuration control view.<br />Supported values are: &quot;guided&quot; and &quot;manual&quot;.<br />guided: In this mode, configuration is always valid. This mode is used to configure products by optimizing the required input by pre-populating choices and at the same time provide maximum flexibility to users to get exactly what they want by overriding the system selections.<br />manual: Manual mode does not give system selections unless user validates or applies his configuration.<br /><br />2.&quot;severity&quot;: This gives information what all violations to be returned.<br />Supported values are: &quot;error&quot;, &quot;warn&quot; and &quot;info&quot;.<br /><br />3. &quot;viewName&quot;: This holds the current configuration view name which decides how to display configuration data. Supported values are: &quot;listView&quot; and &quot;treeView&quot;.<br />listView: In this view Configurator data is displayed in simple list format.<br />treeView: In this view Configurator data is displayed in tree format. Families are shown as children of Groups. Features are shown as children of respective families.",
            "name": "requestInfo"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "Input containing the user selections that represent variability to be set on variant configurable objects for e.g <b>VariantRule</b>.",
        "isPublished": "false",
        "name": "SetVariantExpressionDataInput3",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Service Data containing partial errors, if any.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::StringMap5"
              }
            ],
            "description": "A map (string, list of strings) of response names and value pairs. This is reserved for future use.",
            "name": "responseInfo"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "Variant expression response for the selected objects.",
        "isPublished": "false",
        "name": "SetVariantExpressionDataResponse3",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The name of the field to perform the sorting. This has to be the name of a property of an Configurator object on which sorting to be performed.",
            "name": "fieldName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The direction in which the sorting needs to be perfomed. It could be ascending or descending. Valid values are: &quot;ASC&quot; and &quot;DESC&quot;. Values are case insensitive.",
            "name": "sortDirection"
          }
        ],
        "createRelease": "Awp05.2.0",
        "description": "Specifies the criteria to use to sort the results that are retrieved. It provides the field to sort and the direction to sort it in.",
        "isPublished": "false",
        "name": "SortCriteria",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The UID of the group corresponding to feature contributing to violation. Valid Business Object type of UID is <b>Cfg0AbsFamilyGroup</b>.",
            "name": "groupUid"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ConfigExpressionTerm"
              }
            ],
            "description": "Holds a single selection. The nodeUid in the <font face=\"courier\" height=\"10\">configExpressionTerm</font> is the unique ID to represent a node in the hierarchy which can be family (<b>Cfg0AbsFamily</b>) or a feature (<b>Cfg0AbsFeature</b>).",
            "name": "configExpressionTerm"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Structure representing a single user selection contributing a violation. Other information will be populated in <b>ViewModelObjectMap5</b>.",
        "isPublished": "false",
        "name": "UserSelection",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::ValidateProductConfigurationOutput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of ValidateProductConfigurationOutput structure. The sequence in this list is same as the input sequence of SelectedExpression.",
            "name": "validateProductConfigurationOutputs"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "ServiceData containing partial exceptions, if any. Partial exceptions are added as per index of input SelectedExpression in the list.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "It is the structure containing response of operation validateProductConfiuration.",
        "isPublished": "false",
        "name": "ValidateProductConfigResponse",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "Instance of Cfg0ConfiguratorPerspective business object.",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "The constraint rules application. The parameter is a bitwise 'OR' of the following values: <br />0: Disable configurator constraint evaluation. <br />1: Enable configurator constraint evaluation.<br />2: Skip constraints if they only reference unset families.<br />4: Skip constraints that don't reference all Expression families.<br />8: Report warnings in addition to errors.<br />16: Report informational messages.<br />64: Treat constraints with warning severity as if they had error severity.<br />256: Skip allocation constraints in solve.<br />1024: Skip criteria update based on validation rules (For example configurator exclusion rule). If this flag is not set then the operation will update the variant criteria after applying validation rules.<br />2048: Enable Availability Constraint evaluation. <br />4096: Include Default Rules in the violations.",
            "name": "applyConstraints"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::StringMap3"
              }
            ],
            "description": "Map (string, list of strings) of request names and value pairs. <br /><br />1.  &quot;profileSetting&quot;  contains the information regarding the setting of different severity information (Error, warning, info) in JSON format which is taken into consideration for for the validation.",
            "name": "requestInfo"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::SelectedExpressions"
              }
            ],
            "description": "A map (string, list of ApplicationConfigExpressions) containing the expressions in PCAGrid format, which needs to be validated.",
            "name": "selectedExpressions"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "The input containing the configurator perspective and the SelectedExpressions to validate by applying the constraints for the input perspective.",
        "isPublished": "false",
        "name": "ValidateProductConfigsInput",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "Instance of <b>Cfg0ConfiguratorPerspective</b> business object.",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "The constraint rules application. The parameter is a bitwise 'OR' of the following values: <br />0: Disable configurator constraint evaluation. <br />1: Enable configurator constraint evaluation.<br />2: Skip constraints if they only reference unset families.<br />4: Skip constraints that don't reference all Expression families.<br />8: Report warnings in addition to errors.<br />16: Report informational messages.<br />64: Treat constraints with warning severity as if they had error severity.<br />256: Skip allocation constraints in solve.<br />1024: Skip criteria update based on validation rules (For example configurator exclusion rule). If this flag is not set then the operation will update the variant criteria after applying validation rules.<br />2048: Enable Availability Constraint evaluation. <br />4096: Include Default Rules in the violations.",
            "name": "applyConstraints"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::StringMap5"
              }
            ],
            "description": " Map (string, list of strings) of request names and value pairs. <br /><br />1. &quot;profileSetting&quot; contains the information regarding the setting of different severity information (Error, warning, info) in JSON format which is taken into consideration for for the validation.",
            "name": "requestInfo"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of JSON String of the expressions in PCAGrid format, which needs to be validated.",
            "name": "selectedExpressions"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "The input containing the configurator perspective and the SelectedExpressions to validate by applying the constraints for the input perspective.",
        "isPublished": "false",
        "name": "ValidateProductConfigsInput3",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::AffectedObjectToValidateProductConfiguration"
              }
            ],
            "description": "A map (string, ValidateProductConfigurationOutput2) containing the Selected object UID to its ValidateProductConfigurationOutput2 response structure.",
            "name": "validateProductConfigurationOutputs"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::StringMap3"
              }
            ],
            "description": "A map (string, list of strings) containing the additional informations which server wants to send about the operation. <br />Following information is sent by the server<br />incompleteFamilies &ndash; UID of the families for which no selection is made by the user and system could not select any valid value by considering the constraints for the input expression. <br />completenessStatus &ndash; Provide additional information about the completeness of the input expression. Following are the valid values.<br />ValidAndIncomplete &ndash; Indicates that the current input expression is valid but not every family have been selected.<br />ValidAndIncomplete &ndash; Indicates that the current input expression is valid and have the selection for every family.<br />Invalid &ndash; Indicates that the input expression is invalid.",
            "name": "responseInfo"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "ServiceData containing partial exceptions, if any.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "It is the structure containing response of operation validateProductConfiuration2.",
        "isPublished": "false",
        "name": "ValidateProductConfigsResponse2",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::AffectedObjectToValidateProductConfiguration3"
              }
            ],
            "description": "A map (string, ValidateProductConfigurationOutput3) containing the Selected object UID to its ValidateProductConfigurationOutput3 response structure.",
            "name": "validateProductConfigurationOutputs"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::StringMap5"
              }
            ],
            "description": "A map (string, list of strings) containing the additional informations which server wants to send about the operation. <br />Following information is sent by the server:<br />&ldquo;incompleteFamilies&rdquo;   &ndash; UID of the families for which no selection is made by the user and system could not select any valid value by considering the constraints for the input expression. <br />&ldquo;completenessStatus&rdquo; &ndash; Provide additional information about the completeness of the input expression. Following are the valid values.<br />&ldquo;ValidAndIncomplete&rdquo; &ndash; Indicates that the current input expression is valid but not every family have been selected.<br />&ldquo;ValidAndIncomplete&rdquo; &ndash; Indicates that the current input expression is valid and have the selection for every family.<br />&ldquo;Invalid&rdquo; &ndash; Indicates that the input expression is invalid.",
            "name": "responseInfo"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "ServiceData containing partial errors, if any.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "It is the structure containing response of operation validateProductConfiguration3.",
        "isPublished": "false",
        "name": "ValidateProductConfigsResponse3",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "Indicate if input configuration is valid or not. If true, input configuration is valid; otherwise, input configuration is invalid.",
            "name": "criteriaStatus"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::ValueToViolations"
              }
            ],
            "description": "A map (string, Violations) of all violated values.",
            "name": "valueToViolations"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::UserSelectionMap2"
              }
            ],
            "description": "A map (string, list of OptionValueSelection) of expanded selections that is in accordance with the given input selections and the rules in the context.",
            "name": "outputSelections"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "It is the structure containing the violations and SelectionMap for each affected object.",
        "isPublished": "false",
        "name": "ValidateProductConfigurationOutput",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::RevisionRule"
              }
            ],
            "description": "Revision rule (<b>RevisionRule</b>) to for which variability is to be configured.",
            "name": "revisionRule"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::DateTime"
              }
            ],
            "description": "Rule Date for which variability is to be configured.",
            "name": "ruleDate"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Effectivity formula for which variability is to be configured. E.g. &quot;[Teamcenter::]Date &gt;= 2020-01-01T00:00:00+0530 &amp; [Teamcenter::]Date &lt; 2025-01-31T00:00:00+0530&quot;",
            "name": "effectivityFormula"
          }
        ],
        "createRelease": "Awp05.2.0",
        "description": "Struct containing configuration related settings such as Revision Rule (<b>RevisionRule</b>), Rule Date and Effectivity.",
        "isPublished": "false",
        "name": "ConfigSettings",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "Indicate if input configuration is valid or not. If true, input configuration is valid; otherwise, input configuration is invalid.",
            "name": "criteriaStatus"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ValueToViolations2"
              }
            ],
            "description": "A map (string, Violations) of all violated values. The key is the UID of the feature (Cfg0AbsFeature) for the violations are reported by the system.",
            "name": "valueToViolations"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ApplicationConfigExpression"
              }
            ],
            "description": "Expression in PCAGrid format which contains the expanded selections that is in accordance with the given input selections and the rules in the context.",
            "name": "expression"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "It is the structure containing information about the expanded expression and criteria status for the corresponding configurable object.",
        "isPublished": "false",
        "name": "ValidateProductConfigurationOutput2",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, input configuration is valid; if false, input configuration is invalid.",
            "name": "criteriaStatus"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of JSON String which contains expression in PCAGrid format which contains the expanded selections that is in accordance with the given input selections and the rules in the context.<br /><br />expression JSON string has the following schema:<br /><br /> {<br />&nbsp;&nbsp;&nbsp;&nbsp;exprId: <br />&nbsp;&nbsp;&nbsp;&nbsp;exprType:<br />&nbsp;&nbsp;&nbsp;&nbsp;formula:<br />&nbsp;&nbsp;&nbsp;&nbsp;configExprSets: [{<br />configExprSections: [{<br />exprType:<br />formula:<br />subExpressions: [{<br />configExpressionGroupMap: {<br />&nbsp;&nbsp;&nbsp;&nbsp;&lt;FamilyUid&gt;: [{<br />&nbsp;&nbsp;&nbsp;&nbsp;family:<br />&nbsp;&nbsp;&nbsp;&nbsp;familyID:<br />&nbsp;&nbsp;&nbsp;&nbsp;familyNamespace:<br />&nbsp;&nbsp;&nbsp;&nbsp;nodeUid:<br />&nbsp;&nbsp;&nbsp;&nbsp;props:<br />&nbsp;&nbsp;&nbsp;&nbsp;selectionState:<br />&nbsp;&nbsp;&nbsp;&nbsp;valueText:<br />}]<br />}<br />}]<br />}]<br />}]&nbsp;&nbsp;&nbsp;&nbsp;<br />}",
            "name": "expression"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ValueToViolations3"
              }
            ],
            "description": "A map (string, Violations) of all violated values. The key is the UID of the feature (<b>Cfg0AbsFeature</b>) for the violations are reported by the system.",
            "name": "valueToViolations"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "It is the structure containing information about the expanded expression and criteria status for the corresponding configurable object.",
        "isPublished": "false",
        "name": "ValidateProductConfigurationOutput3",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariabiltyNode"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "Represents UID of and list of UIDs of all children along with other properties to know additional information.",
            "name": "variabiltyNodes"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Tree structure representing variant data. This holds list of a structure VariabiltyNode. Each element will represent UID of the group, family and feature in the response and list of UIDs of all children. For features, no children data is populated.<br />This structure will be populated for current scope or for all scopes based on view\\mode information received in the requestInfo.<br /><br />In Tree Mode &ndash; Single SVR,  parent and child information of all scopes to be populated.<br />In Tree Mode &ndash; Multiple SVR, parent and child information of all scopes to be populated.<br />In existing Mode &ndash; Single SVR, parent and child information of current scope to be populated.And only list of all other parents is sufficient.",
        "isPublished": "false",
        "name": "VariabilityTreeData",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The UID of the object to be rendered. Valid Business object types of UID are as follows: <b>Cfg0AbsFamilyGroup</b>, <b>Cfg0PackageOptionValue</b>, <b>Cfg0AbsValue</b>, <b>Cfg0AbsFamily</b>.",
            "name": "nodeUid"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, the objects are expanded.",
            "name": "isExpanded"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of UIDs of children. Valid Business object types of UID are as follows: <b>Cfg0AbsFamilyGroup</b>, <b>Cfg0PackageOptionValue</b>, <b>Cfg0AbsValue</b>, and <b>Cfg0AbsFamily</b>. In case of free form features there is no business object UID. Value text represents the free form features. In such case this parameter would contain value texts. e.g., if two free form features exist with value 10 and 20 respectively for an integer type free form family, this list would contain two values 10 and 20.",
            "name": "childrenUids"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::StringMap3"
              }
            ],
            "description": "A map (string, list of strings) to store the node specific meta information. For example:<br />1.&nbsp;&nbsp;&nbsp;&nbsp;Allowed selection states in case of guided mode for family as well as feature. Valid key is &ldquo;allowedSelectionStates&rdquo; and valid values are &ldquo;0&rdquo;, &ldquo;1&rdquo;, and &ldquo;2&rdquo;. Where 0 represents no selection, 1 represents positive selection and 2 represents negative selection.<br />2.&nbsp;&nbsp;&nbsp;&nbsp;Current selection state. Valid key is &ldquo;selectionState&rdquo; and valid value is &ldquo;0&rdquo;, &ldquo;1&rdquo;, or &ldquo;2&rdquo;. Where 0 represents no selection, 1 represents positive selection and 2 represents negative selection.<br />3.&nbsp;&nbsp;&nbsp;&nbsp;Whether this node is leaf node or not. Valid key is &ldquo;isLeaf&rdquo; and valid value is &ldquo;true&rdquo; or &ldquo;false&rdquo;. If true, this node is a leaf node and does not have any child nodes. If false, this node is not a leaf node and has child nodes.",
            "name": "props"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Structure representing UID of Object and list of UIDs of all children along with other properties containing additional information.",
        "isPublished": "false",
        "name": "VariabiltyNode",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "The configurator perspective. When this operation is invoked first time, this parameter would be null. But in all subsequent calls, this parameter must be populated with the configurator perspective retrieved in the response.",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The selected object for which variant configurator context to be retrieved. It can be a runtime business object (instance of <b>Awb0Element</b>) or persistent variant configurable business object (instance of <b>Mdl0ConditionalElement</b>). This parameter is ignored if configPerspective is passed in input.",
            "name": "selectedContext"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::VariantRule"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "An optional list of active VariantRule whose expression can be used as input selections for computing next valid selections. The parameter is ignored if the 'selections' is populated.",
            "name": "activeVariantRules"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::vector<std::string>"
              }
            ],
            "description": "A list of UIDs of Scope (<b>Cfg0AbsFamilyGroup</b>, <b>Ptn0Partition</b>) for which the next valid selections must to be retrieved. If this parameter is empty, then option values from model group (<b>Cfg0AbsFamilyGroup</b>) are are retrieved.",
            "name": "scopes"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectedExpressions"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List of all user and system selections for the custom configuration or the configurable object.",
            "name": "selections"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::StringMap"
              }
            ],
            "description": "A map (string, list of strings) represents the payload that is transferred between client and server for the current session. The operation would use the payload as the state information to process the request.<br />The client should pass the same payloadStrings that is returned by previous call if the state information is to be maintained for the current request.<br />Valid map:<br />&quot;violation&quot; -&gt; { &quot;list of nodeIDs of viewModelObject which hold the violation&quot; }",
            "name": "payloadStrings"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::StringMap"
              }
            ],
            "description": "Map (string, string) of request names and value pairs. Allowed names are: <br />-&quot;requestType&quot; : This gives the operation to be handled for the SOA call.   <br />[ &quot;requestType&quot; -&gt; { (&quot;viewPackage&quot;) | (&quot;selectPackage&quot;) | (&quot;addPackage&quot;) | (&quot;cancelPackage&quot;) | (&quot;getConfig&quot;) | (&quot;validate&quot;) | (&quot;switchToManual&quot;) | (&quot;expand&quot;) }]<br />- &quot;selectedPackage&quot; : nodeID of selected package feature object. This is required in case of requestType is one of &quot;viewPackage&quot;, &quot;selectPackage&quot;, &quot;cancelPackage&quot;, &quot;addPackage&quot;.<br />- &quot;configurationControlMode&quot; is the configuration view mode in manual mode invalid selections are allowed.<br />[&quot;configurationControlMode&quot; -&gt; { &quot;guided&quot; | &quot;manual&quot; }]<br />- &quot;severity&quot; : This will give information what all violations you want to show.<br />[&quot;severity&quot; -&gt; { &quot;error&quot; | &quot;warn&quot; | &quot;info&quot; }]<br />-&quot;viewName&quot; : This will hold the current configuration view name.<br />[&quot; viewName&quot; -&gt; { &quot;guidedConfig&quot; | &quot;manualWithError&quot; | &quot;manualWithExpand&quot; | &quot;package&quot;}]",
            "name": "requestInfo"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "The input containing the selected context and selections to fetch the available variability.",
        "isPublished": "false",
        "name": "VariantConfigurationViewIn",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "The configurator perspective. When this operation is invoked first time, this parameter would be null. But in all subsequent calls, this parameter must be populated with the configurator perspective retrieved in the response.",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The selected object for which variant configurator context to be retrieved. It can be a runtime business object (instance of <b>Awb0Element</b>) or persistent variant configurable business object (instance of <b>Mdl0ConditionalElement</b>). This parameter is ignored if configPerspective is passed in input.",
            "name": "selectedContext"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::VariantRule"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "An optional list of active <b>VariantRule</b> whose expression can be used as input selections for computing next valid selections. The parameter is ignored if the 'selections' is populated.",
            "name": "activeVariantRules"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of UIDs of Scope (<b>Cfg0AbsFamilyGroup</b>, <b>Ptn0Partition</b>) for which the next valid selections must to be retrieved. If this parameter is empty, then option values from model group (<b>Cfg0AbsFamilyGroup</b>) are retrieved.",
            "name": "scopes"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::SelectedExpressions"
              }
            ],
            "description": "A map (string, list of <font face=\"courier\" height=\"10\">ApplicationConfigExpressions</font> ) of affected object UID to the list of its selected variant expressions. Affected object is any object for which selections are stored. Valid values for affected object are UIDs of <b>VariantRule</b>, <b>Awb0Element</b> or any configurable object.",
            "name": "selectedExpressions"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::StringMap3"
              }
            ],
            "description": "A map (string, list of strings) represents the payload that is transferred between client and server for the current session. The operation would use the payload as the state information to process the request.<br />The client should pass the same payloadStrings that is returned by previous call if the state information is to be maintained for the current request.<br />Valid map:<br />&quot;violation&quot; -&gt; { &quot;list of nodeIDs of viewModelObject which hold the violation&quot; }",
            "name": "payloadStrings"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::StringMap3"
              }
            ],
            "description": "Map (string, list of strings) of request names and value pairs. <br /><br />1. &quot;configurationControlMode&quot; is the configuration control view.<br />Supported values are: &quot;guided&quot; and &quot;manual&quot;.<br />guided: In this mode, configuration is always valid. This mode is used to configure products by optimizing the required input by pre-populating choices and at the same time provide maximum flexibility to users to get exactly what they want by overriding the system selections.<br />manual: Manual mode does not give system selections unless user validates or applies his configuration.<br /><br />2.&quot;severity&quot;: This gives information what all violations to be returned.<br />Supported values are: &quot;error&quot;, &quot;warn&quot; and &quot;info&quot;.<br /><br />3. &quot;viewName&quot;: This holds the current configuration view name which decides how to display configuration data. Supported values are: &quot;listView&quot; and &quot;treeView&quot;.<br />listView: In this view Configurator data is displayed in simple list format.<br />treeView: In this view Configurator data is displayed in tree format. Families are shown as children of Groups. Features are shown as children of respective families.",
            "name": "requestInfo"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "The input containing the selected context and selections to fetch the available variability.",
        "isPublished": "false",
        "name": "VariantConfigurationViewIn2",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "The configurator perspective. When this operation is invoked first time, this parameter would be null. But in all subsequent calls, this parameter must be populated with the configurator perspective retrieved in the response.",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The selected object for which variant configurator context is to be retrieved. It can be a runtime business object (instance of <b>Awb0Element</b>) or persistent variant configurable business object (instance of <b>Mdl0ConditionalElement</b>). This parameter is ignored if configPerspective is passed in input.",
            "name": "selectedContext"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::VariantRule"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "An optional list of active <b>VariantRule</b> whose expression can be used as input selections for computing next valid selections. The parameter is ignored if the 'selections' is populated.",
            "name": "activeVariantRules"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of UIDs of Scope (<b>Cfg0AbsFamilyGroup</b>, <b>Ptn0Partition</b>) for which the next valid selections is to be retrieved. If this parameter is empty, then option values from model group (<b>Cfg0AbsFamilyGroup</b>) are retrieved.",
            "name": "scopes"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of JSON String consisting of affected object UID as a key to the list of its selected variant expressions as its value. Affected object is any object for which selections are stored. Valid values for affected object are UIDs of <b>VariantRule</b>, <b>Awb0Element</b> or <b>Mdl0ConditionalElement</b>.",
            "name": "selectedExpressions"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::StringMap5"
              }
            ],
            "description": "A map (string, list of strings) represents the payload that is transferred between client and server for the current session. The operation would use the payload as the state information to process the request.<br />The client should pass the same payloadStrings that is returned by previous call if the state information is to be maintained for the current request.<br />Valid map:<br />&ldquo;violation&rdquo; -&gt; { &ldquo;list of nodeIDs of viewModelObject3 which hold the violation&rdquo; }",
            "name": "payloadStrings"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::StringMap5"
              }
            ],
            "description": "A map (string, list of strings) of request names and value pairs. Allowed names are: <br />-&ldquo;requestType&rdquo; : This gives the operation to be handled for the SOA call. <br />[ &ldquo;requestType&rdquo; -&gt; { &ldquo;viewPackage&rdquo; | &ldquo;selectPackage&rdquo; | &ldquo;addPackage&rdquo; | &ldquo;cancelPackage&rdquo; | &ldquo;getConfig&rdquo; | &ldquo;validate&rdquo; | &ldquo;switchToManual&rdquo; | &ldquo;expand&rdquo; }]<br />- &ldquo;selectedPackage&rdquo; : nodeID of selected package feature object. This is required in case of requestType is one of &ldquo;viewPackage&rdquo;, &ldquo;selectPackage&rdquo;, &ldquo;cancelPackage&rdquo;, &ldquo;addPackage&rdquo;.<br />- &ldquo;configurationControlMode&rdquo; is the configuration view mode in manual mode invalid selections are allowed.<br />[&ldquo;configurationControlMode&rdquo; -&gt; { &ldquo;guided&rdquo; | &ldquo;manual&rdquo; }]<br />- &ldquo;severity&rdquo; : This will give information what all violations you want to show.<br />[&ldquo;severity&rdquo; : { &ldquo;error&rdquo; | &ldquo;warn&rdquo; | &ldquo;info&rdquo; }]<br />-&ldquo;viewName&rdquo; : This will hold the current configuration view name.<br />[&ldquo; viewName&rdquo; : { &ldquo;guidedConfig&rdquo; | &ldquo;manualWithError&rdquo; | &ldquo;manualWithExpand&rdquo; | &ldquo;package&rdquo;}]",
            "name": "requestInfo"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "The input containing the selected context and selections to fetch the available variability.",
        "isPublished": "false",
        "name": "VariantConfigurationViewIn3",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "The configurator perspective containing all information about the current Configurator Context, revision rule and effectivity. All further communications with the server to retrieve variant configuration data must use this object.",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::vector<std::string>"
              }
            ],
            "description": "UID of the current expanded group or partition.",
            "name": "scopes"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::Scope"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of all variant option groups available in the current Configurator Context.",
            "name": "allScopes"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectedExpressions"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of SelectedExpressions strutures.",
            "name": "selections"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectionsSummary"
              }
            ],
            "description": "The summary of all selections in displayable format.",
            "name": "selectionsSummary"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::ViewModelObjectLabelMap"
              }
            ],
            "description": "<b>ViewModelObjectLabelMap</b> of labels.",
            "name": "labels"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::StringMap"
              }
            ],
            "description": "A map (string, list of strings) represents the payload that is transferred between client and server for the current session. The operation would use the payload as the state information to process the request.",
            "name": "payloadStrings"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::StringMap"
              }
            ],
            "description": "Map (string, string) of response names and value pairs. Allowed names are:<br />-&quot;requestType&quot; : This gives the operation to be handled for the SOA call.   <br />[ &quot;requestType&quot; -&gt; { (&quot;viewPackage&quot;) | (&quot;selectPackage&quot;) | (&quot;addPackage&quot;) | (&quot;cancelPackage&quot;) | (&quot;getConfig&quot;) | (&quot;validate&quot;) | (&quot;switchToManual&quot;) | (&quot;expand&quot;) }]<br />- &quot;selectedPackage&quot; : nodeID of selected package feature object. This is required in case of requestType is one of &quot;viewPackage&quot;, &quot;selectPackage&quot;, &quot;cancelPackage&quot;, &quot;addPackage&quot;.<br />- &quot;configurationControlMode&quot; is the configuration view mode in manual mode invalid selections are allowed.<br />[&quot;configurationControlMode&quot; -&gt; { &quot;guided&quot; | &quot;manual&quot; }]<br />- &quot;severity&quot; : This will give information what all violations you want to show.<br />[&quot;severity&quot; &#61672; { &quot;error&quot; | &quot;warn&quot; | &quot;info&quot; }]",
            "name": "responseInfo"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Contains the list of all BusinessObjects that make up the output, as well as any errors that might have occurred as part of the service invocation.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "The output containing the available variability for the input list of variant option value selections.",
        "isPublished": "false",
        "name": "VariantConfigurationViewResponse",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "The configurator perspective containing all information about the current Configurator Context, revision rule and effectivity. All further communications with the server to retrieve variant configuration data must use this object.",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "UID of the current expanded group or partition.",
            "name": "scopes"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "serviceData",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariabilityTreeData"
              }
            ],
            "description": "Tree structure representing variant data.",
            "name": "variabilityTreeData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ViewModelObjectMap2"
              }
            ],
            "description": "A map (string, <font face=\"courier\" height=\"10\">ViewModelObject2</font>) of object UID to its <font face=\"courier\" height=\"10\">ViewModelObject2</font>.",
            "name": "viewModelObjectMap"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectionsSummary"
              }
            ],
            "description": "The summary of all selections in displayable format.",
            "name": "selectionsSummary"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::SelectedExpressions"
              }
            ],
            "description": "A map (string, list of <font face=\"courier\" height=\"10\">ApplicationConfigExpressions</font>) of affected object UID to the list of its selected variant expressions. Affected object is any object for which selections are stored. Valid values for affected object are UIDs of <b>VariantRule</b>, <b>Awb0Element</b> or any configurable object.",
            "name": "selectedExpressions"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ViewModelObjectLabelMap2"
              }
            ],
            "description": "<font face=\"courier\" height=\"10\">ViewModelObjectLabelMap</font> of labels.",
            "name": "labels"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ViolationCombo"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "Structure representing a single problem\\violation and its contributing user selections as well contributing rules.",
            "name": "violationCombo"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::StringMap3"
              }
            ],
            "description": "A map (string, list of strings) represents the payload that is transferred between client and server for the current session. The operation would use the payload as the state information to process the request.",
            "name": "payloadStrings"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::StringMap3"
              }
            ],
            "description": "Map (string, string) of response names and value pairs. Allowed names are:<br />-&quot;requestType&quot; : This gives the operation to be handled for the SOA call.   <br />[ &quot;requestType&quot; -&gt; { (&quot;viewPackage&quot;) | (&quot;selectPackage&quot;) | (&quot;addPackage&quot;) | (&quot;cancelPackage&quot;) | (&quot;getConfig&quot;) | (&quot;validate&quot;) | (&quot;switchToManual&quot;) | (&quot;expand&quot;) }]<br />- &quot;selectedPackage&quot; : nodeID of selected package feature object. This is required in case of requestType is one of &quot;viewPackage&quot;, &quot;selectPackage&quot;, &quot;cancelPackage&quot;, &quot;addPackage&quot;.<br />- &quot;configurationControlMode&quot; is the configuration view mode in manual mode invalid selections are allowed.<br />[&quot;configurationControlMode&quot; -&gt; { &quot;guided&quot; | &quot;manual&quot; }]<br />- &quot;severity&quot; : This will give information what all violations you want to show.<br />[&quot;severity&quot; &#61672; { &quot;error&quot; | &quot;warn&quot; | &quot;info&quot; }]",
            "name": "responseInfo"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "The output containing the available variability for the input list of variant option value selections.",
        "isPublished": "false",
        "name": "VariantConfigurationViewResponse2",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "The configurator perspective containing all information about the current Configurator Context, revision rule and effectivity. All further communications with the server to retrieve variant configuration data must use this object.",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of UIDs of currently expanded scope (<b>Cfg0AbsFamilyGroup</b>, <b>Ptn0Partition</b>).",
            "name": "scopes"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Contains the list of all BusinessObjects that make up the output, as well as any errors that might have occurred as part of the service invocation.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariabiltyNode"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of VariabiltyNode representing variant data. Each element will represent UID of the group (<b>Cfg0AbsFamilyGroup</b>), family (<b>Cfg0AbsFamily</b>) or feature (<b>Cfg0AbsValue</b>) in the response and list of UIDs of all children. For features (<b>Cfg0AbsValue</b>), no children data is populated.<br />This structure will be populated for current scope or for all scopes based on view or mode information received in the requestInfo.",
            "name": "variabilityTreeData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ViewModelObjectMap5"
              }
            ],
            "description": "A map (string, ViewModelObject3) of object UIDs of <b>Cfg0AbsConfiguratorWSO</b> to its ViewModelObject3.",
            "name": "viewModelObjectMap"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectionsSummary"
              }
            ],
            "description": "The summary of all selections in displayable format.",
            "name": "selectionsSummary"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of JSON strings consisting of affected object UID as a key to the list of selected variant expressions as its value. Affected object is any object for which selections are stored. Valid values for affected objects are: UIDs of <b>VariantRule</b>, <b>Awb0Element</b>.<br /><br />Selected expressions JSON has following schema:<br />{&lt;Object ID&gt;: {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exprId: &quot;String&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exprType: Number<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; formula: &quot;String&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; configExprSets: [{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; configExprSections: [{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exprType: Number<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; formula: &quot;String&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; subExpressions: [{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; configExpressionGroupMap: {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;FamilyUid&gt;: [{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; family: &quot;String&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; familyID: &quot;String&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; familyNamespace:&quot;String&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nodeUid: &quot;String&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; props: [Array]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; selectionState: Number<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; valueText: &quot;String<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }]&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp; }<br />}",
            "name": "selectedExpressions"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ViewModelObjectLabelMap3"
              }
            ],
            "description": "ViewModelObjectLabelMap of labels.",
            "name": "labels"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ViolationCombo"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "Structure representing a single problem\\violation and its contributing user selections as well contributing rules.",
            "name": "violationCombo"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::StringMap5"
              }
            ],
            "description": "A map (string, list of strings) represents the payload that is transferred between client and server for the current session. The operation would use the payload as the state information to process the request.",
            "name": "payloadStrings"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::StringMap5"
              }
            ],
            "description": "A map (string, list of strings) of response names and value pairs. Supported names are:<br />&ldquo;requestType&rdquo; : This gives the operation to be handled for the SOA call. <br />[ &ldquo;requestType&rdquo; : { &ldquo;viewPackage&rdquo; | &ldquo;selectPackage&rdquo; | &ldquo;addPackage&rdquo; | &ldquo;cancelPackage&rdquo; | &ldquo;getConfig&rdquo; | &ldquo;validate&rdquo; | &ldquo;switchToManual&rdquo; | &ldquo;expand&rdquo; }]<br />- &ldquo;selectedPackage&rdquo; : nodeID of selected package feature object. This is required in case of requestType is one of: &ldquo;viewPackage&rdquo;, &ldquo;selectPackage&rdquo;, &ldquo;cancelPackage&rdquo;, &ldquo;addPackage&rdquo;.<br />- &ldquo;configurationControlMode&rdquo;: It is the configuration view mode in manual mode invalid selections are allowed.<br />[&ldquo;configurationControlMode&rdquo; -&gt; {&ldquo;guided&rdquo; | &ldquo;manual&rdquo; }]<br />- &ldquo;severity&rdquo;: This will give information what all violations you want to show.<br />[&ldquo;severity&rdquo;: { &ldquo;error&rdquo; | &ldquo;warn&rdquo; | &ldquo;info&rdquo; }]",
            "name": "responseInfo"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "The output containing the available variability for the input list of variant option value selections.",
        "isPublished": "false",
        "name": "VariantConfigurationViewResponse3",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ConfigExpressionGroup"
              }
            ],
            "description": "Map (string, list of <font face=\"courier\" height=\"10\">ConfigExpressionTerms</font>) of all option values selected by user per family. <br />Here key is the UID of the family (<b>Cfg0AbsFamily</b>). For unconfigured and unassigned families, key is namespace and display name of the family.",
            "name": "configExpressionGroupMap"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Structure containing map (string, list of <font face=\"courier\" height=\"10\">ConfigExpressionTerms</font>) of all option values selected by user per <b>Cfg0AbsFamily</b>.",
        "isPublished": "false",
        "name": "ConfigSubExpression",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The configurator context provider object. It is optional. If not null, it is used to find configurator context object. Valid input types are <b>ItemRevision</b>, <b>Awb0Element</b> and <b>Mdl0ConditionalElement</b>. This parameter is ignored if configContext or configPerspective parameters are passed.",
            "name": "configContextProvider"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::WorkspaceObject"
              }
            ],
            "description": "The variant configurator context. Valid input types are Item or ItemRevision. This parameter is ignored if the configPerspective parameter is passed.",
            "name": "configContext"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "Input Cfg0ConfiguratorPerspective. It is optional. Cfg0ConfiguratorPerspective object is used as communication mechanism for the configuration and the valid configurator contexts across the Product Configurator and its consuming applications such as 4G Designer, Structure Manager. If it is empty then the config perspective is obtained from the selected objects.",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of selected business objects. If this parameter is empty then currentExpandedFamilies and configPerspective should be provided. The supported business object types are Awb0Element, Mdl0ConditionalElement and variant configurable business objects - BOMLine, VariantRule.",
            "name": "selectedObjects"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::vector<std::string>"
              }
            ],
            "description": "The list of expanded option families. If the input contains only currentExpandedFamilies and configPerspective as non-empty input then operation will return only the Option values of the provided families.",
            "name": "currentExpandedFamilies"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantExpressionFilters"
              }
            ],
            "description": "The input filters that govern the option family and value response. For instance input filter may contain option filter ('showCurrentElements', 'showFamilies' ) or intent filters (from Cfg0ObjectIntentions List Of Values).",
            "name": "filters"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "The input structure for the getVariantExpressionData operation containing either the selected objects or current expanded families and optionally containing configurator context, configurator perspective, and variant expression filters.",
        "isPublished": "false",
        "name": "VariantExpressionDataInput",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The configurator context provider object. It is optional. If not null, it is used to find configurator context object. Valid input types are <b>ItemRevision</b>, <b>Awb0Element</b> and <b>Mdl0ConditionalElement</b>. This parameter is ignored if configContext or configPerspective parameters are passed.",
            "name": "configContextProvider"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::WorkspaceObject"
              }
            ],
            "description": "The variant configurator context. Valid input types are <b>Item</b> or <b>ItemRevision</b>. This parameter is ignored if the configPerspective parameter is passed.",
            "name": "configContext"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "Input <b>Cfg0ConfiguratorPerspective</b>. It is optional. <b>Cfg0ConfiguratorPerspective</b> object is used as communication mechanism for the configuration and the valid configurator contexts across the Product Configurator and its consuming applications such as 4G Designer, Structure Manager. If it is null, then the config perspective is obtained from the selected objects.",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of selected business objects. If this parameter is empty then currentExpandedFamilies and configPerspective should be provided. The supported business object types are <b>Awb0Element</b>, <b>Mdl0ConditionalElement</b> and variant configurable business objects - <b>BOMLine</b>, <b>VariantRule</b>.",
            "name": "selectedObjects"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::vector<std::string>"
              }
            ],
            "description": "The list of expanded option families. If the input contains only currentExpandedFamilies and configPerspective as non-empty input then operation will return only the Option values of the provided families.",
            "name": "currentExpandedFamilies"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantExpressionFilters"
              }
            ],
            "description": "The input filters that govern the option family and value response. For instance, input filter may contain option filter (showCurrentElements&rsquo; or &lsquo;showFamilies&rsquo;) or list of intent filters (from <b>Cfg0ObjectIntentions</b> List of Values). <b>Cfg0ObjectIntentions</b> is the name of List of Values (LOV) which defines intents associated.",
            "name": "filters"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::StringMap3"
              }
            ],
            "description": "A map (string, list of strings) of request names and value pairs. <br /><br />1. &ldquo;configurationControlMode&rdquo;:  This the configuration control view.<br />Supported values are: &ldquo;guided&rdquo; and &ldquo;manual&rdquo;.<br />guided: In this mode, configuration is always valid. This mode is used to configure products by optimizing the required input by pre-populating choices and at the same time provide maximum flexibility to users to get exactly what they want by overriding the system selections.<br />manual: Manual mode does not give system selections unless user validates or applies his configuration.<br /><br />2.&ldquo;severity&rdquo;: This gives information what all violations to be returned.<br />Supported values are: &ldquo;error&rdquo;, &ldquo;warn&rdquo; and &ldquo;info&rdquo;.<br /><br />3.&ldquo;viewName&rdquo;: This holds the current configuration view name which decides how to display configuration data. Supported values are: &ldquo;listView&rdquo; and &ldquo;treeView&rdquo;.<br />listView: In this view Configurator data is displayed in simple list format.<br />treeView: In this view Configurator data is displayed in tree format. Families are shown as children of Groups. Features are shown as children of respective families.",
            "name": "requestInfo"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "The input structure for the getVariantExpressionData operation containing either the selected objects or current expanded families and optionally containing configurator context, configurator perspective, and variant expression filters.",
        "isPublished": "false",
        "name": "VariantExpressionDataInput2",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2017_12::ConfiguratorManagement::OptionFamily"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List of option Families.",
            "name": "optionFamilies"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::SelectedExpression"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of selections of all option values that form the expression on the input object. If the expression has split then there will be more than one SelectedExpression structure with same affectedObject UID.",
            "name": "selectedExpression"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "Output configurator perspective. Configurator Perspective object is used as communication mechanism for the configuration and the valid configurator contexts across the Product Configurator and its consuming applications such as 4G Designer, Structure Manager.",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantExpressionFilters"
              }
            ],
            "description": "The filters applied on the output to render the option families and values.",
            "name": "filters"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Service Data containing partial errors, if any.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "Variant expression response for the selected objects.",
        "isPublished": "false",
        "name": "VariantExpressionDataResponse",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariabilityTreeData"
              }
            ],
            "description": "Tree structure representing variant data.",
            "name": "variabilityTreeData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ViewModelObjectMap2"
              }
            ],
            "description": "A map (string, <b>ViewModelObject2</b>) of object UID to its <b>ViewModelObject2</b> object.",
            "name": "viewModelObjectMap"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::SelectedExpressions"
              }
            ],
            "description": "A map (string, list of ApplicationConfigExpressions) of affected object UID to the list of its selected variant expressions. Affected object is any object for which selections are stored. Valid values for affected object are UIDs of <b>VariantRule</b>, <b>Awb0Element</b> or any other object which have variant configurable behavior attached.",
            "name": "selectedExpressions"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "Output configurator perspective. Configurator Perspective object is used as communication mechanism for the configuration and the valid configurator contexts across the Product Configurator and its consuming applications such as 4G Designer, Structure Manager.",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantExpressionFilters"
              }
            ],
            "description": "The filters applied on the output to render the option families and values.",
            "name": "filters"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::StringMap3"
              }
            ],
            "description": "Map (string, list of strings) of response names and value pairs. <br />1. &quot;configurationControlMode&quot; is the configuration control view.<br />Supported values are: &quot;guided&quot; and &quot;manual&quot;.<br />guided: In this mode, configuration is always valid. This mode is used to configure products by optimizing the required input by pre-populating choices and at the same time provide maximum flexibility to users to get exactly what they want by overriding the system selections.<br />manual: Manual mode does not give system selections unless user validates or applies his configuration.<br /><br />2.&quot;severity&quot;: This gives information what all violations to be returned.<br />Supported values are: &quot;error&quot;, &quot;warn&quot; and &quot;info&quot;.<br /><br />3. &quot;viewName&quot;: This holds the current configuration view name which decides how to display configuration data. Supported values are: &quot;listView&quot; and &quot;treeView&quot;.<br />listView: In this view Configurator data is displayed in simple list format.<br />treeView: In this view Configurator data is displayed in tree format. Families are shown as children of Groups. Features are shown as children of respective families.",
            "name": "responseInfo"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Service Data containing partial errors, if any.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Variant expression response for the selected objects.",
        "isPublished": "false",
        "name": "VariantExpressionDataResponse2",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariabiltyNode"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of VariabiltyNode representing variant data.",
            "name": "variabilityTreeData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ViewModelObjectMap5"
              }
            ],
            "description": "A map (string, ViewModelObject3) of object UID to its ViewModelObject3 object.",
            "name": "viewModelObjectMap"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of JSON string consisting of affected object UID as key to the list of its selected variant expressions as its value. Affected object is any object for which selections are stored. Valid values for affected object are UIDs of VariantRule, Awb0Element or any other object which have variant configurable behavior attached.<br /><br />Selected expressions JSON has following schema:<br />{&lt;Object ID&gt;: {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  exprId: &quot;String&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  exprType: Number<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  formula: &quot;String&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  configExprSets: [{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   configExprSections: [{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  exprType: Number<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  formula: &quot;String&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  subExpressions: [{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   configExpressionGroupMap: {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &lt;FamilyUid&gt;: [{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; family: &quot;String&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; familyID: &quot;String&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; familyNamespace:&quot;String&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nodeUid: &quot;String&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; props: [Array]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; selectionState: Number<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; valueText: &quot;String<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }]&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;   }<br />}",
            "name": "selectedExpressions"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
              }
            ],
            "description": "Output configurator perspective. Configurator Perspective object is used as communication mechanism for the configuration and the valid configurator contexts across the Product Configurator and its consuming applications such as 4G Designer, Structure Manager.",
            "name": "configPerspective"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::VariantExpressionFilters"
              }
            ],
            "description": "The filters applied on the output to render the option families and values.",
            "name": "filters"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::StringMap5"
              }
            ],
            "description": "Map (string, list of strings) of response names and value pairs. <br />1. &quot;configurationControlMode&quot; is the configuration control view.<br />Supported values are: &quot;guided&quot; and &quot;manual&quot;.<br />guided: In this mode, configuration is always valid. This mode is used to configure products by optimizing the required input by pre-populating choices and at the same time provide maximum flexibility to users to get exactly what they want by overriding the system selections.<br />manual: Manual mode does not give system selections unless user validates or applies his configuration.<br /><br />2.&quot;severity&quot;: This gives information what all violations to be returned.<br />Supported values are: &quot;error&quot;, &quot;warn&quot; and &quot;info&quot;.<br /><br />3. &quot;viewName&quot;: This holds the current configuration view name which decides how to display configuration data. Supported values are: &quot;listView&quot; and &quot;treeView&quot;.<br />listView: In this view Configurator data is displayed in simple list format.<br />treeView: In this view Configurator data is displayed in tree format. Families are shown as children of Groups. Features are shown as children of respective families.",
            "name": "responseInfo"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Service Data containing partial errors, if any.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "Variant expression response for the selected objects.",
        "isPublished": "false",
        "name": "VariantExpressionDataResponse3",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of Intent filters. The valid values are the <b>Cfg0ObjectIntentions</b> List of Values. <b>Cfg0ObjectIntentions</b> is the name of List Of Values (LOV) which defines intents associated with it.",
            "name": "intentFilters"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Option output filter. Valid values are 'showCurrentElements', 'showFamilies'.",
            "name": "optionFilter"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "Variant expression filter structure containing intent filters and option filter.",
        "isPublished": "false",
        "name": "VariantExpressionFilters",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The variantObjectID from the input <b>VariantObject</b>.",
            "name": "variantObjectUid"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The boolean expression in Teamcenter format.",
            "name": "tcFormula"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The boolean expression in displayable format.",
            "name": "displayFormula"
          }
        ],
        "createRelease": "Awp05.2.0",
        "description": "Struct to contain Teamcenter formula and Displayable formula for given variant object identifier.",
        "isPublished": "false",
        "name": "VariantFormulae",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "ID to uniquely identify <b>VariantObject</b> input.",
            "name": "variantObjectId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Teamcenter UID of affected object.",
            "name": "affecteObjectUid"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ApplicationConfigExpression"
              }
            ],
            "description": "Not used at this time.",
            "name": "expression"
          }
        ],
        "createRelease": "Awp05.2.0",
        "description": "Struct to contain affected object and expression with respect to given identifier. User should provide either affectedObjectUid or expression. If affectedObjectUid is provided, expression is ignored. variantObjectId is mandatory input.",
        "isPublished": "false",
        "name": "VariantObject",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::WorkspaceObject"
              }
            ],
            "description": "WorkspaceObject to be rendered.",
            "name": "wsObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The UID of the object to be rendered. Valid values are either valid UIDs of configurable object along with context UIDs.",
            "name": "sourceUid"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The display name of the object.",
            "name": "displayName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Type of the ViewModelObject. Valid values are following Business object types: Cfg0AbsFamilyGroup, Cfg0PackageOptionValue, Cfg0AbsValue, Cfg0AbsFamily.",
            "name": "sourceType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::StringMap"
              }
            ],
            "description": "Map of (string, list of strings) ViewModelObject property and value.<br />Valid keys: &quot;isFreeForm&quot;, &quot;isMultiSelect&quot;, &quot;isPackage&quot;.",
            "name": "props"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "The generic object that is used in this SOA request and response.<br />User facing object that is used by the client of this SOA. It encapsulates a model object in server side.<br />This object represent each object which is visible on UI like Scope, Feature, OptionFamily.",
        "isPublished": "false",
        "name": "ViewModelObject",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The UID of the object to be rendered. Valid values are either valid UIDs of configurable object along with context UIDs.",
            "name": "sourceUid"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The display name of the object.",
            "name": "displayName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Type of the <font face=\"courier\" height=\"10\">ViewModelObject</font>2. Valid values are following Business object types: <b>Cfg0AbsFamilyGroup</b>, <b>Cfg0PackageOptionValue</b>, <b>Cfg0AbsValue</b>, <b>Cfg0AbsFamily</b>.",
            "name": "sourceType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::StringMap3"
              }
            ],
            "description": "Map (string, list of strings) of <font face=\"courier\" height=\"10\">ViewModelObject</font>2 property and value. Valid keys are: &quot;isFreeForm&quot;, &quot;isMultiSelect&quot;, &quot;isPackage&quot;",
            "name": "props"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "The generic object that is used to represent a single user facing object and its properties.<br />It encapsulates a model object in server side.<br />This object represents each object which is visible on UI like Scope, Feature, OptionFamily.",
        "isPublished": "false",
        "name": "ViewModelObject2",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariabilityTreeData"
              }
            ],
            "description": "Tree structure representing variant data. This holds list of a structure VariabiltyNode. Each element will represent UID of the group, family and feature in the response and list of UIDs of all children. For features, no children data is populated.",
            "name": "variabilityTreeData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::ViewModelObjectMap4"
              }
            ],
            "description": "A map (string, ViewModelObject2) of object UID to its ViewModelObject2 object.",
            "name": "viewModelObjectMap"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "ServiceData containing partial errors, if any.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp06.1.0",
        "description": "Output struct to contain the list of created objects and its siblings in sorted order. This list filtered and sorted based on the input to <b>createAndAddObjects</b> operation. Objects are also configured based on configuration settings such as revision rule, rule date and effectivity on the input perspective. ClientIDs of failed create object requests are also returned.",
        "isPublished": "false",
        "name": "CreateAndAddObjectsResponse",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The UID of <b>Cfg0AbsFamilyGroup</b>, <b>Cfg0PackageOptionValue</b>, <b>Cfg0AbsValue</b>, <b>Cfg0AbsFamily</b> to be rendered.",
            "name": "sourceUid"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The display name of the object.",
            "name": "displayName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Type of the Business Object represented by this structure. Valid Business object types are: <b>Cfg0AbsFamilyGroup</b>, <b>Cfg0PackageOptionValue</b>, <b>Cfg0AbsValue</b>, <b>Cfg0AbsFamily</b>.",
            "name": "sourceType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::StringMap5"
              }
            ],
            "description": "Map (string, list of strings) of <font face=\"courier\" height=\"10\">ViewModelObject3</font> property and value. Valid keys are: &quot;isFreeForm&quot;, &quot;isMultiSelect&quot;, &quot;isPackage&quot;. Valid value is &quot;true&quot;.  Caller must check the presence of the key in map and iIf any of the key is not present in map, caller must default the value to &quot;false&quot;.",
            "name": "props"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "A JSON string  containing the View Model Object (VMO) representation in Active Workspace Client.<br />JSON schema is as follow:<br />{<br />   &quot;type&quot;: &quot;String&quot;,<br />   &quot;uid&quot;: &quot;String&quot;,&nbsp;&nbsp;&nbsp;&nbsp;  <br />   &quot;props&quot;: {  &quot;String&quot;: {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &quot;srcObjLsd&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &quot;hasLOV&quot;: &quot;boolean&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &quot;isArray&quot;: &quot;boolean&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &quot;isEditable&quot;: &quot;boolean&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &quot;isEnabled&quot;: &quot;boolean&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &quot;isModifiable&quot;: &quot;boolean&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &quot;maxLength&quot;: &quot;integer&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &quot;parentUid&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &quot;dbValues&quot;: [&quot;String&quot;],<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &quot;uiValues&quot;: [&quot;String&quot;],&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &quot;propertyDisplayName&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &quot;propertyName&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &quot;srcObjectTypeName&quot;: &quot;String&quot;,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &quot;type&quot;: &quot;Integer&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;   }<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}",
            "name": "viewModelObject"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "The generic structure that is used to represent a single user facing object and its properties.<br />It encapsulates a model object in server side.<br />This structure represents each object which is visible on in the  UI like group (<b>Cfg0AbsFamilyGroup</b>), family (<b>Cfg0AbsFamily</b>) and feature (<b>Cfg0AbsValue</b>).",
        "isPublished": "false",
        "name": "ViewModelObject3",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::ViewModelObjectMap"
              }
            ],
            "description": "Map of string, vector&lt;ViewModelObject&gt; ViewModelObject.",
            "name": "nodeMap"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "ViewModelObjectLabelType will be used in ViewModelObjectLabelMap to get the violation and package information.",
        "isPublished": "false",
        "name": "ViewModelObjectLabelType",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "int"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of severities of violations found during validation. Valid values of severities are:<br />1 &ndash; A constraint with INFORMATION severity is assigned this value.<br />2 &ndash; A constraint with WARNING severity is assigned this value.<br />4 &ndash; A constraint with ERROR severity is assigned this value.",
            "name": "severities"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of messages of violations found during validation.",
            "name": "messages"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "This structure contains list of severities and messages for violations.",
        "isPublished": "false",
        "name": "Violation",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::UserSelection"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of user selections contributing to violation.",
            "name": "userSelections"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of UIDs of contributing rules.  More information is retrieved from <font face=\"courier\" height=\"10\">ViewModelObject2</font>.",
            "name": "ruleUids"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::StringMap3"
              }
            ],
            "description": "A map (string, list of strings) to store meta information about selections or rules. For example, when the rule does not have access <font face=\"courier\" height=\"10\">props</font> contains message as 'access denied'.",
            "name": "props"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Structure representing a single problem\\violation and its contributing user selections as well contributing rules.",
        "isPublished": "false",
        "name": "ViolationCombo",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::VariabiltyNode"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of <font face=\"courier\" height=\"10\">VariabiltyNode</font> representing variant data. Each element will represent UID of the group (<b>Cfg0AbsFamilyGroup</b>), family (<b>Cfg0AbsFamily</b>) or feature (<b>Cfg0AbsValue</b>) in the response and list of UIDs of all children. For features (<b>Cfg0AbsValue</b>), no children data is populated.",
            "name": "variabilityTreeData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ViewModelObjectMap5"
              }
            ],
            "description": "A map (string, <font face=\"courier\" height=\"10\">ViewModelObject3</font>) of object UID to its <font face=\"courier\" height=\"10\">ViewModelObject3</font> object.",
            "name": "viewModelObjectMap"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "ServiceData containing partial errors, if any.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "Output struct to contain the list of created objects and its siblings in sorted order. This list filtered and sorted based on the input to createAndAddObjects2 operation. Objects are also configured based on configuration settings such as revision rule, rule date and effectivity on the input perspective. ClientIDs of failed create object requests are also returned.",
        "isPublished": "false",
        "name": "CreateAndAddObjectsResponse2",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Identifier that helps the client to keep the track of successfully created or failed object(s). It&rsquo;s a mandatory input.",
            "name": "clientID"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::CreateInput"
              }
            ],
            "description": "Struct used to capture the inputs required for creation of a business object.",
            "name": "createIn"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement::CreateInput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List of struct used to capture the inputs required for creation of child business objects.",
            "name": "childCreateInputs"
          }
        ],
        "createRelease": "Awp06.1.0",
        "description": "Struct used to capture the inputs required for creation of the business object and its children. Operation supports creation of the <b>Cfg0AbsConfiguratorWSO</b>.",
        "isPublished": "false",
        "name": "CreateInput",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Identifier that helps the client to keep the track of successfully created or failed object(s). It is a mandatory input.",
            "name": "clientID"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO"
              }
            ],
            "description": "<b>Cfg0AbsConfiguratorWSOVariability</b> object to be reused.",
            "name": "variabilityObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::CreateInput"
              }
            ],
            "description": "Structure used to capture the inputs required for creation of a business object.",
            "name": "createIn"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::CreateInput2"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of <font face=\"courier\" height=\"10\">CreateInput2</font> structure used to capture the inputs required for creation of child business objects.",
            "name": "childCreateInputs"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "Struct used to capture the inputs required for creation of the business object and its children. Operation supports creation of the <b>Cfg0AbsConfiguratorWSO</b>.",
        "isPublished": "false",
        "name": "CreateInput2",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      }
    ],
    "TcVersion": "tc14000.0.0",
    "Typedef": [
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ValidateProductConfigurationOutput2"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "It is a map containing information about the result of validate product configuration for the corresponding affected object.",
        "isPublished": "false",
        "name": "AffectedObjectToValidateProductConfiguration",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ValidateProductConfigurationOutput3"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "A map (string, ValidateProductConfigurationOutput3) containing the selected object UID to its ValidateProductConfigurationOutput3 response structure.",
        "isPublished": "false",
        "name": "AffectedObjectToValidateProductConfiguration3",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "Map (string, list of strings) to hold any property and its values.",
        "isPublished": "false",
        "name": "StringMap5",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2017_12::ConfiguratorManagement::OptionValueSelection"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "Map(string, OptionValueSelection) of all option values selected by user per family.",
        "isPublished": "false",
        "name": "UserSelectionMap2",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::Violation"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "A map (string, Violations) of all violated values.",
        "isPublished": "false",
        "name": "ValueToViolations",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::Violation"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "A map (string, Violations) of all violated values.",
        "isPublished": "false",
        "name": "ValueToViolations2",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::Violation"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "A map (string, Violations) of all violated values.",
        "isPublished": "false",
        "name": "ValueToViolations3",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::ViewModelObjectLabelType"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "Map of string, and list of ViewModelObjectLabelType which will hold ViewModelObjects for violations and package.<br /><br />The valid keys are &ldquo;violations&rdquo;, &ldquo;package&rdquo;<br />The value is ViewModelObjectLabelType which contains the ViewModelObjects in a map where key names are nodeID and values are corresponding &ldquo;violation&rdquo; or &ldquo;package&rdquo; ViewModelObjects.",
        "isPublished": "false",
        "name": "ViewModelObjectLabelMap",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::ViewModelObjectLabelType"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Map (string, list of ViewModelObjectLabelType) which will hold <font face=\"courier\" height=\"10\">ViewModelObjects</font> for violations and package.<br /><br />The valid keys are &ldquo;violations&rdquo;, &ldquo;package&rdquo;<br />The value is ViewModelObjectLabelType which contains the <font face=\"courier\" height=\"10\">ViewModelObjects</font> in a map where key names are nodeID and values are corresponding &ldquo;violation&rdquo; or &ldquo;package&rdquo;<font face=\"courier\" height=\"10\"> ViewModelObjects</font>.",
        "isPublished": "false",
        "name": "ViewModelObjectLabelMap2",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::ViewModelObjectLabelType"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "A map (string, list of ViewModelObjectLabelType3) which will hold ViewModelObject3 for violations and package.<br /><br />The valid keys are &ldquo;violations&rdquo;, &ldquo;package&rdquo;.<br />The value is ViewModelObjectLabelType3 which contains the ViewModelObject3 in a map where key names are nodeID and values are corresponding &ldquo;violation&rdquo; or &ldquo;package&rdquo; ViewModelObject3.",
        "isPublished": "false",
        "name": "ViewModelObjectLabelMap3",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::ViewModelObject"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "Map of string and list of ViewModelObject. The key represents the nodeID of the ViewModelObject.<br />This map is useful for the client to obtain ViewModelObject from labels structure given a nodeID.<br />For example: The server will send the response of labelInfo Map in Feature structure containing violations in the following format, <br />labelInfo[&ldquo;violations&rdquo;] = [ &ldquo;nodeID1&rdquo;, &ldquo;nodeID3&rdquo;, &ldquo;nodeID5&rdquo; ]<br />The client will use the nodeIDs list and look into the ViewModelObjectMap of the &ldquo;violations&rdquo; label and fetch the corresponding ViewModelObject for the given nodeID.",
        "isPublished": "false",
        "name": "ViewModelObjectMap",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ViewModelObject2"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Map (string, <font face=\"courier\" height=\"10\">ViewModelObject</font>2) of all config Objects. <br />The key represents the UID of the <font face=\"courier\" height=\"10\">ViewModelObject</font>2.<br />This map is useful for the client to obtain <font face=\"courier\" height=\"10\">ViewModelObject</font>2 properties like its type, display name and other properties.",
        "isPublished": "false",
        "name": "ViewModelObjectMap2",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ConfigExpressionTerm"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Map (string, list of <font face=\"courier\" height=\"10\">ConfigExpressionTerms</font>) of all option values selected by user per family. <br />Here key is the UID of the family (<b>Cfg0AbsFamily</b>). For unconfigured and unassigned families, key is namespace and display name of the family.",
        "isPublished": "false",
        "name": "ConfigExpressionGroup",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ViewModelObject2"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp05.2.0",
        "description": "Map (string, <font face=\"courier\" height=\"10\">ViewModelObject2</font>) of all config Objects. <br />The key represents the UID of the <font face=\"courier\" height=\"10\">ViewModelObject2</font>.<br />This map is useful for the client to obtain <font face=\"courier\" height=\"10\">ViewModelObject2</font> properties like its type, display name and other properties.",
        "isPublished": "false",
        "name": "ViewModelObjectMap3",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2021_06::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ViewModelObject2"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp06.1.0",
        "description": "Map (string, ViewModelObject2) of all config Objects. <br />The key represents the UID of the ViewModelObject2.<br />This map is useful for the client to obtain ViewModelObject2 properties like its type, display name and other properties.",
        "isPublished": "false",
        "name": "ViewModelObjectMap4",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement::ViewModelObject3"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp06.2.0",
        "description": "A map (string, <font face=\"courier\" height=\"10\">ViewModelObject3</font>) of all config Objects. <br />The key represents the UID of the <font face=\"courier\" height=\"10\">ViewModelObject3</font>.<br />This map is useful for the client to obtain <font face=\"courier\" height=\"10\">ViewModelObject3</font> properties like its type, display name and other properties.",
        "isPublished": "false",
        "name": "ViewModelObjectMap5",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "bool"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "A map of ( std::string, bool ) indicating various family options and their values.",
        "isPublished": "false",
        "name": "FamilyOptionMap",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2017_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "int"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "Map(string, int) of all family selected by user.",
        "isPublished": "false",
        "name": "FamilySelectionMap",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement::ApplicationConfigExpression"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Map (string , list of variant expressions). Here, key is UID of the affected object for which selections are stored. Display name and other properties of affected object are stored in <font face=\"courier\" height=\"10\">ViewModelObjectMap2</font>.",
        "isPublished": "false",
        "name": "SelectedExpressions",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement::Selection"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "Map of OptionFamily nodeID and list of Selections.<br />Map key will hold the nodeID of the OptionFamily and values contain the Selection list for features of the family.",
        "isPublished": "false",
        "name": "SelectionMap",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "std::vector<std::string>"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp04.0.0",
        "description": "Map of string and list of strings.",
        "isPublished": "false",
        "name": "StringMap",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2018_05::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Map (string, list of strings) to hold any property and its values.",
        "isPublished": "false",
        "name": "StringMap3",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2020_12::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp06.1.0",
        "description": "Map (string, list of strings) to hold any property and its values.",
        "isPublished": "false",
        "name": "StringMap4",
        "namespace": "Pca0::Soa::Internal::ProductConfiguratorAw::_2022_06::ConfiguratorManagement",
        "scope": "Pca0::Soa::ProductConfiguratorAw::ConfiguratorManagement"
      }
    ],
    "xmlns": "http://teamcenter.com/BusinessModel/TcBusinessData"
  }
