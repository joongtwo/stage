{
  "BusinessObjectInterface": [
    {
      "createRelease": "tc8000.3.0",
      "description": "Interface Name for Business Object Civ0COM4",
      "libraryName": "contmgmts1000d40",
      "name": "Civ0COM4",
      "namespace": "contmgmts1000d40",
      "primaryInterface": "true",
      "typeName": "Civ0COM4"
    },
    {
      "createRelease": "tc8000.3.0",
      "description": "Interface Name for Business Object Civ0DM4",
      "libraryName": "contmgmts1000d40",
      "name": "Civ0DM4",
      "namespace": "contmgmts1000d40",
      "primaryInterface": "true",
      "typeName": "Civ0DM4"
    },
    {
      "createRelease": "tc8000.3.0",
      "description": "Interface Name for Business Object Civ0PM4",
      "libraryName": "contmgmts1000d40",
      "name": "Civ0PM4",
      "namespace": "contmgmts1000d40",
      "primaryInterface": "true",
      "typeName": "Civ0PM4"
    },
    {
      "createRelease": "tc9000.1.0",
      "description": "Interface Name for Business Object Civ0SCOCntPkg",
      "libraryName": "contmgmts1000d40",
      "name": "Civ0SCOCntPkg",
      "namespace": "contmgmts1000d40",
      "primaryInterface": "true",
      "typeName": "Civ0SCOCntPkg"
    },
    {
      "createRelease": "tc9000.1.0",
      "description": "Interface Name for Business Object Civ0SCOEntry",
      "libraryName": "contmgmts1000d40",
      "name": "Civ0SCOEntry",
      "namespace": "contmgmts1000d40",
      "primaryInterface": "true",
      "typeName": "Civ0SCOEntry"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Civ0SNSRootNodeRevision",
      "libraryName": "contmgmts1000d40",
      "name": "Civ0SNSRootNodeRevision",
      "namespace": "contmgmts1000d40",
      "primaryInterface": "true",
      "typeName": "Civ0SNSRootNodeRevision"
    },
    {
      "createRelease": "tc10000.1.1",
      "description": "Interface Name for Business Object Civ0UpdateFile",
      "libraryName": "contmgmts1000d40",
      "name": "Civ0UpdateFile",
      "namespace": "contmgmts1000d40",
      "primaryInterface": "true",
      "typeName": "Civ0UpdateFile"
    }
  ],
  "Date": "Fri Jun 05 04:01:33 PM 2020",
  "Library": [
    {
      "createRelease": "tc10000.1.2",
      "description": "Content Management S1000D 4.0",
      "isThirdParty": "false",
      "name": "Civ0SoaContMgmtS1000D40",
      "namespace": "Civ0::Soa::ContMgmtS1000D40",
      "serviceLibrary": "true"
    },
    {
      "DependentOn": [
        {
          "name": "metaframework"
        },
        {
          "name": "tccore"
        },
        {
          "name": "tc"
        },
        {
          "name": "cxpom"
        },
        {
          "name": "contmgmtbase"
        },
        {
          "name": "contmgmts1000d"
        }
      ],
      "createRelease": "tc9000.0.0",
      "description": "S1000D version 4.0",
      "isThirdParty": "false",
      "name": "contmgmts1000d40",
      "namespace": "",
      "serviceLibrary": "false"
    }
  ],
  "Operation": [
    {
      "ParameterInfo": [
        {
          "description": "A list of objects that contain the files or object to run the BREX validation on.",
          "parameterName": "input"
        },
        {
          "description": "If true, the call is asyncrounous.",
          "parameterName": "isAsync"
        }
      ],
      "canOverride": "false",
      "component": "Ctm0ContentManagement",
      "createRelease": "tc10000.1.2",
      "dependencies": "",
      "description": "This operation runs BREX (Business Rules EXchange) validation on S1000D 4.0/4.1/4.2 Data Modules.  BREX validation is an additional layer of validation beyond the basic validation provided by the S1000D XML Schemas. The S1000D XML Schemas have hundreds of elements and attributes that are optional, the BREX Data Module specifies which of these are optional or required for the current project. Furthermore, it allows for valid values for elements and attributes to be specified within the Data Module.",
      "exceptionCondition": "",
      "id": "brexValidation#const,std::vector<Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BrexInput>,&$bool",
      "interface": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "brexValidation",
      "opTemplate": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BrexResponse#Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40::brexValidation#const,std::vector<Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BrexInput>,&$bool",
      "returnDescription": "Partial Errors:<br /><ul><ul><li type=\"disc\">239401 - Exception occurred while validating the BREX rules.</li><li type=\"disc\">239402 -Failed to parse the V4 BREX rules.</li><li type=\"disc\">239403 - Failed to parse the V3 BREX rules.</li><li type=\"disc\">239404 - Unexpected exception occurred while validating rule.</li><li type=\"disc\">239405 - Failed while parsing the BREX dm file %s and constructing rules objects.</li><li type=\"disc\">239406 - Failed to generate BREX dm reference file name from the Data module file.</li><li type=\"disc\">239407 - Failed to select single node for the node name.</li><li type=\"disc\">239408 - Failed to select node list for the node name.</li><li type=\"disc\">239409 - Failed to select string value for the node name.</li><li type=\"disc\">239410 - Failed to select attribute value for the attribute name.</li><li type=\"disc\">239411 - Failed to find BREX Data Module file in the folder.</li><li type=\"disc\">239412 - Failed to split allowed value into multiple tokens.</li><li type=\"disc\">239413 - Failed to get starting range from the allowed value. </li><li type=\"disc\">239414 - Failed to get ending range from the allowed value. </li><li type=\"disc\">239415 - Failed to get object path using the query string. </li><li type=\"disc\">239416 - Failed to get object path using the query string the allowed value token.</li><li type=\"disc\">239417 - Failed to get BREX Reference extract for the node. </li><li type=\"disc\">239418 - Failed to get BREX DMC extract for the node. </li><li type=\"disc\">239419 - Failed to generate results file.</li><li type=\"disc\">239420 - Failed to find list of files from the directory.</li><li type=\"disc\">239421 - Invalid input data module file.</li><li type=\"disc\">239422 - Invalid input BREX data module file.</li><li type=\"disc\">239429 - BREX reference in XML file is invalid.</li><li type=\"disc\">239430 - BREX validation failed.</li></ul></ul>",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of objects that contain the files or object to run the BREX validation on.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Ctm0ContentManagement",
      "createRelease": "tc10000.1.2",
      "dependencies": "",
      "description": "This operation runs BREX (Business Rules EXchange) validation on S1000D 4.0/4.1/4.2 Data Modules asynchronously.  BREX validation is an additional layer of validation beyond the basic validation provided by the S1000D XML Schemas. The S1000D XML Schemas have hundreds of elements and attributes that are optional; the BREX Data Module specifies which of these are optional or required for the current project. Furthermore, it allows for valid values for elements and attributes to be specified within the Data Module.",
      "exceptionCondition": "",
      "id": "brexValidationAsync#const,std::vector<Civ0::Soa::Internal::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BrexInputAsync>,&",
      "interface": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "brexValidationAsync",
      "opTemplate": "void#Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40::brexValidationAsync#const,std::vector<Civ0::Soa::Internal::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BrexInputAsync>,&",
      "returnDescription": "None",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of files to be imported and arguments for import.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Ctm0ContentManagement",
      "createRelease": "tc10000.1.2",
      "dependencies": "",
      "description": "This operation perfoms a bulk import of S1000D 4.0/4.1/4.2 Data Modules or an SNS (Standard Number System) structure into content management ",
      "exceptionCondition": "",
      "id": "bulkImport#const,std::vector<Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BulkImportInputInfo>,&",
      "interface": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "bulkImport",
      "opTemplate": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BulkImportResponse#Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40::bulkImport#const,std::vector<Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BulkImportInputInfo>,&",
      "returnDescription": "Partial Errors:<br /><ul><ul><li type=\"disc\">239430 -  The input file wasn't in the correct format</li></ul></ul>",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of select SNS nodes.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Ctm0ContentManagement",
      "createRelease": "tc10000.1.2",
      "dependencies": "",
      "description": "This gets the default values for the Data Module using the selected SNS node.  This is used to pre-populate the create dialog within Content Management.",
      "exceptionCondition": "",
      "id": "getSNSDefaultValues#const,std::vector<Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::SNSInput>,&",
      "interface": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "getSNSDefaultValues",
      "opTemplate": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::SNSResponse#Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40::getSNSDefaultValues#const,std::vector<Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::SNSInput>,&",
      "returnDescription": "Partial Errors<br /><ul><ul><li type=\"disc\">239431 - The selected node isn't a BOM Line of a <b>Ctm0SNSNodeRevision</b>. </li></ul></ul>",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A vector of IncrementalDeliveryInputInfo objects.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Ctm0ContentManagement",
      "createRelease": "tc10000.1.2",
      "dependencies": "",
      "description": "This operation provides an incremental delivery of a Data Module List. These deliveries will be compared to previous deliveries and only deliver S1000D 4.0/4.1/4.2 Data Modules that have changed since the last delivery. The Data Modules that will be delivered will be packaged in an S1000D 4.0/4.1/4.2 Data Dispatch Note as this is the mechanism used in S1000D for a delivery. This new Data Dispatch Note will be related to the Data Module List.",
      "exceptionCondition": "",
      "id": "incrementalDelivery#const,std::vector<Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::IncrementalDeliveryInputInfo>,&",
      "interface": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "incrementalDelivery",
      "opTemplate": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::IncrementalDeliveryResponse#Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40::incrementalDelivery#const,std::vector<Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::IncrementalDeliveryInputInfo>,&",
      "returnDescription": "Partial Errors:<br /><ul><ul><li type=\"disc\">239432 - Failed to create the incremental delivery</li></ul></ul>",
      "useCase": ""
    }
  ],
  "OperationTemplate": [
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BrexInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of objects that contain the files or object to run the BREX validation on.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "bool",
              "qualifier": ""
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "If true, the call is asyncrounous.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "isAsync"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BrexResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This operation runs BREX (Business Rules EXchange) validation on S1000D 4.0/4.1/4.2 Data Modules.  BREX validation is an additional layer of validation beyond the basic validation provided by the S1000D XML Schemas. The S1000D XML Schemas have hundreds of elements and attributes that are optional, the BREX Data Module specifies which of these are optional or required for the current project. Furthermore, it allows for valid values for elements and attributes to be specified within the Data Module.",
      "id": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BrexResponse#Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40::brexValidation#const,std::vector<Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BrexInput>,&$bool",
      "name": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40::brexValidation",
      "returnConst": "false",
      "returnDescription": "Partial Errors:<br /><ul><ul><li type=\"disc\">239401 - Exception occurred while validating the BREX rules.</li><li type=\"disc\">239402 -Failed to parse the V4 BREX rules.</li><li type=\"disc\">239403 - Failed to parse the V3 BREX rules.</li><li type=\"disc\">239404 - Unexpected exception occurred while validating rule.</li><li type=\"disc\">239405 - Failed while parsing the BREX dm file %s and constructing rules objects.</li><li type=\"disc\">239406 - Failed to generate BREX dm reference file name from the Data module file.</li><li type=\"disc\">239407 - Failed to select single node for the node name.</li><li type=\"disc\">239408 - Failed to select node list for the node name.</li><li type=\"disc\">239409 - Failed to select string value for the node name.</li><li type=\"disc\">239410 - Failed to select attribute value for the attribute name.</li><li type=\"disc\">239411 - Failed to find BREX Data Module file in the folder.</li><li type=\"disc\">239412 - Failed to split allowed value into multiple tokens.</li><li type=\"disc\">239413 - Failed to get starting range from the allowed value. </li><li type=\"disc\">239414 - Failed to get ending range from the allowed value. </li><li type=\"disc\">239415 - Failed to get object path using the query string. </li><li type=\"disc\">239416 - Failed to get object path using the query string the allowed value token.</li><li type=\"disc\">239417 - Failed to get BREX Reference extract for the node. </li><li type=\"disc\">239418 - Failed to get BREX DMC extract for the node. </li><li type=\"disc\">239419 - Failed to generate results file.</li><li type=\"disc\">239420 - Failed to find list of files from the directory.</li><li type=\"disc\">239421 - Invalid input data module file.</li><li type=\"disc\">239422 - Invalid input BREX data module file.</li><li type=\"disc\">239429 - BREX reference in XML file is invalid.</li><li type=\"disc\">239430 - BREX validation failed.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Civ0::Soa::Internal::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BrexInputAsync",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of objects that contain the files or object to run the BREX validation on.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "void",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This operation runs BREX (Business Rules EXchange) validation on S1000D 4.0/4.1/4.2 Data Modules asynchronously.  BREX validation is an additional layer of validation beyond the basic validation provided by the S1000D XML Schemas. The S1000D XML Schemas have hundreds of elements and attributes that are optional; the BREX Data Module specifies which of these are optional or required for the current project. Furthermore, it allows for valid values for elements and attributes to be specified within the Data Module.",
      "id": "void#Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40::brexValidationAsync#const,std::vector<Civ0::Soa::Internal::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BrexInputAsync>,&",
      "name": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40::brexValidationAsync",
      "returnConst": "false",
      "returnDescription": "None",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BulkImportInputInfo",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of files to be imported and arguments for import.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BulkImportResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This operation perfoms a bulk import of S1000D 4.0/4.1/4.2 Data Modules or an SNS (Standard Number System) structure into content management ",
      "id": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BulkImportResponse#Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40::bulkImport#const,std::vector<Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BulkImportInputInfo>,&",
      "name": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40::bulkImport",
      "returnConst": "false",
      "returnDescription": "Partial Errors:<br /><ul><ul><li type=\"disc\">239430 -  The input file wasn't in the correct format</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::SNSInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of select SNS nodes.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::SNSResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This gets the default values for the Data Module using the selected SNS node.  This is used to pre-populate the create dialog within Content Management.",
      "id": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::SNSResponse#Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40::getSNSDefaultValues#const,std::vector<Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::SNSInput>,&",
      "name": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40::getSNSDefaultValues",
      "returnConst": "false",
      "returnDescription": "Partial Errors<br /><ul><ul><li type=\"disc\">239431 - The selected node isn't a BOM Line of a <b>Ctm0SNSNodeRevision</b>. </li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::IncrementalDeliveryInputInfo",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A vector of IncrementalDeliveryInputInfo objects.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::IncrementalDeliveryResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This operation provides an incremental delivery of a Data Module List. These deliveries will be compared to previous deliveries and only deliver S1000D 4.0/4.1/4.2 Data Modules that have changed since the last delivery. The Data Modules that will be delivered will be packaged in an S1000D 4.0/4.1/4.2 Data Dispatch Note as this is the mechanism used in S1000D for a delivery. This new Data Dispatch Note will be related to the Data Module List.",
      "id": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::IncrementalDeliveryResponse#Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40::incrementalDelivery#const,std::vector<Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::IncrementalDeliveryInputInfo>,&",
      "name": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40::incrementalDelivery",
      "returnConst": "false",
      "returnDescription": "Partial Errors:<br /><ul><ul><li type=\"disc\">239432 - Failed to create the incremental delivery</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    }
  ],
  "ServiceInterface": [
    {
      "createRelease": "tc10000.1.2",
      "dependencies": "",
      "description": "This service provides S1000D specific functionality.  It allows users to run a Business Rules EXchange (BREX) validation on S1000D 4.0/4.1/4.2 Data Modules.  Furthermore, it provides default values based on the selected Standard Number System (SNS) node.  These values will be used to create new Data Modules in the RAC by pre-populating the create dialog.  It also provides incremental delivery options for S1000D 4.0/4.1/4.2 Data Module Lists and bulk import of SNS structures and data management requirement lists.",
      "libraryName": "Civ0SoaContMgmtS1000D40",
      "name": "ContMgmtS1000D40",
      "namespace": "Civ0::Soa::ContMgmtS1000D40",
      "serviceLibraryRef": ""
    }
  ],
  "Struct": [
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The client ID (matches the clientId in BrexInput).",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "True if the BREX validation succeeded for this Data Module.",
          "name": "isValid"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Return data for each BrexInput passed into brexValidation SOA.",
      "isPublished": "true",
      "name": "BrexData",
      "namespace": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40",
      "scope": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The client ID ",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "The <b>Civ0DM40Revision</b>, <b>Civ0PM40Revision</b>, <b>Civ0DML40Revision</b> or <b>Civ0DDN40Revision</b> object to run BREX validation on.  This can be NULL if an XML file is passed in via dmTransientFileReadTicket.",
          "name": "businessObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "An S1000D 4.0/4.1/4.2 Data Module XML file to validate against the BREX Data Module.  If this is empty, the businessObject is used.",
          "name": "dmTransientFileReadTicket"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The BREX XML file to use for BREX validation.  If this is an empty string, the BREX XML file that is referenced in the Data Module's XML is used.  The operation uses the brexDmRef in the Data Module's XML, construct the Data Module Code from that, and search the data base for a <b>Civ0DM40Revision</b> object with that item_id.",
          "name": "brexFileReadTicket"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Input paramaters for the brexValidation SOA.",
      "isPublished": "true",
      "name": "BrexInput",
      "namespace": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40",
      "scope": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The client ID (matches the clientId in SNSInput).",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::DefaultValueMap"
            }
          ],
          "description": "This is a map of key value pairs (string, string).  This contains the properties and values that will be used to pre-populate the create dialog <br /><br /><ul><ul><li type=\"disc\">\"civ0LangTagRef\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0ModelID\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0SDC\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0DisCodeV\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0ItemLoc\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0SecurityClass\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0Orig\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0OrigName\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0RPC\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0RPCName\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0FromDivName\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0FromStreet\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0FromPOBox\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0FromCity\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0FromState\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0FromZip\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0FromProvince\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0FromPostCode\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0FromCountry\" - Value from the selected object's root node</li><li type=\"disc\">\"civ0SystemCode\" - Value from the selected object's system node</li><li type=\"disc\">\"civ0SubSystemCode\" - Value from the selected object's subsystem node</li><li type=\"disc\">\"civ0AssemblyCode\" - Value from the selected object's assembly code node</li><li type=\"disc\">\"civ0DisCode\" - Value from the selected object's root disassembly code node</li></ul></ul>",
          "name": "defaultValueMap"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "This will contain the properties and values that will be used to pre-populate the create dialog. ",
      "isPublished": "true",
      "name": "SNSData",
      "namespace": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40",
      "scope": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The client ID.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "The selected BOM Line of a <b>Ctm0SNSNodeRevision</b>.",
          "name": "object"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::NameValueMap"
            }
          ],
          "description": "Map of key value pairs. This will contain the parameters used to control the retrieval of SNS default values.<br />",
          "name": "keyValueArgs"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A SNS node. ",
      "isPublished": "true",
      "name": "SNSInput",
      "namespace": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40",
      "scope": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::SNSData"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The data returned.  This will contain the properties and values that will be used to pre-populate the create dialog. ",
          "name": "data"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data for this SOA call.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Return data for a call to getSNSDefaultValues SOA.",
      "isPublished": "true",
      "name": "SNSResponse",
      "namespace": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40",
      "scope": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The client ID.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "The <b>Civ0DM40Revision</b>, <b>Civ0PM40Revision</b>, <b>Civ0DML40Revision</b> or <b>Civ0DDN40Revision</b> object to run BREX validation on.  ",
          "name": "businessObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The BREX XML file to use for BREX validation.  If this is an empty string, the BREX XML file referenced in the Data Module's XML is used.  The operation uses the brexDmRef in the Data Module's XML, constructs the Data Module Code from brexDmRef, and search the data base for a <b>Civ0DM40Revision</b> object with the Data Module Code from the brexDmRef.",
          "name": "brexFileReadTicket"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Data that contains the files or object to run the BREX validation on.",
      "isPublished": "false",
      "name": "BrexInputAsync",
      "namespace": "Civ0::Soa::Internal::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40",
      "scope": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BrexData"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of objects that contain the BREX validation status.",
          "name": "data"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data for this operation call.",
          "name": "serviceData"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The file ticket of the log file for the BREX validation of the Data Module(s).  This is used for a synchronous call.",
          "name": "logTransientFileReadTicket"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "The return data for brexValidation SOA. ",
      "isPublished": "true",
      "name": "BrexResponse",
      "namespace": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40",
      "scope": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The client ID (matches the clientId in BulkImportInputInfo).",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "True if the import was successful.  False if it failed.",
          "name": "wasSuccessful"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Return data for matching BulkImportInputInfo for call to bulkImport SOA.",
      "isPublished": "true",
      "name": "BulkImportData",
      "namespace": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40",
      "scope": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The client ID.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::NameValueMap"
            }
          ],
          "description": "This is a map of key value pairs (string, string).  This will contain the parameters used to control the bulk import.<br /><ul><ul><li type=\"disc\">\"type\" - Either \"SNS\" or \"DMRL\"</li></ul></ul>",
          "name": "keyValueArgs"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The file ticket of the file to be imported.",
          "name": "transientFileReadTicket"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "The selected <b>Ctm0BOMLine</b>, <b>Civ0SNSRootNode</b>, <b>Civ0SNSRootNodeRevision</b>, <b>Ctm0SNSNode</b> or <b>Ctm0SNSNodeRevision</b>.  Will be ignored if the type is \"SNS\".  If the type is \"DMRL\", the created Data Modules will be related to the corresponding SNS nodes.",
          "name": "businessObject"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "File to be imported and arguments for import.",
      "isPublished": "true",
      "name": "BulkImportInputInfo",
      "namespace": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40",
      "scope": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::BulkImportData"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "This contains the import status of the file.",
          "name": "data"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data for this operation call.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Return data for call to bulkImport SOA.",
      "isPublished": "true",
      "name": "BulkImportResponse",
      "namespace": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40",
      "scope": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The client ID (matches the clientId in IncrementalDeliveryInputInfo).",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The file ticket for the zip file created for the delivery.",
          "name": "deliveryFileTicket"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Used by IncrementalDeliveryResponse; contains the file ticket for the zip file created for the delivery.",
      "isPublished": "true",
      "name": "IncrementalDeliveryData",
      "namespace": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40",
      "scope": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The client ID.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "This will contain the <b>Ctm0BOMLine</b>, <b>Civ0DML40Revision</b> or <b>Civ0DML40</b> object used for the incremental delivery.",
          "name": "businessObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::NameValueMap"
            }
          ],
          "description": "Map of key value pairs.  This will contain the parameters used to control the incremental delivery.<br /><ul><ul><li type=\"disc\">\"skddispfrom_building\" - Value of Dispatch From Building</li><li type=\"disc\">\"skddispfrom_city\" - Value of Dispatch From City</li><li type=\"disc\">\"skddispfrom_country\" - Value of Dispatch From Country</li><li type=\"disc\">\"skddispfrom_dept\" - Value of Dispatch From Department</li><li type=\"disc\">\"skddispfrom_div_name\" - Value of Dispatch From Division Name</li><li type=\"disc\">\"skddispfrom_email\" - Value of Dispatch From Email</li><li type=\"disc\">\"skddispfrom_ent_name\" - Value of Dispatch From Company Name</li><li type=\"disc\">\"skddispfrom_ent_unit\" - Value of Dispatch From Company Unit</li><li type=\"disc\">\"skddispfrom_fax\" - Value of Dispatch From Fax</li><li type=\"disc\">\"skddispfrom_firstname\" - Value of Dispatch From First Name</li><li type=\"disc\">\"skddispfrom_internet\" - Value of Dispatch From Web Address</li><li type=\"disc\">\"skddispfrom_jobtitle\" - Value of Dispatch From Job Title</li><li type=\"disc\">\"skddispfrom_lastname\" - Value of Dispatch From Last Name</li><li type=\"disc\">skddispfrom_phone\" - Value of Dispatch From Telephone</li><li type=\"disc\">\"skddispfrom_pobox\" - Value of Dispatch From Postal Box</li><li type=\"disc\">\"skddispfrom_postcode\" - Value of Dispatch From Postal Code</li><li type=\"disc\">\"skddispfrom_province\" - Value of Dispatch From Province</li><li type=\"disc\">\"skddispfrom_room\" - Value of Dispatch From Room</li><li type=\"disc\">\"skddispfrom_state\" - Value of Dispatch From State</li><li type=\"disc\">\"skddispfrom_street\" - Value of Dispatch From Street</li><li type=\"disc\">\"skddispfrom_zip\" - Value of Dispatch From Zip Code</li><li type=\"disc\">\"skddispto_building\" - Value of Dispatch To Building</li><li type=\"disc\">\"skddispto_city\" - Value of Dispatch To City</li><li type=\"disc\">\"skddispto_country\" - Value of Dispatch To Country</li><li type=\"disc\">\"skddispto_dept\" - Value of Dispatch To Department</li><li type=\"disc\">\"skddispto_div_name\" - Value of Dispatch To Division Name</li><li type=\"disc\">\"skddispto_email\" - Value of Dispatch To Email</li><li type=\"disc\">\"skddispto_ent_name\" - Value of Dispatch To Enterprise Name</li><li type=\"disc\">\"skddispto_ent_unit\" - Value of Dispatch To Enterprise Unit</li><li type=\"disc\">\"skddispto_fax\" - Value of Dispatch To Fax</li><li type=\"disc\">\"skddispto_firstname\" - Value of Dispatch To First Name</li><li type=\"disc\">\"skddispto_internet\" - Value of Dispatch To Web Address</li><li type=\"disc\">\"skddispto_jobtitle\" - Value of Dispatch To Job Title</li><li type=\"disc\">\"skddispto_lastname\" - Value of Dispatch To Last Name</li><li type=\"disc\">\"skddispto_phone\" - Value of Dispatch To Telephone</li><li type=\"disc\">\"skddispto_pobox\" - Value of Dispatch To Postal Box</li><li type=\"disc\">\"skddispto_postcode\" - Value of Dispatch To Postal Code</li><li type=\"disc\">\"skddispto_province\" - Value of Dispatch To Province</li><li type=\"disc\">\"skddispto_room\" - Value of Dispatch To Room</li><li type=\"disc\">\"skddispto_state\" - Value of Dispatch To State</li><li type=\"disc\">\"skddispto_street\" - Value of Dispatch To Street</li><li type=\"disc\">\"skddispto_zip\" - Value of Dispatch To Zip</li></ul></ul>",
          "name": "keyValueArgs"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Input object for incrementalDelivery().",
      "isPublished": "true",
      "name": "IncrementalDeliveryInputInfo",
      "namespace": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40",
      "scope": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40::IncrementalDeliveryData"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The data returned.  This will contain the file ticket for the zip file created for the delivery.",
          "name": "data"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data for this operation call.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Return data for the call to incrementalDelivery().",
      "isPublished": "true",
      "name": "IncrementalDeliveryResponse",
      "namespace": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40",
      "scope": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40"
    }
  ],
  "TcVersion": "tc13000.0.0",
  "Typedef": [
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "std::string"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "This is a map of key value pairs (string, string).",
      "isPublished": "true",
      "name": "DefaultValueMap",
      "namespace": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40",
      "scope": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "std::string"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "This is a map of key value pairs.  This will contain the parameters used to control the bulk import.",
      "isPublished": "true",
      "name": "NameValueMap",
      "namespace": "Civ0::Soa::ContMgmtS1000D40::_2014_06::ContMgmtS1000D40",
      "scope": "Civ0::Soa::ContMgmtS1000D40::ContMgmtS1000D40"
    }
  ],
  "xmlns": "http://teamcenter.com/BusinessModel/TcBusinessData"
}