{
  "BusinessObjectInterface": [
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object Analyst",
      "libraryName": "cm",
      "name": "Analyst",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "Analyst"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object BOMEdit",
      "libraryName": "cm",
      "name": "BOMEdit",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "BOMEdit"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object CMSolutionToImpacted",
      "libraryName": "cm",
      "name": "CMSolutionToImpacted",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "CMSolutionToImpacted"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object ChangeImplementationBoard",
      "libraryName": "cm",
      "name": "ChangeImplementationBoard",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "ChangeImplementationBoard"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object ChangeItem",
      "libraryName": "cm",
      "name": "ChangeItem",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "ChangeItem"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object ChangeItemRevision",
      "libraryName": "cm",
      "name": "ChangeItemRevision",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "ChangeItemRevision"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object ChangeNotice",
      "libraryName": "cm",
      "name": "ChangeNotice",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "ChangeNotice"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object ChangeNoticeRevision",
      "libraryName": "cm",
      "name": "ChangeNoticeRevision",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "ChangeNoticeRevision"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object ChangeRequest",
      "libraryName": "cm",
      "name": "ChangeRequest",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "ChangeRequest"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object ChangeRequestRevision",
      "libraryName": "cm",
      "name": "ChangeRequestRevision",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "ChangeRequestRevision"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object ChangeReviewBoard",
      "libraryName": "cm",
      "name": "ChangeReviewBoard",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "ChangeReviewBoard"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object ChangeSpecialist1",
      "libraryName": "cm",
      "name": "ChangeSpecialist1",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "ChangeSpecialist1"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object BOMSupersedure",
      "libraryName": "cm",
      "name": "BOMSupersedure",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "BOMSupersedure"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object ChangeSpecialist2",
      "libraryName": "cm",
      "name": "ChangeSpecialist2",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "ChangeSpecialist2"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object ChangeSpecialist3",
      "libraryName": "cm",
      "name": "ChangeSpecialist3",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "ChangeSpecialist3"
    },
    {
      "createRelease": "tc10000.1.0",
      "description": "Interface Name for Business Object Cm0ActionItemRevision",
      "libraryName": "cm",
      "name": "Cm0ActionItemRevision",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "Cm0ActionItemRevision"
    },
    {
      "createRelease": "tc11000.4.0",
      "description": "Interface Name for Business Object Cm0ChangeContributors",
      "libraryName": "cm",
      "name": "Cm0ChangeContributors",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "Cm0ChangeContributors"
    },
    {
      "createRelease": "tc11000.2.0",
      "description": "Interface Name for Business Object Cm0EffectivityExprBlock",
      "libraryName": "cm",
      "name": "Cm0EffectivityExprBlock",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "Cm0EffectivityExprBlock"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cm0GlobalChangeContextsLOV",
      "libraryName": "cm",
      "name": "Cm0GlobalChangeContextsLOV",
      "namespace": "Teamcenter::CM",
      "primaryInterface": "true",
      "typeName": "Cm0GlobalChangeContextsLOV"
    },
    {
      "createRelease": "tc9000.0.0",
      "description": "Interface Name for Business Object Cm0GnWorkOrder",
      "libraryName": "cm",
      "name": "Cm0GnWorkOrder",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "Cm0GnWorkOrder"
    },
    {
      "createRelease": "tc9000.0.0",
      "description": "Interface Name for Business Object Cm0GnWorkOrderRevision",
      "libraryName": "cm",
      "name": "Cm0GnWorkOrderRevision",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "Cm0GnWorkOrderRevision"
    },
    {
      "createRelease": "tc11000.2.0",
      "description": "Interface Name for Business Object Cm0HasProposal",
      "libraryName": "cm",
      "name": "Cm0HasProposal",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "Cm0HasProposal"
    },
    {
      "createRelease": "tc12000.2.0",
      "description": "Interface Name for Business Object Cm0ProposedImpactedObject",
      "libraryName": "cm",
      "name": "Cm0ProposedImpactedObject",
      "namespace": "Teamcenter::CM",
      "primaryInterface": "true",
      "typeName": "Cm0ProposedImpactedObject"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object CMHasImpactedItem",
      "libraryName": "cm",
      "name": "CMHasImpactedItem",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "CMHasImpactedItem"
    },
    {
      "createRelease": "tc12000.3.0",
      "description": "Interface Name for Business Object Cm0RemovedLine",
      "libraryName": "cm",
      "name": "Cm0RemovedLine",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "Cm0RemovedLine"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object GnChangeNotice",
      "libraryName": "cm",
      "name": "GnChangeNotice",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "GnChangeNotice"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object GnChangeNoticeRevision",
      "libraryName": "cm",
      "name": "GnChangeNoticeRevision",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "GnChangeNoticeRevision"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object GnChangeRequest",
      "libraryName": "cm",
      "name": "GnChangeRequest",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "GnChangeRequest"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object GnChangeRequestRevision",
      "libraryName": "cm",
      "name": "GnChangeRequestRevision",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "GnChangeRequestRevision"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object ChangeItem",
      "libraryName": "cm",
      "name": "GnProblemReport",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "GnProblemReport"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object GnProblemReportRevision",
      "libraryName": "cm",
      "name": "GnProblemReportRevision",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "GnProblemReportRevision"
    },
    {
      "createRelease": "tc12000.2.0",
      "description": "Interface Name for Business Object ItemRevision",
      "libraryName": "cm",
      "name": "ItemRevision",
      "namespace": "cm0::Teamcenter::CM",
      "primaryInterface": "false",
      "typeName": "ItemRevision"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object ChangeItem",
      "libraryName": "cm",
      "name": "ProblemReport",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "ProblemReport"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object ProblemReportRevision",
      "libraryName": "cm",
      "name": "ProblemReportRevision",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "ProblemReportRevision"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object CMHasProblemItem",
      "libraryName": "cm",
      "name": "CMHasProblemItem",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "CMHasProblemItem"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object Requestor",
      "libraryName": "cm",
      "name": "Requestor",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "Requestor"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object UserSession",
      "libraryName": "cm",
      "name": "UserSession",
      "namespace": "cm0::Teamcenter::CM",
      "primaryInterface": "false",
      "typeName": "UserSession"
    },
    {
      "createRelease": "tc12000.2.0",
      "description": "Interface Name for Business Object WorkspaceObject",
      "libraryName": "cm",
      "name": "WorkspaceObject",
      "namespace": "cm0::Teamcenter::CM",
      "primaryInterface": "false",
      "typeName": "WorkspaceObject"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object CMHasSolutionItem",
      "libraryName": "cm",
      "name": "CMHasSolutionItem",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "CMHasSolutionItem"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object CMHasWorkBreakdown",
      "libraryName": "cm",
      "name": "CMHasWorkBreakdown",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "CMHasWorkBreakdown"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object CMImplements",
      "libraryName": "cm",
      "name": "CMImplements",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "CMImplements"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "Interface Name for Business Object CMReferences",
      "libraryName": "cm",
      "name": "CMReferences",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "CMReferences"
    },
    {
      "createRelease": "tc8000.2.0",
      "description": "Interface Name for Business Object CMRelation",
      "libraryName": "cm",
      "name": "CMRelation",
      "namespace": "Teamcenter",
      "primaryInterface": "true",
      "typeName": "CMRelation"
    }
  ],
  "Date": "Fri Jun 05 04:01:14 PM 2020",
  "Library": [
    {
      "createRelease": "P8000.0.0",
      "description": "TcSoaChangeManagement",
      "isThirdParty": "false",
      "name": "TcSoaChangeManagement",
      "namespace": "Teamcenter::Soa::ChangeManagement",
      "serviceLibrary": "true"
    },
    {
      "createRelease": "P8000.0.0",
      "description": "cm",
      "isThirdParty": "false",
      "name": "cm",
      "namespace": "",
      "serviceLibrary": "false"
    }
  ],
  "Operation": [
    {
      "ParameterInfo": [
        {
          "description": "A vector of data that contains reference information to the object to be dervied.",
          "parameterName": "deriveInput"
        },
        {
          "description": "A data structure to store objects and other information relevant for set-based operation.",
          "parameterName": "bulkData"
        }
      ],
      "canOverride": "false",
      "component": "",
      "createRelease": "tc12000.3.0",
      "dependencies": "",
      "description": "Derives selected change management item_revs to a new change management item and item_rev. Process includes optional propagation of objects related to selected item_revs and relation properties based on deep copy rules,&nbsp;&nbsp;&nbsp;&nbsp;propagation of object properties from selected item_revs based on business object constant CopyFromOriginal and relation of selected item_revs to the new item_rev.",
      "exceptionCondition": "",
      "id": "cm0DeriveChange#std::vector<Teamcenter::BulkInput>,*,*$Teamcenter::BulkData,*",
      "interface": "Teamcenter::ChangeItemRevision",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "cm0DeriveChange",
      "opTemplate": "int#Teamcenter::ChangeItemRevision::cm0DeriveChange#std::vector<Teamcenter::BulkInput>,*,*$Teamcenter::BulkData,*",
      "returnDescription": "Returns an integer representing success or failure of the operation.",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "Change Item Revision",
          "parameterName": "changeItemRevision"
        },
        {
          "description": "Related objects to be processed",
          "parameterName": "relatedObjectsToProcess"
        },
        {
          "description": "Extra options to consider while calculating impacted objects.",
          "parameterName": "extraOptionsToConsider"
        },
        {
          "description": "Probable Impacted Items",
          "parameterName": "probableImpactedItems"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc12000.2.0",
      "dependencies": "",
      "description": "This operation takes the objects to process and returns probable impacted items as output.",
      "exceptionCondition": "",
      "id": "cm0GetImpactedObjects#const,tag_t,&$std::vector<tag_t>,&$const,std::map<std::string><std::string>,&$std::vector<tag_t>,&",
      "interface": "cm0::Teamcenter::CM::WorkspaceObject",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "cm0GetImpactedObjects",
      "opTemplate": "int#cm0::Teamcenter::CM::WorkspaceObject::cm0GetImpactedObjects#const,tag_t,&$std::vector<tag_t>,&$const,std::map<std::string><std::string>,&$std::vector<tag_t>,&",
      "returnDescription": "Returns vector of probable impacted items.",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "Input parameter that is a list of <font face=&quot;courier&quot; height=&quot;10&quot;>CreateSupercedureInput</font> structure. This comprises of elements that contains input information necessary to create Supersedure objects.",
          "parameterName": "supercedureProperties"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "P8000.0.0",
      "dependencies": "",
      "description": "This operation creates <b>Supercedure</b> objects for each <font face=&quot;courier&quot; height=&quot;10&quot;>CreateSupercedureInput</font> supplied. A Supercedure represents a relation that graphically displays the deleted components and the new components that replace them. Transfer Supercedure is a specific type that is created where a component is transferred from one assembly to another level in a different assembly.",
      "exceptionCondition": "",
      "id": "createSupercedures#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateSupercedureInput>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "createSupercedures",
      "opTemplate": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateSupercedureResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::createSupercedures#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateSupercedureInput>,&",
      "returnDescription": "<font face=&quot;courier&quot; height=&quot;10&quot;>CreateSupercedureResponse</font> object which contains clientID and created Supercedures (WSO). Any failure will be reported in the standard Service data under partial errors.",
      "useCase": "An assembly modification results in the components being added to or removed from the assembly. Supercedure is a component replacement where a user specifically marks one or more added components with one or more removals. This use case is accomplished by the <font face=&quot;courier&quot; height=&quot;10&quot;>createSupercedure</font> operation. The Supercedure is created from:<br /><ul><ul><li type=\"disc\">The original product structure </li><li type=\"disc\">The new product structure which is currently being edited in response to change.</li></ul></ul>"
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of DeleteChangeLineageInputData structures each of which contains clientId to uniquely identify each input, an object reference to the <b>ChangeNoticeRevision</b> and a list to hold business objects for which change lineage has to be deleted.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "tc10000.1.5",
      "dependencies": "",
      "description": "This operation deletes the change lineage by deleting the relations between a group of solution items and their respective impacted items that are associated with the lineage group. Each DeleteChangeLineageInputData structure passed as input will have the clientId to uniquely identify each input, the <b>ChangeNoticeRevision</b> and the list of objects for which the lineage has to be deleted. Lineage group is determined for each object and all the relations belonging to the same lineage group will be deleted.",
      "exceptionCondition": "",
      "id": "deleteChangeLineage#const,std::vector<Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement::DeleteChangeLineageInputData>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "deleteChangeLineage",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::deleteChangeLineage#const,std::vector<Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement::DeleteChangeLineageInputData>,&",
      "returnDescription": "The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">234021   The operation can only be performed in the context of Change Notice Revision objects.</li><li type=\"disc\">234022   At least one of the input objects must have a Lineage group.</li><li type=\"disc\">234023   Each input object must be either a Solution Item or an Impacted Item of the context Change Notice Revision.</li><li type=\"disc\">233014   Unable to determine the relation name.</li></ul></ul>",
      "useCase": "For a ChangeNoticeRevision, change lineage creation is the ability to relate a group of solution items with their respective impacted items and designate an associated lineage group. This operation allows deleting change lineage."
    },
    {
      "ParameterInfo": [
        {
          "description": "a list of Tags for Supercedures to be deleted.",
          "parameterName": "supercedureTobeDeleted"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "P8000.0.0",
      "dependencies": "",
      "description": "This operation deletes the Supercedures specified as the input parameter. A Supercedure defines the relationship between any number of additions or deletions implemented within a Bill of Material (BOM) assembly. The <font face=&quot;courier&quot; height=&quot;10&quot;>deleteSupercedures</font> enables a user to remove a Supercedure or delete a BOM add/cancel from a Supercedure.",
      "exceptionCondition": "",
      "id": "deleteSupercedures#const,std::vector<Teamcenter::BusinessObject>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "deleteSupercedures",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::deleteSupercedures#const,std::vector<Teamcenter::BusinessObject>,&",
      "returnDescription": "A standard Service data which contains a list of deleted objects (Supercedures).",
      "useCase": "A user can delete the supercedures by calling the <font face=&quot;courier&quot; height=&quot;10&quot;>deleteSupercedures</font> which takes in the list of Supercedure objects as input parameter."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of DeriveInput containing multiple Change Items object to be derived, a structure containing property name and values to be propgated,  Deep Copy Data, a flag to automatically submit to workflow or not, a workflow template name and a flag to propagate relations or not.",
          "parameterName": "deriveInput"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "tc12000.3.0",
      "dependencies": "",
      "description": "This operation derives multiple Change Item objects and carry forward its relations based on the propagateRelation flag. When applying deep copy rules, if user overridden deep copy information is provided in the input, then old relations are propagated to the new ItemRevision based on the input. If no deep copy information is provided in the input, the deep rules in the database will apply.",
      "exceptionCondition": "",
      "id": "deriveChangeItems#const,Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement::DeriveInput,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "deriveChangeItems",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::deriveChangeItems#const,Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement::DeriveInput,&",
      "returnDescription": "Created Change Item.<br />Created Change Item Revision.<br />The return contains failures for any element in the input list are returned as a Partial Error in the ServiceData. The following partial errors may be returned:<br />233018&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Relation creation is not allowed.<br />233071&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Missing default workflow template preference is missing or value is empty.<br />234024&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The &lt;object_name&gt; cannot be deirved for the following reason:",
      "useCase": "&bull;&nbsp;&nbsp;&nbsp;&nbsp;The requestor (who may be the analyst of the ECR) either derives a new change notice to address the approved change request or associates the ECR with an existing ECN. The ECN addresses the implementation details of the change. It may address multiple change requests. <br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Derive an engineering change request (ECR) from a problem report (PR) to determine a solution for the problem.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Derive an engineering change notice (ECN) from an ECR to implement the solution to the problem.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Derive a deviation request from a PR to allow a deviation.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;Derive an ECN from multiples ECRs."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of contexts (currently, must be <b>BOMWindow</b>s) which need to be disassociated with their active <b>ChangeNoticeRevision</b>s.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "tc10000.1.4",
      "dependencies": "",
      "description": "This operation disconnects a previously associated <b>ChangeNoticeRevision</b> from the context (currently, the context must be a <b>BOMWindow</b>). The <b>ChangeNoticeRevision</b> would have been associated to a <b>BOMWindow</b> using the runtime property \"cm0ChangeItemRev\" or the connectChangeNoticeToContext operation. If no <b>ChangeNoticeRevision</b> is currently associated with the <b>BOMWindow</b>, the operation does not do any further processing for that particular element in the input.",
      "exceptionCondition": "",
      "id": "disconnectChangeNoticeFromContext#const,std::vector<Teamcenter::BusinessObject>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "disconnectChangeNoticeFromContext",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::disconnectChangeNoticeFromContext#const,std::vector<Teamcenter::BusinessObject>,&",
      "returnDescription": "A list of updated <b>BOMWindow</b>s each corresponding to the input vector are return in the ServiceData. Partial errors will be returned in the ServiceData with client index that matches the position in the input array:<br /><ul><ul><li type=\"disc\">234012 The input does not contain a valid BOM Window object.</li></ul></ul>",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font> structures.",
          "parameterName": "findcontextRequest"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "P8000.0.0",
      "dependencies": "",
      "description": "This operation provides a flexible way of retrieving objects or data for a variety of contexts to satisfy the RichClient usability requirements for BOM Change, Supersedure, and Genealogy in Teamcenter Structure Manager.  There are helper functions in the RichClient to facilitate the consumption and conversion of the retrieved information.  In other words, this operation may pose challenges to users of this operation who are unfamiliar with the intended usage of the returned details.  For RichClient developers, it is better to use the helper functions instead.<br />The context is specified by the context string <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font> of an input structure, and based on the specified context, different input arguments can be supplied via a change revision object reference, and/or a pair of generic business object references.  The objects or data returned will be captured in an output structure.  The following are the possible values for the context string:<br /><ul><ul><li type=\"disc\">CM_impacted_of_solution</li><li type=\"disc\">CM_associated_change</li><li type=\"disc\">CM_supersedure_of_bomedit</li><li type=\"disc\">CM_bomedits_of_occ</li><li type=\"disc\">CM_supersedures_of_solution</li><li type=\"disc\">CM_get_supersedures_of_bomcancel</li><li type=\"disc\">CM_get_supersedures_of_bomadd</li><li type=\"disc\">CM_get_first_supersedure</li><li type=\"disc\">CM_get_pure_adds_cancels</li><li type=\"disc\">CM_get_supersedure_for_WU</li><li type=\"disc\">CM_get_pureAddsCancels_for_WU</li><li type=\"disc\">CM_get_change_of_supersedure</li><li type=\"disc\">CM_get_initial_rendering_details</li><li type=\"disc\">CM_refresh_rendering_without_supersedure</li><li type=\"disc\">CM_refresh_rendering_with_supersedure</li><li type=\"disc\">CM_get_bomline_adds</li><li type=\"disc\">CM_get_bomline_cancels</li></ul></ul>",
      "exceptionCondition": "",
      "id": "findContextData#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::FindContextDataInputs>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "findContextData",
      "opTemplate": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::FindContextDataResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::findContextData#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::FindContextDataInputs>,&",
      "returnDescription": "<font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataResponse</font> contains a list of <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font> structures and a standard service data.",
      "useCase": "<b>Use Case 1: Finding the impacted item given a change revision and a solution item</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_impacted_of_solution for <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font>, supply the change revision as <font face=&quot;courier&quot; height=&quot;10&quot;>changeRev</font> and the solution item as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font>.  The requested impacted item can be found in the object list <font face=&quot;courier&quot; height=&quot;10&quot;>contextOutputData</font> of the corresponding output structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font>.<br /><b>Use Case 2: Finding the associated change revision given a solution item</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_associated_change for <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font>, supply the solution item as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font>.  The requested associated change revision can be found in the <font face=&quot;courier&quot; height=&quot;10&quot;>changeRev</font> of the corresponding output structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font>.<br /><b>Use Case 3: Finding the supersedure given a BOMEdit object</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_supersedure_of_bomedit for <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font>, supply the BOMEdit object as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font>.  The requested supersedure can be found in the object list of the corresponding output structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font>.<br /><b>Use Case 4: Finding all the BOMEdit objects associated with a given Occurrence</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_bomedits_of_occ for <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font>, supply the occurrence object as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font>.  The requested BOMEdit object can be found in the object list of the corresponding output structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font>.<br /><b>Use Case 5: Finding all supersedures created for a given solution item</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_supersedures_of_solution for <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font>, supply the solution item as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font>.  The requested supersedure objects can be found in the object list <font face=&quot;courier&quot; height=&quot;10&quot;>contextOutputData</font> of the corresponding output structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font>.<br /><b>Use Case 6: Finding all the supersedures associated with a given BOMEdit of type cancel</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_get_supersedures_of_bomcancel for <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font>, supply the BOMEdit object as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font>.  The requested supersedure objects can be found in the object list <font face=&quot;courier&quot; height=&quot;10&quot;>contextOutputData</font> of the corresponding output structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font>.<br /><b>Use Case 7: Finding all the supersedures associated with a given BOMEdit of type add</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_get_supersedures_of_bomadd for <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font>, supply the BOMEdit object as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font>.  The requested supersedure objects can be found in the object list <font face=&quot;courier&quot; height=&quot;10&quot;>contextOutputData</font> of the corresponding output structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font>.<br /><b>Use Case 8: Finding the first supersedure given a change object and a BOM line</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_get_first_supersedure for contextRelName, supply the change revision as changeRev and the BOM line as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font>.  The requested first supersedure can be found in the object list <font face=&quot;courier&quot; height=&quot;10&quot;>contextOutputData</font> of the corresponding output structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font>.<br /><b>Use Case 9: Finding the Pure Adds and Pure Cancels for a given BOM line</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_get_pure_adds_cancels for <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font>, supply the BOM line as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font>.  The requested Pure Adds and Pure Cancels can be found in the object list <font face=&quot;courier&quot; height=&quot;10&quot;>contextOutputData</font> of the corresponding output structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font>.  The list of vBomEditCount can be used to sort out the Adds and the Cancels.<br /><b>Use Case 10: Finding the first supersedure for a given bom line in the context of a whereused assembly</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_get_supersedure_for_WU for <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font>, supply the BOM line as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font> and the whereused assembly as <font face=&quot;courier&quot; height=&quot;10&quot;>secondaryContextInputData</font>.  The requested first supersedure can be found in the object list <font face=&quot;courier&quot; height=&quot;10&quot;>contextOutputData</font> of the corresponding output structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font>.<br /><b>Use Case 11: Finding all the Pure Adds and Pure Cancels for a given bom line in the context of a whereused assembly</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_get_pureAddsCancels_for_WU for <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font>, supply the BOM line as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font> and the whereused assembly as <font face=&quot;courier&quot; height=&quot;10&quot;>secondaryContextInputData</font>.  The requested Pure Adds and Pure Cancels can be found in the object list <font face=&quot;courier&quot; height=&quot;10&quot;>contextOutputData</font> of the corresponding output structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font>.  The list of vBomEditCount can be used to sort out the Adds and the Cancels.<br /><b>Use Case 12: Finding the associated change revision given a supersedure</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_get_change_of_supersedure for <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font>, supply the supersedure as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font>.  The requested associated change revision can be found in the <font face=&quot;courier&quot; height=&quot;10&quot;>changeRev</font> of the corresponding output structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font>.<br /><b>Use Case 13: Finding all the BOM lines and the supersedures given a change revision and a pair of BOM windows representing the solution and the impacted items.</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_get_initial_rendering_details for <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font>, supply the change revision as <font face=&quot;courier&quot; height=&quot;10&quot;>changeRev</font>, the BOM windlow for the solution item as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font> and the BOM windlow for the impacted item as <font face=&quot;courier&quot; height=&quot;10&quot;>secondaryContextInputData</font>.  The requested BOM lines can be found in the object list <font face=&quot;courier&quot; height=&quot;10&quot;>contextOutputData</font> of the corresponding output structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font>.<br /><b>Use Case 14: Finding all the solution BOM lines and the impacted BOM lines given a change revision and an Add line and a Cancel line without including the supersedure data</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_refresh_rendering_without_supersedure for contextRelName, supply the change revision as <font face=&quot;courier&quot; height=&quot;10&quot;>changeRev</font>, the Add line as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font> and the Cancel line as <font face=&quot;courier&quot; height=&quot;10&quot;>secondaryContextInputData</font>.  The requested BOM lines can be found in the object list of the corresponding output structure.<br /><b>Use Case 15: Finding all the solution BOM lines and the impacted BOM lines given a change revision and an Add line and a Cancel line including the supersedure data</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_refresh_rendering_with_supersedure for <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font>, supply the change revision as <font face=&quot;courier&quot; height=&quot;10&quot;>changeRev</font>, the Add line as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font> and the Cancel line as <font face=&quot;courier&quot; height=&quot;10&quot;>secondaryContextInputData</font>.  The requested BOM lines can be found in the object list of the corresponding output structure. <br /><b>Use Case 16: Finding all the Add BOM lines for a given supersedure</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_get_bomline_adds for <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font>, supply the supersedure as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font>.  The requested Add BOM lines can be found in the object list <font face=&quot;courier&quot; height=&quot;10&quot;>contextOutputData</font> of the corresponding output structure.<br /><b>Use Case 17: Finding all the Cancel BOM lines for a given supersedure</b><br />For the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font>,use CM_get_bomline_cancels for <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font>, supply the supersedure as <font face=&quot;courier&quot; height=&quot;10&quot;>primaryContextInputData</font>.  The requested Cancel BOM lines can be found in the object list of the corresponding output structure.<br /><br /><br />"
    },
    {
      "ParameterInfo": [
        {
          "description": "Input structure that is a list of BOMEdits.",
          "parameterName": "bomedit"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "P8000.0.0",
      "dependencies": "",
      "description": "This operation finds the Supersedures based on the BOMEdits supplied as input. A BOM change which encompasses a BOM Add or a BOM delete enables a Supersedure to be created. A user can create a Supersedure which defines the additions and deletions within a BOM.",
      "exceptionCondition": "",
      "id": "findSupersedure#const,std::vector<Teamcenter::BOMEdit>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "findSupersedure",
      "opTemplate": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::FindSupersedureResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::findSupersedure#const,std::vector<Teamcenter::BOMEdit>,&",
      "returnDescription": "The operation returns a <font face=&quot;courier&quot; height=&quot;10&quot;>findSupersedureResponse</font> which contains a list of Supersedure objects and any failure will be reported in the standard Service data under partial errors.",
      "useCase": "<b>Use case 1: Create Supercedures</b><br />An assembly modification results in the components being added to or removed from the assembly. Supercedure is a component replacement where a user specifically marks one or more added components with one or more removals. The Supercedure is created from:<br /><ul><ul><li type=\"disc\">The original product structure </li><li type=\"disc\">The new product structure which is currently being edited in response to change.</li></ul></ul><br /><b>Use case 2: Find Supersedures</b><br />Finding a BOM Supersedure can be accomplished by calling the <font face=&quot;courier&quot; height=&quot;10&quot;>findSupersedure</font> for each input <font face=&quot;courier&quot; height=&quot;10&quot;>bomeditRequest</font>."
    },
    {
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "P8000.0.0",
      "dependencies": "",
      "description": "This operation returns a list of all Change Home folders.  This operation is created to support the Change Home UI in Change Manager.  Change Home allows users to define their own set of folders whose contents are determined by the searches/queries that are executed when the folders are expanded.  When Change Home is being opened, this operation is used to retrieve the folders that are defined for use by the current user.  Change Home will then display them based on their settings.",
      "exceptionCondition": "",
      "id": "getAllChangeHomeFolders#",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "getAllChangeHomeFolders",
      "opTemplate": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::GetAllChangeHomeFolderResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::getAllChangeHomeFolders",
      "returnDescription": "The list of Change Home folder(s) are returned as a vector of <font face=&quot;courier&quot; height=&quot;10&quot;>ConfigureChangeSearchData</font> inside <font face=&quot;courier&quot; height=&quot;10&quot;>GetAllChangeHomeFolderResponse</font> which also contains a <font face=&quot;courier&quot; height=&quot;10&quot;>ServiceData</font>. On the occasions when Teamcenter preferences are corrupted or when the system is running out of memory, the errors are returned in <font face=&quot;courier&quot; height=&quot;10&quot;>ServiceData</font>. Following are some possible errors returned in <font face=&quot;courier&quot; height=&quot;10&quot;>ServiceData</font>:<br /><ul><ul><li type=\"disc\">1023&nbsp;&nbsp;&nbsp;&nbsp;Unable to allocate memory</li><li type=\"disc\">1700&nbsp;&nbsp;&nbsp;&nbsp;Preference not found</li></ul></ul>",
      "useCase": "<b>Retreiving a list of all Change Home folders for the user</b><br />Where there is a need to retrieve all the Change Home folders for the current user session, this operation can be invoked via an instance of the <font face=&quot;courier&quot; height=&quot;10&quot;>ChangeManagementService</font>.  No parameters are required.  The response of the operation is captured in the form of <font face=&quot;courier&quot; height=&quot;10&quot;>GetAllChangeHomeFolderResponse</font>.  It is important to note that the folders retrieved will include BOTH those defined at the site level as well as those defined at the user level.  Site level folders are available to all users, whereas user level folders are only available to the current user.  The caller program can make intelligent use of the list by inspecting the details of each individual folder that are captured within the structure <font face=&quot;courier&quot; height=&quot;10&quot;>ConfigureChangeSearchData</font>.<br />"
    },
    {
      "ParameterInfo": [
        {
          "description": "A vector of <font face=&quot;courier&quot; height=&quot;10&quot;>GetBOMEditInput</font> structures, each containing the necessary criteria for finding the corresponding BOMEdit object(s).  The criteria include the <i>change revision</i> object that the BOMEdit objects are associated with, the <i>BVR</i> object that represents the solution item of the change, and the <i>type</i> of the BOMEdit objects.",
          "parameterName": "bomeditRequest"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "P8000.0.0",
      "dependencies": "",
      "description": "This operation is to support the BOM Change tab in Change Manager which displays the details of the BOM Change associated with the selected change revision in the Open Change View.",
      "exceptionCondition": "",
      "id": "getBOMEdits#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::GetBOMEditInput>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "getBOMEdits",
      "opTemplate": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::GetBOMEditResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::getBOMEdits#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::GetBOMEditInput>,&",
      "returnDescription": "<font face=&quot;courier&quot; height=&quot;10&quot;>GetBOMEditResponse</font> which contains a list of <font face=&quot;courier&quot; height=&quot;10&quot;>GetBOMEditOutput</font> structures and a standard <font face=&quot;courier&quot; height=&quot;10&quot;>ServiceData</font>.",
      "useCase": "<b>Finding all BOMEdit objects for a given change revision</b><br />When there is a need to find all BOMEdit objects of a certain type for a given change revision, this operation can be invoked via an instance of the <font face=&quot;courier&quot; height=&quot;10&quot;>ChangeManagementService</font>.  The caller program needs to be aware of all the possible types (as represented by <font face=&quot;courier&quot; height=&quot;10&quot;>bomEditType</font> in the <font face=&quot;courier&quot; height=&quot;10&quot;>GetBOMEditInput</font> structure) of BOMEdit in order to process the returned objects correctly.  It is important to note that a <font face=&quot;courier&quot; height=&quot;10&quot;>PSBOMViewRevision</font> object for the solution item will need to be located and supplied as the <font face=&quot;courier&quot; height=&quot;10&quot;>affectedBvr</font> element within the <font face=&quot;courier&quot; height=&quot;10&quot;>GetBOMEditInput</font> structure.  Any BOMEdit objects found will be captured in the list of <font face=&quot;courier&quot; height=&quot;10&quot;>GetBOMEditOutput</font> structures of the <font face=&quot;courier&quot; height=&quot;10&quot;>GetBOMEditResponse</font>.<br />"
    },
    {
      "ParameterInfo": [
        {
          "description": "This is a list of ContextDataInput objects in which each one represent the context data for creating <b>ChangeItem</b> types.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "tc9000.1.2",
      "dependencies": "",
      "description": "This operation provides the list of <b>ChangeItem</b> types that are allowed to be created by the logged-in user.",
      "exceptionCondition": "",
      "id": "getCreatableChangeTypes#const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2012_10::ChangeManagement::ContextDataInput>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getCreatableChangeTypes",
      "opTemplate": "Teamcenter::Soa::Internal::ChangeManagement::_2012_10::ChangeManagement::CreatableChangeTypesResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::getCreatableChangeTypes#const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2012_10::ChangeManagement::ContextDataInput>,&",
      "returnDescription": "This operation returns a CreatableChangeTypeResponse that is a list of CreatableChangeTypesOut Structure. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors. The client id in the ServiceData can be mapped to the client id in the ContextDataInput input to the operation to detect  any failures in the operation for that specific ContextDataInput object. \n\nPossible errors returned in ServiceData are:\n234003 - Failed to find creatable Change types",
      "useCase": "<b>Create Change in context</b><br />User wants to create a Change (<b>ProblemReport</b>, <b>ChangeRequest</b>, <b>ChangeNotice</b> etc.) in context of one or more business objects. Based on context data and the Change creatable conditions defined in BMIDE allowed Change types will be returned."
    },
    {
      "ParameterInfo": [
        {
          "description": "A string representing the specified participant type",
          "parameterName": "participantType"
        },
        {
          "description": "A string representing the group name of the specified participant",
          "parameterName": "groupName"
        }
      ],
      "canOverride": "false",
      "component": "",
      "createRelease": "tc8000.2.0",
      "dependencies": "",
      "description": "This operation returns the full group name of the specified participant.",
      "exceptionCondition": "",
      "id": "cm0getParticipantGroupName#std::string,&$std::string,&",
      "interface": "Teamcenter::ChangeItemRevision",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "cm0getParticipantGroupName",
      "opTemplate": "int#Teamcenter::ChangeItemRevision::cm0getParticipantGroupName#std::string,&$std::string,&",
      "returnDescription": "Returns an integer representing success or failure of the operation",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of GetNoteVariantsInput structures, each containing an object reference to a BOMEdit whose integer type is EITHER 6 (=Note Change) OR 7(=Variant Change) and a matching context string.<br />",
          "parameterName": "getNoteVariantRequest"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "tc8000.0.1",
      "dependencies": "",
      "description": "This operation is specifically designed to handle the retrieval of information for Note or Variant changes to be consumed by the Teamcenter Structure Manager Rich Client UI.  There are helper functions in the Rich Client to facilitate the consumption and interpretation of the retrieved information.  In other words, this operation may pose challenges to users of this operation who are unfamiliar with the intended usage of the returned details.  For Rich Client developers, it is better to use the helper functions instead.<br />The operation accepts as input a list of <font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantsInput</font> structures, each containing an object reference to a <font face=&quot;courier&quot; height=&quot;10&quot;>BOMEdit</font> whose integer type is EITHER 6 (=Note Change) OR 7(=Variant Change) and a matching context string of one of the following two possible values:<br /><ul><ul><li type=\"disc\">CM_note_change_details</li><li type=\"disc\">CM_variant_change_details</li></ul></ul><br />Based on the input structures, the operation will assemble the retrieved information in a list of <font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantOutput</font> structures, and package them together with a standard service data in the returned <font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantResponse</font> structure.",
      "exceptionCondition": "",
      "id": "getNoteVariantChanges#const,std::vector<Teamcenter::Soa::ChangeManagement::_2009_06::ChangeManagement::GetNoteVariantsInput>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "getNoteVariantChanges",
      "opTemplate": "Teamcenter::Soa::ChangeManagement::_2009_06::ChangeManagement::GetNoteVariantResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::getNoteVariantChanges#const,std::vector<Teamcenter::Soa::ChangeManagement::_2009_06::ChangeManagement::GetNoteVariantsInput>,&",
      "returnDescription": "<font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantResponse</font> which contains a list of <font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantOutput</font> structures and a standard service data. Following are some possible errors returned in <font face=&quot;courier&quot; height=&quot;10&quot;>ServiceData</font>:<br /><ul><ul><li type=\"disc\">233035&nbsp;&nbsp;&nbsp;&nbsp;CM_invalid_bomedit_form_prop</li></ul></ul>",
      "useCase": "<b>Use Case 1: Getting the details for a note change</b><br />This operation can be invoked via an instance of the <font face=&quot;courier&quot; height=&quot;10&quot;>ChangeManagementService</font>.  The caller program will need to supply an object reference to a <font face=&quot;courier&quot; height=&quot;10&quot;>BOMEdit</font> whose integer type is 6 and a matching context string of CM_note_change_details in the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantsInput</font>.  The corresponding output structure <font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantOutput</font> contains object references to 1) the BOMEdit, 2) the associated change revision, 3) the solution bvr, and 4) the impacted bvr.  It also contains a list of details count and a list of strings representing some textual details of the note change.  The caller program will use the count to read the strings for details.<br /><b>Use Case 2: Getting the details for a variant change</b><br />This operation can be invoked via an instance of the <font face=&quot;courier&quot; height=&quot;10&quot;>ChangeManagementService</font>.  The caller program will need to supply an object reference to a <font face=&quot;courier&quot; height=&quot;10&quot;>BOMEdit</font> whose integer type is 7 and a matching context string of CM_variant_change_details in the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantsInput</font>.  The corresponding output structure <font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantOutput</font> contains object references to 1) the BOMEdit, 2) the associated change revision, 3) the solution bvr, and 4) the impacted bvr.  It also contains a list of details count and a list of strings representing some textual details of the variant change.  The caller program will use the count to read the strings for details.<br /><br />"
    },
    {
      "ParameterInfo": [
        {
          "description": "The change <b>ItemRevision</b> which needs to be checked.",
          "parameterName": "changeObject"
        }
      ],
      "canOverride": "false",
      "component": "Fnd0MassUpdate",
      "createRelease": "tc12000.3.0",
      "dependencies": "",
      "description": "This operation checks if there are active Mass Update <b>Fnd0Markup</b> objects associated with the <b>PSBOMViewRevision</b> of impacted <b>ItemRevision</b> objects related to the input change object <b>ItemRevision</b>.",
      "exceptionCondition": "",
      "id": "hasActiveMarkupAssociated#const,Teamcenter::ItemRevision,&",
      "interface": "Teamcenter::Soa::ChangeManagement::MassUpdate",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "hasActiveMarkupAssociated",
      "opTemplate": "Teamcenter::Soa::Internal::ChangeManagement::_2020_01::MassUpdate::HasActiveMarkupAssociatedOut#Teamcenter::Soa::ChangeManagement::MassUpdate::hasActiveMarkupAssociated#const,Teamcenter::ItemRevision,&",
      "returnDescription": "Returns true, if there are active Mass Update <b>Fnd0Markup</b> objects associated with the impacted <b>ItemRevisions</b> attached to the input <b>ItemRevision</b> change object, else false.<br />The following partial errors maybe returned:<br /><ul><ul><li type=\"disc\">43163 Change ItemRevision is null or invalid.</li></ul></ul>",
      "useCase": "When you remove the problem object <b>ItemRevision</b> from the change object <b>ItemRevision</b> of a Mass Update, any associated <b>Fnd0Markup</b> objects will be removed. Before the removal of the <b>Fnd0Markup</b> objects, this operation will check for the existence of associated <b>Fnd0Markup</b> objects and a confirmation message will be displayed."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of objects (currently, must be <b>ChangeNoticeRevision</b> objects) for which the previous effectivity is to be cleared.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "tc10000.1.4",
      "dependencies": "",
      "description": "This operation disconnects a previously associated <b>ConfigurationContext</b> from <b>ChangeNoticeRevision</b>. If previous effectivity does not exist on the <b>ChangeNoticeRevision</b>, the operation proceeds to the next input element.",
      "exceptionCondition": "",
      "id": "removePrevEffectivityFromChgNotice#const,std::vector<Teamcenter::BusinessObject>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "removePrevEffectivityFromChgNotice",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::removePrevEffectivityFromChgNotice#const,std::vector<Teamcenter::BusinessObject>,&",
      "returnDescription": "A list of updated <b>ChangeNoticeRevision</b> objects each corresponding to the input vector are returned in the ServiceData. Partial errors will be returned in the ServiceData with client index that matches the position in the input array:<br /><ul><ul><li type=\"disc\">46238 The required Change Management template is not installed. Please install it and try again.</li></ul></ul>",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "The change <b>ItemRevision</b> which manages the mass update.",
          "parameterName": "changeObject"
        },
        {
          "description": " The list of input structures to save impacted assemblies.",
          "parameterName": "impactedObjectsInfo"
        }
      ],
      "canOverride": "false",
      "component": "Fnd0MassUpdate",
      "createRelease": "tc12000.3.0",
      "dependencies": "",
      "description": "This operation saves proposed changes as <b>Fnd0MarkupChange</b> objects for an <b>Fnd0Markup</b> related to the <b>PSBOMViewRevision</b> of an impacted <b>ItemRevision</b>. Based on the modified properties specified on <b>Fnd0MUImpactedParents</b>, the operation will add, update or delete markup changes.",
      "exceptionCondition": "",
      "id": "saveImpactedAssemblies#const,Teamcenter::ItemRevision,&$const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2020_01::MassUpdate::SaveImpactedAssembliesIn>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::MassUpdate",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "saveImpactedAssemblies",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::MassUpdate::saveImpactedAssemblies#const,Teamcenter::ItemRevision,&$const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2020_01::MassUpdate::SaveImpactedAssembliesIn>,&",
      "returnDescription": "The following partial errors maybe returned:<br /><ul><ul><li type=\"disc\">43220 No Proposed Item Revision is provided for the impacted object</li><li type=\"disc\">43221 An invalid action is provided for the impacted object</li><li type=\"disc\">43222 The Proposed Item Revision provided is same as the impacted object</li><li type=\"disc\">43223 An Invalid Proposed Item Revision is provided for the impacted object</li><li type=\"disc\">43224 The Problem Item Revision is same as the Proposed Item Revision</li><li type=\"disc\">43159 ChangeItemRevision has multiple updates.</li><li type=\"disc\">43001 Internal Error</li></ul></ul>",
      "useCase": "When you attach a problem <b>ItemRevision</b> to the <b>ChangeItemRevision</b>, corresponding impacted assembly parents of the problem object are listed for the Mass Update.<br />You can select an action (<i>Add Part, Replace Part, Remove Part, Remove Part as Substitute, </i>and<i> Add Part as Substitute</i>) and choose a corresponding proposed solution object. When you save the action including its solution object, this operation stores it as <b>Fnd0MarkupChange</b> objects within the <b>Fnd0Markup</b> object related to the <b>PSBOMViewRevision</b> of the impacted <b>ItemRevision</b>."
    },
    {
      "DeprecationInfo": [
        {
          "deprecatedDescription": "This service operation is no longer needed as its purpose can be served by using a combination of setProperties, createRelations, and deleteRelations operations.",
          "deprecatedRelease": "tc10000.0.0"
        }
      ],
      "ParameterInfo": [
        {
          "description": "a list of UpdateChangeItemsInput structures",
          "parameterName": "updateProps"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "P8000.0.0",
      "dependencies": "",
      "description": "Updates a vector of change items by using the inputs provided in the argument\nreturns the updated objects via the services data.",
      "exceptionCondition": "",
      "id": "updateChangeItems#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::UpdateChangeProperties>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "updateChangeItems",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::updateChangeItems#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::UpdateChangeProperties>,&",
      "returnDescription": "A standard Service data which contains a list of updated objects.",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of UpdateChangeNoticeRelationsIn elements each containing the details necessary for managing the secondary <b>ItemRevision</b> objects related to the <b>ChangeNoticeRevision</b>, which is associated with a <b>BOMWindow</b>.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "tc10000.1.4",
      "dependencies": "",
      "description": "This operation manages the secondary <b>ItemRevision</b> objects related to the <b>ChangeNoticeRevision</b> associated with a <b>BOMWindow</b>, by adding/removing these objects to/from the relations. The managed secondary <b>ItemRevision</b> objects will have appropriate sharing of the release statuses of the <b>ChangeNoticeRevision</b>, based on the sharing mode controlled by <b>BOMWindow</b> property cm0ChangeNoticeRevShareMode. If this property is not set, the default \"Share\" mode will be used.",
      "exceptionCondition": "",
      "id": "updateChangeNoticeRelations#const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::UpdateChangeNoticeRelationsIn>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "updateChangeNoticeRelations",
      "opTemplate": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::UpdateChangeNoticeRelationsResp#Teamcenter::Soa::ChangeManagement::ChangeManagement::updateChangeNoticeRelations#const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::UpdateChangeNoticeRelationsIn>,&",
      "returnDescription": "A list of AdditionalInfo structure elements each corresponding to the input list. The following partial errors may be returned grouped by input element index:<br /><ul><ul><li type=\"disc\">A revision of the selected BOMLine Item already exists in the pseudo folder of the Change Notice Revision.</li><li type=\"disc\">There is no Change Notice Revision set on the current BOMWindow.</li><li type=\"disc\">234005&nbsp;&nbsp;&nbsp;&nbsp;Either one of date or unit effectivity must be specified. </li><li type=\"disc\">234006&nbsp;&nbsp;&nbsp;&nbsp;Missing release status on the specified Change Notice Revision.</li><li type=\"disc\">234007&nbsp;&nbsp;&nbsp;&nbsp;The specified Change Notice Revision is currently not effective.   </li><li type=\"disc\">234008&nbsp;&nbsp;&nbsp;&nbsp;Solution folder of the specified Change Notice Revision may not be modifiable. Please check the conditions on \"Cm0isCMHasSolutionItemCreatable\".</li><li type=\"disc\">234009&nbsp;&nbsp;&nbsp;&nbsp;Impacted folder of the specified Change Notice Revision may not be modifiable. Please check the conditions on \"Cm0isCMHasImpactedItemCreatable\".</li></ul></ul>",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "Input parameter that comprises of a list of <font face=&quot;courier&quot; height=&quot;10&quot;>UpdateSupercedureData</font> structure elements.<br />",
          "parameterName": "supercedureTobeUpdated"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "P8000.0.0",
      "dependencies": "",
      "description": "This operation updates Supercedures for each <font face=&quot;courier&quot; height=&quot;10&quot;>UpdateSupercedureData</font> supplied. The <font face=&quot;courier&quot; height=&quot;10&quot;>UpdateSupercedureData</font> contains information for properties such as <i>bomAddorCancelFlag</i>, <i>operation</i>, <i>tags</i> and the <i>supTag</i> which specifies the <b>Supercedure</b> business object to be updated. A Supercedure represents a relation that graphically displays the deleted components and new components that replace them. Once a Supercedure is created, new BOM elements can be added or removed which allows the user to indicate the Supercedure to be edited and updated.",
      "exceptionCondition": "",
      "id": "updateSupercedures#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::UpdateSupercedureData>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "updateSupercedures",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::updateSupercedures#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::UpdateSupercedureData>,&",
      "returnDescription": "A standard Service data which contains a list of updated objects (Supercedures).\nInvalid operation on supercedure or any other error will be returned under partial errors.",
      "useCase": "<b>Use case1: Create Supercedures</b><br />An assembly modification results in the components being added to or removed from the assembly. Supercedure is a component replacement where a user specifically marks one or more added components with one or more removals. This use case is accomplished by the operation createSupercedure with the input structure <font face=&quot;courier&quot; height=&quot;10&quot;>CreateSupercedureInput</font> utilizing a list of Supercedure properties. The Supercedure is created from:<br /><ul><ul><li type=\"disc\">The original product structure </li><li type=\"disc\">The new product structure which is currently being edited in response to change.</li></ul></ul><br /><b>Use case2: Update Supercedures</b><br />An existing Supercedure can be updated at point in time and this is achieved by the operation <font face=&quot;courier&quot; height=&quot;10&quot;>updateSupercedures</font>. This operation checks if the operation is of type ADD or CANCEL and correspondingly adds or deletes a list of business objects from the Supercedure business object specified in the input parameter. The input structure elements utilize the Change Management BOM_ADD/BOM_CANCEL and OPERARTION_TYPE_ADD/OPERATION_TYPE_CANCEL constants in the SOA based on which a decision is made by the user to append or remove components from the assembly."
    },
    {
      "ParameterInfo": [
        {
          "description": "A string representing the participant type",
          "parameterName": "participantType"
        },
        {
          "description": "A string representing the role name of the specified participant.",
          "parameterName": "roleName"
        }
      ],
      "canOverride": "false",
      "component": "",
      "createRelease": "tc8000.2.0",
      "dependencies": "",
      "description": "This operation returns the role name of the specified participant type.",
      "exceptionCondition": "",
      "id": "cm0getParticipantRoleName#std::string,&$std::string,&",
      "interface": "Teamcenter::ChangeItemRevision",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "cm0getParticipantRoleName",
      "opTemplate": "int#Teamcenter::ChangeItemRevision::cm0getParticipantRoleName#std::string,&$std::string,&",
      "returnDescription": "Returns an integer representing success or failure of the operation.",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "Structures containing the details of the folders to be added or removed.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "P8000.0.0",
      "dependencies": "",
      "description": "Add or remove a change specific searches folder with the given inputs.  This operation is created to support the Manage Saved Search capability for Change Home within Change Manager.  It is important to note that, if called directly, there is a possibility of overwriting any pre existing configurations for Change Home, at site and/or user level.  So, <b>USE IT WITH CAUTION</b>.",
      "exceptionCondition": "",
      "id": "configureChangeSearches#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::ConfigureChangeSearchData>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "configureChangeSearches",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::configureChangeSearches#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::ConfigureChangeSearchData>,&",
      "returnDescription": "A standard Service data. Following are some possible errors returned in <font face=&quot;courier&quot; height=&quot;10&quot;>ServiceData</font>:<br /><ul><ul><li type=\"disc\">1023&nbsp;&nbsp;&nbsp;&nbsp;Unable to allocate memory</li><li type=\"disc\">1700&nbsp;&nbsp;&nbsp;&nbsp;Preference not found</li></ul></ul>",
      "useCase": "<b>Adding and Removing change home folder(s)</b><br />This can be accomplished by calling the <font face=&quot;courier&quot; height=&quot;10&quot;>configureChangeSearches</font> operation with a list of <font face=&quot;courier&quot; height=&quot;10&quot;>ConfigureChangeSearchData</font> structures which specify a number of necessary attributes of the folders to be created or removed.  Each <font face=&quot;courier&quot; height=&quot;10&quot;>ConfigureChangeSearchData</font> structure will contain the name of the folder (which should be unique), a visible/invisible indicator, the saved search/query associated with the folder, any query criteria and their corresponding values, a site/user level indicator, and an add/remove operation indicator.  A site level folder is available to all site users, whereas a user level folder is available only to the user of the current user session.  The add/remove operation indicator will determine if the operation is to add or to remove the folder.<br />"
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of ConnectChangeNoticeToContextInElem elements each containing the details of a single element necessary for associating a changeObject ( currently, must be <b>ChangeNoticeRevision</b> or derived class ) with the optional container ( currently, must be <b>BOMWindow</b>) and the information necessary to create and associate previous effectivity.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "tc10000.1.4",
      "dependencies": "",
      "description": "This operation associates the given <b>ChangeNoticeRevision</b> to a context (currently, <b>BOMWindow</b>) for the purpose of tracking newly created revisions or revisions from revise operation in a session.",
      "exceptionCondition": "",
      "id": "connectChangeNoticeToContext#const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::ConnectChangeNoticeToContextInElem>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "connectChangeNoticeToContext",
      "opTemplate": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::ConnectChangeNoticeToContextResp#Teamcenter::Soa::ChangeManagement::ChangeManagement::connectChangeNoticeToContext#const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::ConnectChangeNoticeToContextInElem>,&",
      "returnDescription": "The updated BOMWindow will be returned in the serviceData. The following partial errors may be returned grouped by input element index:<br /><ul><ul><li type=\"disc\">234006 Missing valid release status on the specified <b>ChangeNoticeRevision</b>.</li><li type=\"disc\">234007 The specified Enterprise change object is currently not effective.   </li><li type=\"disc\">234008 Solution folder of the specified Enterprise change object may not be modiafiable. Please check the conditions on \"Cm0isCMHasSolutionItemCreatable\".</li><li type=\"disc\">234009 Impacted folder of the specified Enterprise change object may not be modiafiable. Please check the conditions on \"Cm0isCMHasImpactedItemCreatable\".</li><li type=\"disc\">46001&nbsp;&nbsp;&nbsp;&nbsp;Invalid tag received by BOM Module.</li><li type=\"disc\">46238&nbsp;&nbsp;&nbsp;&nbsp;The required Change Management template is not installed. Please install it and try again.</li></ul></ul>",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A vector of <font face=&quot;courier&quot; height=&quot;10&quot;>CreateBOMEditInput</font> structures, each providing the necessary input arguments for constructing a <b>BOMEdit</b> object.",
          "parameterName": "bomEditRequest"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "P8000.0.0",
      "dependencies": "",
      "description": "This operation is to support the creation of BOM Change in Structure Manager.  A number of <b>BOMEdit</b> objects are created when the solution item BOMViewRevision (BVR) is saved and then compared to the impacted item BVR in two side by side BOM windows.  Central to this operation is the change revision object that ties all the <b>BOMEdit</b> objects together to represent the whole BOM Change.",
      "exceptionCondition": "",
      "id": "createBOMEdits#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateBOMEditInput>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "createBOMEdits",
      "opTemplate": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateBOMEditResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::createBOMEdits#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateBOMEditInput>,&",
      "returnDescription": "<font face=&quot;courier&quot; height=&quot;10&quot;>CreateBOMEditResponse</font> which contains a list of <b>BOMEdit</b> object references and a standard <font face=&quot;courier&quot; height=&quot;10&quot;>ServiceData</font>.  Following are some possible error(s) returned in ServiceData:<br /><ul><ul><li type=\"disc\">233029&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The relation between the solution and the impacted is not found.</li></ul></ul>",
      "useCase": "<b>Creating a BOM Change within the Structure Manager</b><br />A change revision has been created with an identified impacted item.  A user working on a solution will first revise the impacted item, relate the new revision to the change revision as solution item, and then make structural changes to the new revision in Structure Manager. When the work is complete, the solution item is saved.   The save operation will detect if the object saved is associated with a change revision as the solution item.  If it is, it will proceed to render the solution item and the impacted item in two side by side BOM windows, and then invoke the <font face=&quot;courier&quot; height=&quot;10&quot;>createBOMEdits</font> operation via an instance of the <font face=&quot;courier&quot; height=&quot;10&quot;>ChangeManagementService</font> with the <font face=&quot;courier&quot; height=&quot;10&quot;>CreateBOMEditInput</font> structure that contains the associated change revision and the two BOM windows .<br />"
    },
    {
      "DeprecationInfo": [
        {
          "deprecatedDescription": "This service operation is no longer needed as its purpose can be served by\nTeamcenter::Soa::Core::createObjects operation.",
          "deprecatedRelease": "tc10000.0.0"
        }
      ],
      "ParameterInfo": [
        {
          "description": "a list of CreateChangeItemInputs structures",
          "parameterName": "changeItemProps"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "P8000.0.0",
      "dependencies": "",
      "description": "Creates an list of Change Items of specified type and any associated data with each change item including Change Item Revision,\nChange Item Master Form, and Change Item Revision Master form based on the input attribute structures.\nAlso it creates relationship between the objects passed as in input properties and assigns created change item to a specified\nuser as requestor, analyst, admin or role that is specified in the input.\nIt also updates any additional properties of the change item that is passed in the input.\nIf the relation data contains a change item an attempt will be made to propagate values from this parent change item to\nthe newly create item based on the propagation rules defined in the change configuration also an attempt will be made to\ncreate the prpoer types of relations between the change item that is created and input objects.\nIncase of Problem Report (PR) if the CMRoles is empty the requestor of the PR will be the same as the creator of the PR.",
      "exceptionCondition": "",
      "id": "createChangeItems#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateChangeItemInputs>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "createChangeItems",
      "opTemplate": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateChangeItemsResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::createChangeItems#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateChangeItemInputs>,&",
      "returnDescription": "contains a list of CreateChangeItemsOutput structures\n(which contain the newly created change item and its revision and clientID).\nAny failure will be returned with client id mapped to error\nmessage in the standard ServiceData list of partial errors.",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "Input data for creating lineage. A unique group id will be assigned for each input data.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "tc10000.1.5",
      "dependencies": "",
      "description": "This operation creates <b>CMSolutionToImpacted</b> relation between all the Solution Items and all the Impacted Items for a <b>ChangeNoticeRevision</b> and then assign a group ID to them. To determine the group ID, the <b>CMSolutionToImpacted</b> relations are traversed for <b>ChangeNoticeRevision</b> and then find the largest group ID number present for this <b>ChangeNoticeRevision</b> in context. The new group ID is the next incremented number. This group number is assigned to all the <b>CMSolutionToImpacted</b> relations created for the input data.<br />Each CreateChangeLineageInputData input will have new group id assigned for the relations created for that group.<br /><br />Note: Solution Items and Impacted Items are the objects which are attached to <b>ChangeNoticeRevision</b> using <b>CMHasSolutionItem</b> and <b>CMHasImpactedItem</b> relation respectively.",
      "exceptionCondition": "",
      "id": "createChangeLineage#const,std::vector<Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement::CreateChangeLineageInputData>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "createChangeLineage",
      "opTemplate": "Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement::CreateChangeLineageResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::createChangeLineage#const,std::vector<Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement::CreateChangeLineageInputData>,&",
      "returnDescription": "A list of created relations, each corresponding to the input list. The following partial errors may be returned:<br />234018:The creation of a Change Lineage has failed because either an invalid Item or no solution Item or an impacted item is provided.<br />234019:Not all solution Items are attached to the same <b>ChangeNoticeRevision</b>.<br />234020:Not all impacted Items are attached to the same <b>ChangeNoticeRevision</b>.<br />233052:Some impacted Items do not contain any attached <b>ChangeNoticeRevision</b>.<br />233053:Some solution Items do not contain any attached <b>ChangeNoticeRevision</b>.",
      "useCase": "User selects <b>Solution Items</b> and <b>Impacted Items</b> for a <b>ChangeNoticeRevision</b> and create lineage between them."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of PreviousEffectivity elements each containing the details of a single element necessary for creating or updating a <b>ConfigurationContext</b> and associate with the passed in <b>ChangeNoticeRevision</b>",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "tc10000.1.4",
      "dependencies": "",
      "description": "This operation creates a <b>ConfigurationContext</b> object with the provided previous effectivty parameters of endItem and one of unit or date. This <b>ConfigurationContext</b> is attached to the passed in <b>ChangeNoticeRevision</b> upon creation. If the <b>ConfigurationContext</b> is already present, the revision rule content is updated with the passed in previous effectivity parameters.",
      "exceptionCondition": "",
      "id": "createOrUpdatePreviousEffectivity#const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::PreviousEffectivity>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "createOrUpdatePreviousEffectivity",
      "opTemplate": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::CreateOrUpdatePreviousEffResp#Teamcenter::Soa::ChangeManagement::ChangeManagement::createOrUpdatePreviousEffectivity#const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::PreviousEffectivity>,&",
      "returnDescription": "A list of AdditionalInfo structure elements objects each corresponding to the input array. The ConfigurationContext objects created appear under the \"Effectivity\" key of objMap. The following partial errors may be returned grouped by input element index:<br /><ul><ul><li type=\"disc\">234004&nbsp;&nbsp;&nbsp;&nbsp;The required argument endItem is missing.</li><li type=\"disc\">234005&nbsp;&nbsp;&nbsp;&nbsp;Either one of date or unit effectivity must be specified.</li><li type=\"disc\">46238&nbsp;&nbsp;&nbsp;&nbsp;The required Change Management template is not installed. Please install it and try again.</li></ul></ul>",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of CreateAndSubmitChangeInput stucture that represent input for creating <b>ChangeItem</b> object, workflow related information, participants related information and if created object is of type <b>ChangeNoticeRevision</b> set it as active change based on the input.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Cm0ChangeManagement",
      "createRelease": "tc14000.2.0",
      "dependencies": "createRelations",
      "description": "Create <b>ChangeItem</b> object and any associated data (<b>ChangeItemRevision</b>, <b>ChangeItemMaster</b> <b>Form</b>, <b>ChangeItemRevision Master Form</b>) based on the input structure.<br />The created <b>ChangeItemRevision</b> object is submitted to a workflow defined by a workflow template information. If the workflow template information is not provided, the created <b>ChangeItemRevision</b> object is submitted to default workflow template.<br /><b>Participant</b> objects are added to the newly created <b>ChangeItemRevision</b> object based on the input provided.<br />Set newly created <b>ChangeNoticeRevision</b> as active change based on input provided.",
      "exceptionCondition": "",
      "id": "createAndSubmitChangeObjects#const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::CreateAndSubmitChangeInput>,&",
      "interface": "Teamcenter::Soa::ChangeManagement::ChangeManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "createAndSubmitChangeObjects",
      "opTemplate": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::CreateAndSubmitChangeResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::createAndSubmitChangeObjects#const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::CreateAndSubmitChangeInput>,&",
      "returnDescription": "A list of the business objects that were created. The newly created <b>ChangeItem</b> and <b>ChangeItemRevision</b> are added to the created list of the ServiceData while the input container object is added to the updated list.<br />Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors. The client id of the output can be mapped to the client id provided as input in order to detect which object creation failed. For example, the input to createAndSubmitChangeObjects (which is a list of CreateAndSubmitChangeInput) may have {{&ldquo;clientId1&quot;, createChange1}, {&quot;clientId2&quot;, createChange2}} as two inputs and therefore, if the output contains partial errors in ServiceData for clientId2, it is known that creation of the second object is failed.<br />The following partial errors may be returned:<br />234025 - Unable to create &quot;Change Notice&quot; object.<br />214116 - The input relation type name is not a valid relation type name.<br />214411 - The creation of workflow process has failed.<br />392003 - Invalid assignee.<br />392002 - Invalid participant type.<br />392006 - The Participant type &quot;Change Implementation Board&quot; is not allowed for WorkspaceObject of type &quot;Change Request&quot;.",
      "useCase": "This operation can be used to create <b>ChangeItem</b> objects after obtaining user inputs from Create Change Panel or Dialog fields.<br />For example:<br />1. To create <b>ChangeNotice</b> from Create Change Panel in Active Workspace, Create Panel can be populated with required input fields and then createAndSubmitChangeObjects operation can be called to create the <b>ChangeNotice</b> object.<br />2. To create <b>ProblemReport</b>, user will populate required input fields in Create Change Panel and attach an existing Word doc dataset as &ldquo;Reference&rdquo; or &ldquo;Problem Item&rdquo; relation. Here, user also wants to submit <b>ProblemReport</b> object to workflow template selected in Create Change Panel. createAndSubmitChangeObjects operation can be called will all information provided in Create Change Panel to create and submit <b>ProblemReport</b> object."
    }
  ],
  "OperationTemplate": [
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BulkInput",
                  "qualifier": "*"
                }
              ],
              "dataType": "std::vector",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A vector of data that contains reference information to the object to be dervied.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "deriveInput"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::BulkData",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A data structure to store objects and other information relevant for set-based operation.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "bulkData"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "true",
      "const": "false",
      "createRelease": "tc12000.3.0",
      "description": "Derives selected change management item_revs to a new change management item and item_rev. Process includes optional propagation of objects related to selected item_revs and relation properties based on deep copy rules,&nbsp;&nbsp;&nbsp;&nbsp;propagation of object properties from selected item_revs based on business object constant CopyFromOriginal and relation of selected item_revs to the new item_rev.",
      "id": "int#Teamcenter::ChangeItemRevision::cm0DeriveChange#std::vector<Teamcenter::BulkInput>,*,*$Teamcenter::BulkData,*",
      "name": "Teamcenter::ChangeItemRevision::cm0DeriveChange",
      "returnConst": "false",
      "returnDescription": "Returns an integer representing success or failure of the operation.",
      "returnFreeMemory": "false",
      "setBased": "true"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::string",
              "qualifier": "&"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A string representing the specified participant type",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "participantType"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::string",
              "qualifier": "&"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A string representing the group name of the specified participant",
          "freeOutputMemory": "false",
          "inputOutput": "Output",
          "name": "groupName"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc8000.2.0",
      "description": "This operation returns the full group name of the specified participant.",
      "id": "int#Teamcenter::ChangeItemRevision::cm0getParticipantGroupName#std::string,&$std::string,&",
      "name": "Teamcenter::ChangeItemRevision::cm0getParticipantGroupName",
      "returnConst": "false",
      "returnDescription": "Returns an integer representing success or failure of the operation",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement::DeleteChangeLineageInputData",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of DeleteChangeLineageInputData structures each of which contains clientId to uniquely identify each input, an object reference to the <b>ChangeNoticeRevision</b> and a list to hold business objects for which change lineage has to be deleted.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.5",
      "description": "This operation deletes the change lineage by deleting the relations between a group of solution items and their respective impacted items that are associated with the lineage group. Each DeleteChangeLineageInputData structure passed as input will have the clientId to uniquely identify each input, the <b>ChangeNoticeRevision</b> and the list of objects for which the lineage has to be deleted. Lineage group is determined for each object and all the relations belonging to the same lineage group will be deleted.",
      "id": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::deleteChangeLineage#const,std::vector<Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement::DeleteChangeLineageInputData>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::deleteChangeLineage",
      "returnConst": "false",
      "returnDescription": "The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">234021   The operation can only be performed in the context of Change Notice Revision objects.</li><li type=\"disc\">234022   At least one of the input objects must have a Lineage group.</li><li type=\"disc\">234023   Each input object must be either a Solution Item or an Impacted Item of the context Change Notice Revision.</li><li type=\"disc\">233014   Unable to determine the relation name.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "a list of Tags for Supercedures to be deleted.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "supercedureTobeDeleted"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "P8000.0.0",
      "description": "This operation deletes the Supercedures specified as the input parameter. A Supercedure defines the relationship between any number of additions or deletions implemented within a Bill of Material (BOM) assembly. The <font face=&quot;courier&quot; height=&quot;10&quot;>deleteSupercedures</font> enables a user to remove a Supercedure or delete a BOM add/cancel from a Supercedure.",
      "id": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::deleteSupercedures#const,std::vector<Teamcenter::BusinessObject>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::deleteSupercedures",
      "returnConst": "false",
      "returnDescription": "A standard Service data which contains a list of deleted objects (Supercedures).",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement::DeriveInput",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of DeriveInput containing multiple Change Items object to be derived, a structure containing property name and values to be propgated,  Deep Copy Data, a flag to automatically submit to workflow or not, a workflow template name and a flag to propagate relations or not.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "deriveInput"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc12000.3.0",
      "description": "This operation derives multiple Change Item objects and carry forward its relations based on the propagateRelation flag. When applying deep copy rules, if user overridden deep copy information is provided in the input, then old relations are propagated to the new ItemRevision based on the input. If no deep copy information is provided in the input, the deep rules in the database will apply.",
      "id": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::deriveChangeItems#const,Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement::DeriveInput,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::deriveChangeItems",
      "returnConst": "false",
      "returnDescription": "Created Change Item.<br />Created Change Item Revision.<br />The return contains failures for any element in the input list are returned as a Partial Error in the ServiceData. The following partial errors may be returned:<br />233018&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Relation creation is not allowed.<br />233071&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Missing default workflow template preference is missing or value is empty.<br />234024&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;object_name&gt; cannot be deirved for the following reason:",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of contexts (currently, must be <b>BOMWindow</b>s) which need to be disassociated with their active <b>ChangeNoticeRevision</b>s.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.4",
      "description": "This operation disconnects a previously associated <b>ChangeNoticeRevision</b> from the context (currently, the context must be a <b>BOMWindow</b>). The <b>ChangeNoticeRevision</b> would have been associated to a <b>BOMWindow</b> using the runtime property \"cm0ChangeItemRev\" or the connectChangeNoticeToContext operation. If no <b>ChangeNoticeRevision</b> is currently associated with the <b>BOMWindow</b>, the operation does not do any further processing for that particular element in the input.",
      "id": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::disconnectChangeNoticeFromContext#const,std::vector<Teamcenter::BusinessObject>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::disconnectChangeNoticeFromContext",
      "returnConst": "false",
      "returnDescription": "A list of updated <b>BOMWindow</b>s each corresponding to the input vector are return in the ServiceData. Partial errors will be returned in the ServiceData with client index that matches the position in the input array:<br /><ul><ul><li type=\"disc\">234012 The input does not contain a valid BOM Window object.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::FindContextDataInputs",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font> structures.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "findcontextRequest"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::FindContextDataResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "P8000.0.0",
      "description": "This operation provides a flexible way of retrieving objects or data for a variety of contexts to satisfy the RichClient usability requirements for BOM Change, Supersedure, and Genealogy in Teamcenter Structure Manager.  There are helper functions in the RichClient to facilitate the consumption and conversion of the retrieved information.  In other words, this operation may pose challenges to users of this operation who are unfamiliar with the intended usage of the returned details.  For RichClient developers, it is better to use the helper functions instead.<br />The context is specified by the context string <font face=&quot;courier&quot; height=&quot;10&quot;>contextRelName</font> of an input structure, and based on the specified context, different input arguments can be supplied via a change revision object reference, and/or a pair of generic business object references.  The objects or data returned will be captured in an output structure.  The following are the possible values for the context string:<br /><ul><ul><li type=\"disc\">CM_impacted_of_solution</li><li type=\"disc\">CM_associated_change</li><li type=\"disc\">CM_supersedure_of_bomedit</li><li type=\"disc\">CM_bomedits_of_occ</li><li type=\"disc\">CM_supersedures_of_solution</li><li type=\"disc\">CM_get_supersedures_of_bomcancel</li><li type=\"disc\">CM_get_supersedures_of_bomadd</li><li type=\"disc\">CM_get_first_supersedure</li><li type=\"disc\">CM_get_pure_adds_cancels</li><li type=\"disc\">CM_get_supersedure_for_WU</li><li type=\"disc\">CM_get_pureAddsCancels_for_WU</li><li type=\"disc\">CM_get_change_of_supersedure</li><li type=\"disc\">CM_get_initial_rendering_details</li><li type=\"disc\">CM_refresh_rendering_without_supersedure</li><li type=\"disc\">CM_refresh_rendering_with_supersedure</li><li type=\"disc\">CM_get_bomline_adds</li><li type=\"disc\">CM_get_bomline_cancels</li></ul></ul>",
      "id": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::FindContextDataResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::findContextData#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::FindContextDataInputs>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::findContextData",
      "returnConst": "false",
      "returnDescription": "<font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataResponse</font> contains a list of <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font> structures and a standard service data.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BOMEdit",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "Input structure that is a list of BOMEdits.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "bomedit"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::FindSupersedureResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "P8000.0.0",
      "description": "This operation finds the Supersedures based on the BOMEdits supplied as input. A BOM change which encompasses a BOM Add or a BOM delete enables a Supersedure to be created. A user can create a Supersedure which defines the additions and deletions within a BOM.",
      "id": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::FindSupersedureResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::findSupersedure#const,std::vector<Teamcenter::BOMEdit>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::findSupersedure",
      "returnConst": "false",
      "returnDescription": "The operation returns a <font face=&quot;courier&quot; height=&quot;10&quot;>findSupersedureResponse</font> which contains a list of Supersedure objects and any failure will be reported in the standard Service data under partial errors.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::GetAllChangeHomeFolderResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "P8000.0.0",
      "description": "This operation returns a list of all Change Home folders.  This operation is created to support the Change Home UI in Change Manager.  Change Home allows users to define their own set of folders whose contents are determined by the searches/queries that are executed when the folders are expanded.  When Change Home is being opened, this operation is used to retrieve the folders that are defined for use by the current user.  Change Home will then display them based on their settings.",
      "id": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::GetAllChangeHomeFolderResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::getAllChangeHomeFolders",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::getAllChangeHomeFolders",
      "returnConst": "false",
      "returnDescription": "The list of Change Home folder(s) are returned as a vector of <font face=&quot;courier&quot; height=&quot;10&quot;>ConfigureChangeSearchData</font> inside <font face=&quot;courier&quot; height=&quot;10&quot;>GetAllChangeHomeFolderResponse</font> which also contains a <font face=&quot;courier&quot; height=&quot;10&quot;>ServiceData</font>. On the occasions when Teamcenter preferences are corrupted or when the system is running out of memory, the errors are returned in <font face=&quot;courier&quot; height=&quot;10&quot;>ServiceData</font>. Following are some possible errors returned in <font face=&quot;courier&quot; height=&quot;10&quot;>ServiceData</font>:<br /><ul><ul><li type=\"disc\">1023&nbsp;&nbsp;&nbsp;&nbsp;Unable to allocate memory</li><li type=\"disc\">1700&nbsp;&nbsp;&nbsp;&nbsp;Preference not found</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::GetBOMEditInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A vector of <font face=&quot;courier&quot; height=&quot;10&quot;>GetBOMEditInput</font> structures, each containing the necessary criteria for finding the corresponding BOMEdit object(s).  The criteria include the <i>change revision</i> object that the BOMEdit objects are associated with, the <i>BVR</i> object that represents the solution item of the change, and the <i>type</i> of the BOMEdit objects.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "bomeditRequest"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::GetBOMEditResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "P8000.0.0",
      "description": "This operation is to support the BOM Change tab in Change Manager which displays the details of the BOM Change associated with the selected change revision in the Open Change View.",
      "id": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::GetBOMEditResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::getBOMEdits#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::GetBOMEditInput>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::getBOMEdits",
      "returnConst": "false",
      "returnDescription": "<font face=&quot;courier&quot; height=&quot;10&quot;>GetBOMEditResponse</font> which contains a list of <font face=&quot;courier&quot; height=&quot;10&quot;>GetBOMEditOutput</font> structures and a standard <font face=&quot;courier&quot; height=&quot;10&quot;>ServiceData</font>.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2012_10::ChangeManagement::ContextDataInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "This is a list of ContextDataInput objects in which each one represent the context data for creating <b>ChangeItem</b> types.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2012_10::ChangeManagement::CreatableChangeTypesResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc9000.1.2",
      "description": "This operation provides the list of <b>ChangeItem</b> types that are allowed to be created by the logged-in user.",
      "id": "Teamcenter::Soa::Internal::ChangeManagement::_2012_10::ChangeManagement::CreatableChangeTypesResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::getCreatableChangeTypes#const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2012_10::ChangeManagement::ContextDataInput>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::getCreatableChangeTypes",
      "returnConst": "false",
      "returnDescription": "This operation returns a CreatableChangeTypeResponse that is a list of CreatableChangeTypesOut Structure. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors. The client id in the ServiceData can be mapped to the client id in the ContextDataInput input to the operation to detect  any failures in the operation for that specific ContextDataInput object. \n\nPossible errors returned in ServiceData are:\n234003 - Failed to find creatable Change types",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2009_06::ChangeManagement::GetNoteVariantsInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of GetNoteVariantsInput structures, each containing an object reference to a BOMEdit whose integer type is EITHER 6 (=Note Change) OR 7(=Variant Change) and a matching context string.<br />",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "getNoteVariantRequest"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::ChangeManagement::_2009_06::ChangeManagement::GetNoteVariantResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc8000.0.1",
      "description": "This operation is specifically designed to handle the retrieval of information for Note or Variant changes to be consumed by the Teamcenter Structure Manager Rich Client UI.  There are helper functions in the Rich Client to facilitate the consumption and interpretation of the retrieved information.  In other words, this operation may pose challenges to users of this operation who are unfamiliar with the intended usage of the returned details.  For Rich Client developers, it is better to use the helper functions instead.<br />The operation accepts as input a list of <font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantsInput</font> structures, each containing an object reference to a <font face=&quot;courier&quot; height=&quot;10&quot;>BOMEdit</font> whose integer type is EITHER 6 (=Note Change) OR 7(=Variant Change) and a matching context string of one of the following two possible values:<br /><ul><ul><li type=\"disc\">CM_note_change_details</li><li type=\"disc\">CM_variant_change_details</li></ul></ul><br />Based on the input structures, the operation will assemble the retrieved information in a list of <font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantOutput</font> structures, and package them together with a standard service data in the returned <font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantResponse</font> structure.",
      "id": "Teamcenter::Soa::ChangeManagement::_2009_06::ChangeManagement::GetNoteVariantResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::getNoteVariantChanges#const,std::vector<Teamcenter::Soa::ChangeManagement::_2009_06::ChangeManagement::GetNoteVariantsInput>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::getNoteVariantChanges",
      "returnConst": "false",
      "returnDescription": "<font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantResponse</font> which contains a list of <font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantOutput</font> structures and a standard service data. Following are some possible errors returned in <font face=&quot;courier&quot; height=&quot;10&quot;>ServiceData</font>:<br /><ul><ul><li type=\"disc\">233035&nbsp;&nbsp;&nbsp;&nbsp;CM_invalid_bomedit_form_prop</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::string",
              "qualifier": "&"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A string representing the participant type",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "participantType"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::string",
              "qualifier": "&"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A string representing the role name of the specified participant.",
          "freeOutputMemory": "false",
          "inputOutput": "Output",
          "name": "roleName"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc8000.2.0",
      "description": "This operation returns the role name of the specified participant type.",
      "id": "int#Teamcenter::ChangeItemRevision::cm0getParticipantRoleName#std::string,&$std::string,&",
      "name": "Teamcenter::ChangeItemRevision::cm0getParticipantRoleName",
      "returnConst": "false",
      "returnDescription": "Returns an integer representing success or failure of the operation.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of objects (currently, must be <b>ChangeNoticeRevision</b> objects) for which the previous effectivity is to be cleared.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.4",
      "description": "This operation disconnects a previously associated <b>ConfigurationContext</b> from <b>ChangeNoticeRevision</b>. If previous effectivity does not exist on the <b>ChangeNoticeRevision</b>, the operation proceeds to the next input element.",
      "id": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::removePrevEffectivityFromChgNotice#const,std::vector<Teamcenter::BusinessObject>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::removePrevEffectivityFromChgNotice",
      "returnConst": "false",
      "returnDescription": "A list of updated <b>ChangeNoticeRevision</b> objects each corresponding to the input vector are returned in the ServiceData. Partial errors will be returned in the ServiceData with client index that matches the position in the input array:<br /><ul><ul><li type=\"disc\">46238 The required Change Management template is not installed. Please install it and try again.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::UpdateChangeProperties",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "a list of UpdateChangeItemsInput structures",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "updateProps"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "P8000.0.0",
      "description": "Updates a vector of change items by using the inputs provided in the argument\nreturns the updated objects via the services data.",
      "id": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::updateChangeItems#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::UpdateChangeProperties>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::updateChangeItems",
      "returnConst": "false",
      "returnDescription": "A standard Service data which contains a list of updated objects.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::UpdateChangeNoticeRelationsIn",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of UpdateChangeNoticeRelationsIn elements each containing the details necessary for managing the secondary <b>ItemRevision</b> objects related to the <b>ChangeNoticeRevision</b>, which is associated with a <b>BOMWindow</b>.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::UpdateChangeNoticeRelationsResp",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.4",
      "description": "This operation manages the secondary <b>ItemRevision</b> objects related to the <b>ChangeNoticeRevision</b> associated with a <b>BOMWindow</b>, by adding/removing these objects to/from the relations. The managed secondary <b>ItemRevision</b> objects will have appropriate sharing of the release statuses of the <b>ChangeNoticeRevision</b>, based on the sharing mode controlled by <b>BOMWindow</b> property cm0ChangeNoticeRevShareMode. If this property is not set, the default \"Share\" mode will be used.",
      "id": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::UpdateChangeNoticeRelationsResp#Teamcenter::Soa::ChangeManagement::ChangeManagement::updateChangeNoticeRelations#const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::UpdateChangeNoticeRelationsIn>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::updateChangeNoticeRelations",
      "returnConst": "false",
      "returnDescription": "A list of AdditionalInfo structure elements each corresponding to the input list. The following partial errors may be returned grouped by input element index:<br /><ul><ul><li type=\"disc\">A revision of the selected BOMLine Item already exists in the pseudo folder of the Change Notice Revision.</li><li type=\"disc\">There is no Change Notice Revision set on the current BOMWindow.</li><li type=\"disc\">234005&nbsp;&nbsp;&nbsp;&nbsp;Either one of date or unit effectivity must be specified. </li><li type=\"disc\">234006&nbsp;&nbsp;&nbsp;&nbsp;Missing release status on the specified Change Notice Revision.</li><li type=\"disc\">234007&nbsp;&nbsp;&nbsp;&nbsp;The specified Change Notice Revision is currently not effective.   </li><li type=\"disc\">234008&nbsp;&nbsp;&nbsp;&nbsp;Solution folder of the specified Change Notice Revision may not be modifiable. Please check the conditions on \"Cm0isCMHasSolutionItemCreatable\".</li><li type=\"disc\">234009&nbsp;&nbsp;&nbsp;&nbsp;Impacted folder of the specified Change Notice Revision may not be modifiable. Please check the conditions on \"Cm0isCMHasImpactedItemCreatable\".</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::UpdateSupercedureData",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "Input parameter that comprises of a list of <font face=&quot;courier&quot; height=&quot;10&quot;>UpdateSupercedureData</font> structure elements.<br />",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "supercedureTobeUpdated"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "P8000.0.0",
      "description": "This operation updates Supercedures for each <font face=&quot;courier&quot; height=&quot;10&quot;>UpdateSupercedureData</font> supplied. The <font face=&quot;courier&quot; height=&quot;10&quot;>UpdateSupercedureData</font> contains information for properties such as <i>bomAddorCancelFlag</i>, <i>operation</i>, <i>tags</i> and the <i>supTag</i> which specifies the <b>Supercedure</b> business object to be updated. A Supercedure represents a relation that graphically displays the deleted components and new components that replace them. Once a Supercedure is created, new BOM elements can be added or removed which allows the user to indicate the Supercedure to be edited and updated.",
      "id": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::updateSupercedures#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::UpdateSupercedureData>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::updateSupercedures",
      "returnConst": "false",
      "returnDescription": "A standard Service data which contains a list of updated objects (Supercedures).\nInvalid operation on supercedure or any other error will be returned under partial errors.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::ItemRevision",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The change <b>ItemRevision</b> which needs to be checked.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "changeObject"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2020_01::MassUpdate::HasActiveMarkupAssociatedOut",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc12000.3.0",
      "description": "This operation checks if there are active Mass Update <b>Fnd0Markup</b> objects associated with the <b>PSBOMViewRevision</b> of impacted <b>ItemRevision</b> objects related to the input change object <b>ItemRevision</b>.",
      "id": "Teamcenter::Soa::Internal::ChangeManagement::_2020_01::MassUpdate::HasActiveMarkupAssociatedOut#Teamcenter::Soa::ChangeManagement::MassUpdate::hasActiveMarkupAssociated#const,Teamcenter::ItemRevision,&",
      "name": "Teamcenter::Soa::ChangeManagement::MassUpdate::hasActiveMarkupAssociated",
      "returnConst": "false",
      "returnDescription": "Returns true, if there are active Mass Update <b>Fnd0Markup</b> objects associated with the impacted <b>ItemRevisions</b> attached to the input <b>ItemRevision</b> change object, else false.<br />The following partial errors maybe returned:<br /><ul><ul><li type=\"disc\">43163 Change ItemRevision is null or invalid.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::ItemRevision",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The change <b>ItemRevision</b> which manages the mass update.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "changeObject"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2020_01::MassUpdate::SaveImpactedAssembliesIn",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": " The list of input structures to save impacted assemblies.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "impactedObjectsInfo"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc12000.3.0",
      "description": "This operation saves proposed changes as <b>Fnd0MarkupChange</b> objects for an <b>Fnd0Markup</b> related to the <b>PSBOMViewRevision</b> of an impacted <b>ItemRevision</b>. Based on the modified properties specified on <b>Fnd0MUImpactedParents</b>, the operation will add, update or delete markup changes.",
      "id": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::MassUpdate::saveImpactedAssemblies#const,Teamcenter::ItemRevision,&$const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2020_01::MassUpdate::SaveImpactedAssembliesIn>,&",
      "name": "Teamcenter::Soa::ChangeManagement::MassUpdate::saveImpactedAssemblies",
      "returnConst": "false",
      "returnDescription": "The following partial errors maybe returned:<br /><ul><ul><li type=\"disc\">43220 No Proposed Item Revision is provided for the impacted object</li><li type=\"disc\">43221 An invalid action is provided for the impacted object</li><li type=\"disc\">43222 The Proposed Item Revision provided is same as the impacted object</li><li type=\"disc\">43223 An Invalid Proposed Item Revision is provided for the impacted object</li><li type=\"disc\">43224 The Problem Item Revision is same as the Proposed Item Revision</li><li type=\"disc\">43159 ChangeItemRevision has multiple updates.</li><li type=\"disc\">43001 Internal Error</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "tag_t",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "Change Item Revision",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "changeItemRevision"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "tag_t",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Related objects to be processed",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "relatedObjectsToProcess"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string",
                  "qualifier": ""
                },
                {
                  "dataType": "std::string",
                  "qualifier": ""
                }
              ],
              "dataType": "std::map",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "Extra options to consider while calculating impacted objects.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "extraOptionsToConsider"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "tag_t",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Probable Impacted Items",
          "freeOutputMemory": "false",
          "inputOutput": "Output",
          "name": "probableImpactedItems"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "true",
      "const": "false",
      "createRelease": "tc12000.2.0",
      "description": "This operation takes the objects to process and returns probable impacted items as output.",
      "id": "int#cm0::Teamcenter::CM::WorkspaceObject::cm0GetImpactedObjects#const,tag_t,&$std::vector<tag_t>,&$const,std::map<std::string><std::string>,&$std::vector<tag_t>,&",
      "name": "cm0::Teamcenter::CM::WorkspaceObject::cm0GetImpactedObjects",
      "returnConst": "false",
      "returnDescription": "Returns vector of probable impacted items.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::ConfigureChangeSearchData",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "Structures containing the details of the folders to be added or removed.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "P8000.0.0",
      "description": "Add or remove a change specific searches folder with the given inputs.  This operation is created to support the Manage Saved Search capability for Change Home within Change Manager.  It is important to note that, if called directly, there is a possibility of overwriting any pre existing configurations for Change Home, at site and/or user level.  So, <b>USE IT WITH CAUTION</b>.",
      "id": "Teamcenter::Soa::Server::ServiceData#Teamcenter::Soa::ChangeManagement::ChangeManagement::configureChangeSearches#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::ConfigureChangeSearchData>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::configureChangeSearches",
      "returnConst": "false",
      "returnDescription": "A standard Service data. Following are some possible errors returned in <font face=&quot;courier&quot; height=&quot;10&quot;>ServiceData</font>:<br /><ul><ul><li type=\"disc\">1023&nbsp;&nbsp;&nbsp;&nbsp;Unable to allocate memory</li><li type=\"disc\">1700&nbsp;&nbsp;&nbsp;&nbsp;Preference not found</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::ConnectChangeNoticeToContextInElem",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of ConnectChangeNoticeToContextInElem elements each containing the details of a single element necessary for associating a changeObject ( currently, must be <b>ChangeNoticeRevision</b> or derived class ) with the optional container ( currently, must be <b>BOMWindow</b>) and the information necessary to create and associate previous effectivity.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::ConnectChangeNoticeToContextResp",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.4",
      "description": "This operation associates the given <b>ChangeNoticeRevision</b> to a context (currently, <b>BOMWindow</b>) for the purpose of tracking newly created revisions or revisions from revise operation in a session.",
      "id": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::ConnectChangeNoticeToContextResp#Teamcenter::Soa::ChangeManagement::ChangeManagement::connectChangeNoticeToContext#const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::ConnectChangeNoticeToContextInElem>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::connectChangeNoticeToContext",
      "returnConst": "false",
      "returnDescription": "The updated BOMWindow will be returned in the serviceData. The following partial errors may be returned grouped by input element index:<br /><ul><ul><li type=\"disc\">234006 Missing valid release status on the specified <b>ChangeNoticeRevision</b>.</li><li type=\"disc\">234007 The specified Enterprise change object is currently not effective.   </li><li type=\"disc\">234008 Solution folder of the specified Enterprise change object may not be modiafiable. Please check the conditions on \"Cm0isCMHasSolutionItemCreatable\".</li><li type=\"disc\">234009 Impacted folder of the specified Enterprise change object may not be modiafiable. Please check the conditions on \"Cm0isCMHasImpactedItemCreatable\".</li><li type=\"disc\">46001&nbsp;&nbsp;&nbsp;&nbsp;Invalid tag received by BOM Module.</li><li type=\"disc\">46238&nbsp;&nbsp;&nbsp;&nbsp;The required Change Management template is not installed. Please install it and try again.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateBOMEditInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A vector of <font face=&quot;courier&quot; height=&quot;10&quot;>CreateBOMEditInput</font> structures, each providing the necessary input arguments for constructing a <b>BOMEdit</b> object.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "bomEditRequest"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateBOMEditResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "P8000.0.0",
      "description": "This operation is to support the creation of BOM Change in Structure Manager.  A number of <b>BOMEdit</b> objects are created when the solution item BOMViewRevision (BVR) is saved and then compared to the impacted item BVR in two side by side BOM windows.  Central to this operation is the change revision object that ties all the <b>BOMEdit</b> objects together to represent the whole BOM Change.",
      "id": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateBOMEditResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::createBOMEdits#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateBOMEditInput>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::createBOMEdits",
      "returnConst": "false",
      "returnDescription": "<font face=&quot;courier&quot; height=&quot;10&quot;>CreateBOMEditResponse</font> which contains a list of <b>BOMEdit</b> object references and a standard <font face=&quot;courier&quot; height=&quot;10&quot;>ServiceData</font>.  Following are some possible error(s) returned in ServiceData:<br /><ul><ul><li type=\"disc\">233029&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The relation between the solution and the impacted is not found.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateChangeItemInputs",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "a list of CreateChangeItemInputs structures",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "changeItemProps"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateChangeItemsResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "P8000.0.0",
      "description": "Creates an list of Change Items of specified type and any associated data with each change item including Change Item Revision,\nChange Item Master Form, and Change Item Revision Master form based on the input attribute structures.\nAlso it creates relationship between the objects passed as in input properties and assigns created change item to a specified\nuser as requestor, analyst, admin or role that is specified in the input.\nIt also updates any additional properties of the change item that is passed in the input.\nIf the relation data contains a change item an attempt will be made to propagate values from this parent change item to\nthe newly create item based on the propagation rules defined in the change configuration also an attempt will be made to\ncreate the prpoer types of relations between the change item that is created and input objects.\nIncase of Problem Report (PR) if the CMRoles is empty the requestor of the PR will be the same as the creator of the PR.",
      "id": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateChangeItemsResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::createChangeItems#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateChangeItemInputs>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::createChangeItems",
      "returnConst": "false",
      "returnDescription": "contains a list of CreateChangeItemsOutput structures\n(which contain the newly created change item and its revision and clientID).\nAny failure will be returned with client id mapped to error\nmessage in the standard ServiceData list of partial errors.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement::CreateChangeLineageInputData",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "Input data for creating lineage. A unique group id will be assigned for each input data.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement::CreateChangeLineageResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.5",
      "description": "This operation creates <b>CMSolutionToImpacted</b> relation between all the Solution Items and all the Impacted Items for a <b>ChangeNoticeRevision</b> and then assign a group ID to them. To determine the group ID, the <b>CMSolutionToImpacted</b> relations are traversed for <b>ChangeNoticeRevision</b> and then find the largest group ID number present for this <b>ChangeNoticeRevision</b> in context. The new group ID is the next incremented number. This group number is assigned to all the <b>CMSolutionToImpacted</b> relations created for the input data.<br />Each CreateChangeLineageInputData input will have new group id assigned for the relations created for that group.<br /><br />Note: Solution Items and Impacted Items are the objects which are attached to <b>ChangeNoticeRevision</b> using <b>CMHasSolutionItem</b> and <b>CMHasImpactedItem</b> relation respectively.",
      "id": "Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement::CreateChangeLineageResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::createChangeLineage#const,std::vector<Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement::CreateChangeLineageInputData>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::createChangeLineage",
      "returnConst": "false",
      "returnDescription": "A list of created relations, each corresponding to the input list. The following partial errors may be returned:<br />234018:The creation of a Change Lineage has failed because either an invalid Item or no solution Item or an impacted item is provided.<br />234019:Not all solution Items are attached to the same <b>ChangeNoticeRevision</b>.<br />234020:Not all impacted Items are attached to the same <b>ChangeNoticeRevision</b>.<br />233052:Some impacted Items do not contain any attached <b>ChangeNoticeRevision</b>.<br />233053:Some solution Items do not contain any attached <b>ChangeNoticeRevision</b>.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::PreviousEffectivity",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of PreviousEffectivity elements each containing the details of a single element necessary for creating or updating a <b>ConfigurationContext</b> and associate with the passed in <b>ChangeNoticeRevision</b>",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::CreateOrUpdatePreviousEffResp",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.4",
      "description": "This operation creates a <b>ConfigurationContext</b> object with the provided previous effectivty parameters of endItem and one of unit or date. This <b>ConfigurationContext</b> is attached to the passed in <b>ChangeNoticeRevision</b> upon creation. If the <b>ConfigurationContext</b> is already present, the revision rule content is updated with the passed in previous effectivity parameters.",
      "id": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::CreateOrUpdatePreviousEffResp#Teamcenter::Soa::ChangeManagement::ChangeManagement::createOrUpdatePreviousEffectivity#const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::PreviousEffectivity>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::createOrUpdatePreviousEffectivity",
      "returnConst": "false",
      "returnDescription": "A list of AdditionalInfo structure elements objects each corresponding to the input array. The ConfigurationContext objects created appear under the \"Effectivity\" key of objMap. The following partial errors may be returned grouped by input element index:<br /><ul><ul><li type=\"disc\">234004&nbsp;&nbsp;&nbsp;&nbsp;The required argument endItem is missing.</li><li type=\"disc\">234005&nbsp;&nbsp;&nbsp;&nbsp;Either one of date or unit effectivity must be specified.</li><li type=\"disc\">46238&nbsp;&nbsp;&nbsp;&nbsp;The required Change Management template is not installed. Please install it and try again.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateSupercedureInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "Input parameter that is a list of <font face=&quot;courier&quot; height=&quot;10&quot;>CreateSupercedureInput</font> structure. This comprises of elements that contains input information necessary to create Supersedure objects.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "supercedureProperties"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateSupercedureResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "P8000.0.0",
      "description": "This operation creates <b>Supercedure</b> objects for each <font face=&quot;courier&quot; height=&quot;10&quot;>CreateSupercedureInput</font> supplied. A Supercedure represents a relation that graphically displays the deleted components and the new components that replace them. Transfer Supercedure is a specific type that is created where a component is transferred from one assembly to another level in a different assembly.",
      "id": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateSupercedureResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::createSupercedures#const,std::vector<Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateSupercedureInput>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::createSupercedures",
      "returnConst": "false",
      "returnDescription": "<font face=&quot;courier&quot; height=&quot;10&quot;>CreateSupercedureResponse</font> object which contains clientID and created Supercedures (WSO). Any failure will be reported in the standard Service data under partial errors.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::CreateAndSubmitChangeInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of CreateAndSubmitChangeInput stucture that represent input for creating <b>ChangeItem</b> object, workflow related information, participants related information and if created object is of type <b>ChangeNoticeRevision</b> set it as active change based on the input.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::CreateAndSubmitChangeResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc14000.2.0",
      "description": "Create <b>ChangeItem</b> object and any associated data (<b>ChangeItemRevision</b>, <b>ChangeItemMaster</b> <b>Form</b>, <b>ChangeItemRevision Master Form</b>) based on the input structure.<br />The created <b>ChangeItemRevision</b> object is submitted to a workflow defined by a workflow template information. If the workflow template information is not provided, the created <b>ChangeItemRevision</b> object is submitted to default workflow template.<br /><b>Participant</b> objects are added to the newly created <b>ChangeItemRevision</b> object based on the input provided.<br />Set newly created <b>ChangeNoticeRevision</b> as active change based on input provided.",
      "id": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::CreateAndSubmitChangeResponse#Teamcenter::Soa::ChangeManagement::ChangeManagement::createAndSubmitChangeObjects#const,std::vector<Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::CreateAndSubmitChangeInput>,&",
      "name": "Teamcenter::Soa::ChangeManagement::ChangeManagement::createAndSubmitChangeObjects",
      "returnConst": "false",
      "returnDescription": "A list of the business objects that were created. The newly created <b>ChangeItem</b> and <b>ChangeItemRevision</b> are added to the created list of the ServiceData while the input container object is added to the updated list.<br />Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors. The client id of the output can be mapped to the client id provided as input in order to detect which object creation failed. For example, the input to createAndSubmitChangeObjects (which is a list of CreateAndSubmitChangeInput) may have {{&ldquo;clientId1&quot;, createChange1}, {&quot;clientId2&quot;, createChange2}} as two inputs and therefore, if the output contains partial errors in ServiceData for clientId2, it is known that creation of the second object is failed.<br />The following partial errors may be returned:<br />234025 - Unable to create &quot;Change Notice&quot; object.<br />214116 - The input relation type name is not a valid relation type name.<br />214411 - The creation of workflow process has failed.<br />392003 - Invalid assignee.<br />392002 - Invalid participant type.<br />392006 - The Participant type &quot;Change Implementation Board&quot; is not allowed for WorkspaceObject of type &quot;Change Request&quot;.",
      "returnFreeMemory": "false",
      "static": "false"
    }
  ],
  "ServiceInterface": [
    {
      "createRelease": "P8000.0.0",
      "dependencies": "",
      "description": "The ChangeManagement service provides a variety of operations to satisfy primarily the specific needs of the Change Manager GUI.  There are operations to support the Change Home functionality for finding and creating Change Home folders.  There are also a multitude of operations to support the BOM Change, Supersedure, and Genealogy functionalities.  It is important to note that many of these operations, when used directly, can be challenging as they are dealing with objects and data in a more primitive way.  For client (UI) developers, it is more advisable to use the helper methods available in the client plugins.The ChangeManagement service can be used for supporting following use cases:<br /><ul><ul><li type=\"disc\">Retreiving a list of all Change Home folders for the user</li><li type=\"disc\">Adding and Removing change home folder(s)</li><li type=\"disc\">Finding all BOMEdit objects for a given change revision</li><li type=\"disc\">Creating a BOM Change within the Structure Manager</li><li type=\"disc\">Creating supersedures</li><li type=\"disc\">Updating supersedures</li><li type=\"disc\">Finding supersedures</li><li type=\"disc\">Deleting supersedures</li><li type=\"disc\">Getting the details for a note change</li><li type=\"disc\">Getting the necessary details for a variety of BOM Change/supersedure related contexts</li></ul></ul>",
      "libraryName": "TcSoaChangeManagement",
      "name": "ChangeManagement",
      "namespace": "Teamcenter::Soa::ChangeManagement",
      "serviceLibraryRef": "Java:&nbsp;&nbsp;&nbsp;&nbsp;TcSoaChangeManagementLoose.jar<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TcSoaChangeManagementStrong.jar<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TcSoaChangeManagementTypes.jar<br />C++:&nbsp;&nbsp;&nbsp;&nbsp;libtcsoachangemanagement.dll<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;libtcsoachangemanagementmngd.dll<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;libtcsoachangemanagementtypes.dll<br />.NET:&nbsp;&nbsp;&nbsp;&nbsp;TcSoaChangeManagementLoose.dll<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TcSoaChangeManagementStrong.dll<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TcSoaChangeManagementTypes.dll<br />"
    },
    {
      "createRelease": "tc12000.3.0",
      "dependencies": "",
      "description": "Mass Update is a feature that automates the update of multiple assemblies at one time. It will track and manage under a specified change object <b>ItemRevision</b>, the proposed changes to all structures impacted by an identified problem <b>ItemRevision</b>, allowing the user to propose changes to the structures such as <i>Add Part, Replace Part, Remove Part As Subtitute, </i>or<i>  Add Part as Substitute</i>.",
      "libraryName": "TcSoaChangeManagement",
      "name": "MassUpdate",
      "namespace": "Teamcenter::Soa::ChangeManagement",
      "serviceLibraryRef": ""
    }
  ],
  "Struct": [
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::StringToIntVectorMap"
            }
          ],
          "description": "A map (string/list of integers) of generic key to integer values.",
          "name": "intMap"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::StringToDblVectorMap"
            }
          ],
          "description": "A map (string/list of doubles) of generic key to double values.",
          "name": "dblMap"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::StringtoStrVectorMap"
            }
          ],
          "description": "A map (string/list of strings) of generic key to string values.",
          "name": "strMap"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::StringToObjVectorMap"
            }
          ],
          "description": "A map (string/list of <b>BusinessObject</b>s) of generic key to  <b>BusinessObject</b> values.",
          "name": "objMap"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::StringToDateVectorMap"
            }
          ],
          "description": "A map (string/list of dates) of generic key to date values.",
          "name": "dateMap"
        }
      ],
      "createRelease": "tc10000.1.4",
      "description": "a generic structure to capture additional information.<br /><ul><ul><li type=\"disc\">intMap&nbsp;&nbsp;&nbsp;&nbsp;A map of string to a list of integers. </li><li type=\"disc\">dblMap&nbsp;&nbsp;&nbsp;&nbsp;A map of string to a list of doubles. </li><li type=\"disc\">strMap&nbsp;&nbsp;&nbsp;&nbsp;A map of string to a list of strings. </li><li type=\"disc\">objMap&nbsp;&nbsp;&nbsp;&nbsp;A map of string to a list of business objects.</li><li type=\"disc\">dateMap&nbsp;&nbsp;&nbsp;&nbsp;A map of string to a list of dates.</li></ul></ul>",
      "isPublished": "false",
      "name": "AdditionalInfo",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Name of the Change type.",
          "name": "typeName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Display name of the Change type.",
          "name": "typeDisplayName"
        }
      ],
      "createRelease": "tc9000.1.2",
      "description": "Structure holds the Change type information.",
      "isPublished": "false",
      "name": "ChangeTypeInfo",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2012_10::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Tracking client invoking this method this information not persisted, Optional",
          "name": "clientID"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "iD",
          "name": "iD"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The revision ID that will be set on the new object, Required",
          "name": "revisionID"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Name that will be used on the new object, Required",
          "name": "name"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Description that will be used on the new object, Required",
          "name": "description"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "This will be used to determine what type of change item that is to be created, Required",
          "name": "type"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::RelationshipData"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of objects and their relations to the change item, Optional",
          "name": "relationshipData"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::ExtendedAttributes"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of additional attributes that might be passed from a client, Optional",
          "name": "extendedData"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "Input structure for holding create change item input.",
      "isPublished": "true",
      "name": "CreateChangeItemInputs",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Identifier that helps the client to track the object(s) created.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::ChangeItem"
            }
          ],
          "description": "Change item object reference that was created.",
          "name": "changeItem"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::ChangeItemRevision"
            }
          ],
          "description": "change item revision that is created.",
          "name": "itemRev"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "Output structure for createChangeItems operation",
      "isPublished": "true",
      "name": "CreateChangeItemsOutput",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateChangeItemsOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of CreateChangeItemsOutput",
          "name": "output"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Standard ServiceData member",
          "name": "serviceData"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "Response structure for createItems operation",
      "isPublished": "true",
      "name": "CreateChangeItemsResponse",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "This unique ID is used to identify return data elements and partial errors associated with this input structure.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::WorkspaceObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of WorkspaceObject which are referred as Solution Items for the <b>ChangeNoticeRevision</b>. All the solution items must belong to same <b>ChangeNoticeRevision</b>.",
          "name": "solutionItems"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::WorkspaceObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of WorkspaceObject which are referred as Impacted Items for the <b>ChangeNoticeRevision</b>. All the impacted items must belong to same <b>ChangeNoticeRevision</b>.",
          "name": "impactedItems"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "Input data for creation of lineage.",
      "isPublished": "true",
      "name": "CreateChangeLineageInputData",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The unmodified value from the CreateChangeLineageInputData.clientId. This can be used by the caller to identify this data structure with the source input data.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::ImanRelation"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of created relations.",
          "name": "relations"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "Change Lineage output.",
      "isPublished": "true",
      "name": "CreateChangeLineageOutput",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Service data.",
          "name": "serviceData"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement::CreateChangeLineageOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Change Lineage output.",
          "name": "output"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "Change Lineage creation response.",
      "isPublished": "true",
      "name": "CreateChangeLineageResponse",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::AdditionalInfo"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of AdditionalInfo structures. The created or updated ConfigurationContext object representing the previous effectivity will appear under the objMap key \"Effectivity\".",
          "name": "info"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Service data capturing partial errors using the input array index as client id.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.4",
      "description": "CreateOrUpdatePreviousEffResp structure contains a list of AdditionalInfo elements, the size of which matches the input element list. It also includes the standard ServiceData object.",
      "isPublished": "false",
      "name": "CreateOrUpdatePreviousEffResp",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "A unique client identifier. This is a unique string supplied by the caller. This ID <br />is used to identify return data elements and partial errors associated with this input structure.<br />",
          "name": "clientID"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::PSBOMViewRevision"
            }
          ],
          "description": "This parameter represents a reference to the solution item BOM View Revision <br />(BVR) and is a required parameter. A solution item is a new component that replaces an old component in the parent assembly. Solution items are supplementary components that are involved in the solution the change is bringing about and the affected item represents the final assembly product containing the solution items.<br />",
          "name": "solutionBvr"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "This required parameter determines if the Supercedure created is a transfer type <br />Supercedure and takes in a boolean true or false value. Transfer Supercedures are generated when a component is moved from one assembly to another.<br />",
          "name": "isTransferred"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of BOM Adds which represents the additions made to the assembly. It is a <br />required input element.<br />",
          "name": "bomAdds"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of BOM Cancels which denotes the deletions made from the assembly and <br />is a required input parameter.<br />",
          "name": "bomCancels"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::ExtendedAttributes"
            }
          ],
          "description": "A placeholder for additional attributes and this is an optional parameter. i.e it can be empty.<br />",
          "name": "extendedAttributes"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "Input structure for createSupercedures operation",
      "isPublished": "true",
      "name": "CreateSupercedureInput",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Identifier that helps the client to track the object(s) created.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of tags to the supercedure reference that was created",
          "name": "supercedure"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "Output structure for createSupercedures operation",
      "isPublished": "true",
      "name": "CreateSupercedureOutput",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::CreateSupercedureOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "This represents a list of created Supercedure objects.",
          "name": "output"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The SOA framework object containing Supercedure objects that were created <br />based on the input and error information returned based on validations performed.<br />",
          "name": "serviceData"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "Response structure containing list of Supercedure objects and partial errors.",
      "isPublished": "true",
      "name": "CreateSupercedureResponse",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Name of the folder",
          "name": "name"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "Indicates if the folder is visible or not visible.",
          "name": "visible"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Indicates the name of the query.",
          "name": "queryName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Indicates the name of the saved search name.",
          "name": "savedSearchName"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Indicates saved query criterias.",
          "name": "queryCriteria"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Indicates saved query values.",
          "name": "queryValues"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "Indicates folder is site level or user level and default is user level which is false.",
          "name": "isFolderSiteLevel"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Indicates folder to be added or removed to add value should be Add and to delete value should be Remove.",
          "name": "operation"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "<font face=&quot;courier&quot; height=&quot;10&quot;>ConfigureChangeSearchData</font> structure represents all the details of a Change Home folder.",
      "isPublished": "true",
      "name": "ConfigureChangeSearchData",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "The related object to be deep copied.",
          "name": "attachedObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement::PropertyValueMap"
            }
          ],
          "description": "deepCopyProperties.",
          "name": "deepCopyProperties"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Object type name of the operation being perfomed.",
          "name": "operationInputType"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement::DeepCopyData"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of DeepCopyData for the objects of the relation or reference property objects of the attached object.",
          "name": "childDeepCopyData"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement::PropertyValueMap"
            }
          ],
          "description": " Map to provide input property names and values of attached object. These property values will be applied on propagated objects. Map of property name(key) and property values(values) (string, list of strings) in string format of attached object, to be set on copied object of attached object. The calling client is responsible for converting the different property types (int, float, date .etc) to a string using the appropriate toXXXString functions in the SOA client framework Property class.",
          "name": "inputProperties"
        }
      ],
      "createRelease": "tc12000.3.0",
      "description": "DeepCopyData stores the deep copy information that will be copied via derive operation. It also stores the nested deep copy data at the next level.",
      "isPublished": "true",
      "name": "DeepCopyData",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Input string to uniquely identify the input.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::ChangeItemRevision"
            }
          ],
          "description": "The <b>ChangeNoticeRevision</b> associated with the lineage to be deleted.",
          "name": "changeNoticeRev"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::WorkspaceObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of objects for which the related lineage will be deleted.",
          "name": "objects"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "DeleteChangeLineageInputData structure contains clientId to uniquely identify the input, an object reference that can be used to point to the ChangeNoticeRevision and list to hold any number of business objects for which change lineage has to be deleted.",
      "isPublished": "true",
      "name": "DeleteChangeLineageInputData",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2015_10::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of Problem Report or Change Request objects to be derived.",
          "name": "selectedObjects"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement::DerivePropertyValueInput"
            }
          ],
          "description": "A map of property name (as key) and property values (as value) in string format. Each value is a list of strings to support both single valued and multi valued properties of types. The calling client is responsible for converting the different property types (like integer, double, date, etc) to a string using the appropriate to&lt; type &gt;String function (e.g. toIntString and toDateString) in the client framework's Property class.",
          "name": "derivePropertyData"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement::DeepCopyData"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of DeepCopyData to be propagated to the derived Change Item objects.",
          "name": "deepCopyDatas"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "This is used to indicate whether the derived Change Item object will be automatically submitted to Workflow. If true will submit the derived object to designated workflow template, otherwise the derived object will not be submitted to workflow.",
          "name": "submitToWorkflow"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The workflow template name to be executed, if not informed, the default workflow template will be used.",
          "name": "workflowTemplateName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "If TRUE will propagate the relation defined in Deep Copy Rule, if FALSE will not propagate the relations.",
          "name": "propagateRelation"
        }
      ],
      "createRelease": "tc12000.3.0",
      "description": "Structure that contains multiple Change Items object to be derived, a structure containing property name and values to be propagated,  Deep Copy Data, a flag to automatically submit to workflow or not, a workflow template name and a flag to propagate relations or not.",
      "isPublished": "true",
      "name": "DeriveInput",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The buisness object name to which the properties belong.",
          "name": "boName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement::PropertyValueMap"
            }
          ],
          "description": "Map of property name values.",
          "name": "propertyNameValues"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement::DerivePropertyValueInputMap"
            }
          ],
          "description": "Vector of derive property value input.",
          "name": "compoundDeriveInput"
        }
      ],
      "createRelease": "tc12000.3.0",
      "description": "This map is of property name (as key) and a vector of property values input, business object in string format, property name values map and compund derive input. The business object is a simple string. The property name values is a list of strings to support both single valued and multi valued properties of types. The calling client is responsible for converting the different property types (like integer, double, date, etc) to a string using the appropriate to&lt; type &gt;String function (e.g. toIntString and toDateString) in the client framework's Property class. The compound derive input is another type of def of property value input data structure.",
      "isPublished": "true",
      "name": "DerivePropertyValueInput",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The name of the attribte to modify or change or update.",
          "name": "attributeName"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Values for the attribute ateast must have one value.",
          "name": "values"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "Input structure for createItems operation to support setting attribute values on the created Item,\nItemRevision, or corresponding master forms that may be created with the objects.",
      "isPublished": "true",
      "name": "ExtendedAttributes",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::ChangeItemRevision"
            }
          ],
          "description": "An object reference to a change revision.",
          "name": "changeRev"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "An object reference to any BO type.",
          "name": "primaryContextInputData"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "An object reference to any BO type.",
          "name": "secondaryContextInputData"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "A context string.",
          "name": "contextRelName"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "<font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataInputs</font> structure contains an object reference to a change revision, a pair of object references to any Business Object type, and a context string which determines what and how the input objects will be used to obtain the desired output objects.",
      "isPublished": "true",
      "name": "FindContextDataInputs",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::ChangeItemRevision"
            }
          ],
          "description": "A reference to change revision. Can be empty.",
          "name": "changeRev"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list to hold any number of returned business objects.",
          "name": "contextOutputData"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "int"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of counts used to sort out the Adds and the Cancels.",
          "name": "vBomEditCount"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "<font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font> structure contains an object reference that can be used to point to a change revision, a list that can be used to hold any number of returned business objects, and a list of counts to help sort out the Adds and the Cancels from the returned object list.",
      "isPublished": "true",
      "name": "FindContextDataOutput",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::FindContextDataOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font> structures.",
          "name": "output"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "A service data.",
          "name": "serviceData"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "<font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataResponse</font> structure contains a list of <font face=&quot;courier&quot; height=&quot;10&quot;>FindContextDataOutput</font> structures and a service data.",
      "isPublished": "true",
      "name": "FindContextDataResponse",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BOMSupersedure"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of reference to supersedure.",
          "name": "findsupercedure"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BOMEdit"
            }
          ],
          "description": "A reference to BOMEdit to which a supersedure is associated to.",
          "name": "bomedit"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "Output structure find supercedure.",
      "isPublished": "true",
      "name": "FindSupersedureOutput",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::FindSupersedureOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A reference to list of supersedures.",
          "name": "supersedureOutput"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The SOA framework object containing Supercedure objects that were <br />returned based on the input and error information returned based on validations performed.<br />",
          "name": "serviceData"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "Output structure for list of BOMSupersedure and ServiceData.",
      "isPublished": "true",
      "name": "FindSupersedureResponse",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "The <b>ChangeNoticeRevision</b> which is to be used to associate with the context. Currently, only <b>BOMWindow</b> object is supported for context.",
          "name": "changeObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "A context to which the <b>changeNoticeRevision</b> is to be associated. Currently, if specified must be <b>BOMWindow</b> object.",
          "name": "context"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The mode to be used for determining how the revisions in the solution folder of the <b>ChangeNoticeRevision</b> are to be released. If this optional argument is not empty, it must be one of \"Share\", \"None\", \"Clone\", \"ShareEffectivityOnly\". <br /><ul><ul><li type=\"disc\">Share: share the release status on revisions with the \"preferred\" release status On <b>ChangeNoticeRevision</b> that is a subset of the values given by preference \"MEMCN_release_statues\".</li><li type=\"disc\">None: no release status on revisions.</li><li type=\"disc\">Clone: new release statuses on revisions cloned from \"preferred\" release status.</li><li type=\"disc\">ShareEffectivityOnly: new release statues on revisions with same type as the \"preferred\" release status on <b>ChangeNoticeRevision</b>, but with shared effectivity. If specified, will set the \"cm0ChangeNoticeRevShareMode\" runtime property on the <b>BOMWindow</b>.</li></ul></ul>",
          "name": "shareMode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::AdditionalInfo"
            }
          ],
          "description": "Currently, not used.",
          "name": "info"
        }
      ],
      "createRelease": "tc10000.1.4",
      "description": "ConnectChangeNoticeToContextInElem structure contains the details of a single element necessary for associating a changeObject ( currently, must be <b>ChangeNoticeRevision</b>) with the optional container ( currently, must be <b>BOMWindow</b>).",
      "isPublished": "false",
      "name": "ConnectChangeNoticeToContextInElem",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::ConfigureChangeSearchData"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A vector of <font face=&quot;courier&quot; height=&quot;10&quot;>ConfigureChangeSearchData</font> structures which represent the details of change home folders",
          "name": "output"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Standard ServiceData member",
          "name": "serviceData"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "<font face=&quot;courier&quot; height=&quot;10&quot;>GetAllChangeHomeFolderResponse</font> structure encapsulates the list of returned Change Home folders as a vector of <font face=&quot;courier&quot; height=&quot;10&quot;>ConfigureChangeSearchData</font> structures, in addition to the standard mandatory <font face=&quot;courier&quot; height=&quot;10&quot;>ServiceData</font> structure.",
      "isPublished": "true",
      "name": "GetAllChangeHomeFolderResponse",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::ChangeItemRevision"
            }
          ],
          "description": "A reference to the revision of the change item, Required.",
          "name": "changeRev"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::PSBOMViewRevision"
            }
          ],
          "description": "Reference to PSBOMViewRevision of the affected item, Required",
          "name": "affectedBvr"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The type of this BOMEdit valid integer values are 1 to 10. BOM_Add=1,BOM_Cancel=2, BOM_Quantity_Change=3, BOM_Move=4,BOM_Reshape=5,BOM_Note_Change=6,BOM_Variant_Change=7,LBOM_Add=8,LBOM_Cancel=9, and LBOM_Quantity_Change=10",
          "name": "bomEditType"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "<font face=&quot;courier&quot; height=&quot;10&quot;>GetBOMEditInput</font> structure represents a set of criteria for finding any existing BOMEdit object(s) that satisfy the criteria.  It is possible that none satisfies the input criteria.",
      "isPublished": "true",
      "name": "GetBOMEditInput",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BOMEdit"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The BOMEdit objects that satisfy the input criteria as represented by the corresponding GetBOMEditInput structure. This can be empty.",
          "name": "bomEdits"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::ChangeItemRevision"
            }
          ],
          "description": "The change revision associated with the returned BOMEdit object(s).",
          "name": "changeRev"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "GetBOMEditOutput structure contains a list of BOMEdit objects and the associated change revision object. The list contains the BOMEdit objects that satisfy the input criteria as represented by the corresponding GetBOMEditInput structure, and it can be empty.",
      "isPublished": "true",
      "name": "GetBOMEditOutput",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::GetBOMEditOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A vector of <font face=&quot;courier&quot; height=&quot;10&quot;>GetBOMEditOutput</font> structures.  See <font face=&quot;courier&quot; height=&quot;10&quot;>GetBOMEditOutput</font> section below for more details.  This can be empty.",
          "name": "bomEditOutput"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Standard ServiceData member",
          "name": "serviceData"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "<font face=&quot;courier&quot; height=&quot;10&quot;>GetBOMEditResponse</font> structure contains a list of <font face=&quot;courier&quot; height=&quot;10&quot;>GetBOMEditOutput</font> structures and a standard ServiceData.",
      "isPublished": "true",
      "name": "GetBOMEditResponse",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BOMEdit"
            }
          ],
          "description": "An object reference to a BOMEdit",
          "name": "bomChange"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::ChangeItemRevision"
            }
          ],
          "description": "An object reference to a change revision.",
          "name": "changeRev"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::PSBOMViewRevision"
            }
          ],
          "description": "An object reference to the Solution bvr.",
          "name": "solutionBVR"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::PSBOMViewRevision"
            }
          ],
          "description": "An object reference to the Impacted bvr.",
          "name": "impactedBVR"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "int"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Count of note or variant change details",
          "name": "vCount"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Note or variant change details.",
          "name": "vBomChangeDetails"
        }
      ],
      "createRelease": "tc8000.0.1",
      "description": "<font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantOutput</font> structure contains object references to 1) the BOMEdit, 2) the associated change revision, 3) the solution bvr, and 4) the impacted bvr.  It also contains a list of details count and a list of strings representing some textual details of the note or variant change.",
      "isPublished": "true",
      "name": "GetNoteVariantOutput",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2009_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2009_06::ChangeManagement::GetNoteVariantOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A reference to the list of GetNoteVariantOutput",
          "name": "output"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Standard Service data.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc8000.0.1",
      "description": "<font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantResponse</font> structure contains a list of <font face=&quot;courier&quot; height=&quot;10&quot;>GetNoteVariantOutput</font> structures and a standard service data.",
      "isPublished": "true",
      "name": "GetNoteVariantResponse",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2009_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "An object reference to a BOMEdit",
          "name": "bomChangeNode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "A context string of two possible values: CM_note_change_details or CM_variant_change_details.",
          "name": "contextRelName"
        }
      ],
      "createRelease": "tc8000.0.1",
      "description": "GetNoteVariantsInput structure contains an object reference to a BOMEdit whose integer type is EITHER 6 (=Note Change) OR 7(=Variant Change) and a matching context string.",
      "isPublished": "true",
      "name": "GetNoteVariantsInput",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2009_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "A Boolean variable which contains:<br /><ul><ul><li type=\"disc\"> true: if there are active markups.</li><li type=\"disc\"> false: if there are no active markups.</li></ul></ul>",
          "name": "hasActiveMarkup"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "An object of ServiceData which contains any errors that may have occurred during operation.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc12000.3.0",
      "description": "Output of the hasActiveMarkupAssociated operation.",
      "isPublished": "false",
      "name": "HasActiveMarkupAssociatedOut",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2020_01::MassUpdate",
      "scope": "Teamcenter::Soa::ChangeManagement::MassUpdate"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Name of the property which is to be modified.",
          "name": "propName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "New value for the property specified in propName.",
          "name": "propValue"
        }
      ],
      "createRelease": "tc12000.3.0",
      "description": "Holds the name and new value of the property to be modified.",
      "isPublished": "false",
      "name": "MassUpdateChange",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2020_01::MassUpdate",
      "scope": "Teamcenter::Soa::ChangeManagement::MassUpdate"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "The <b>ChangeNoticeRevision</b> which is to be used to associate with the <b>ConfigurationContext</b> created representing previous effectivity.",
          "name": "changeObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "The <b>Item</b> or <b>ItemRevision</b> that is the endItem of the <b>ConfigurationContext</b> to be associated with <b>ChangeNoticeRevision</b>.",
          "name": "endItem"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The text representing the unit of previous effectivity.",
          "name": "unit"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::DateTime"
            }
          ],
          "description": "The DateTime object representing the date of the previous effectivity.",
          "name": "date"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::AdditionalInfo"
            }
          ],
          "description": "Currently, not used",
          "name": "info"
        }
      ],
      "createRelease": "tc10000.1.4",
      "description": "PreviousEffectivity structure contains the details of a single element necessary for creating or updated a <b>ConfigurationContext</b> and associating with the <b>ChangeNoticeRevision</b>.",
      "isPublished": "false",
      "name": "PreviousEffectivity",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::AdditionalInfo"
            }
          ],
          "description": "Currently, not used. ",
          "name": "info"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Service data capturing partial errors using the input array index as client id and any updated <b>BOMWindow</b> objects.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.4",
      "description": "ConnectChangeNoticeToContextResp structure contains a list of AdditionalInfo elements, the size of which matches the input element list. It also includes the standard ServiceData object. The created <b>ConfigurationContext</b> object will be returned as the value of objMap key \"Effectivity\".",
      "isPublished": "false",
      "name": "ConnectChangeNoticeToContextResp",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of object references used to hold the objects to put in the relationship, Required",
          "name": "tags"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Name of relationship to be created, Required",
          "name": "relTypeName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Flag indicating weather to add or remove relationship, Required",
          "name": "operation"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "Input structure for holding relationship data.",
      "isPublished": "true",
      "name": "RelationshipData",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::RuntimeBusinessObject"
            }
          ],
          "description": "Fnd0MUImpactedParents Object to specify modified impacted assembly.",
          "name": "impactedObject"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2020_01::MassUpdate::MassUpdateChange"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of MassUpdateChange objects.",
          "name": "massUpdateChanges"
        }
      ],
      "createRelease": "tc12000.3.0",
      "description": "Input structure for the saveImpactedAssemblies operation.",
      "isPublished": "false",
      "name": "SaveImpactedAssembliesIn",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2020_01::MassUpdate",
      "scope": "Teamcenter::Soa::ChangeManagement::MassUpdate"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The selected <b>BOMLine</b> objects whose <b>ItemRevision</b> objects will be added to or removed from the <b>ChangeNoticeRevision</b> relations.",
          "name": "selectedLines"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Indicate if this is adding or removing <b>ItemRevision</b> objects. Current valid values are: \"Add\" and \"Remove\".",
          "name": "action"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "Indicate if the children of the <i>selectedLines</i> will be considered as well. If true, the children of the <i>selectedLines</i> will be traversed based on a closure rule specified by preference MEMCN_solution_object_collection_rule. Otherwise, only the <i>selectedLines</i> will be considered by the closure rule. ",
          "name": "isRecursive"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::AdditionalInfo"
            }
          ],
          "description": "An AdditionalInfo structure. Currently, not used.",
          "name": "additionalInfo"
        }
      ],
      "createRelease": "tc10000.1.4",
      "description": "UpdateChangeNoticeRelationsIn structure contains the details necessary for managing the secondary <b>ItemRevision</b> objects related to the <b>ChangeNoticeRevision</b>, which is associated with a <b>BOMWindow</b>.",
      "isPublished": "false",
      "name": "UpdateChangeNoticeRelationsIn",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement::AdditionalInfo"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of AdditionalInfo structures. Currently not used.",
          "name": "info"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Service data capturing partial errors using the input array index as client id.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.4",
      "description": "UpdateChangeNoticeRelationsResp structure contains a list of AdditionalInfo elements, the size of which matches the input element list. It also includes the standard <b>ServiceData</b> object. ",
      "isPublished": "false",
      "name": "UpdateChangeNoticeRelationsResp",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::ChangeItemRevision"
            }
          ],
          "description": "A reference to the revision of the change item  that to be updated, Required",
          "name": "chgRev"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::ExtendedAttributes"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A vector of the property values, Optional",
          "name": "newPropertyValues"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement::RelationshipData"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A vector of  of relationship data , Optional",
          "name": "newRelationshipData"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "Input structure for updateChangeItems operation",
      "isPublished": "true",
      "name": "UpdateChangeProperties",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "A flag value indicating if the update operation is to be carried out on <br />BOMAdds or BOMCancels. This parameter uses Change Management BOM_ADD or BOM_CANCEL constants.<br />",
          "name": "bomAddOrCancleFlag"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "A flag indicating whether to add or remove components from the <br />Supercedure. The parameter uses Change Management constants OPERARTION_TYPE_ADD or OPERATION_TYPE_CANCEL.<br />",
          "name": "operation"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of tag values to be added or removed.",
          "name": "tags"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "This input element represents the tag for the Supercedure to be updated.",
          "name": "supTag"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "Structure for <font face=&quot;courier&quot; height=&quot;10&quot;>updateSupercedures</font> operation.",
      "isPublished": "true",
      "name": "UpdateSupercedureData",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "This unique ID is used to identify return data elements and partial errors associated with this input structure.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Context data for creating <b>ChangeItem</b> types. If this input is not specified then the allowed Change types will be determined based only on the conditions specified for Change type creation in BMIDE. This input is used to determine the Change types that are allowed to be created for creating derive Change objects.\n<b>Note:</b> The calling client is responsible for converting the inputs to a string using the appropriate function(s) in the SOA client framework Property class (i.e. Property.toDateString).",
          "name": "object"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Base type name. If this input is specified then all the Change types in this type hierarchy will be evaluated. If not specified then all the change types in <b>ChangeItem</b> hierarchy will be evaluated for determining the allowed change types. Valid value for this input is <b>ChangeItem</b> or its sub type.",
          "name": "baseTypeName"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of Change types to be excluded from the returned list. If this input is specified then Change types specified in this list will be excluded while determining the allowed Change types. Valid value for this input is <b>ChangeItem</b> or its sub type.",
          "name": "exclusionTypeNames"
        }
      ],
      "createRelease": "tc9000.1.2",
      "description": "The parameters required to find the creatable <b>ChangeItem</b> type.",
      "isPublished": "false",
      "name": "ContextDataInput",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2012_10::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The unmodified value from the ContextDataInput.clientId. This can be used by the caller to indentify this data structure with the source input data.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2012_10::ChangeManagement::ChangeTypeInfo"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of ChangeTypeInfo representing Change types that are allowed to be created.",
          "name": "allowedChangeTypes"
        }
      ],
      "createRelease": "tc9000.1.2",
      "description": "This is output of getCreatableChangeTypes operation.",
      "isPublished": "false",
      "name": "CreatableChangeTypesOut",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2012_10::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2012_10::ChangeManagement::CreatableChangeTypesOut"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of CreatableChangeTypesOut objects representing ChangeTypeInfo objects.",
          "name": "output"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Service data including partial errors that are mapped to the client id.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc9000.1.2",
      "description": "This is response Structure of getCreatableChangeTypes operation.",
      "isPublished": "false",
      "name": "CreatableChangeTypesResponse",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2012_10::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::ChangeItemRevision"
            }
          ],
          "description": "A reference to the revision of the change item.",
          "name": "changeRev"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BOMWindow"
            }
          ],
          "description": "A reference to the BOM window containing the BOM view Revision of Solution Item Revision for the given change objects.",
          "name": "firstWindow"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BOMWindow"
            }
          ],
          "description": "A reference to the BOM window containing the BOM view Revision of Impacted Item Revision for the given change objects.",
          "name": "secondWindow"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "<font face=&quot;courier&quot; height=&quot;10&quot;>CreateBOMEditInput</font> structure contains the object reference to the associated change revision, and the object references to the two BOM windows.  The referenced objects will provide the necessary details to create a number of BOMEdit objects that represents the whole BOM Change.",
      "isPublished": "true",
      "name": "CreateBOMEditInput",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BOMEdit"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A reference to list of BOMEdits.",
          "name": "output"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Standard ServiceData member",
          "name": "serviceData"
        }
      ],
      "createRelease": "P8000.0.0",
      "description": "CreateBOMEditResponse structure contains an empty output, and a standard ServiceData.",
      "isPublished": "true",
      "name": "CreateBOMEditResponse",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2008_06::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "ServiceData including partial errors that are mapped to the client id from the input. Created objects are also added to the created objects list in the ServiceData.",
          "name": "serviceData"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::CreateAndSubmitChangeOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of CreateAndSubmitChangeOutput representing objects that were created for each input.",
          "name": "output"
        }
      ],
      "createRelease": "tc14000.2.0",
      "description": "This structure contains response for createAndSubmitChangeObjects SOA.",
      "isPublished": "false",
      "name": "CreateAndSubmitChangeResponse",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "A <b>ChangeItem</b>, <b>ChangeItemRevision</b> and its sub-type type name.",
          "name": "boName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::KeyValuePair"
            }
          ],
          "description": "A map (string, list of strings) of property name (key) and property values (values) in string format, to be set on new <b>ChangeItemRevision</b> object being created. The calling client is responsible for converting the different property types (int, float, date) to a string using the appropriate toXXXString functions in the SOA client  framework&rsquo;s Property class and the service implementation is using Property.parseXXX method to convert it back to the desired data type. <br />1.&nbsp;&nbsp;&nbsp;&nbsp;For Date property, input string must be in the format 'yyyy-MM-dd'T'HH:mm:ssZ'. <br />2.&nbsp;&nbsp;&nbsp;&nbsp;For Float property, input string must be decimal point (3.14) vs. a decimal comma (3,14) regardless of locale. Standard or Scientific notations are accepted as input.<br />3.&nbsp;&nbsp;&nbsp;&nbsp;For Boolean property, a true value is returned represents if the input string  is &quot;true&quot; or &quot;1&quot; and false is returned for all other string values and null strings.",
          "name": "changeRelatedProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::CreateChangeObjectInputMap"
            }
          ],
          "description": "A map (string, list of CreateChangeObjectInput) of reference property name and CreateChangeObjectInput objects for compound objects.",
          "name": "compoundCreateChange"
        }
      ],
      "createRelease": "tc14000.2.0",
      "description": "This structure holds information required for creating <b>ChangeItem</b> object and compound objects.",
      "isPublished": "false",
      "name": "CreateChangeObjectInput",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The internal name of the <b>Participant</b> type.",
          "name": "internalName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "Identifies if the <b>Participant</b> type supports multiple assignees or single assignee . If true, multiple assignees can be added; otherwise, it supports single assignee only.",
          "name": "allowMultipleAssignee"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of all assignees for this <b>Participant</b> type that are applicable to the workflow.",
          "name": "assigneeList"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::KeyValuePair"
            }
          ],
          "description": "A map (string, list of strings) that has information related to <b>Participant</b>. Supported list of key and values are:  <br />The key is &ldquo;participant_used_on_obj_type&rdquo; and value is list of <b>WorkspaceObject</b> UIDs that <b>Participant</b> type supports. <br />The key is &ldquo;participant_eligibility&rdquo; and value is list of &ldquo;[group]:[role]&rdquo; eligible for this <b>Participant</b> type.",
          "name": "additionalParticipantData"
        }
      ],
      "createRelease": "tc14000.2.0",
      "description": "This structure contains information related to creating <b>Participant(s)</b> on newly created <b>ChangeItemRevision</b> object",
      "isPublished": "false",
      "name": "CreateChangeParticipantInfo",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Process template name to which ChangeItemRevision object will be submitted.",
          "name": "templateName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "If true, submit newly created ChangeItemRevision to workflow; otherwise, not.",
          "name": "submitToWorkflow"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::KeyValuePair"
            }
          ],
          "description": "A map (string, list of strings) that has information related to workflow name and description required during workflow creation. Supported keys and values are:<br />The key &ldquo;Job Name&rdquo; will have value as list of string with only single value &ldquo;Process name&rdquo;.     <br />The key &ldquo;JobDescription&rdquo; will have value as list ofa string with only single value &ldquo;Process description&rdquo;.<br />In future, we may want to extend the functionality by providing key as &ldquo;Target&rdquo; and value as list of WorkspaceObject UIDs to submit all provided object to workflow.",
          "name": "additionalWorkflowData"
        }
      ],
      "createRelease": "tc14000.2.0",
      "description": "This structure contains workflow related information which will be used to submit newly created <b>ChangeItemRevision</b> object to workflow.",
      "isPublished": "false",
      "name": "CreateChangeWorkflowInfo",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "A unique string supplied by the caller. This ID is used to identify return data elements and partial errors associated with this input structure.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::CreateChangeObjectInput"
            }
          ],
          "description": "Input data for create operation.",
          "name": "createData"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::KeyValuePair"
            }
          ],
          "description": "A map (string, list of strings) of  relation names and list of <b>WorkspaceObject</b> value pairs. Relation name and objects provided as key value pairs will be linked to <b>ChangeItem</b> which will be primary object in relation.<br />&ldquo;CMHasProblemItem&rdquo;: A list of <b>ItemRevision</b> UIDs.<br />&ldquo;CMHasSolutionItem&rdquo;: A list of <b>ItemRevision</b> UIDs.<br />&ldquo;CMHasImpactedItem&rdquo;: A list of <b>ItemRevision</b> UIDs.",
          "name": "relatedData"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Property to be used to paste the created <b>ChangeItem</b> object to targetObject. For example: <b>ChangeItem</b> is attached to Folder via contents property.",
          "name": "pasteProp"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Object to which created <b>ChangeItem</b> will be attached. For example: <b>ChangeItem</b> is attached to <b>Folder</b> via contents property.",
          "name": "targetObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "If true, set created <b>ChangeNoticeRevision</b> object as active change; otherwise, don&rsquo;t set created <b>ChangeNoticeRevision</b> object as active.",
          "name": "setActive"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::CreateChangeWorkflowInfo"
            }
          ],
          "description": "Input data required for submitting create <b>ChangeItem</b> object to workflow.",
          "name": "workflowData"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::CreateChangeParticipantInfo"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of <b>Participant</b> related data required for creating and attaching <b>Participant(s)</b> to created <b>ChangeItem</b> object.",
          "name": "changeParticipantData"
        }
      ],
      "createRelease": "tc14000.2.0",
      "description": "This structure contains input related information for createAndSubmitChangeObjects SOA.",
      "isPublished": "false",
      "name": "CreateAndSubmitChangeInput",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The clientId received to uniquely identify each input.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of objects that were created, such as: <b>ChangeItem</b>, <b>ChangeItemRevision</b>, <b>EPMJob</b> and <b>Participant</b>.",
          "name": "objects"
        }
      ],
      "createRelease": "tc14000.2.0",
      "description": "This structure contains information related to all created objects for each input of createAndSubmitChangeObjects SOA.",
      "isPublished": "false",
      "name": "CreateAndSubmitChangeOutput",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    }
  ],
  "TcVersion": "tc13000.0.0",
  "Typedef": [
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement::DerivePropertyValueInput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc12000.3.0",
      "description": "This map is of derive property value input with a string (as key) and a vector of derive property values input consisting of a business object in string format, a property name values map and compund input of derive property values.",
      "isPublished": "true",
      "name": "DerivePropertyValueInputMap",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc12000.3.0",
      "description": "This map is of property name (as key) and property values (as value) in string format. Each value is a list of strings to support both single valued and multi valued properties of types. The calling client is responsible for converting the different property types (like integer, double, date, etc) to a string using the appropriate to&lt; type &gt;String function (e.g. toIntString and toDateString) in the client framework's Property class",
      "isPublished": "true",
      "name": "PropertyValueMap",
      "namespace": "Teamcenter::Soa::ChangeManagement::_2020_01::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::DateTime"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.4",
      "description": "a map of string to vector of dates",
      "isPublished": "false",
      "name": "StringToDateVectorMap",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "double"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.4",
      "description": "String to vector of doubles map.",
      "isPublished": "false",
      "name": "StringToDblVectorMap",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "int"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.4",
      "description": "map of string to vector of integers.",
      "isPublished": "false",
      "name": "StringToIntVectorMap",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.4",
      "description": "a map of string to vector of objects.",
      "isPublished": "false",
      "name": "StringToObjVectorMap",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.4",
      "description": "A map of string to vector of strings.",
      "isPublished": "false",
      "name": "StringtoStrVectorMap",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2015_03::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement::CreateChangeObjectInput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc14000.2.0",
      "description": "This map holds information related to compound creation of <b>ChangeItem</b> objects",
      "isPublished": "false",
      "name": "CreateChangeObjectInputMap",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc14000.2.0",
      "description": "This map is of property name (as key) and property values (as value) in string format. Each value is a list of strings to support both single valued and multi valued properties of types. The calling client is responsible for converting the different property types (like integer, double, date, etc) to a string using the appropriate to&lt; type &gt;String function (e.g. toIntString and toDateString) in the client framework's Property class.",
      "isPublished": "false",
      "name": "KeyValuePair",
      "namespace": "Teamcenter::Soa::Internal::ChangeManagement::_2022_12::ChangeManagement",
      "scope": "Teamcenter::Soa::ChangeManagement::ChangeManagement"
    }
  ],
  "xmlns": "http://teamcenter.com/BusinessModel/TcBusinessData"
}
