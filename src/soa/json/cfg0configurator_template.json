{
  "BusinessObjectInterface": [
    {
      "createRelease": "tc10000.1.3",
      "description": "Interface Name for Business Object Cfg0AbsAdmissibility",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsAdmissibility",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsAdmissibility"
    },
    {
      "createRelease": "tc10000.1.3",
      "description": "Interface Name for Business Object Cfg0AbsAdmissibilityThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsAdmissibilityThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsAdmissibilityThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsCompoundFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsCompoundFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsCompoundFamilyThread"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0CompiledRuleSet",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0CompiledRuleSet",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0CompiledRuleSet"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0ConfContext",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ConfContext",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ConfContext"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0ConfigCriteriaEntry",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ConfigCriteriaEntry",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ConfigCriteriaEntry"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0ConfigCriteriaKey",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ConfigCriteriaKey",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ConfigCriteriaKey"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0ConfigCriteriaThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ConfigCriteriaThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ConfigCriteriaThread"
    },
    {
      "createRelease": "tc12000.3.0",
      "description": "Interface Name for Business Object Cfg0ConfigModuleThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ConfigModuleThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ConfigModuleThread"
    },
    {
      "createRelease": "tc12000.3.0",
      "description": "Interface Name for Business Object Cfg0ConfigurationModule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ConfigurationModule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ConfigurationModule"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0ConfiguratorCriteria",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ConfiguratorCriteria",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ConfiguratorCriteria"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0ConfiguratorPerspective",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ConfiguratorPerspective",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ConfiguratorPerspective"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0DefaultRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0DefaultRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0DefaultRule"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsCompoundOptionValue",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsCompoundOptionValue",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsCompoundOptionValue"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0DefaultRuleThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0DefaultRuleThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0DefaultRuleThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0Dictionary",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0Dictionary",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0Dictionary"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0EFFIntentThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0EFFIntentThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0EffIntentThread"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0EffFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0EffFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0EffFamilyThread"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0EffectivityExprBlock",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0EffectivityExprBlock",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0EffectivityExprBlock"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0EffectivityFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0EffectivityFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0EffectivityFamily"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0EffectivityIntent",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0EffectivityIntent",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0EffectivityIntent"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0ExceptionRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ExceptionRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ExceptionRule"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0ExceptionRuleThrd",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ExceptionRuleThrd",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ExceptionRuleThrd"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0ExcludeRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ExcludeRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ExcludeRule"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsCompoundValueFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsCompoundValueFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsCompoundValueFamily"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0ExcludeRuleThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ExcludeRuleThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ExcludeRuleThread"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0ExternalOperation",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ExternalOperation",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ExternalOperation"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0ExternalOperationBlock",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ExternalOperationBlock",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ExternalOperationBlock"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0FamilyAvailability",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0FamilyAvailability",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0FamilyAvailability"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0FamilyGroup",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0FamilyGroup",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0FamilyGroup"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0FamilyGroupThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0FamilyGroupThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0FamilyGroupThread"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0FeasibilityRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0FeasibilityRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0FeasibilityRule"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0FeasibilityRuleThrd",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0FeasibilityRuleThrd",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0FeasibilityRuleThrd"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0Feature",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0Feature",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0Feature"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0FeatureFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0FeatureFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0FeatureFamily"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsCompoundValueThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsCompoundValueThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsCompoundValueThread"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0FeatureFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0FeatureFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0FeatureFamilyThread"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0FeatureSet",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0FeatureSet",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0FeatureSet"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0FeatureSetThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0FeatureSetThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0FeatureSetThread"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0FeatureThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0FeatureThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0FeatureThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0IncludeRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0IncludeRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0IncludeRule"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0IncludeRuleThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0IncludeRuleThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0IncludeRuleThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0LiteralFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0LiteralFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0LiteralFamilyThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0LiteralOptionValue",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0LiteralOptionValue",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0LiteralOptionValue"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0LiteralValueFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0LiteralValueFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0LiteralValueFamily"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0LiteralValueThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0LiteralValueThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0LiteralValueThread"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsConfigCriteriaThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsConfigCriteriaThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsConfigCriteriaThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0OptionValueAvailability",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0OptionValueAvailability",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0OptionValueAvailability"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0PackageFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0PackageFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0PackageFamilyThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0PackageOptionFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0PackageOptionFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0PackageOptionFamily"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0PackageOptionValue",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0PackageOptionValue",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0PackageOptionValue"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0PackageRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0PackageRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0PackageRule"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0PackageRuleThrd",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0PackageRuleThrd",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0PackageRuleThrd"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0PackageValueThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0PackageValueThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0PackageValueThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0ProdModelFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ProdModelFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ProdModelFamilyThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0ProductItem",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ProductItem",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ProductItem"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0ProductLine",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ProductLine",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ProductLine"
    },
    {
      "createRelease": "tc12000.3.0",
      "description": "Interface Name for Business Object Cfg0AbsConfigModuleThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsConfigModuleThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsConfigModuleThread"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0ProductLineFamThrd",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ProductLineFamThrd",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ProductLineFamThrd"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0ProductLineFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ProductLineFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ProductLineFamily"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0ProductLineThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ProductLineThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ProductLineThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0ProductModel",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ProductModel",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ProductModel"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0ProductModelFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ProductModelFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ProductModelFamily"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0ProductModelThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ProductModelThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ProductModelThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0RangeExpression",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0RangeExpression",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0RangeExpression"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0SearchCursor",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SearchCursor",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SearchCursor"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0SearchDefinition",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SearchDefinition",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SearchDefinition"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0SearchGroup",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SearchGroup",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SearchGroup"
    },
    {
      "createRelease": "tc12000.3.0",
      "description": "Interface Name for Business Object Cfg0AbsConfigurationModule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsConfigurationModule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsConfigurationModule"
    },
    {
      "createRelease": "tc10000.1.3",
      "description": "Interface Name for Business Object Cfg0SearchJoin",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SearchJoin",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SearchJoin"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0SearchResultType",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SearchResultType",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SearchResultType"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0SearchSavedQuery",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SearchSavedQuery",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SearchSavedQuery"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0SearchSlctContent",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SearchSlctContent",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SearchSlctContent"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0SearchTraversal",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SearchTraversal",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SearchTraversal"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0SumModelFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SumModelFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SumModelFamilyThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0SummaryFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SummaryFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SummaryFamilyThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0SummaryModel",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SummaryModel",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SummaryModel"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0SummaryModelFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SummaryModelFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SummaryModelFamily"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0SummaryModelThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SummaryModelThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SummaryModelThread"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsConfiguratorCriteria",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsConfiguratorCriteria",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsConfiguratorCriteria"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0SummaryOptionFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SummaryOptionFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SummaryOptionFamily"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0SummaryOptionValue",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SummaryOptionValue",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SummaryOptionValue"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0SummaryValueThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0SummaryValueThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0SummaryValueThread"
    },
    {
      "createRelease": "tc11000.6.0",
      "description": "Interface Name for Business Object Cfg0VariantCriteria",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0VariantCriteria",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0VariantCriteria"
    },
    {
      "createRelease": "tc11000.6.0",
      "description": "Interface Name for Business Object Cfg0VariantCriteriaBlock",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0VariantCriteriaBlock",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0VariantCriteriaBlock"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0VariantCriteriaExpr",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0VariantCriteriaExpr",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0VariantCriteriaExpr"
    },
    {
      "createRelease": "tc11000.6.0",
      "description": "Interface Name for Business Object Cfg0VariantCriteriaThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0VariantCriteriaThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0VariantCriteriaThread"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0VariantExpSection",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0VariantExpSection",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0VariantExpSection"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0VariantExprBlock",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0VariantExprBlock",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0VariantExprBlock"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0VariantExpression",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0VariantExpression",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0VariantExpression"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsConfiguratorWSO",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsConfiguratorWSO",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsConfiguratorWSO"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0VariantExpressionGroup",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0VariantExpressionGroup",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0VariantExpressionGroup"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0VariantExpressionSet",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0VariantExpressionSet",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0VariantExpressionSet"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0VariantExpressionTerm",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0VariantExpressionTerm",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0VariantExpressionTerm"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0VariantSubExpression",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0VariantSubExpression",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0VariantSubExpression"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsConfiguratorWSOThrd",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsConfiguratorWSOThrd",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsConfiguratorWSOThrd"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsAllocation",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsAllocation",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsAllocation"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsConstraintRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsConstraintRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsConstraintRule"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsConstraintRuleThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsConstraintRuleThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsConstraintRuleThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsDefaultRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsDefaultRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsDefaultRule"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsDefaultRuleThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsDefaultRuleThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsDefaultRuleThread"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsEFFIntentThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsEFFIntentThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsEffIntentThread"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsEffFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsEffFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsEffFamilyThread"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsEffectivityFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsEffectivityFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsEffectivityFamily"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsEffectivityIntent",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsEffectivityIntent",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsEffectivityIntent"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsExceptionRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsExceptionRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsExceptionRule"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsExceptionRuleThrd",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsExceptionRuleThrd",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsExceptionRuleThrd"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsAllocationThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsAllocationThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsAllocationThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsExcludeRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsExcludeRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsExcludeRule"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsExcludeRuleThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsExcludeRuleThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsExcludeRuleThread"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsExternalOperBlock",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsExternalOperBlock",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsExternalOperBlock"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsExternalOperation",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsExternalOperation",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsExternalOperation"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsFamily"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsFamilyAvailability",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsFamilyAvailability",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsFamilyAvailability"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsFamilyGroup",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsFamilyGroup",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsFamilyGroup"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsFamilyGroupThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsFamilyGroupThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsFamilyGroupThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsFamilyThread"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0AbsFeasibilityRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsFeasibilityRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsFeasibilityRule"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsAssociation",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsAssociation",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsAssociation"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0AbsFeasibilityRuleThrd",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsFeasibilityRuleThrd",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsFeasibilityRuleThrd"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsFeature",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsFeature",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsFeature"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsFeatureFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsFeatureFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsFeatureFamily"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsFeatureFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsFeatureFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsFeatureFamilyThread"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsFeatureSet",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsFeatureSet",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsFeatureSet"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsFeatureSetThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsFeatureSetThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsFeatureSetThread"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsFeatureThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsFeatureThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsFeatureThread"
    },
    {
      "createRelease": "tc12000.4.0",
      "description": "Interface Name for Business Object Cfg0AbsFreeFormRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsFreeFormRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsFreeFormRule"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsIncludeRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsIncludeRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsIncludeRule"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsIncludeRuleThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsIncludeRuleThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsIncludeRuleThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsAssociationThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsAssociationThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsAssociationThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsLiteralFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsLiteralFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsLiteralFamilyThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsLiteralOptionValue",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsLiteralOptionValue",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsLiteralOptionValue"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsLiteralValueFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsLiteralValueFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsLiteralValueFamily"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsLiteralValueThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsLiteralValueThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsLiteralValueThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsModel",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsModel",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsModel"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsModelFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsModelFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsModelFamily"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsModelFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsModelFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsModelFamilyThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsModelScopedWSO",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsModelScopedWSO",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsModelScopedWSO"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsModelScopedWSOThrd",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsModelScopedWSOThrd",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsModelScopedWSOThrd"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsModelThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsModelThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsModelThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsAvailability",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsAvailability",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsAvailability"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsOptionFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsOptionFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsOptionFamily"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsOptionFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsOptionFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsOptionFamilyThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsOptionValue",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsOptionValue",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsOptionValue"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsOptionValueThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsOptionValueThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsOptionValueThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsPackageFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsPackageFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsPackageFamilyThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsPackageOptionFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsPackageOptionFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsPackageOptionFamily"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsPackageOptionValue",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsPackageOptionValue",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsPackageOptionValue"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsPackageRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsPackageRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsPackageRule"
    },
    {
      "createRelease": "tc11000.5.0",
      "description": "Interface Name for Business Object Cfg0AbsPackageRuleThrd",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsPackageRuleThrd",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsPackageRuleThrd"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsPackageValueThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsPackageValueThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsPackageValueThread"
    },
    {
      "createRelease": "tc10000.1.7",
      "description": "Interface Name for Business Object Cfg0AbsAvailabilityRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsAvailabilityRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsAvailabilityRule"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsProdModelFamilyThrd",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsProdModelFamilyThrd",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsProdModelFamilyThrd"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0AbsProductLine",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsProductLine",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsProductLine"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0AbsProductLineFamThrd",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsProductLineFamThrd",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsProductLineFamThrd"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0AbsProductLineFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsProductLineFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsProductLineFamily"
    },
    {
      "createRelease": "tc10000.1.5",
      "description": "Interface Name for Business Object Cfg0AbsProductLineThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsProductLineThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsProductLineThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsProductModel",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsProductModel",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsProductModel"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsProductModelFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsProductModelFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsProductModelFamily"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsProductModelThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsProductModelThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsProductModelThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsRule"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsRuleThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsRuleThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsRuleThread"
    },
    {
      "createRelease": "tc10000.1.7",
      "description": "Interface Name for Business Object Cfg0AbsAvailabilityRuleThrd",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsAvailabilityRuleThrd",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsAvailabilityRuleThrd"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsSumModelFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsSumModelFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsSumModelFamilyThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsSummaryFamilyThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsSummaryFamilyThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsSummaryFamilyThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsSummaryModel",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsSummaryModel",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsSummaryModel"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsSummaryModelFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsSummaryModelFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsSummaryModelFamily"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsSummaryModelThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsSummaryModelThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsSummaryModelThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsSummaryOptionFamily",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsSummaryOptionFamily",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsSummaryOptionFamily"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsSummaryOptionValue",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsSummaryOptionValue",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsSummaryOptionValue"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsSummaryValueThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsSummaryValueThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsSummaryValueThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsValidationRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsValidationRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsValidationRule"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsValidationRuleThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsValidationRuleThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsValidationRuleThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsAvailabilityThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsAvailabilityThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsAvailabilityThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsValue",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsValue",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsValue"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsValueAvailability",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsValueAvailability",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsValueAvailability"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AbsValueThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AbsValueThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AbsValueThread"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0Allocation",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0Allocation",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0Allocation"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AllocationThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AllocationThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AllocationThread"
    },
    {
      "createRelease": "tc10000.1.3",
      "description": "Interface Name for Business Object Cfg0AppVariantCriteriaExpr",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AppVariantCriteriaExpr",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AppVariantCriteriaExpr"
    },
    {
      "createRelease": "tc10000.1.3",
      "description": "Interface Name for Business Object Cfg0ApplicationVariantExp",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0ApplicationVariantExp",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0ApplicationVariantExp"
    },
    {
      "createRelease": "tc10000.1.7",
      "description": "Interface Name for Business Object Cfg0AvailabilityRule",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AvailabilityRule",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AvailabilityRule"
    },
    {
      "createRelease": "tc10000.1.7",
      "description": "Interface Name for Business Object Cfg0AvailabilityRuleThrd",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AvailabilityRuleThrd",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AvailabilityRuleThrd"
    },
    {
      "createRelease": "tc10000.1.2",
      "description": "Interface Name for Business Object Cfg0AvailabilityThread",
      "libraryName": "Cfg0configurator",
      "name": "Cfg0AvailabilityThread",
      "namespace": "Teamcenter::Cfg0configurator",
      "primaryInterface": "true",
      "typeName": "Cfg0AvailabilityThread"
    }
  ],
  "Date": "Fri Jun 05 04:00:59 PM 2020",
  "Library": [
    {
      "DependentOn": [
        {
          "name": "Cfg0configurator"
        },
        {
          "name": "metaframework"
        },
        {
          "name": "fnd0booleansolve"
        },
        {
          "name": "property"
        },
        {
          "name": "ps"
        },
        {
          "name": "meta"
        },
        {
          "name": "tccore"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Service Library for cfg0configurator Template",
      "isThirdParty": "false",
      "name": "Cfg0SoaConfigurator",
      "namespace": "Cfg0::Soa::Configurator",
      "serviceLibrary": "true"
    },
    {
      "DependentOn": [
        {
          "name": "metaframework"
        },
        {
          "name": "tccore"
        },
        {
          "name": "srh0apsconfiguredsearch"
        },
        {
          "name": "Bcs0buildconditions"
        },
        {
          "name": "tc"
        },
        {
          "name": "cxpom"
        },
        {
          "name": "constants"
        },
        {
          "name": "bmf"
        },
        {
          "name": "fnd0booleansolve"
        },
        {
          "name": "tie"
        },
        {
          "name": "objio"
        },
        {
          "name": "extensionframework"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Configurator Template Library",
      "isThirdParty": "false",
      "name": "Cfg0configurator",
      "namespace": "",
      "serviceLibrary": "false"
    }
  ],
  "MetaEnum": [
    {
      "MetaEnumLiteral": [
        {
          "description": "Combines the results of two search definitions into a set that contains all of the objects that are returned from either the left or the right search definition operand. Duplicates are not removed from the combined set.",
          "name": "UnionAll"
        },
        {
          "description": "Combines the results of two search definitions into a set that contains a unique list of objects that includes objects returned from either the left or the right search definition operand. The combined set will not contain duplicates.",
          "name": "UnionUnique"
        },
        {
          "description": "Combines the results of two search definitions into a set that contains all of the objects that are returned from the left as well as the right search definition operand.",
          "name": "Intersection"
        },
        {
          "description": "Combines the results of two search definitions into a set that contains all of the objects that are returned from the left but not from the right search definition operand.",
          "name": "Difference"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Set operator values to use when combining the results from each search definition in a <font face=\"courier\" height=\"10\">ExpressionGroupInput</font>.<br /><ul><ul><li type=\"disc\">UnionAll&nbsp;&nbsp;&nbsp;&nbsp; - Combines the results of two search definitions into a set that contains all of the objects that are returned from either the left or the right search definition operand. Duplicates are not removed from the combined set.</li><li type=\"disc\">UnionUnique -&nbsp;&nbsp;&nbsp;&nbsp;Combines the results of two search definitions into a set that contains a unique list of objects that includes objects returned from either the left or the right search definition operand. The combined set will not contain duplicates.</li><li type=\"disc\">Intersection -&nbsp;&nbsp;&nbsp;&nbsp;Combines the results of two search definitions into a set that contains all of the objects that are returned from the left as well as the right search definition operand.</li><li type=\"disc\">Difference&nbsp;&nbsp;&nbsp;&nbsp;- Combines the results of two search definitions into a set that contains all of the objects that are returned from the left but not from the right search definition operand.</li></ul></ul>",
      "isPublished": "false",
      "name": "SearchGroupOperator",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "MetaEnumLiteral": [
        {
          "description": "",
          "name": "InnerJoin"
        },
        {
          "description": "",
          "name": "LeftJoin"
        },
        {
          "description": "",
          "name": "RightJoin"
        },
        {
          "description": "",
          "name": "FullJoin"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Join operator values to use when combining the results from each search definition in a <font face=\"courier\" height=\"10\">ExpressionJoinInput</font>.<br /><br /><ul><ul><li type=\"disc\">InnerJoin - Combines the column values of two searches (A and B) based upon a join condition. The join compares each row of A with each row of B to find all pairs of rows which satisfy the join condition.</li><li type=\"disc\">LeftJoin - The result of a left join for searches A and B always contains all records of the \"left\" search (A), even if the join condition does not find any matching record in the \"right\" search (B).</li><li type=\"disc\">RightJoin - The result of a right join for searches A and B always contains all records of the \"right\" search (B), even if the join condition doesn't find any matching record in the \"left\" search (A).</li><li type=\"disc\">FullJoin - The result of a full join for searches A and B always contains all records of both searches. Where records in A and B don't match, the result set will have NULL values for every column of the search that lacks a matching row. For those records that do match, a single row will be produced in the result set (containing fields populated from both searches).</li></ul></ul>",
      "isPublished": "false",
      "name": "SearchJoinOperator",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "MetaEnumLiteral": [
        {
          "description": "Sort in ascending order",
          "name": "Ascending"
        },
        {
          "description": "Sort in descending order",
          "name": "Descending"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Sort operator values which decide the sort order for attributes in Search Options",
      "isPublished": "false",
      "name": "SortOperator",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    }
  ],
  "Operation": [
    {
      "ParameterInfo": [
        {
          "description": "input admissibilitystate",
          "parameterName": "admissibilityState"
        },
        {
          "description": "The input context for which admissibility is to be updated",
          "parameterName": "context"
        },
        {
          "description": "newly created/ updated admissibility object",
          "parameterName": "outputAdmissibility"
        },
        {
          "description": "Output paramter to return the objects to be deleted when admissibility state to be updated is empty.",
          "parameterName": "objectsToDelete"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc10000.1.3",
      "dependencies": "",
      "description": "Operation to update the admissibility state and revise admissibility if needed.",
      "exceptionCondition": "",
      "id": "cfg0UpdateAdmissibility#const,std::string,*$const,Teamcenter::POM_object,*$tag_t,*$std::vector<tag_t>,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0AbsAdmissibility",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "cfg0UpdateAdmissibility",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0AbsAdmissibility::cfg0UpdateAdmissibility#const,std::string,*$const,Teamcenter::POM_object,*$tag_t,*$std::vector<tag_t>,*",
      "returnDescription": "Returns iFail.",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "The application config expressions for which formula, SOA grid structure and display format is requested.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.5",
      "dependencies": "",
      "description": "This operation converts the input application config configuration expressions  given in formulae and/or grid format into formulae, grid and displayable or user readable format.",
      "exceptionCondition": "",
      "id": "convertVariantExpressions#const,std::vector<Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConvertVariantExpressionInput>,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "convertVariantExpressions",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConvertVariantExpressionsResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::convertVariantExpressions#const,std::vector<Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConvertVariantExpressionInput>,&",
      "returnDescription": "Returns a list of output structure for each input structure. It contains the list of application configuration expressions populated with formula,  grid structure and display format.<br /><br />The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font> in following cases.<br /><ul><ul><li type=\"disc\">77007 - The service &quot;convertVariantExpressions&quot; expects atleast one Product Item in the Perspective object. Please report this error to your system administrator. </li><li type=\"disc\">79061 - An invalid revision rule was found (Context: &quot;convertVariantExpressions&quot;).</li></ul></ul>",
      "useCase": "1: Create an ApplicationConfigExpression structure providing only formula and not provide the grid expression  ConfigExpressionSet structure.<br />2: Create an ApplicationConfigExpression structure providing the grid expression ConfigExpressionSet structure and not provide the formula.<br />3: Create an ApplicationConfigExpression structure providing the formula as well as the grid expression ConfigExpressionSet structure.<br /><br />In all the three cases, the output ApplicationConfigExpression structure will be populated with formulae, grid expression ConfigExpressionSet structure and display formulae.<br /><br /><br />The string &quot;NS&quot; is the family namespace. The family namespace defines the uniqueness of the family within itself. System ensures that the combination of the family namespace and the family id is unique in the database. For family &quot;F&quot; with namespace &quot;NS&quot; system will identify it as &quot;[NS]F&quot;.<br /><br />The examples of display formulae are as follows:<br /><br />1)  Boolean expression<br /><br />[NS]BOOL - represents TRUE<br />[NS]!BOOL - represents FALSE<br /><br /><br />2)  Date expressions<br />Date features are displayed in the standard Teamcenter locale-specific date format.<br />3)  Range expressions<br /><br />[NS]A = a1 &amp; [NS]LENGTH &lt;= 50<br />[NS]A = a1 &amp; ([NS]LENGTH &gt;= 1 &amp; [NS]LENGTH &lt;= 10)<br />[NS]A = a1 &amp; [NS]LENGTH &gt;= 20<br />[NS]A = a1 &amp; !([NS]LENGTH &gt;= 20)<br /><br /><br />4)  Multiple column expressions must be grouped within brackets<br /><br />([NS]A = a1 &amp; [NS]B = b1) | ([NS]A = a2 &amp; [NS]C = c1)<br /><br /><br />5)  Multiple selections within a single column<br /><br />([NS]A = a1 | [NS]A = a2) &amp; [NS]B = b1<br /><br /><br />6)  Multiple selections in a family 'C' that has Multi-select=Yes<br /><br />([NS]A = a1 | [NS]A = a2) &amp; [NS]C = c1 &amp; [NS]C = c2<br /><br /><br />7)  Optional family 'D' [Target]<br /><br />[NS]A = a1 &amp; [NS]D = NONE (same as [NS]D = '')<br />[NS]A = a1 &amp; [NS]D = ANY (same as [NS]D != '')"
    },
    {
      "ParameterInfo": [
        {
          "description": "A vector of data that contains reference information to the objects to be revised",
          "parameterName": "inputs"
        },
        {
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "parameterName": "bd"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc11000.6.0",
      "dependencies": "",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "exceptionCondition": "",
      "id": "fnd0Revise#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "fnd0Revise",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::fnd0Revise#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "returnDescription": "",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A vector of data that contains reference information to the objects to be revised",
          "parameterName": "inputs"
        },
        {
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "parameterName": "bd"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc11000.2.3",
      "dependencies": "",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "exceptionCondition": "",
      "id": "fnd0RevisePost#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "fnd0RevisePost",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::fnd0RevisePost#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "returnDescription": "",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A vector of data that contains reference information to the objects to be revised",
          "parameterName": "inputs"
        },
        {
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "parameterName": "bd"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc11000.6.0",
      "dependencies": "",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "exceptionCondition": "",
      "id": "fnd0RevisePost#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "fnd0RevisePost",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::fnd0RevisePost#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "returnDescription": "",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A vector of data that contains reference information to the objects to be revised",
          "parameterName": "inputs"
        },
        {
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "parameterName": "bd"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc11000.2.3",
      "dependencies": "",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "exceptionCondition": "",
      "id": "fnd0SetPropertiesFromReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "fnd0SetPropertiesFromReviseInput",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::fnd0SetPropertiesFromReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "returnDescription": "",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A vector of data that contains reference information to the objects to be revised",
          "parameterName": "inputs"
        },
        {
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "parameterName": "bd"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc11000.6.0",
      "dependencies": "",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "exceptionCondition": "",
      "id": "fnd0SetPropertiesFromReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "fnd0SetPropertiesFromReviseInput",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::fnd0SetPropertiesFromReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "returnDescription": "",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A vector of data that contains reference information to the objects to be revised",
          "parameterName": "inputs"
        },
        {
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "parameterName": "bd"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc11000.2.3",
      "dependencies": "",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "exceptionCondition": "",
      "id": "fnd0ValidateReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "fnd0ValidateReviseInput",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::fnd0ValidateReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "returnDescription": "",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A vector of data that contains reference information to the objects to be revised",
          "parameterName": "inputs"
        },
        {
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "parameterName": "bd"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc11000.6.0",
      "dependencies": "",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "exceptionCondition": "",
      "id": "fnd0ValidateReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "fnd0ValidateReviseInput",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::fnd0ValidateReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "returnDescription": "",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "The Cfg0ConfiguratorPerspective instance to specify the context and revision rule. If configurator perspective is provided by each input structure in list admissibilityInputs, then this operationConfigPerspective parameter can be NULL.",
          "parameterName": "operationConfigPerspective"
        },
        {
          "description": "The list of target objects for which admissibility data should be returned.",
          "parameterName": "admissibilityInputs"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.3",
      "dependencies": "",
      "description": "This operation returns the admissibility statements for the variability data associated with a given set of context objects. The instance of Cfg0AbsAdmissibility object represents the relation and state between a configurator specific object and a non-configurator specific object. For example, the pair of a partition and an family is associated with state &quot;Available&quot;. The admissibility states are defined by the LOV Cfg0AdmissibilityState. The allowed values for this property are &quot;Available&quot; and &quot;Not Available&quot;.",
      "exceptionCondition": "The operation will return a ServiceException if an unknown error occurs. A possible source for unknown errors could be a codeful configurator component customization.",
      "id": "getAdmissibility#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement::GetAdmissibilityInputStruct>,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "true",
      "name": "getAdmissibility",
      "opTemplate": "Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement::GetAdmissibilityResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getAdmissibility#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement::GetAdmissibilityInputStruct>,&",
      "returnDescription": "This operation returns the list containing the admissibility instances for the families of each input. <br />The following partial errors may be returned:<br />79009 - An invalid configuration perspective is passed to the operation.<br />79010 - The operation expects one product item in the configuration perspective.",
      "useCase": "Consider that following set of the data-<br /><br />Groups-<br />Engine-Box (A Family Group) - It has families &quot;Engine&quot; and &quot;Transmission&quot;. <br />1. Engine- Petrol, Diesel<br />2. Transmission - Manual, Auto<br />Wheel (A Family Group) - It has families &quot;Wheel-drive&quot; and &quot;Suspension&quot;. <br />1. Wheel-drive - 2-Wheels, 4-Wheels<br />2. Suspension - Full-Thrust, Full-Boom<br />For the Engine partition object, the families, Engine &amp; Transmission are &quot;Available&quot; and the families Wheel-drive &amp; Suspension are &quot;Not Available&quot;.<br />The response of the operation for  the Engine partition object will have  the list of  Cfg0AbsAdmissibility objects for families Engine and Transmission, 1 for each and those will have admissibility state as &quot;Available&quot; and also the Cfg0AbsAdmissibility objects for the families Wheel-drive and Suspension, 1 for each and those will have admissibility state as &quot;Not Available&quot;."
    },
    {
      "DeprecationInfo": [
        {
          "deprecatedDescription": "This internal operation is deprecated starting Tc11.4.0 and would be removed in TC13. Use the internal service operation 'getAvailableProductVariability' from _2015_10 instead.",
          "deprecatedRelease": "tc11000.4.0"
        }
      ],
      "ParameterInfo": [
        {
          "description": "It is the object containing input information required to compute the available product variability.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.4",
      "dependencies": "",
      "description": "This operation computes the available features within a set of requested families. The parameters criteriaExpression and familiesToTest are used to pass in the input expression and families of interest requesting the available features. The operation in response returns the available product variability for the requested families satisfying the input expression in criteriaExpression and the constraint(s) present in the system. If the input parameter criteriaExpression is empty, then the response will return the product variability for the requested families satisfying all the system constraints. If the requested family list is empty, the operation will not return any variability information.",
      "exceptionCondition": "",
      "id": "getAvailableProductVariability#const,Cfg0::Soa::Internal::Configurator::_2015_03::ConfiguratorManagement::AvailableProductVariabilityInput,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getAvailableProductVariability",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2015_03::ConfiguratorManagement::AvailableProductVariabilityOutput#Cfg0::Soa::Configurator::ConfiguratorManagement::getAvailableProductVariability#const,Cfg0::Soa::Internal::Configurator::_2015_03::ConfiguratorManagement::AvailableProductVariabilityInput,&",
      "returnDescription": "A list of variant features, default features, value ranges, violations and/or the suggested expression satisfying input expression and the set of constraints present in the configurator context.<br /><br />The following partial errors may be returned:<br />79010   Must provide at least one product item in the configuration perspective.<br />79009   An invalid configuration .<br />79012   The target family container is empty.<br />256054 The value for the applyConstraints bit pattern is invalid. Please refer to documentation for valid values.",
      "useCase": "Consider the following Variability data in a Configurator context say MyProductItem:<br /><br />Family&nbsp;&nbsp;&nbsp;&nbsp;  Fetures<br />A<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A2<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A3<br /><br />B<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B2<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B3<br /><br />C<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C2<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C3<br /><br />Rules:<br />&nbsp;&nbsp;&nbsp;&nbsp;A3 Includes B2:  This is an inclusion rule stating that if the configuration has the feature A3 (of the family A) then include the feature B2 as well (of the family B).<br />B2 Excludes C2:  This is an exclusion rule state that if the configuration has the feature B2 (of the family B) then exclude/remove the feature C2 (of the family C)<br /><br />Use case 1:<br />Operation getAvailableProductVariability is invoked with AvailableProductVariabilityInput populated as:<br />CriteriaExpression = {}<br />familiesToTest = {A, B, C}<br />context containing reference to Item MyProductItem<br />applyConstraints = 1(enable configurator constraint evaluation)<br /><br />Response would contain - A1, A2, A3, B1, B2, B3, C1, C2 &amp; C3<br /><br />Use case 2:<br />Operation getAvailableProductVariability is invoked with AvailableProductVariabilityInput populated as:<br />CriteriaExpression = {A=A3}<br />FamiliesToTest = {B, C}<br />context containing reference to Item MyProductItem<br />applyConstraints = 1<br /><br />Response would - B2, C1 &amp; C3<br /><br />Use case 3:<br />Operation getAvailableProductVariability is invoked with AvailableProductVariabilityInput populated as:<br />criteriaExpression = {A=A1}<br />FamiliesToTest = {B, C}<br />context containing reference to Item MyProductItem<br />applyConstraints = 1<br /><br />Response would - B1, B2, B3, C1, C2 &amp; C3<br /><br /><br />Use case 4:<br />Initialize a variant criteria dialog for a new VariantRule in the Configurator context MyProductItem:<br />The application uses operation getAvailableProductVariability with AvailableProductVariabilityInput populated as below:<br />criteriaExpression = {}<br />familiesToTest = {}<br />context containing reference to Item MyProductItem<br />ApplyConstraints = 0<br /><br />A service exception will be thrown by the  getAvailableProductVariability operation as familiesToTest is empty."
    },
    {
      "ParameterInfo": [
        {
          "description": "It is the object containing input information required to compute the available product variability.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.5",
      "dependencies": "",
      "description": "This operation computes the available features within a set of requested families. The parameters criteriaExpression and familiesToTest are used to pass in the input expression and families of interest requesting the available features. The operation in response returns the available product variability for the requested families satisfying the input expression in criteriaExpression and the constraint(s) present in the system. If the input parameter criteriaExpression is empty, then the response will return the product variability for the requested families satisfying all the system constraints. If the requested family list is empty, the operation will not return any variability information.",
      "exceptionCondition": "",
      "id": "getAvailableProductVariability#const,Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::AvailableProductVariabilityInput,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getAvailableProductVariability",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::AvailableProductVariabilityOutput#Cfg0::Soa::Configurator::ConfiguratorManagement::getAvailableProductVariability#const,Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::AvailableProductVariabilityInput,&",
      "returnDescription": "A list of variant features, default features, feature ranges, violations and/or the suggested expression satisfying input expression and the set of constraints present in the configurator context. &lt;br /&gt;&lt;br /&gt;The following partial errors may be returned:&lt;br /&gt;79010&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Must provide at least one product item in the configuration perspective.&lt;br /&gt;79009&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;An invalid configuration .&lt;br /&gt;79012&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The target family container is empty.&lt;br /&gt;256054 The value for the applyConstraints bit pattern is invalid. Please refer to documentation for valid values.&lt;br /&gt;",
      "useCase": "Consider the following Variability data in a Configurator context say MyProductItem:&lt;br /&gt;&lt;br /&gt;Family&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Features&lt;br /&gt;A&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A1&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A2&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A3&lt;br /&gt;&lt;br /&gt;B&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;B1&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;B2&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;B3&lt;br /&gt;&lt;br /&gt;C&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;C1&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;C2&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;C3&lt;br /&gt;&lt;br /&gt;Rules:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A3 Includes B2:  This is an inclusion rule stating that if the configuration has the feature A3 (of the family A) then include the feature B2 as well (of the family B).&lt;br /&gt;B2 Excludes C2:  This is an exclusion rule state that if the configuration has the feature B2 (of the family B) then exclude/remove the feature C2 (of the family C)&lt;br /&gt;&lt;br /&gt;Use case 1:&lt;br /&gt;Operation getAvailableProductVariability is invoked with AvailableProductVariabilityInput populated as:&lt;br /&gt;CriteriaExpression = {}&lt;br /&gt;familiesToTest = {A, B, C}&lt;br /&gt;context containing reference to Item MyProductItem&lt;br /&gt;applyConstraints = 1(enable configurator constraint evaluation)&lt;br /&gt;&lt;br /&gt;Response would contain - A1, A2, A3, B1, B2, B3, C1, C2 &amp; C3&lt;br /&gt;&lt;br /&gt;Use case 2:&lt;br /&gt;Operation getAvailableProductVariability is invoked with AvailableProductVariabilityInput populated as:&lt;br /&gt;CriteriaExpression = {A=A3}&lt;br /&gt;FamiliesToTest = {B, C}&lt;br /&gt;context containing reference to Item MyProductItem&lt;br /&gt;applyConstraints = 1&lt;br /&gt;&lt;br /&gt;Response would - B2, C1 &amp; C3&lt;br /&gt;&lt;br /&gt;Use case 3:&lt;br /&gt;Operation getAvailableProductVariability is invoked with AvailableProductVariabilityInput populated as:&lt;br /&gt;criteriaExpression = {A=A1}&lt;br /&gt;FamiliesToTest = {B, C}&lt;br /&gt;context containing reference to Item MyProductItem&lt;br /&gt;applyConstraints = 1&lt;br /&gt;&lt;br /&gt;Response would - B1, B2, B3, C1, C2 &amp; C3&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Use case 4: &lt;br /&gt;Initialize a variant criteria dialog for a new VariantRule in the Configurator context MyProductItem:&lt;br /&gt;The application uses operation getAvailableProductVariability with AvailableProductVariabilityInput populated as below:&lt;br /&gt;criteriaExpression = {}&lt;br /&gt;familiesToTest = {}&lt;br /&gt;context containing reference to Item MyProductItem&lt;br /&gt;ApplyConstraints = 0&lt;br /&gt;&lt;br /&gt;A service exception will be thrown by the  getAvailableProductVariability operation as familiesToTest is empty.&lt;br /&gt;"
    },
    {
      "DeprecationInfo": [
        {
          "deprecatedDescription": "This operation does not support the multi-column grid expressions feature for configurator rules. Use the setVariantExpression operation.",
          "deprecatedRelease": "tc10000.1.5"
        }
      ],
      "ParameterInfo": [
        {
          "description": "List of variant rule input structures.",
          "parameterName": "rules"
        },
        {
          "description": "The revision rule to use to retrieve the correct revisions of the option data referenced by the expressions.",
          "parameterName": "revRule"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.2",
      "dependencies": "createObjects",
      "description": "This operation created or update the variant criteria object. Any object which has variant behavior implemented can be used as an variant criteria object. If parameter <font face=\"courier\" height=\"10\">saveRule</font> is set as FALSE then variant criteria object is not saved and transient object is returned. The relationship name used to associate the variant criteria object to the product Item.",
      "exceptionCondition": "",
      "id": "createUpdateVariantRules#const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::VariantRuleInput>,&$const,Teamcenter::RevisionRule,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "createUpdateVariantRules",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::CreateUpdateVariantRulesResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::createUpdateVariantRules#const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::VariantRuleInput>,&$const,Teamcenter::RevisionRule,&",
      "returnDescription": "The list of SOA structure with instances (either created or updated) of objects acting as variant criteria along with variant expression information.",
      "useCase": "This operation can be used for following cases<br /><br /><ul><ul><li type=\"disc\">Create new persistent variant criteria object.</li><li type=\"disc\">Create new transient variant criteria object by providing <font face=\"courier\" height=\"10\">saveRule</font> as False.</li><li type=\"disc\">Create new and attach variant criteria object to the given product item by relation as mentioned in <font face=\"courier\" height=\"10\">relationName</font> or if passed empty then by default relationship <b>TC_Default_SVR_Relationship</b>.</li><li type=\"disc\">Update variant expressions of the existsing variant criteria by providing existsing object in <font face=\"courier\" height=\"10\">ruleToUpdate</font>.</li></ul></ul>"
    },
    {
      "ParameterInfo": [
        {
          "description": "Contains input required to perform solution completeness check for a given set of combinations.",
          "parameterName": "configurationRoster"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc11000.6.0",
      "dependencies": "",
      "description": "The Service operation expects a user to provide a set of configurations which are to be checked for validity and completeness. The service operation also returns a set of configurations which are unknown to the user.<br /><br />These configurations are passed to and returned by the service operation via a &lsquo;Roster Table&rsquo;. <br /><br />A &lsquo;Roster Table&rsquo; is used to represent configurations. A &lsquo;Roster Table&rsquo; is capable of storing configurations. A configuration record in &lsquo;Roster Table&rsquo; is similar to saved variant rule. &lsquo;Roster Table&rsquo; consists of two parts,<br /><br />1.&nbsp;&nbsp;&nbsp;&nbsp;Column Headers &ndash; A list of config expressions, one for each column in the table. A config expression is used to identify family name, family namespace, value and operator. Example: In the config Expression &ldquo;[Teamcenter]A=A1&rdquo;, family name is A, namespace is &ldquo;Teamcenter&rdquo;, operator is &ldquo;=&rdquo; and operand is &ldquo;A1&rdquo;.<br /> <br />2.&nbsp;&nbsp;&nbsp;&nbsp;Rows &ndash; Rows store multiple row. A row contains a configuration, just like a Saved Variant Rule. The configuration is stored in a bit string, which means it can only contain &lsquo;0&rsquo; or &lsquo;1&rsquo;.  The total length of bit string is twice the number of columns present in &lsquo;Roster Table&rsquo;. Hence a string representing a cell has a size of 2.  Given string can only have either &lsquo;0&rsquo; or &lsquo;1&rsquo; the following strings can represent a cell. They are described below with their logical meaning<br />&nbsp;&nbsp;&nbsp;&nbsp;a.&nbsp;&nbsp;&nbsp;&nbsp;&lsquo;00&rsquo; &ndash; Both True and False conditions are possible for corresponding column header config Expression.<br />&nbsp;&nbsp;&nbsp;&nbsp;b.&nbsp;&nbsp;&nbsp;&nbsp;&lsquo;01&rsquo; &ndash; Only True condition is possible for corresponding column header config Expression.<br />&nbsp;&nbsp;&nbsp;&nbsp;c.&nbsp;&nbsp;&nbsp;&nbsp;&lsquo;10&rsquo; &ndash; Only False Condition is possible for corresponding column header config Expression.<br />&nbsp;&nbsp;&nbsp;&nbsp;d.&nbsp;&nbsp;&nbsp;&nbsp;&lsquo;11&rsquo; -  Not Defined<br /><br />A user input consisting of one/more configurations is passed to the service operation using &lsquo;Roster Table&rsquo;. These configurations are checked by the service operation for validity and completeness. An input &lsquo;Roster Table&rsquo; is said to be complete if the input &lsquo;Roster Table&rsquo; passed by user is able to represent all the possible combinations given no constraint is violated.<br /><br />User has ability to provide scope to the service operation while doing completeness check. This is done by passing a list of families. Only families present in the list are used by the service operation to compute the possible combinations and then evaluate whether the passed configurations via input &lsquo;Roster Table&rsquo; are able to cover each and every one of them.<br /><br />User also has an ability to provide &lsquo;explicit families&rsquo; to service operation. When a configuration from input &lsquo;Roster Table&rsquo; is checked for validity turns out to be &lsquo;invalid&rsquo; then service operation checks weather the reason for its invalidity is due to a family present in &lsquo;explicit families&rsquo;. If yes, then exception conditions on those family is checked, if we find an exception condition that meets the configuration input this implies the exception condition allows the configuration to be valid.<br /><br />Given all configurations passed via input &lsquo;Roster Table&rsquo; are valid, and they are able to represent all possible combinations then input is said to be complete. If they don&rsquo;t the configurations passed via input &lsquo;Roster Table&rsquo; are termed incomplete. Missing configurations are computed by service operation and returned via output &lsquo;Roster Table&rsquo;<br /><br />If some but not all configuration passed by user via &lsquo;Roster Table&rsquo; is found to be invalid, this means that the configuration wasn&rsquo;t able to satisfy constraints present in the system. User can specify severity of constraints which will participate in evaluating the configurations in input &lsquo;Roster Table&rsquo;. These invalid configurations are communicated back to the user and missing configurations are evaluated using valid configurations present in input &lsquo;Roster Table&rsquo;.<br /><br />If all the configurations passed to the service operation are invalid the service operation will return empty output &lsquo;Roster Table&rsquo;.<br /><br />Use Case 1: <br />A product context has 3 Boolean Families &lsquo;A&rsquo;, &lsquo;B&rsquo; and &lsquo;C&rsquo;.<br /><br />These 3 families can create a total of 8 configurations given there is no constraint in the system.<br /><br />A user can use &lsquo;getConfigurationRosterCoverage&rsquo; service operation to pass 3 configuration among the 8 possible via input &lsquo;Roster Table&rsquo;. <br /><br />In the current example all the 8 configurations are possible but the user only passed 3 of them in input. Hence the service operation provides verdict as &lsquo;valid&rsquo; for all the 3 input configurations. The remaining 5 configurations are returned back to user via output &lsquo;Roster Table&rsquo;. Additionally service operation also returns a verdict of &lsquo;incomplete&rsquo; to user as he missed 5 possible configurations in input &lsquo;Roster Table&rsquo;.",
      "exceptionCondition": "",
      "id": "getConfigurationRosterCoverage#const,Cfg0::Soa::Internal::Configurator::_2018_11::ConfiguratorManagement::ConfigurationRosterInput",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getConfigurationRosterCoverage",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2018_11::ConfiguratorManagement::ConfigurationRosterCoverage#Cfg0::Soa::Configurator::ConfiguratorManagement::getConfigurationRosterCoverage#const,Cfg0::Soa::Internal::Configurator::_2018_11::ConfiguratorManagement::ConfigurationRosterInput",
      "returnDescription": "Output structure tells user which combinations passed in input via &lsquo;Roster Table&rsquo; were valid and which were invalid. Additionally if also informs user how a correction can be made to an invalid input configuration such that it becomes a valid configuration.<br /><br />The following partial errors may be returned:<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;79001 - The operation has encountered an internal error.",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "List of objects of type <b>VariantRule</b> or <b>Cfg0AbsConfiguratorCriteria</b> from which the Product Configurator configuration session information needs to be retrieved.",
          "parameterName": "sessionConfigObjs"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc11000.5.0",
      "dependencies": "",
      "description": "This operation retrieves the Product Configurator configuration session information from the objects that are marked to carry such information. User starts a Product Configurator session to create product configurations using configuration features. The session holds product information such as the, <b>Cfg0ConfContext</b>, <b>RevisionRule</b>, <b>Effectivity</b>, <b>Rule Date</b>. The product information is also represented as <b>Cfg0ConfiguratorPerspective</b> object. The product information configures the features  which user can select to build product configuration. The session also holds parameters called as Configuration Profile which govern the evaluation of configurator constraints during validation and expansion of the product configuration. The objects must implement ConfigurationSession behavior, so that Product Configurator configuration session information can be attached and retrieved from them.",
      "exceptionCondition": "",
      "id": "getConfigurationSessionInfo#const,std::vector<Teamcenter::BusinessObject>,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getConfigurationSessionInfo",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::GetConfigurationSessionInfoResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getConfigurationSessionInfo#const,std::vector<Teamcenter::BusinessObject>,&",
      "returnDescription": "Returns a list of configuration session information structures where each session information structure holds a product information to select the features and constraints as a Configurator Perspective and parameters to govern the constraint evaluation as Configuration Profile. The input list of objects is processed in sequence. If operation fails to retrieve session information for an input object, a partial error is returned for the same and the processing continues for the next object in the list.<br /><br />The partial errors are returned in serviceData in following cases:<br /><br />77103 - The operation has failed, because the input object is not session configurable.",
      "useCase": "User wants to view a Configurator Criteria which has the Product Configurator configuration session information attached. User may use this information to apply the product configuration associated with the Configurator Criteria on product content and configure it. The session information will recreate the Product Configurator configuration session with features and constraints against which the product content configuration will be evaluated."
    },
    {
      "ParameterInfo": [
        {
          "description": "The list of objects for which variant expressions should be returned. These objects must support variant configurable behavior similar to objects such as <b>Cfg0DefaultRule</b> and <b>Cpd0DesignElement</b>. If the objects don't support variant configurable behavior,  no variant expressions are returned.",
          "parameterName": "targetObjects"
        },
        {
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance which provides the RevisionRule and the Configurator Context.",
          "parameterName": "perspective"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc11000.4.0",
      "dependencies": "",
      "description": "This operation returns the variant expressions associated with the given set of target objects based on the Configurator Perspective input which provides the Revision Rule and Configuration Context.",
      "exceptionCondition": "",
      "id": "getContextBasedVariantExpressions#const,std::vector<Teamcenter::BusinessObject>,&$const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getContextBasedVariantExpressions",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement::GetContextBasedVariantExprsResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getContextBasedVariantExpressions#const,std::vector<Teamcenter::BusinessObject>,&$const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&",
      "returnDescription": "Returns a list of expressions for each target object. The list contains one or more expression for each expression type supported by the rule (applicability and constraint).<br /><br />The partial errors are returned in serviceData in following cases<br /><ul><ul><li type=\"disc\">79009 - An invalid configuration perspective is passed to the operation &ldquo;<b>getContextBasedVariantExpressions</b> &quot;. </li><li type=\"disc\">79010 - The operation &quot;<b>getContextBasedVariantExpressions</b>&quot; expects one product item in the configuration perspective.</li><li type=\"disc\">77061 - An invalid revision rule provided to the operation.</li></ul></ul>",
      "useCase": "<b>Use case 1 :</b><br />User can get variant expressions of an existing object. For example <br /><br />Create an instance of default rule (<b>Cfg0DefaultRule</b>) by using operation setVariantExpressions and set subject condition as &quot;Color = Red&quot;. To retrieve this variant expression getContextBasedVariantExpressions   can be used which returns variant expression formula and the client representable structure format.<br /><b><br />Use case 2:</b><br />If Option Value is not allocated in the input Configurator Context, only the Value text is returned in response, Option tag is empty. For Example,<br /><br />Create an instance of inclusion rule (<b>Cfg0InclusionRule</b>) under Context1 with following subject and applicability:<br />Subject: Transmission = Manual (Manual is allocated to both Context1 and Context2)<br />Applicability: Engine = V4 (V4 is allocated to only Context1)<br />Now allocate the Inclusion Rule to Context2. Open Inclusion Rule from Context2 in Expression Editor. Option V4 is shown as Read Only Text."
    },
    {
      "ParameterInfo": [
        {
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) for which the rule objects are requested.",
          "parameterName": "context"
        },
        {
          "description": "This parameter will allow filtering the rules based on specified criteria such as feature or family or family group instances or combination of them.",
          "parameterName": "filterCriteria"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.2",
      "dependencies": "createObjects",
      "description": "This internal service operation returns the default rule instances as per the specified product items(s) in <font face=\"courier\" height=\"10\">context</font> and filter criteria. <br />The parameter '<font face=\"courier\" height=\"10\">filterCriteria</font>' allows filtering the rules returned by this operation based on criteria.<br /><b>Note:</b> In Teamcenter 10.1.2 the product model(s) member in context is not supported.<br />",
      "exceptionCondition": "No error conditions result at this time for this operation.",
      "id": "getDefaultRules#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FilterCriteria,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getDefaultRules",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Cfg0::Soa::Configurator::ConfiguratorManagement::getDefaultRules#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FilterCriteria,&",
      "returnDescription": "The list of derived default rules will be returned in plain objects list in service data. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font><br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided in parameter context</li></ul></ul>",
      "useCase": "This operation can be used to retrieve rules for the given product item(s) or product model(s) from parameter context. Parameter filterCriteria can be used for filtering based on specific family group(s) or family (families) or feature(s). <br />Consider that following set data:<br /><br />Family Groups: <br />Engine-Box - It has families &quot;Engine&quot; and &quot;Transmission&quot;. <br />Engine - Petrol, Diesel<br />Transmission - Manual, Auto<br />Wheel - It has families &quot;Wheel-drive&quot; and &quot;Suspension&quot;. <br />Wheel-drive - 2-Wheels, 4-Wheels<br />Suspension - Full-Thrust, Full-Boom<br /><br />The rules are created as follows <br /><br />1.If Transmission=Manual Then Set Wheel-drive=2-Wheels. <br />2.If Transmission=Auto Then Set Wheel-drive=4-Wheels. <br />3.If Engine=Diesel And Transmission=Manual Then Set Suspension=Full-Thrust. <br />4.If Engine=Petrol And Transmission=Manual Then Set Suspension=Full-Boom. <br /><br />The response of operation for filter criteria will be as follows:<br />Criteria: { Group: Engine-Box, Family:-, feature:-} - Rules returned will be 1,2,3,4. <br />Criteria: { Group: Engine-Box, Family: Engine, feature:-} - Rules returned will be 3 and 4. <br />Criteria: { Group: Engine-Box, Family: Engine, feature:Diesel} - Rules returned will be 3. <br />Criteria: { Group: -, Family: -, feature: Manual} - Rules returned will be 1,3,4."
    },
    {
      "ParameterInfo": [
        {
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) from which the rule objects are requested.",
          "parameterName": "context"
        },
        {
          "description": "If specified, only rules referencing at least one of the features in the expression are returned.",
          "parameterName": "filterCriteria"
        },
        {
          "description": "The severity associated with message. Valid values are one or more of the following:<br /><b>Error</b><br />Configuration criteria that satisfy this constraint are classified as invalid.<br /><b>Warning</b><br />Classifies information associated with this constraint as considerations, such as recommendations, which are important to review if configuration criteria satisfy this constraint.<br /><b>Info</b><br />Classifies information associated with this constraint as additional information, such as hints, which are of interest if configuration criteria satisfy this constraint.<br />",
          "parameterName": "severities"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.2",
      "dependencies": "createObjects",
      "description": "This internal service operation returns the exclusion rule instances based on the specified <font face=\"courier\" height=\"10\">context</font>, the filter criteria and rule severity. <br />The parameter '<font face=\"courier\" height=\"10\">filterCriteria</font>' allows filtering the rules returned by this operation based on criteria.<br /><b>Note:</b> In Teamcenter 10.1.2, the product model(s) member in context is not supported.<br />",
      "exceptionCondition": "No error conditions result at this time for this operation.",
      "id": "getExcludeRules#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FilterCriteria,&$const,std::vector<std::string>,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getExcludeRules",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Cfg0::Soa::Configurator::ConfiguratorManagement::getExcludeRules#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FilterCriteria,&$const,std::vector<std::string>,&",
      "returnDescription": "The list of rule objects in plain objects list in service data. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font> <br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided in parameter context</li></ul></ul>",
      "useCase": "This operation can be used to retrieve rules for the given product item(s) or product model(s) from parameter context. Parameter filterCriteria can be used for filtering based on specific family group(s) or family (families) or feature(s). <br />Consider that following set data: <br />Groups: <br />&nbsp;&nbsp;&nbsp;&nbsp;  - Engine-Box - It has families &quot;Engine&quot; and &quot;Transmission&quot;. <br />&nbsp;&nbsp;&nbsp;&nbsp;  - Engine - Petrol, Diesel<br />Transmission - Manual, Auto<br />&nbsp;&nbsp;&nbsp;&nbsp;  - Wheel - It has families &quot;Wheel-drive&quot; and &quot;Suspension&quot;. <br />&nbsp;&nbsp;&nbsp;&nbsp;  - Wheel-drive - 2-Wheels, 4-Wheels<br />Suspension - Full-Thrust, Full-Boom<br /><br /><br />The rules are created as follows <br />1. If Transmission=Manual And Set Wheel-drive=4-Wheels Error &quot;Incompatible combination&quot;. <br />2. If Transmission=Auto And Set Wheel-drive=4-Wheels Info &quot;Optimum configuration&quot;. <br />3. If Engine=Diesel And Transmission=Manual Warning &quot;Suspension should be Full-Thrust&quot;. <br />4. If Engine=Petrol And Transmission=Manual Warning &quot;Suspension should be Full-Boom&quot;. <br /><br />The response of operation for filter criteria will be as follows <br />Criteria: { Group: Engine-Box, Family:-, Feature:-} - Rules returned will be 1,2,3,4. <br />Criteria: { Group: Engine-Box, Family: Engine, Feature:-} - Rules returned will be 3 and 4. <br />Criteria: { Group: Engine-Box, Family: Engine, Feature:Diesel} - Rules returned will be 3. <br />Criteria: { Group: -, Family: -, Feature: Manual} - Rules returned will be 1,3,4."
    },
    {
      "ParameterInfo": [
        {
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) or product model(s) for which the family groups are requested.",
          "parameterName": "context"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.2",
      "dependencies": "createObjects",
      "description": "This internal operation returns the family group instances. The parameter context may provide either the product item(s). <br />If the product item(s) of context is available then those instances of the family group (<font face=\"courier\" height=\"10\">Cfg0AbsFamilyGroup</font> or subtypes) are returned which are allocated to the given product item(s). <br /><br />",
      "exceptionCondition": "No error conditions result at this time for this operation.",
      "id": "getFamilyGroups#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getFamilyGroups",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetFamilyGroupResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getFamilyGroups#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&",
      "returnDescription": "The list of group objects and their corresponding allocation objects are returned in response structure. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font>.<br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided in parameter context</li></ul></ul>",
      "useCase": "User can query family groups allocated to the product item(s) mentioned in <font face=\"courier\" height=\"10\">context</font> parameter."
    },
    {
      "ParameterInfo": [
        {
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) for which the rule objects are requested.",
          "parameterName": "context"
        },
        {
          "description": "If specified, only rules referencing at least one of the features in the expression are returned.",
          "parameterName": "filterCriteria"
        },
        {
          "description": "The severity associated with message. Valid values are one or more of the following:<br /><ul><ul><li type=\"disc\"><b>Error</b> :Configuration criteria that satisfy this constraint are classified as invalid.</li><li type=\"disc\"><b>Warning</b> :Classifies information associated with this constraint as considerations, such as recommendations, which are important to review if configuration criteria satisfy this constraint.</li><li type=\"disc\"><b>Info</b>: Classifies information associated with this constraint as additional information, such as hints, which are of interest if configuration criteria satisfy this constraint.</li></ul></ul>",
          "parameterName": "severities"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.2",
      "dependencies": "createObjects",
      "description": "This internal service operation returns the inclusion rule instances based on the specified context, the filter criteria and rule severity. <br />The parameter '<font face=\"courier\" height=\"10\">filterCriteria</font>' allows filtering the rules returned by this operation based on criteria.<br /><b>Note:</b> In Teamcenter 10.1.2, the product model(s) member in context is not supported.<br />",
      "exceptionCondition": "No error conditions result at this time for this operation.",
      "id": "getIncludeRules#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FilterCriteria,&$const,std::vector<std::string>,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getIncludeRules",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Cfg0::Soa::Configurator::ConfiguratorManagement::getIncludeRules#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FilterCriteria,&$const,std::vector<std::string>,&",
      "returnDescription": "The list of rule objects in plain objects list in service data. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font> <br /><br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided in parameter context</li></ul></ul>",
      "useCase": "This operation can be used to retrieve rules for the given product item(s) or product model(s) from parameter <font face=\"courier\" height=\"10\">context</font>. Parameter <font face=\"courier\" height=\"10\">filterCriteria</font> can be used for filtering based on specific family group(s) or family (families) or feature(s). <br />Consider that following set data: <br /><b>Groups:</b> <br /><i>Engine-Box</i> - It has families &quot;Engine&quot; and &quot;Transmission&quot;. <br /><ul><ul><li type=\"disc\">Engine - Petrol, Diesel</li><li type=\"disc\">Transmission - Manual, Auto</li></ul></ul><br /><br /><i>Wheel</i> - It has families &quot;Wheel-drive&quot; and &quot;Suspension&quot;. <br /><ul><ul><li type=\"disc\">Wheel-drive - 2-Wheels, 4-Wheels</li><li type=\"disc\">Suspension - Full-Thrust, Full-Boom</li></ul></ul><br /><br />The rules are created as follows <br />1. If Transmission=Manual And Set Wheel-drive=4-Wheels Error &quot;Incompatible combination&quot;. <br />2. If Transmission=Auto And Set Wheel-drive=4-Wheels Info &quot;Optimum configuration&quot;. <br />3. If Engine=Diesel And Transmission=Manual Warning &quot;Suspension should be Full-Thrust&quot;. <br />4. If Engine=Petrol And Transmission=Manual Warning &quot;Suspension should be Full-Boom&quot;. <br /><br />The response of operation for filter criteria will be as follows <br />Criteria: { Group: Engine-Box, Family:-, Feature:-} - Rules returned will be 1,2,3,4. <br />Criteria: { Group: Engine-Box, Family: Engine, Feature:-} - Rules returned will be 3 and 4. <br />Criteria: { Group: Engine-Box, Family: Engine, Feature:Diesel} - Rules returned will be 3. <br />Criteria: { Group: -, Family: -, Feature: Manual} - Rules returned will be 1,3,4."
    },
    {
      "ParameterInfo": [
        {
          "description": "The Cfg0ConfiguratorPerspective instance to specify the context and revision rule. If configurator perspective is provided by each input structure in list inputStructs, then this operationConfigPerspective parameter can be NULL.",
          "parameterName": "operationConfigPerspective"
        },
        {
          "description": "The input structure for getModelAndOptionConditions operation. Each entry in this list defines a partial error boundary.",
          "parameterName": "inputStructs"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.3",
      "dependencies": "",
      "description": "This operation splits the given input expressions into the list of model and option condition expressions.<br />The business object type of the Cfg0AbsValue value objects, with which the input expressions are formed, divides these values into a set of Cfg0AbsModel objects and a set of Cfg0AbsOptionValue objects. This operation decomposes each input expression into a two lists. One expression list that is formed exclusively with Cfg0AbsModel objects and other expression list that is formed exclusively with Cfg0AbsOptionValue objects.",
      "exceptionCondition": "The operation will return a ServiceException if an unknown error occurs. A possible source for unknown errors could be a codeful configurator component customization.",
      "id": "getModelAndOptionConditions#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::GetModelOptionCondInput>,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getModelAndOptionConditions",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::GetModelOptionCondResponse#Cfg0::Soa::Internal::Configurator::ConfiguratorManagement::getModelAndOptionConditions#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::GetModelOptionCondInput>,&",
      "returnDescription": "Returns the list of the model and the option condition expressions for the given input expressions.<br />The following partial errors may be returned:<br />79009 - An invalid configuration perspective is passed to the operation.<br />79010 - The operation expects one product item in the configuration perspective.",
      "useCase": "Input expression will be spitted into model and option condition expressions.<br />Use Case1: <br />Example: Input expression - &quot;Model=m1 OR Model=m2 AND Engine=e1&quot; is decomposed into 2 lists with 2 elements each. <br />The model expression list will contain: modelExpressions[0]=&quot;Model=m1&quot; <br />                                                                 modelExpressions[1]= &quot;Model=m2&quot;. <br />The option condition list will contain: optionConditions[0]= &quot;&quot; (an empty expression representing the Boolean                 constant TRUE)                                      <br />                                                                optionConditions[1]=&quot;Engine=e1&quot;. <br />ORing the AND combinations of each model expression with the option condition at the same index forms an expression that is logically equivalent to the input expression:<br />ModelExpression[0] &amp; OptionCondition[0] | ModelExpression[1] &amp; OptionCondition[1] == InputExpression<br />Use Case2:<br />Example: InputExpression= &quot;OF1 = V1 AND (ModelFamily = M1 OR ModelFamily = M3) AND OF3 = V3)&quot;<br />The Output will contain two list corresponding to the input expression. One list will correspond to the model expression and the other list will correspond to the option condition expression.<br />ModelExpression will contain:  modelExpressions[0]=&quot;ModelFamily=M1&quot;<br />                                                       modelExpressions[1]=&quot;ModelFamily=M3&quot;<br />Variant condition list will contain: optionConditions[0]= &quot; OF1=V1 &amp; OF3=V3&quot;<br />                                                          optionConditions[1]= &quot; OF1=V1 &amp; OF3=V3&quot;"
    },
    {
      "ParameterInfo": [
        {
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) for which the product models are requested.",
          "parameterName": "context"
        },
        {
          "description": "The parameter to specify if only the product model (<b>Cfg0AbsProductModel</b> and subtypes) instances should be returned or all instances of <b>Cfg0AbsModel</b> should be returned.<br /><br /><b>Note:</b> In Teamcenter 10.1.2 only <b>Cfg0AbsProductModel</b> instances are supported.",
          "parameterName": "leafLevelOnly"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.2",
      "dependencies": "createObjects",
      "description": "This internal operation returns the product model instances for the given product item(s) in parameter context. <br />If the parameter '<font face=\"courier\" height=\"10\">leafLevelOnly</font>' is set to true, then all the product models (or subtypes) are returned and the summary models (or subtypes) are ignored. <br />",
      "exceptionCondition": "No error conditions result at this time for this operation.",
      "id": "getModelsForProduct#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$bool",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getModelsForProduct",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Cfg0::Soa::Configurator::ConfiguratorManagement::getModelsForProduct#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$bool",
      "returnDescription": "The list of product models. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font>. <br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided in parameter context</li></ul></ul>",
      "useCase": "This operation can be used to retrieve the models for the product item(s).<br /><br />The product item &quot;Car&quot; has following option families and product models LXI,VXI,LDI and VDI in model family &quot;Models&quot;. The product item also has summary models created &quot;Petrol Models&quot; and &quot;Diesel Models&quot; in summary model family &quot;Summaries&quot;.<br /><br />User can use operation <font face=\"courier\" height=\"10\">getModelsForProduct</font> as follows:<br /><br />If user wants to get all models i.e. product models and summary models, the parameter <font face=\"courier\" height=\"10\">leafLevelOnly</font> should be passed as FALSE.<br /><br />If user wants get only product models i.e. LXI,VXI,LDI and VDI, the parameter <font face=\"courier\" height=\"10\">leafLevelOnly</font> should be passed as TRUE.<br /><br /><br /><br />"
    },
    {
      "ParameterInfo": [
        {
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) or the product model(s) for which the family groups are requested.",
          "parameterName": "context"
        },
        {
          "description": "The list of family group instances. This parameter is optional. If specified, only the families which are members of the specified family groups within the specified context are returned.",
          "parameterName": "groups"
        },
        {
          "description": "If this parameter is set to true, the families those are not the members of any family group within the specified context are returned.<br />The default value for this parameter is false, which guides the operation to return the families only from the specified family groups.<br /><b>Note:</b> This functionality is not supported in the Teamcenter 10.1.2 release.",
          "parameterName": "otherFamilies"
        },
        {
          "description": "If this parameter is set to true, the option families those are members of any of the specified groups and are allocated to specified product context are returned even if their availability rule is in an 'unavailable' state. <br />Default value for this parameter is false.  <br /><b>Note: </b>This functionality is not supported in the Teamcenter 10.1.2 release.<br /><br />",
          "parameterName": "unavailableFamilies"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.2",
      "dependencies": "createObjects",
      "description": "This internal operation returns the option family instances given <font face=\"courier\" height=\"10\">context</font> information. If the product item(s) member is provided in context, then the option families that are allocated to any of the specified product item(s) are returned. If the product models member is provided in <font face=\"courier\" height=\"10\">context</font>, then the option families that are made available to at least one of given the product model(s) are returned.<br /><br />In addition, to filter the option families further, the '<font face=\"courier\" height=\"10\">groups</font>' input parameter can be leveraged. If this parameter is populated with the family group instances or IDs, then the option families that are allocated to any of the specified product item(s) and which are members of the specified family group instances are returned.<br />If the parameter '<font face=\"courier\" height=\"10\">otherFamilies</font>' is set to 'true', then operation will return that option families which are not the members of any family group instances however are allocated to at least one of the specified product item(s).<br />The default value for this parameter is 'false', which guides the system to only return the Option Families from the Family Groups specified in the input parameter 'groups'. <br />If  parameter '<font face=\"courier\" height=\"10\">unavailableFamilies</font>' is set to true, option families those are the  members of any of the specified groups and are allocated to specified product context are returned even if their availability rule is in an 'unavailable' state. <br /><br /><b>Note:</b>  In Teamcenter 10.1.2 the product model(s) member of context is ignored.",
      "exceptionCondition": "No error conditions result at this time for this operation.",
      "id": "getOptionFamilies#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Teamcenter::Cfg0configurator::Cfg0AbsFamilyGroup>,&$bool$bool",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getOptionFamilies",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetOptionFamiliesResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getOptionFamilies#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Teamcenter::Cfg0configurator::Cfg0AbsFamilyGroup>,&$bool$bool",
      "returnDescription": "The list of structures, that encapsulate the information about a Family Group and the list of families it contains, along with the allocation objects which allocate the families to the respective product items. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font>.<br /><br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided in parameter context</li></ul></ul>",
      "useCase": "This operation can be used to retrieve families for the given product item(s) or product model(s) from parameter <font face=\"courier\" height=\"10\">context</font>. Parameter <font face=\"courier\" height=\"10\">filterCriteria</font> can be used for filtering based on specific family group(s) or family (families) or feature(s). <br /><br />Consider that following set data: <br /><b>Groups:</b> <br /><i>Engine-Box</i> - It has families &quot;Engine&quot; and &quot;Transmission&quot;. <br /><ul><ul><li type=\"disc\">Engine- Petrol, Diesel</li><li type=\"disc\">Transmission - Manual, Auto</li></ul></ul><br /><br /><i>Wheel</i> - It has families &quot;Wheel-drive&quot; and &quot;Suspension&quot;. <br /><ul><ul><li type=\"disc\">Wheel-drive - 2-Wheels, 4-Wheels</li><li type=\"disc\">Suspension - Full-Thrust, Full-Boom</li></ul></ul><br /><br /><br />The response of operation for filter criteria will be as follows <br />Criteria: { Group: Engine-Box, Family:-, Value:-} - Option families returned will be Engine and Transmission. <br />Criteria: { Group: Engine-Box, Family: Engine, Value:-} - Option families returned will be Engine."
    },
    {
      "ParameterInfo": [
        {
          "description": "Recipe for executing the search",
          "parameterName": "searchRecipe"
        },
        {
          "description": "Search Options for a given Search (load count and sorting)",
          "parameterName": "searchOptions"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.2",
      "dependencies": "fetchNextSearchResults,stopSearch",
      "description": "Executes a search based on a search recipe. The search results can contain any sub-types of <b>POM_Object</b>. The search recipe could be a complex search definition that combines multiple simpler search definitions in a logical sequence, e.g. multiple saved queries as defined in the Teamcenter application <b>QueryBuilder</b>.<br /><br />The search is executed in the context of a configurator perspective (<b>Cfg0ConfiguratorPerspective</b>). Configurator objects such as features, or constraint rules, are filtered based on their relationship to the product context items and product models in the configurator perspective.<br /><br />Variant and effecitvity configurable objects in the search results are filtered according to the criteria associated with the <b>VariantRule</b> and <b>RevisionRule</b> in the configurator perspective.<br /><br />Revisable objects in the search results are revision configured according to the <b>RevisionRule</b> in the configurator perspective.<br /><br />The results of a search are returned in batches based on the <font face=\"courier\" height=\"10\">defaultLoadCount</font> specified in the search options. A search cursor object is returned in the response with which subsequent batches can be requested with operation <font face=\"courier\" height=\"10\">fetchNextSearchResults</font>.<br /><br />Search options may be used to sort the results of a search using one or more attributes of the returned objects.",
      "exceptionCondition": "No error conditions result at this time for this operation.",
      "id": "executeSearch#const,Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchRecipe,&$const,Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchOptions,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "executeSearch",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::executeSearch#const,Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchRecipe,&$const,Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchOptions,&",
      "returnDescription": "The found objects and the search cursor object for retrieving next set of objects. The partial errors are returned for following case<br /><br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided. </li><li type=\"disc\">79008 - The search criteria provided in input is invalid.</li></ul></ul>",
      "useCase": "1.<b> Get models for product</b>. Provide product context, revision rule and filter list in parameter <font face=\"courier\" height=\"10\">searchRecipe</font>.<font face=\"courier\" height=\"10\">configuratorPerspecitve</font>, <font face=\"courier\" height=\"10\">searchRecipe</font>.<font face=\"courier\" height=\"10\">searchExpression</font>.<font face=\"courier\" height=\"10\">savedQueries</font> contains a saved query for searching models.<br /><br />2. <b>Get Family Groups</b>. Provide product context, revision rule and filter list in parameter <font face=\"courier\" height=\"10\">searchRecipe</font>.<font face=\"courier\" height=\"10\">configuratorPerspective</font>; <font face=\"courier\" height=\"10\">searchRecipe</font>.<font face=\"courier\" height=\"10\">searchExpression</font>.<font face=\"courier\" height=\"10\">savedQueries</font> contains a saved query for searching Family Groups.<br /><br />3. <b>Get Option Families</b>. Provide product context, revision rule and filter list in parameter <font face=\"courier\" height=\"10\">searchRecipe</font>.<font face=\"courier\" height=\"10\">configuratorPerspecitve</font>; <font face=\"courier\" height=\"10\">searchRecipe</font>.<font face=\"courier\" height=\"10\">searchExpression</font>.<font face=\"courier\" height=\"10\">savedQueries</font> contains a saved query for searching families. <br /><br />4. <b>Get Option Values</b>. Provide product context, revision rule and filter list in parameter <font face=\"courier\" height=\"10\">searchRecipe</font>.<font face=\"courier\" height=\"10\">configuratorPerspecitve</font>; <font face=\"courier\" height=\"10\">searchRecipe</font>.<font face=\"courier\" height=\"10\">searchExpression</font>.<font face=\"courier\" height=\"10\">savedQueries</font> will have a saved query for searching features.<br /><br />5. <b>Get Derived Default Rules</b>. Provide product context, revision rule and filter list in parameter <font face=\"courier\" height=\"10\">searchRecipe.configuratorPerspecitve; searchRecipe.searchExpression.savedQueries</font> will have a saved query for searching derived default rules, <font face=\"courier\" height=\"10\">searchRecipe</font>.<font face=\"courier\" height=\"10\">searchExpression</font>.<font face=\"courier\" height=\"10\">filterCriteria</font> will have the filter information.<br /><br />6. <b>Get Exclude Rules</b>. Provide product context, revision rule and filter list in parameter <font face=\"courier\" height=\"10\">searchRecipe.configuratorPerspecitve; searchRecipe.searchExpression.savedQueries</font> will have a saved query for searching exclude rules, <font face=\"courier\" height=\"10\">searchRecipe</font>.<font face=\"courier\" height=\"10\">searchExpression</font>.<font face=\"courier\" height=\"10\">filterCriteria</font> will have the filter information.<br /><br />7. <b>Get Include Rules.</b> Provide product context, revision rule and filter list in parameter <font face=\"courier\" height=\"10\">searchRecipe.configuratorPerspecitve; searchRecipe.searchExpression.savedQueries</font> will have a saved query for searching include rules,<font face=\"courier\" height=\"10\">searchRecipe.searchExpression.filterCriteria</font> will have the filter information."
    },
    {
      "ParameterInfo": [
        {
          "description": "An object containing input information required to compute the availability of features to models.",
          "parameterName": "input"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.7",
      "dependencies": "",
      "description": "This operation computes the available features within a set of requested families and models. The parameters criteriaExpression and familiesToTest are used to pass in the input expression representing a model and families of interest for which available features are requested. The operation response returns the available product variability for all the features in the requested families, if the features satisfy the input expression in criteriaExpression and the constraint(s) present in the system. The input parameter criteriaExpression is required to contain expression representing models. Iif they don't the the criteriaExpression is empty the operation throws an  error, . The input parameter familiesToTest is required to contain list of Family. If the requested family list is empty, the operation throws an error.",
      "exceptionCondition": "",
      "id": "getOptionValueAvailability#const,Cfg0::Soa::Internal::Configurator::_2016_09::ConfiguratorManagement::AvailabilityInput",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getOptionValueAvailability",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2016_09::ConfiguratorManagement::AvailabilityOutput#Cfg0::Soa::Configurator::ConfiguratorManagement::getOptionValueAvailability#const,Cfg0::Soa::Internal::Configurator::_2016_09::ConfiguratorManagement::AvailabilityInput",
      "returnDescription": "A per model list of variant features, along with the availability status.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">77075  - The operation has failed, because at least one Family is expected in the input.</li><li type=\"disc\">79009  - An invalid configuration perspective is passed to the operation getOptionValueAvailability.</li><li type=\"disc\">79010  - The operation &quot;getOptionValueAvailability&quot; expects one product item in the configuration perspective.</li><li type=\"disc\">256054  - The value for the &quot;applyConstraints&quot; bit pattern is invalid. Please refer to documentation for valid values.</li></ul></ul>",
      "useCase": "Consider the following Variability data in a Configurator Ccontext itemsay &quot;MyProductItem&quot;:<br /><br />Model Family&nbsp;&nbsp;&nbsp;&nbsp;Features<br />M<br /><ul><ul><li type=\"disc\">m1</li><li type=\"disc\">m2</li><li type=\"disc\">m3</li></ul></ul><br /><br />Family&nbsp;&nbsp;&nbsp;&nbsp;Features   <br />A<br /><ul><ul><li type=\"disc\">a1</li><li type=\"disc\">a2</li><li type=\"disc\">a3</li></ul></ul><br /><br />B<br /><ul><ul><li type=\"disc\">b1</li><li type=\"disc\">b2</li><li type=\"disc\">b3</li></ul></ul><br /><br />C<br /><ul><ul><li type=\"disc\">c1</li><li type=\"disc\">c2</li><li type=\"disc\">c3</li></ul></ul><br /><br />Rules:<br /><ul><ul><li type=\"disc\">a1 is available with m1:  This is anavailability rule stating that the configuration feature a1 (of the family A) is available with the model m1 (of model family M).</li><li type=\"disc\">a2 is available with m1:  This is an availability rule stating that the configuration feature a2 (of the family A) is available with the model m1 (of model family M).</li><li type=\"disc\">b1 is available with m2:  This is an availability rule stating that the configuration feature b1 (of the family B) is available with the model m2 (of model family M).</li></ul></ul><br /><br /><br />Use case 1:<br />Operation getOptionValueAvailability is invoked with AvailabilityInput populated as:<br />Configurator Context item = &quot;MyProductItem&quot;<br />criteriaExpression = { M=m1}<br />familiesToTest = {A}<br />applyConstraints = 1(enable configurator constraint evaluation)<br /><br />Response -  <br />For Model M1 - a1(Available ) , a2(Available ), a3( Not Available )<br /><br />Use case 2:<br />Operation getOptionValueAvailability is invoked with AvailabilityInput populated as:<br />Configurator Context item = &quot;MyProductItem&quot;<br />CriteriaExpression = { M=m1, M=m2 }<br />FamiliesToTest = { A,B }<br />applyConstraints = 1<br /><br />Response - <br />For Model M1 - a1(Available ) , a2(Available ), a3( Not Available ), b1(Not Available) , b2(Not Available), b3( Not Available )<br />For Model M2 - a1(Not Available) , a2(Not Available), a3( Not Available ), b1(Available) , b2(Not Available), b3( Not Available )<br /><br />Use case 3:<br />Operation getOptionValueAvailability is invoked with AvailabilityInput populated as:<br />Configurator Context item = &quot;MyProductItem&quot;<br /> CriteriaExpression = { M=m1, M=m2 }<br />FamiliesToTest =  {}<br />applyConstraints = 1<br /><br />Response - <br />The parameter serviceData will contain appropriate error(s), because familiesToTest is empty<br /><br />Use case 4:<br />Operation getOptionValueAvailability is invoked with AvailabilityInput populated as:<br />Configurator Context item = &quot;MyProductItem&quot;<br /> CriteriaExpression = { }<br />FamiliesToTest = { A,B }<br />applyConstraints = 1<br /><br />Response - <br />The parameter serviceData will contain  appropriate error(s), because CriteriaExpression is empty."
    },
    {
      "ParameterInfo": [
        {
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) or product model(s) for which the rule objects are requested.",
          "parameterName": "context"
        },
        {
          "description": "Optional list of family groups. If specified, only the features belonging to any of the <font face=\"courier\" height=\"10\">families</font>, which are members of the specified family groups are returned.",
          "parameterName": "groups"
        },
        {
          "description": "Optional list of families.  If specified, only the features belonging to any of the specified families are returned.",
          "parameterName": "families"
        },
        {
          "description": "If this parameter is set to true, the values which are marked with negative availability would also be returned.  Default value for this parameter is 'false'.<br /><b>Note:</b> This functionality is not supported in the Teamcenter 10.1.2 release.",
          "parameterName": "unavailableValues"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.2",
      "dependencies": "createObjects",
      "description": "This internal service operation returns the feature instances based on the specified <font face=\"courier\" height=\"10\">context</font> and other parameters. If product item(s) member is provided in the <font face=\"courier\" height=\"10\">context</font>, then the features that are allocated to any of the product items are returned.  If product model(s) member is provided in the context, then the features that are made available to any of the product models are returned.<br />If <font face=\"courier\" height=\"10\">groups</font> parameter is populated with the family group instances, then only those feature instances which belong to the family instances of given list of family group members are returned.<br />If <font face=\"courier\" height=\"10\">families</font> parameter is populated with the family instances, then only those feature instances which belong to the given family instances are returned.<br />If <font face=\"courier\" height=\"10\">unavailableValues</font> is set to 'true', it would also return the features which are marked with negative availability. <br /><br /><b>Note:</b> In Teamcenter 10.1.2 the product model(s) member in context is not considered. This member is used for availability feature and this feature will be supported in Teamcenter 10.1.3 onwards.",
      "exceptionCondition": "No error conditions result at this time for this operation.",
      "id": "getOptionValues#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Teamcenter::Cfg0configurator::Cfg0AbsFamilyGroup>,&$const,std::vector<Teamcenter::Cfg0configurator::Cfg0AbsOptionFamily>,&$bool",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getOptionValues",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetOptionValuesResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getOptionValues#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Teamcenter::Cfg0configurator::Cfg0AbsFamilyGroup>,&$const,std::vector<Teamcenter::Cfg0configurator::Cfg0AbsOptionFamily>,&$bool",
      "returnDescription": "The list of features along with their availability in product model. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font>.<br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided in parameter context</li></ul></ul>",
      "useCase": "This operation can be used to retrieve features for the given product item(s) or product model(s) from parameter <font face=\"courier\" height=\"10\">context</font>. Parameter <font face=\"courier\" height=\"10\">filterCriteria</font> can be used for filtering based on specific family group(s) or family (families) or feature(s). <br /><br />Consider that following set data: <br />Groups: <br /><i>Engine-Box </i>- It has families &quot;Engine&quot; and &quot;Transmission&quot;. <br /><ul><ul><li type=\"disc\">Engine- Petrol, Diesel</li><li type=\"disc\">Transmission - Manual, Auto</li></ul></ul><br /><br /><i>Wheel</i> - It has families &quot;Wheel-drive&quot; and &quot;Suspension&quot;. <br /><ul><ul><li type=\"disc\">Wheel-drive - 2-Wheels, 4-Wheels</li><li type=\"disc\">Suspension - Full-Thrust, Full-Boom</li></ul></ul><br /><br /><br />The response of operation for filter criteria will be as follows <br />Criteria: { Group: Engine-Box, Family:-, Feature:-} - Features returned will be Petrol, Diesel, Manual and Auto. <br />Criteria: { Group: Engine-Box, Family: Engine, Feature:-} - Features returned will be Petrol and Diesel."
    },
    {
      "ParameterInfo": [
        {
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) in which context the overlap state should be determined.",
          "parameterName": "context"
        },
        {
          "description": "Specifies the set of input structures each of which defines a set of expression and the reference expression for which the degree of overlap should be determined.",
          "parameterName": "overlapStateInputs"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.3",
      "dependencies": "getVariantExpressions",
      "description": "This operation determines and returns the degree of overlap between a set of configuration expressions and a reference configuration expression.",
      "exceptionCondition": "",
      "id": "getOverlapStates#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::OverlapStateInput>,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getOverlapStates",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::OverlapStateResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getOverlapStates#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::OverlapStateInput>,&",
      "returnDescription": "Overlap information is returned separately for each of the input structure. The degree of overlap between each expression in the input structure and the corresponding reference expression in the same input structure is indicated with an overlap state keyword. This following illustrates possible scenarios:<br /><br /><font face=\"courier\" height=\"10\">VariantRule: . . .|---------------|</font><br /><font face=\"courier\" height=\"10\">Object 0: .|----|. . . . . . . . . . . . . . </font>: k_overlapstate_none <br /><font face=\"courier\" height=\"10\">Object 1: . . |------| . . . . . . . . . . . </font>: k_overlapstate_intersect <br /><font face=\"courier\" height=\"10\">Object 2: . . . . . . . .|----|. . . . . . . </font>: k_overlapstate_subset <br /><font face=\"courier\" height=\"10\">Object 3: . . . . . . . . . .|------|. . . . </font>: k_overlapstate_intersect <br /><font face=\"courier\" height=\"10\">Object 4: .|-----------------------------| . </font>: k_overlapstate_superset <br /><font face=\"courier\" height=\"10\">Object 5: . . . . |---------------|. . . . . </font>: k_overlapstate_match <br /><font face=\"courier\" height=\"10\">Object 6: . . . . |-------------------|. . . </font>: k_overlapstate_superset <br /><font face=\"courier\" height=\"10\">Object 7: . . |-------------------|. . . . . </font>: k_overlapstate_superset <br /><font face=\"courier\" height=\"10\">Object 8: . . . . . . . FALSE. . . . . . . . </font>: k_overlapstate_none<br /><font face=\"courier\" height=\"10\">Object 9: . . . . . . . TRUE . . . . . . . . </font>: k_overlapstate_superset<br /><br />The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font> in following cases.<br /><ul><ul><li type=\"disc\">79007    - At least one product item should be provided in parameter context</li><li type=\"disc\">256000  -  An internal configurator error occurred. </li><li type=\"disc\">256001  -  A general configurator error occurred. </li><li type=\"disc\">256002   - The following product is invalid: [DictionaryNamespace]FamilyName (Context: info). </li><li type=\"disc\">256003   - The following feature value is invalid: [DictionaryNamespace]FamilyName (Context: info). </li><li type=\"disc\">256004   - The following feature family is invalid: [DictionaryNamespace]FamilyName (Context: info). </li><li type=\"disc\">256005   - An invalid feature combination was found (Context: info). </li><li type=\"disc\">256006   - An invalid product configuration was found (Context: info). </li><li type=\"disc\">256007   - An invalid expression was found (Context: info). </li><li type=\"disc\">256008   - The following Boolean operator is invalid: opcode (Context: info). </li><li type=\"disc\">256010   - A time-out occurred (Context: info). </li><li type=\"disc\">256011   - A resource is not available (Context: info). </li><li type=\"disc\">256013   - A configurator implementation specific error occurred (Context: info). </li><li type=\"disc\">256014   - The expression contains unmatched quote at position 'number'. </li><li type=\"disc\">256015   - The expression contains unmatched bracket at position 'number'. </li><li type=\"disc\">256016   - An unexpected token 'text' was found at position 'number'. </li><li type=\"disc\">256017   - The entry 'text' was found at position 'number' when an option value was expected. </li><li type=\"disc\">256018   - The token 'text' is missing after 'text' at position 'number'. </li><li type=\"disc\">256019   - The expression adaptor does not support text used at position 'number'. </li><li type=\"disc\">256020   - The XML tag 'text' has no text value. </li><li type=\"disc\">256021   - The string 'formula' cannot be converted into an expression. </li><li type=\"disc\">256022   - The operator code 'opcode' in token at position 'number' is unknown. </li><li type=\"disc\">256023   - The value 'text' in token at position 'number' is unknown. </li><li type=\"disc\">256024   - The family 'text' in token at position 'number' is unknown. </li><li type=\"disc\">256025   - An ambiguous option value name 'FamilyName' in namespace 'DictionaryNamespace' in token at position 'number' was found: text. </li><li type=\"disc\">256026   - An ambiguous option family name 'FamilyName' in token at position 'number' was found: 'text'. </li><li type=\"disc\">256027   - The option namespace 'DictionaryNamespace' in token at position 'number' is invalid. </li><li type=\"disc\">256028   - The option family 'FamilyName' in token at position 'number' is invalid. </li><li type=\"disc\">256029   - The option value 'text' for family 'FamilyName' in token at position 'number' is invalid. </li><li type=\"disc\">256030   - The option value 'text' for family 'FamilyName' in token at position 'number' is invalid: its value is not numeric. </li><li type=\"disc\">256031   - The option value 'text' for family 'FamilyName' in token at position 'number' is invalid: the value unit of measure 'text' does not match the family unit of measure 'text'. </li><li type=\"disc\">256032   - The option / family / family namespace combination 'text' / 'FamilyName' / 'DictionaryNamespace' in token at position 'number' is invalid. </li><li type=\"disc\">256033   - The family 'FamilyName' for option / family namespace combination 'text' / 'DictionaryNamespace' in token at position 'number' is invalid. </li><li type=\"disc\">256034   - There is no option value in token at position 'number'. </li><li type=\"disc\">256035   - The option value 'text' for family 'FamilyName' in token at position 'number' is invalid: the value is not a valid date.</li></ul></ul>",
      "useCase": "An application wants to qualify variant conditions that were retrieved with getVariantExpressions as to whether the condition is equal to, intersects with, or is a subset or superset of the variant criteria associated with the currently active variant configuration criteria (<b>VariantRule</b>). This cannot be achieved with properties on variant conditions or VariantRules because the result depends on the combination of a variant condition and the variant configuration criteria on a VariantRule. One and the same condition may have different overlap states with different VariantRules.<br />The application calls getOverlapStates and passes the variant criteria (as obtained from a VariantRule using getVariantExpressions) as referenceExpression, and the variant conditions (as obtained from a set of product data elements using getVariantExpressions) as expressions."
    },
    {
      "DeprecationInfo": [
        {
          "deprecatedDescription": "This internal operation is deprecated starting Tc10.1.5 and would be removed in TC12. Use the public service operation 'getProductDefaults' instead.",
          "deprecatedRelease": "tc10000.1.5"
        }
      ],
      "ParameterInfo": [
        {
          "description": "A list of <font face=\"courier\" height=\"10\">ProductDeafultsInput</font> structures each of which comprises a list of <font face=\"courier\" height=\"10\">BusinessObjectConfigExpression</font>.Each <font face=\"courier\" height=\"10\">ProductDeafultsInput</font> structure represents its own transaction and partial error boundary.Providing fewer <font face=\"courier\" height=\"10\">ProductDeafultsInput</font> structures where each comprises many <font face=\"courier\" height=\"10\">BusinessObjectConfigExpressions</font> is more efficient than providing <br />many <font face=\"courier\" height=\"10\">ProductDeafultsInput</font> structures where each comprises a few <font face=\"courier\" height=\"10\">BusinessObjectConfigExpressions</font>. However, the latter returns more granular partial errors.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.2",
      "dependencies": "createObjects",
      "description": "Gets the results of applying default rules to a set of input expressions in the context of the associated <b>Cfg0ConfiguratorPerspective</b> objects.",
      "exceptionCondition": "No error conditions result at this time for this operation.",
      "id": "getProductDefaults#const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ProductDefaultsInput>,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getProductDefaults",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetProductDefaultsResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getProductDefaults#const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ProductDefaultsInput>,&",
      "returnDescription": "The updated expression containing defaults. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font>.<br /><ul><ul><li type=\"disc\">79007 - This operation expects at least one Product Item in the Configurator Perspective object.</li><li type=\"disc\">77034 - The supported variant expression types for the object &quot;Rule 001&quot; of type &quot;Default Rule&quot; are 27, 33. Invalid variant expression types provided : 38</li></ul></ul>",
      "useCase": "The <font face=\"courier\" height=\"10\">getProductDefaults</font> operation can be used in following ways: <br /><br /><b>Example 1:</b> System has default rule which states &quot;If TYPE=CLASSIC and ENGINE=V4 then Apply COLOR=RED&quot; <br /><br />If user provides input as &quot;TYPE=CLASSIC and ENGINE=V4&quot; then response provided by operation as  &quot;TYPE=CLASSIC and ENGINE=V4 and COLOR=RED&quot; in  <font face=\"courier\" height=\"10\">expressionsWithDefaults</font>.<br /><br />To filter response based on option families <br /><br /><b>Example 2:</b> System has default rule which states &quot;If TYPE=CLASSIC and ENGINE=V4 then Apply COLOR=RED&quot;<br /><br />If user provides input expression to getProductDefaults SOA as TYPE=CLASSIC and ENGINE=V4<br />Input filter of Families is provided as TYPE AND ENGINE AND COLOR<br /><br />Then output of SOA in expressionsWithDefaults is expected as TYPE=CLASSIC and ENGINE=V4 and COLOR=RED<br /><br /><b>Example 3:</b> System has default rule which states &quot;If TYPE=CLASSIC and ENGINE=V4 then Apply COLOR=RED&quot;<br /><br />If user provides input expression to getProductDefaults SOA as &quot;TYPE=CLASSIC and ENGINE=V4&quot;<br />Input filter of Families is provided as TRANSMISSION<br /><br />Then output of SOA in expressionsWithDefaults is expected same as input. Because the family provided in filter does not match with any of the term in updated expression."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of ProductDeafultsInput structures each of which comprises a list of BusinessObjectConfigExpression.Each ProductDeafultsInput structure represents its own transaction and partial error boundary.Providing fewer ProductDeafultsInput structures where each comprises many BusinessObjectConfigExpressions is more efficient than providing <br />many ProductDeafultsInput structures where each comprises a few BusinessObjectConfigExpressions. However, the latter returns more granular partial errors.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.5",
      "dependencies": "createObjects",
      "description": "This operation returns the product defaults for the input expression(s) by applying the default rule(s). The revision rule is used to determine the correct revision of configurator objects like rules, families, features, availability statements etc, that take part in the process. The parameter expressionsToUpdate specifies the input variant expressions for the variant configuration. The parameter families specifies the option families for which a default value assignment is requested. If specified, the server assigns default features for only these families in the response. If the list is empty, the server assigns default features for all the families.<br /><br />This operation also returns the list of mandatory families, which  do not have any value selection. The response returns this list of families in parameter requiredFamilies. The parameter criteriaStatus conveys the information about the status of the configuration.",
      "exceptionCondition": "No error conditions result at this time for this operation.",
      "id": "getProductDefaults#const,std::vector<Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ProductDefaultsInput>,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getProductDefaults",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::GetProductDefaultsResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getProductDefaults#const,std::vector<Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ProductDefaultsInput>,&",
      "returnDescription": "The response is the expression obtained by applying satisfying default rules, which does not conflict with any other constraint in the system.<br />However default rules will be applied on the branches which has satisfying default rules without conflicting with other constraint in that branch.<br /><ul><ul><li type=\"disc\"> The following partial errors may be returned:77034 - The supported variant expression types for the object &quot;Rule 001&quot; of type &quot;Default Rule&quot; are 27, 33. Invalid variant expression types provided : 38</li><li type=\"disc\">79010 - The operation &quot;getProductDefaults&quot; expects one product item in the configuration perspective.</li><li type=\"disc\"> 256054 - The value for the applyDefaults bit pattern is invalid.</li></ul></ul>",
      "useCase": "Consider the following Variability data in a Configurator context :<br />Family Features<br />TYPE  CLASSIC, HATCHBACK, SEDAN<br />ENGINE  L4, V6, V8<br />COLOR RED, GREEN, BLUE<br />ABS ABS<br />Default Rules:<br />Default Rule 1 - &quot;If TYPE=CLASSIC and ENGINE=L4 then Apply COLOR=RED&quot;<br />Default Rule 2 - &quot;If TYPE=CLASSIC and ENGINE=L4 then Apply ABS=TRUE&quot;<br />The getProductDefaults operation can be used in following ways:<br /><br />Example 1: <br />User provides the input expression to getProductDefaults as &quot;TYPE=CLASSIC and ENGINE=L4&quot; then the response will be &quot;TYPE=CLASSIC and ENGINE=L4 and COLOR=RED and ABS=TRUE&quot; in expressionsWithDefaults. The parameter requiredfamilies will be blank and the parameter criteiaStatus has value validAndComplete.<br /><br />Example 2:<br />User provides input expression to getProductDefaults as TYPE=CLASSIC and ENGINE=L4, the input parameter families contains family COLOR. The response returns the variant expression as &quot;TYPE=CLASSIC and ENGINE=L4 and COLOR=RED&quot;. ABS=TRUE is not expected in the response because family ABS didn't exist in the input parameter families. The parameter requiredfamilies will contain &quot;ABS&quot; and the parameter criteriaStatus has value validAndInComplete.<br /><br />Example 3:<br />User provides input expression to getProductDefaults as TYPE=HATCHBACK and ENGINE=L4, the input parameter families contains family as COLOR. The response will have the variant expression as &quot;TYPE=HATCHBACK and ENGINE=L4&quot;. The parameter requiredfamilies will contain the Family COLOR and the parameter criteriaStatus has value validAndInComplete. Consider the following Variability data in a Configurator context : Family Values Models  VXI, LXI TYPE CLASSIC, HATCHBACK, SEDAN  <br />Availability Rules:  &quot;TYPE = CLASSIC&quot; is available to &quot;Models = VXI&quot;  &quot;TYPE = SEDAN&quot; is available to &quot;Models = LXI&quot;  Default Rules: Default Rule 1: &quot;TYPE = SEDAN&quot;.<br /><br />Example 4:<br />User provides input expression to getProductDefaults as &quot;Models = VXI | Models = LXI&quot;.  The response will have the variant expression as &quot;Models = VXI | Models = LXI &amp; TYPE = SEDAN&quot;. Here we have two branches in the input criteria expression.  The first branch is &quot;Models = VXI&quot; and the second branch is &quot;Models = LXI&quot;. As SEDAN is not available to VXI and it is available to LXI, default rule gets applied to second branch only.<br />The parameter requiredfamilies will contain blank and the parameter criteriaStatus has value validAndComplete."
    },
    {
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.5",
      "dependencies": "",
      "description": "This operation provides the list of <b>RevisionRule</b> objects which can be used for configuration of the Configurator contexts in Product Configurator application. <br /><br />The operation will return the <b>RevisionRule</b> instances. The supported rule entries in the Revision Rule mentioned below:<br /><ul><ul><li type=\"disc\">Has Released Status</li><li type=\"disc\">Working </li><li type=\"disc\">Latest Created</li></ul></ul>",
      "exceptionCondition": "",
      "id": "getRevRulesForConfiguratorContext#",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getRevRulesForConfiguratorContext",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::GetRevisionRulesResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getRevRulesForConfiguratorContext",
      "returnDescription": "Returns the list of <b>RevisionRule</b> objects which can be used with in the Product Configurator application and no partial errors are returned by this operation.",
      "useCase": "When user queries the allocated features and families with the <b>RevisionRule</b> instance, the configured revisions of the families and features as per the input <b>RevisionRule</b> are returned."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of Cfg0ConfiguratorPerspective objects to specify the Configurator Context Item, Revision Rule, Effectivity and Rule date.",
          "parameterName": "configuratorPerspectives"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc11000.5.0",
      "dependencies": "",
      "description": "This operation returns variability for list of input Configurator perspectives. The variability can be all configured model families, models, groups, families and values based on the corresponding Configurator Context Item, Revision Rule, Effectivity and Rule date in the input Configurator perspectives. If an allocated object is a member of a group it will be returned as grouped variability. Otherwise it will be returned as ungrouped variability.",
      "exceptionCondition": "",
      "id": "getVariability#const,std::vector<Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective>,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getVariability",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::GetVariabilityResponse#Cfg0::Soa::Internal::Configurator::ConfiguratorManagement::getVariability#const,std::vector<Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective>,&",
      "returnDescription": "The operation returns service data and list of variability. The response will be populated in the same sequence of input list of objects. If operation fails to retrieve variability for an input object, a partial error is returned for the same and an empty Variability structure instace is populated in the resoponse list at the index of the input object, then the processing continues for the next object in the list.<br /><br />The partial errors are returned in serviceData in following cases: <br />79010 - The operation &ldquo;getVariability&quot; expects one product item in the configuration perspective.",
      "useCase": "The getVariability operation should be invoked to fetch variability such as all configured model families, models, groups, families and values based on the corresponding Configurator Context Item, Revision Rule, Effectivity and Rule date in the input Configurator perspective.<br /><br />Example:<br />Consider the following Variability data in a Configurator context:<br />Car_Product_Context<br />Models<br />    ATS<br />    CTS<br />Group<br />    Engine (Cfg0LiteralValueFamily) - Released<br />        2.0L Turbo (Cfg0LiteralOptionValue) - Released   Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />        3.0L (Cfg0LiteralOptionValue) - Released   Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />        SumValue1<br />        3.0L Turbo (Cfg0LiteralOptionValue) - Released   Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />        SumValue1<br />    Fuel (Cfg0LiteralValueFamily) - Working<br />        Diesel (Cfg0LiteralOptionValue) - Working   Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />        Electrical (Cfg0LiteralOptionValue) - Working   Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />    Transmission (Cfg0LiteralValueFamily) - Released<br />        Automatic (Cfg0LiteralOptionValue) - Released   Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />        Manual (Cfg0LiteralOptionValue) - Released   Effectivity: 01-Jan-2026&hellip;31-Dec-2030<br />    FeatureColor (Cfg0FeatureFamily) - Released<br />        Red (Cfg0Feature) - Released   Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />        Green (Cfg0Feature) - Released   Effectivity: 01-Jan-2026&hellip;31-Dec-2030<br />    StandAloneFeature (Cfg0Feature)<br />        StandAloneFeature (Cfg0Feature) - Released   Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />Unassigned Families<br />    FeatureSet (Cfg0FeatureSet) - Released<br />        StandAloneFeature (Cfg0Feature) - Released   Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />        Green (Cfg0Feature) - Released   Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />    SummaryFamily (Cfg0SummaryOptionFamily) - Released<br />        SumValue1 (Cfg0SummaryOptionValue) - Released   Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />    PackageFamily (Cfg0PackageOptionFamily) - Released<br />        PackageValue1 (Cfg0PackageOptionValue) - Released   Effectivity: 01-Jan-2021&hellip;31-Dec-2030<br />                Electrical<br />                Green<br />Use case 1:<br />&#61656;   Configurator Context Item : Car_Product_Context<br />&#61656;   Revision Rule: Any Status; Working<br />&#61656;   Effectivity: No Effectivity<br />&#61656;   Rule date: System Default<br />The output of getVariability operation will be all the variability mentioned above.<br />Use case 2:<br />&#61656;   Configurator Context Item: Car_Product_Context<br />&#61656;   Revision Rule: Any Status; Working<br />&#61656;   Effectivity: 01-Jan-2020&hellip;31-Dec-2025<br />&#61656;   Rule date: System Default<br />The output of getVariability operation will be all the variability mentioned above except Manual value of Transmission family and Green feature of FeatureColor family, because their effectivity is not present in the input effectivity criteria.<br />Use case 3:<br />&#61656;   Configurator Context Item: Car_Product_Context<br />&#61656;   Revision Rule: Any Status; No Working<br />&#61656;   Effectivity: No Effectivity<br />&#61656;   Rule date: System Default<br />The output of getVariability operation will be all the variability mentioned above except Fuel family and its Diesel and Electrical option values because they are not released and input Revision Rule is Any Status; No Working."
    },
    {
      "ParameterInfo": [
        {
          "description": "The product context <b>ItemRevision</b> which has the variability data defined. If client does not have instance product item, in that case parameter <font face=\"courier\" height=\"10\">productItemId</font> can be used.",
          "parameterName": "productItem"
        },
        {
          "description": "Revision rule",
          "parameterName": "revRule"
        },
        {
          "description": "The UID of the product model.",
          "parameterName": "productModelUID"
        },
        {
          "description": "The UID of the product item revision. This parameter is only used if the input does not specify a &quot;productRevision&quot; parameter.",
          "parameterName": "productItemUID"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.2",
      "dependencies": "",
      "description": "This operation is designed to download revision configured variant data from a higher Teamcenter release at real time. Use this operation if data model changes in a higher Teamcenter release make it impossible to use offline data replication. The local replica of the product context <b>ItemRevision</b> will contain a stub <b>VariantExpressionBlock</b>.",
      "exceptionCondition": "No error conditions result at this time for this operation.",
      "id": "getVariantCache#const,Teamcenter::ItemRevision,&$const,Teamcenter::RevisionRule,&$const,std::string,&$const,std::string,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getVariantCache",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetVariantCacheInfoResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getVariantCache#const,Teamcenter::ItemRevision,&$const,Teamcenter::RevisionRule,&$const,std::string,&$const,std::string,&",
      "returnDescription": "The variant cache data for the given product item. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font>.<br /><ul><ul><li type=\"disc\">256041 - Product configuration type cannot have attributes 'revRuleName', 'revRuleClientId' and  'RevisionRule' together. Only one should be specified. <font face=\"courier\" height=\"10\"></li></ul></ul><br /></font>",
      "useCase": "<font face=\"courier\" height=\"10\">GetVariantCache</font> can be invoked to fetch variant data such as families, features and rules."
    },
    {
      "ParameterInfo": [
        {
          "description": "The expressions to be converted to display format.",
          "parameterName": "inputs"
        },
        {
          "description": "The revision rule to use to retrieve the correct revisions of the option data referenced by the expressions.",
          "parameterName": "revRule"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.2",
      "dependencies": "setVariantExpressions",
      "description": "This operation converts the input variant expressions of boolean expression format into displayable or user readable format.",
      "exceptionCondition": "",
      "id": "getVariantExpressionDisplayStrings#const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigExpressionDisplayStringInput>,&$const,Teamcenter::RevisionRule,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getVariantExpressionDisplayStrings",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetDisplayStringResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getVariantExpressionDisplayStrings#const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigExpressionDisplayStringInput>,&$const,Teamcenter::RevisionRule,&",
      "returnDescription": "The converted expression display string for the given inputs. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font>.<br /><ul><ul><li type=\"disc\">256041 - Product configuration type cannot have attributes '', 'revRuleClientId' and a element 'revisionRule'. Only one should be specified.</li><li type=\"disc\">77034 - The supported variant expression types for the object &quot;Rule 01&quot; of type &quot;Default Rule&quot; are 27,33. An Invalid variant expression types provided : 38</li></ul></ul>",
      "useCase": "This operation can be used to display formulae for <font face=\"courier\" height=\"10\">ConfigExpression</font> structures returned by <font face=\"courier\" height=\"10\">getVariantExpressions</font> operation. The examples of display formulae are as follows:<br />(NS is family namespace)<br /><br />1)&nbsp;&nbsp;&nbsp;&nbsp;Boolean expression<br /><ul><ul><li type=\"disc\"> [NS]BOOL - reprepsents TRUE</li><li type=\"disc\"> [NS]!BOOL - reprepsents FALSE</li></ul></ul><br /><br />2)&nbsp;&nbsp;&nbsp;&nbsp;Date expressions<br /><ul><ul><li type=\"disc\"> [NS]REL_DATE = 22-Jan-2013 00:00&nbsp;&nbsp;&nbsp;&nbsp;  (dd-mmm-yyyy  HH:SS)</li></ul></ul><br /><br />3)&nbsp;&nbsp;&nbsp;&nbsp;Range expressions<br /><ul><ul><li type=\"disc\"> [NS]A = a1 & [NS]LENGTH <= 50</li><li type=\"disc\"> [NS]A = a1 & ([NS]LENGTH >= 1 & [NS]LENGTH <= 10)</li><li type=\"disc\"> [NS]A = a1 & [NS]LENGTH >= 20</li><li type=\"disc\"> [NS]A = a1 & !([NS]LENGTH >= 20)</li></ul></ul><br /><br />4)&nbsp;&nbsp;&nbsp;&nbsp;Multiple column expressions must be grouped within brackets<br /><ul><ul><li type=\"disc\"> ([NS]A = a1 & [NS]B = b1) | ([NS]A = a2 & [NS]C = c1)</li></ul></ul><br /><br />5)&nbsp;&nbsp;&nbsp;&nbsp;Multiple selections within a single column<br /><ul><ul><li type=\"disc\">([NS]A = a1 | [NS]A = a2) & [NS]B = b1</li></ul></ul><br /><br />6)&nbsp;&nbsp;&nbsp;&nbsp;Multiple selections in a family 'C' that has Multi-select=Yes<br /><ul><ul><li type=\"disc\">([NS]A = a1 | [NS]A = a2) & [NS]C = c1 & [NS]C = c2</li></ul></ul><br /><br />7)&nbsp;&nbsp;&nbsp;&nbsp;Optional family 'D' [Target]<br /><ul><ul><li type=\"disc\"> [NS]A = a1 & [NS]D = NONE (same as [NS]D = '')</li><li type=\"disc\"> [NS]A = a1 & [NS]D = ANY (same as [NS]D != '')</li></ul></ul>"
    },
    {
      "ParameterInfo": [
        {
          "description": "The list of objects for which variant expressions should be returned. These objects must support variant configurable behavior similar to objects such as <b>Cfg0DefaultRule</b>, <b>Cpd0DesignElement</b>, etc. If the objects don't support variant configurable behavior, no variant expressions are returned.",
          "parameterName": "targetObjects"
        },
        {
          "description": "The revision rule to use to retrieve the correct revisions of the option data referenced by the expressions.",
          "parameterName": "revisionRule"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.5",
      "dependencies": "getRevRulesForConfiguratorContext,setVariantExpressions",
      "description": "This operation returns the variant expressions associated with the given set of target objects. The revision rule specified in <font face=\"courier\" height=\"10\">revRule</font> is used to retrieve the correct revision of variant data referenced by variant expressions.  Setting revRule to nullTag is valid.  In this case  any unconfigured wso would be returned and caller should use it only for thread related properties like objectId, namespace, datatype, UOM.<br /><br />For example using a valid revRule, An inclusion rule has variant expression set as   &quot;[Dict]familyA.feature1 AND NOT [Dict]familyB.feature2&quot; . The grid expression structure returned by this operation in the response will have values populated as follows",
      "exceptionCondition": "",
      "id": "getVariantExpressions#const,std::vector<Teamcenter::BusinessObject>,&$const,Teamcenter::RevisionRule,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "getVariantExpressions",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::GetVariantExpressionsResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getVariantExpressions#const,std::vector<Teamcenter::BusinessObject>,&$const,Teamcenter::RevisionRule,&",
      "returnDescription": "Returns a list of expressions for each target object. The list contains one or more expression for each expression type supported by the rule (applicability, constraint, etc).<br /><br />The partial errors are returned in serviceData in following cases<br /><ul><ul><li type=\"disc\">77061 - An invalid revision rule provided to the operation.</li></ul></ul>",
      "useCase": "User can get variant expressions of an existing object. For example <br /><br />Using any existing revision rule and using operation <font face=\"courier\" height=\"10\">setVariantExpressions</font> set subject condition as &quot;Color = Red&quot;. To retrieve this variant expression <font face=\"courier\" height=\"10\">getVariantExpressions</font> can be used which returns variant expression formula and the client representable structure format."
    },
    {
      "ParameterInfo": [
        {
          "description": "A runtime object identifier that keeps track of the Search results and the corresponding indexes as of where the caller has consumed the results",
          "parameterName": "searchCursor"
        },
        {
          "description": "Count of next set of objects to be loaded. The value can be different from the cfg0Count in <b>Cfg0SearchCursor</b>.",
          "parameterName": "loadCount"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.2",
      "dependencies": "executeSearch,stopSearch",
      "description": "This operation gets the next set of objects in the search result of a previously executed search. The returned results will be based on the load count specified in the <b>SearchCursor</b> input structure.",
      "exceptionCondition": "No error conditions result at this time for this operation.",
      "id": "fetchNextSearchResults#const,Teamcenter::Cfg0configurator::Cfg0SearchCursor,&$int",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "fetchNextSearchResults",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::fetchNextSearchResults#const,Teamcenter::Cfg0configurator::Cfg0SearchCursor,&$int",
      "returnDescription": "Returns the <font face=\"courier\" height=\"10\">SearchResponse</font> structure (next chunk of search result, search cursor and partial errors)",
      "useCase": "This API is used in conjunction with <font face=\"courier\" height=\"10\">executeSearch</font> operation. <font face=\"courier\" height=\"10\">executeSearch</font> operation is a prerequisite for invoking <font face=\"courier\" height=\"10\">fetchNextSearchResults</font>. The search cursor returned by the <font face=\"courier\" height=\"10\">executeSearch</font> is used to call <font face=\"courier\" height=\"10\">fetchNextSearchResults</font> operation. This operation could be called repeatedly by the caller, until all the search results are returned."
    },
    {
      "ParameterInfo": [
        {
          "description": "Revise Input",
          "parameterName": "pReviseInput"
        },
        {
          "description": "Deep Copy Data Vactor",
          "parameterName": "vecDeepCopyData"
        },
        {
          "description": "New Object tag",
          "parameterName": "newObject"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc10000.1.2",
      "dependencies": "",
      "description": "Cfg0AbsConfiguratorWSO Revise Operation",
      "exceptionCondition": "",
      "id": "revise#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*$tag_t,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "revise",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::revise#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*$tag_t,*",
      "returnDescription": "Failure Code",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "Revise Input",
          "parameterName": "pReviseInput"
        },
        {
          "description": "Deep Copy Data Vactor",
          "parameterName": "vecDeepCopyData"
        },
        {
          "description": "New Object tag",
          "parameterName": "newObject"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc11000.6.0",
      "dependencies": "",
      "description": "Cfg0VariantCriteria Revise Operation",
      "exceptionCondition": "",
      "id": "revise#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*$tag_t,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "revise",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::revise#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*$tag_t,*",
      "returnDescription": "Failure Code",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "Revise Input Descriptor",
          "parameterName": "pReviseInput"
        },
        {
          "description": "Deep Copy Data Vector",
          "parameterName": "vecDeepCopyData"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc10000.1.2",
      "dependencies": "",
      "description": "Reivse post operation",
      "exceptionCondition": "",
      "id": "revisePost#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "revisePost",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::revisePost#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "returnDescription": "Failure Code",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "Revise Input Descriptor",
          "parameterName": "pReviseInput"
        },
        {
          "description": "Deep Copy Data Vector",
          "parameterName": "vecDeepCopyData"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc11000.6.0",
      "dependencies": "",
      "description": "Reivse post operation",
      "exceptionCondition": "",
      "id": "revisePost#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "revisePost",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::revisePost#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "returnDescription": "Failure Code",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "List of ConfigurationSessionInfoInput structures. Each ConfigurationSessionInfoInput represents a single transaction and partial error boundary.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc11000.4.0",
      "dependencies": "",
      "description": "This operation attaches the configuration session information on the target objects. The information is extracted from the input perspective and the configuration profile parameters. The target objects must implement <b>ConfigurationSession</b> behavior. Please refer to the documentation of the business object to find out whether the object implements <b>ConfigurationSession</b> behavior. Also the input perspective should provide exactly one configurator context.",
      "exceptionCondition": "",
      "id": "setConfigurationSessionInfo#const,std::vector<Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement::ConfigurationSessionInfoInput>,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "setConfigurationSessionInfo",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Cfg0::Soa::Configurator::ConfiguratorManagement::setConfigurationSessionInfo#const,std::vector<Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement::ConfigurationSessionInfoInput>,&",
      "returnDescription": "The partial errors are returned in serviceData in following cases<br /><br />79010 - The operation expects one product item in the configuration perspective.",
      "useCase": "During Content Solve a user wants the Product Variability defined within the Configurator Context object to be honored. Call this service, pass the corresponding <b>Cfg0ConfiguratorPerspective</b> and Configuration Profile required for the Solve. This service will set this information on the target object and the same will be honored during Content Solve."
    },
    {
      "ParameterInfo": [
        {
          "description": "Revise Input Descriptor",
          "parameterName": "pReviseInput"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc10000.1.2",
      "dependencies": "",
      "description": "Set properties from revise input.",
      "exceptionCondition": "",
      "id": "setPropertiesFromReviseInput#Teamcenter::ReviseInput,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "setPropertiesFromReviseInput",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::setPropertiesFromReviseInput#Teamcenter::ReviseInput,*",
      "returnDescription": "Failure code",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "Revise Input Descriptor",
          "parameterName": "pReviseInput"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc11000.6.0",
      "dependencies": "",
      "description": "Set properties from revise input.",
      "exceptionCondition": "",
      "id": "setPropertiesFromReviseInput#Teamcenter::ReviseInput,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "setPropertiesFromReviseInput",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::setPropertiesFromReviseInput#Teamcenter::ReviseInput,*",
      "returnDescription": "Failure code",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "List of <font face=\"courier\" height=\"10\">SetVariantExpressionInput</font> structures that internally contain a list of expressions with target objects. Each <font face=\"courier\" height=\"10\">SetVariantExpressionInput</font> represents a single transaction and partial error boundary.",
          "parameterName": "inputs"
        },
        {
          "description": "The revision rule to use to process the correct revisions of the option data referenced by the expressions.",
          "parameterName": "revisionRule"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.5",
      "dependencies": "",
      "description": "This operation sets a variant expression for the input business object. The variant expressions can be set for rules which includes include rule, exclude rule, default rule and availability rules, variant conditions and variant criteria. <br /><br />On configurator rules multiple variant expressions or conditions can be set such as constraint and applicability condition. The variant expression is identified with the &quot;<font face=\"courier\" height=\"10\">expressionType</font>&quot; set on input.<br /><br />User can set transient or in memory variant expression on the target object.. The input flag saveExpressions can be used only for the objects having session recovery feature supported, for example <b>VariantRule</b>. If the parameter saveExpressions is set as TRUE then the variant expression object is saved and the persistent variant expression is returned. <br /><br />If the saveExpressions is set to FALSE, then the operation will create a transient variant expression. If configuration need not be persisted and is for temporary use, the transient variant expression can be used. If a transient configuration expression is created, then user needs to save the target object explicitly or else the changes are lost when the user session ends. Transient changes or objects provide a convenient way to make temporary changes that automatically go out of scope when the session ends.",
      "exceptionCondition": "",
      "id": "setVariantExpressions#const,std::vector<Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::SetVariantExpressionInput>,&$const,Teamcenter::RevisionRule,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "setVariantExpressions",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Cfg0::Soa::Configurator::ConfiguratorManagement::setVariantExpressions#const,std::vector<Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::SetVariantExpressionInput>,&$const,Teamcenter::RevisionRule,&",
      "returnDescription": "The list of objects with updated variant expressions. <br />The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font> in following cases. <br /><ul><ul><li type=\"disc\">77034 - The supported provided variant expression types for the object &quot;...Rule 01&quot;  of type &quot;..Default Rule&quot; are ... Invalid: 27,33  variant Valid values are expression types provided : ..37.</li><li type=\"disc\">79005 - The object &quot;FamilyA...&quot; of type &quot;..OptionFamily.&quot; does not support Variant Configurable Behavior.</li></ul></ul>",
      "useCase": "User can use this operation set variant expressions of an existing object. For example<br /><br />Create an instance of default rule (<b>Cfg0DefaultRule</b>) The operation <font face=\"courier\" height=\"10\">setVariantExpressions</font> will set applicability condition as &quot;Color = Red&quot;. User can provide variant expression for applicability condition in form of formula i.e. &quot;[Dictionary]Color=Red&quot; or populated grid expression service structure. <br />"
    },
    {
      "ParameterInfo": [
        {
          "description": "The runtime search cursor object (obtained from <font face=\"courier\" height=\"10\">executeSearch</font> operation).",
          "parameterName": "searchCursor"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.2",
      "dependencies": "executeSearch",
      "description": "This operation stops further loading of objects from a previously executed search and clears all the memory allocated for the search operation. It deletes the search cursor and the list of  Objects that are kept track by the Search cursor from the Server Memory. <br /><br />The <font face=\"courier\" height=\"10\">stopSearch</font> does not unload any previously loaded objects. Also there is no locking or unlocking performed by the <font face=\"courier\" height=\"10\">stopSearch</font> operation. <br />",
      "exceptionCondition": "No error conditions result at this time for this operation.",
      "id": "stopSearch#const,Teamcenter::Cfg0configurator::Cfg0SearchCursor,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "stopSearch",
      "opTemplate": "Teamcenter::Soa::Server::ServiceData#Cfg0::Soa::Configurator::ConfiguratorManagement::stopSearch#const,Teamcenter::Cfg0configurator::Cfg0SearchCursor,&",
      "returnDescription": "Nothing. The partial error is returned in <font face=\"courier\" height=\"10\">serviceData</font> in following case<br /><br /><ul><ul><li type=\"disc\">79001 - The input cursor object is invalid.</li></ul></ul>",
      "useCase": "When a search is executed in Advanced Configurator and the search returns a large set of objects. The server process keeps the results of a search using a search cursor object. At each <font face=\"courier\" height=\"10\">fetchNextSearchResults</font> operation, the results are further filtered and returned in batches specified by the load count. However if the caller is not interested in consuming the search results further, then a <font face=\"courier\" height=\"10\">stopSearch</font> could be called to release all the resources allocated for that search operation. This includes dropping the runtime search cursor object and the list of Configurator Objects kept track by the cursor."
    },
    {
      "ParameterInfo": [
        {
          "description": "The list of update admissibility input structures.",
          "parameterName": "updateAdmissibilityInputList"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.3",
      "dependencies": "",
      "description": "This operation updates the admissibility state for the families in context of the input context object. The admissibility of a target object such as family is defined as whether that target object is available or not available for the given context object such as partition..:<br />The instance of Cfg0AbsAdmissibility object represents the relation and state between a configurator specific object and a non-configurator specific object. For example, the pair of a partition and a family is associated with state &quot;Available&quot;. This operation will help to update the state for this pair to &quot;Not Available&quot;.<br />If the input state provided is blank then this operation will delete the corresponding Cfg0AbsAdmissibility object and related objects such as Cfg0AbsAdmissibilityThread.",
      "exceptionCondition": "No error conditions result at this time for this operation.",
      "id": "updateAdmissibility#const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::UpdateAdmissibilityInputList>,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "updateAdmissibility",
      "opTemplate": "Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement::GetAdmissibilityResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::updateAdmissibility#const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::UpdateAdmissibilityInputList>,&",
      "returnDescription": "The updated admissibility object.<br />The following partial errors may be returned.<br />125002 - The object of type cannot have null input context.<br />125003 - The provided object is of type. An object of type is expected.<br />125004 - The object of type has invalid input context because the input context is not the same as the admissibility context object.",
      "useCase": "This operation can be used to update admissibility for the families for the given business object.<br /> <br />Consider that following set data-<br /><br />Engine-Box (A Family Group) - It has families &quot;Engine&quot; and &quot;Transmission&quot;. <br />1. Engine- Petrol, Diesel<br />2. Transmission - Manual, Auto<br />Wheel (An Option Family Group) - It has families &quot;Wheel-drive&quot; and &quot;Suspension&quot;.<br />1. Wheel-drive - 2-Wheels, 4-Wheels<br />2. Suspension - Full-Thrust, Full-Boom<br />For the Engine partition instance, the families Engine and Transmission are &quot;Available&quot; while the families Wheel-drive and Suspension are &quot;Not Available&quot;.<br />If user wants to update the admissibility of Wheel-drive for Engine Partition as &quot;Available&quot; then using updateAdmissibility operation the admissibility state can be updated."
    },
    {
      "ParameterInfo": [
        {
          "description": "Revise input",
          "parameterName": "pReviseInput"
        },
        {
          "description": "Deep Copy Data Vector",
          "parameterName": "vecDeepCopyData"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc10000.1.2",
      "dependencies": "",
      "description": "Finalize Revise Input Descriptor",
      "exceptionCondition": "",
      "id": "finalizeReviseInput#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "finalizeReviseInput",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::finalizeReviseInput#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "returnDescription": "Failure Code",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A teamcenter Business Object which has implemented ConfigurationSession behavior and expected to carry Product Configurator configuration session information. This operation expecting to carry Configurator Context and Configuration Profile with this object.",
          "parameterName": "sessionConfigObj"
        },
        {
          "description": "It is a structure of two list of expressions where the first list represents the row headers of an Expression matrix and the second list represents the columns headers of an Expression matrix. Each cell in the Expression matrix represents a combination of two expressions, one is referred to as &ldquo;Expression to validate&rdquo; the other as &ldquo;Scope Expressions&rdquo;. A validation checks the satisfiability of the AND combination of the two expressions for each cell in the context of all configurator constraints.",
          "parameterName": "expressionMatrix"
        },
        {
          "description": "Specifies the subset of cells in the &ldquo;expressionMatrix&rdquo; to validate. The subset is identified as a pair of row and column indexes.",
          "parameterName": "matrixSubset"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc11000.5.0",
      "dependencies": "",
      "description": "This operation process cells of Expression matrix expressionMatrix to validate satisfiability of Expression(s) against optional scope Expression(s). Expression matrix row(s) represents Expressions(s) to validate and column(s) represent scope Expression(s). So each cell in the Expression matrix represents a combination of two expressions, one is referred to as an &ldquo;Expression to validate&rdquo; the other as a &ldquo;Scope Expressions&rdquo;.<br /><br />Cell(s) of the Expression matrix to be process for validation operation are determined with matrixSubset which is a list of cells of Expression matrix. Validation operation also does the application of the constraint rules such as inclusion rule, exclusion rule or availability rule for the Configurator Perspective.<br /><br />This operation retrieves the Product Configurator configuration session information from the sessionConfigObj object that is marked to carry such information. A operation user starts a Product Configurator session to create product configurations using configuration features. The session holds product information such as the, Cfg0ConfContext, RevisionRule, Effectivity, Rule Date. The product information is also represented as Cfg0ConfiguratorPerspective object. The product information configures the features which user can select to build product configuration. The session also holds parameters called as Configuration Profile which govern the evaluation of configurator constraints during validation and expansion of the product configuration. sessionConfigObj must implement ConfigurationSession behavior, so that Product Configurator configuration session information can be attached and retrieved from them. For example operation caller can use VariantRule or Cfg0AbsConfiguratorCriteria type of objects to which they can attach required Configuration session information.<br />The operation response conveys the information about the status of the configuration and independent set of constraint rules which are responsible together for conflict to occur.",
      "exceptionCondition": "",
      "id": "validateProductConditions#const,Teamcenter::BusinessObject,&$const,Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::ExpressionMatrix,&$const,std::vector<Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::MatrixCell>,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "validateProductConditions",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::ValidateProductConditionResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::validateProductConditions#const,Teamcenter::BusinessObject,&$const,Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::ExpressionMatrix,&$const,std::vector<Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::MatrixCell>,&",
      "returnDescription": "<br />Operation Response structure is as below:<br />o   The response conveys errors occurred during operation with service data with index of input Expression(s) and client identifier of Expression(s).<br />o   A validation operation output data and identification information to correlate it with operation input. Identification information is client identifiers for both expression to validate and scope expression.<br />o   Validation operation output has criteria status and conflict information.<br /><br />Correlation Information for input to output structure:<br />o   Index of list of CellValidationResult structure instances has associated entry from operation input matrixSubset list of cells.<br />o   CellValidationResult structure member cellClientIDs pair of string&rsquo;s first member represents client ID of expression to validate and second member represents client ID of Scope Expression. This pair can be used to correlate between operation input and output.<br /><br />The following partial errors may be returned:<br /><br />o   79009 - An invalid configuration perspective is passed to the operation    &ldquo;validateProductConditions &quot;.<br />o   79010 - The operation &quot; validateProductConditions&quot; expects one product item in the configuration perspective.<br />o   256054 - The value for the Constraint Application bit pattern is invalid.",
      "useCase": "Consider the following Variability data and Rules in a Configurator context:<br /><br />Variability:<br />Models  <br /> ATS <br /> CTS <br /> SRX <br /> Sedan <br /><br />Trim <br /> Luxury<br /> Performance<br /> Premium<br />Standard<br /><br />DriveTrain <br />RearWheel<br />xDrive<br /><br />Engine <br /> 2.0L Turbo<br /> 3.0L<br /> 3.0L Turbo<br /><br />Fuel <br /> Diesel<br /> Electrical<br /> Gasoline<br /> Hybrid<br /> <br />Transmission <br /> Automatic<br /> Manual<br /><br />ABS <br /> 3Wheel<br /> 4Wheel<br /><br />FrontBreak <br /> Disc<br /> Drum<br /><br />RearBreak <br /> Disc<br /> Drum<br /><br />Wheel <br /> 17&quot;<br /> 18&quot;<br /> 19&quot;<br /><br />Rules:<br />Include Rule1 ATS Model--&gt; Wheel Type = 18&quot;<br />Include Rule2 Performance Trim Type -&gt; Transmission = Manual<br />Include Rule3   ATS Model--&gt; Trim Type = Performance&quot;<br />All the families are non-discretionary families.<br /><br />Use Case1:<br />expressionMatrix populated with Expression To Validate as '(Transmission=Automatic OR Manual) AND Wheel=19&quot;' and <br />Scope Expression as &lsquo;Model=ATS'.  In-order to perform validation, matrixSubset need to have an entry as (0,0) as index for first expression to validate is 0 and scope expression index is 0.<br /><br />There are violations and parameter criteriaStatus has value inValid.<br />The output of the operation will contain two set of violation lists.<br /><br />First list will contain Include Rule1 'ATS Model--&gt; Wheel Type = 18&quot;' and<br /><br />second list will contain following rules <br />Include Rule2 Performance Trim Type -&gt; Transmission = Manual<br />Include Rule3   ATS Model--&gt; Trim Type = Performance&quot;<br /><br />Looking at two set of violation List user will be able to isolate the problem."
    },
    {
      "DeprecationInfo": [
        {
          "deprecatedDescription": "This internal operation is deprecated starting Tc10.1.5 and would be removed in TC12. Use the public service operation 'validateProductConfiguration' instead",
          "deprecatedRelease": "tc10000.1.5"
        }
      ],
      "ParameterInfo": [
        {
          "description": "A list of <font face=\"courier\" height=\"10\">ValidateProductConfigInput</font> structures each of which comprises a list of <font face=\"courier\" height=\"10\">BusinessObjectConfigExpression</font>.Each <font face=\"courier\" height=\"10\">ValidateProductConfigInput</font> structure represents its own transaction and partial error boundary.Providing fewer <font face=\"courier\" height=\"10\">ValidateProductConfigInput</font> structures where each comprises many <font face=\"courier\" height=\"10\">BusinessObjectConfigExpressions</font> is more efficient than providing <br />many <font face=\"courier\" height=\"10\">ValidateProductConfigInput</font> structures where each comprises a few <font face=\"courier\" height=\"10\">BusinessObjectConfigExpressions</font>. However, the latter returns more granular partial errors.",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.2",
      "dependencies": "",
      "description": "Validates the given expression by applying the constraint rules and returns violations and an updated expression resulting from the application of include rules that can be set on the expression.<br /><br />The value of <b>TC_Default_Solve_Type</b> preference is used for using solve type for this operation.<br /><br />Values for <font face=\"courier\" height=\"10\">applyConstraints</font> are as integrated as follows<br /> 1 //enable configurator constraint evaluation<br />+ 8 //report warnings in addition to errors<br />+ 16 //also report informational messages<br />+ 32 //don't stop if a violation is encountered<br />+ 256 //skip the check against _allocated_ variability which could raise a <br />&nbsp;&nbsp;&nbsp;&nbsp;&quot;k_variant_criteria_outside&quot; validation failure<br />+ 1024 //skip criteria update based on validation rules (For example configurator exclusion rule). If this flag is not set then the operation will update the variant criteria after applying validation rules.<br />+ 2048 //enable Availability Constraint evaluation.<br />",
      "exceptionCondition": "No error conditions result at this time for this operation.",
      "id": "validateProductConfiguration#const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ValidateProductConfigInput>,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "validateProductConfiguration",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ValidateProductConfigurationResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::validateProductConfiguration#const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ValidateProductConfigInput>,&",
      "returnDescription": "The list of violations and an updated expression with selections due to constraint application. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font> in following cases.<br /><ul><ul><li type=\"disc\">79007 - At least one Product Item in the Perspective object is required for this operation.</li><li type=\"disc\">77034 - The supported variant expression types for the object \"Rule 01\" of type \"Default Rule\" are 27 and 33. Invalid variant expression types provided : 28<font face=\"courier\" height=\"10\"></li></ul></ul><br /></font>",
      "useCase": "This<font face=\"courier\" height=\"10\"> </font>operation validates the given variant expression for the product item.<br /><br />Use case 1:<br />Consider that user has created exclusion rule which states If TYPE=CLASSIC and ENGINE=V4 And COLOR=RED then Error &quot;COLOR cannot be RED for CLASSIC V4 model&quot;. <br /><br />Now if user provides input expression as &quot;TYPE=CLASSIC and ENGINE=V4 and COLOR=RED&quot; to validateProductConfiuration operation to validate the expression. Then in output of the operation a violation is expected with message as &quot;COLOR cannot be RED for CLASSIC V4 model&quot;. <br /><br />Use Case 2:<br />Consider that user has created an availability say 'RED' is available to model 'LUXURY'. User has not defined availability of 'BLUE' for model 'LUXURY'.<br />Now, if availability constraint evaluation is enabled and user provides an expression as &quot;MODEL=LUXURY and COLOR=BLUE&quot;, then in the output of the operation a violation is expected with message as &quot;The Feature &quot;BLUE&quot; is not available to the following product models: LUXURY&quot;."
    },
    {
      "ParameterInfo": [
        {
          "description": "A list of ValidateProductConfigInput structures each of which comprises a list of BusinessObjectConfigExpression.Each ValidateProductConfigInput structure represents its own transaction and partial error boundary.Providing fewer ValidateProductConfigInput structures where each comprises many BusinessObjectConfigExpressions is more efficient than providing <br />many ValidateProductConfigInput structures where each comprises a few BusinessObjectConfigExpressions. However, the latter returns more granular partial errors.<br />",
          "parameterName": "inputs"
        }
      ],
      "canOverride": "false",
      "component": "Cfg0configurator",
      "createRelease": "tc10000.1.5",
      "dependencies": "",
      "description": "This operation validates the input expression(s) by applying the constraint rules such as inclusion rule, exclusion rule or availability rule for the input configurator perspective. The revision rule is used to determine the correct revision of configurator objects like rules, families, features, availability statements etc, that will take part in validation and configuration process. The parameter expressionsToValidate specifies the input variant expressions that needs to be validated. <br /><br />This operation also returns the list of mandatory families, which don't have any feature selection. The response returns this list of families in parameter requiredFamilies. The parameter criteriaStatus conveys the information about the status of the configuration.",
      "exceptionCondition": "",
      "id": "validateProductConfiguration#const,std::vector<Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ValidateProductConfigInput>,&",
      "interface": "Cfg0::Soa::Configurator::ConfiguratorManagement",
      "isPostActionAllowed": "false",
      "isPreActionAllowed": "false",
      "isPreConditionAllowed": "false",
      "isPublished": "false",
      "name": "validateProductConfiguration",
      "opTemplate": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ValidateProductConfigurationResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::validateProductConfiguration#const,std::vector<Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ValidateProductConfigInput>,&",
      "returnDescription": "The list of violations and an updated expression per input expressionsToValidate resulting from the application of constraints.<br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\"> 79009 - An invalid configuration perspective is passed to the operation validateProductConfiguration\".</li><li type=\"disc\"> 79010 - The operation \"validateProductConfiguration\" expects one product item in the configuration perspective.</li><li type=\"disc\">256054  - The value for the applyConstraints bit pattern is invalid.</li></ul></ul>",
      "useCase": "Consider the following Variability data and Rules in a Configurator context:<br />Family  Features<br />Model  Luxury, Economy<br />TYPE  CLASSIC, HATCHBACK, SEDAN<br />ENGINE  L4, V6, V8<br />COLOR  RED, GREEN, BLUE<br /># All the families are non-discretionary families.<br />Rules:<br />Exclude Rule 1 - If 'ENGINE=L4' then exclude 'TYPE=SEDAN else Error &quot;TYPE cannot be SEDAN for L4 ENGINE&quot;.<br />Include Rule 2 - If 'TYPE=CLASSIC' then include 'COLOR=RED' else Error &quot;Classic comes with Red Color only&quot;.<br /><br />Use case 1:<br />User provides the input expression to validateProductConfiuration as &quot;TYPE=SEDAN and ENGINE=L4&quot; to validate the expression. The output of the operation is a violation expected with message as &quot;TYPE cannot be SEDAN for L4 ENGINE&quot; and updated expression as &quot;TYPE=SEDAN and ENGINE=L4&quot;. The parameter requiredFamilies will be empty, as there are violations and parameter criteriaStatus has value inValid.<br /><br />Use Case 2:<br />User creates an availability say 'RED' is available to model 'LUXURY'. User does not define any availability of the value 'BLUE' for the product model 'LUXURY'. System is configured to evaluate the availability constraints and the user provides an expression as &quot;MODEL=LUXURY and COLOR=BLUE Then the output of the operation returns a violation with the message &quot;The option value 'BLUE' is not available to the following product models: LUXURY&quot;. The parameter requiredFamilies will be empty, as there are violations and parameter criteriaStatus has value inValid.<br /><br />Use Case 3:<br />User provides the input expression as &quot;TYPE=CLASSIC&quot; to validateProductConfiuration operation will validate the expression. Then the output of the operation returns the updated expression will &quot;TYPE=CLASSIC and COLOR=RED&quot; with no violation. The parameter requiredFamilies will contain family &quot;ENGINE&quot; and parameter criteriaStatus has value validAndInComplete. <br /> <br />Use Case 4:<br />User provides the input expression as &quot;TYPE=CLASSIC and COLOR=BLUE&quot; The output of the operation returns a violation with message as &quot;Classic comes with Red Color only&quot;. The parameter requiredFamilies will be empty, as there are violations and parameter criteriaStatus has value inValid."
    },
    {
      "ParameterInfo": [
        {
          "description": "Revise Input Descriptor",
          "parameterName": "pReviseInput"
        },
        {
          "description": "Deep Copy Data Vector",
          "parameterName": "vecDeepCopyData"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc10000.1.2",
      "dependencies": "",
      "description": "Validate Revise Input Descriptor",
      "exceptionCondition": "",
      "id": "validateReviseInput#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "validateReviseInput",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::validateReviseInput#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "returnDescription": "Failure Code",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "Revise Input Descriptor",
          "parameterName": "pReviseInput"
        },
        {
          "description": "Deep Copy Data Vector",
          "parameterName": "vecDeepCopyData"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc11000.6.0",
      "dependencies": "",
      "description": "Validate Revise Input Descriptor",
      "exceptionCondition": "",
      "id": "validateReviseInput#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "validateReviseInput",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::validateReviseInput#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "returnDescription": "Failure Code",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "Revise input",
          "parameterName": "pReviseInput"
        },
        {
          "description": "Deep Copy Data Vector",
          "parameterName": "vecDeepCopyData"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc11000.6.0",
      "dependencies": "",
      "description": "Finalize Revise Input Descriptor",
      "exceptionCondition": "",
      "id": "finalizeReviseInput#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "finalizeReviseInput",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::finalizeReviseInput#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "returnDescription": "Failure Code",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A vector of data that contains reference information to the objects to be revised",
          "parameterName": "inputs"
        },
        {
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "parameterName": "bd"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc11000.2.3",
      "dependencies": "",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "exceptionCondition": "",
      "id": "fnd0FinalizeReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "fnd0FinalizeReviseInput",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::fnd0FinalizeReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "returnDescription": "",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A vector of data that contains reference information to the objects to be revised",
          "parameterName": "inputs"
        },
        {
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "parameterName": "bd"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc11000.6.0",
      "dependencies": "",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "exceptionCondition": "",
      "id": "fnd0FinalizeReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "fnd0FinalizeReviseInput",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::fnd0FinalizeReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "returnDescription": "",
      "useCase": ""
    },
    {
      "ParameterInfo": [
        {
          "description": "A vector of data that contains reference information to the objects to be revised",
          "parameterName": "inputs"
        },
        {
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "parameterName": "bd"
        }
      ],
      "canOverride": "true",
      "component": "",
      "createRelease": "tc11000.2.3",
      "dependencies": "",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "exceptionCondition": "",
      "id": "fnd0Revise#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "interface": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO",
      "isPostActionAllowed": "true",
      "isPreActionAllowed": "true",
      "isPreConditionAllowed": "true",
      "isPublished": "true",
      "name": "fnd0Revise",
      "opTemplate": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::fnd0Revise#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "returnDescription": "",
      "useCase": ""
    }
  ],
  "OperationTemplate": [
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConvertVariantExpressionInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The application config expressions for which formula, SOA grid structure and display format is requested.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConvertVariantExpressionsResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.5",
      "description": "This operation converts the input application config configuration expressions  given in formulae and/or grid format into formulae, grid and displayable or user readable format.",
      "id": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConvertVariantExpressionsResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::convertVariantExpressions#const,std::vector<Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConvertVariantExpressionInput>,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::convertVariantExpressions",
      "returnConst": "false",
      "returnDescription": "Returns a list of output structure for each input structure. It contains the list of application configuration expressions populated with formula,  grid structure and display format.<br /><br />The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font> in following cases.<br /><ul><ul><li type=\"disc\">77007 - The service \"convertVariantExpressions\" expects atleast one Product Item in the Perspective object. Please report this error to your system administrator. </li><li type=\"disc\">79061 - An invalid revision rule was found (Context: \"convertVariantExpressions\").</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::VariantRuleInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "List of variant rule input structures.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "rules"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::RevisionRule",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The revision rule to use to retrieve the correct revisions of the option data referenced by the expressions.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "revRule"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::CreateUpdateVariantRulesResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This operation created or update the variant criteria object. Any object which has variant behavior implemented can be used as an variant criteria object. If parameter <font face=\"courier\" height=\"10\">saveRule</font> is set as FALSE then variant criteria object is not saved and transient object is returned. The relationship name used to associate the variant criteria object to the product Item.",
      "id": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::CreateUpdateVariantRulesResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::createUpdateVariantRules#const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::VariantRuleInput>,&$const,Teamcenter::RevisionRule,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::createUpdateVariantRules",
      "returnConst": "false",
      "returnDescription": "The list of SOA structure with instances (either created or updated) of objects acting as variant criteria along with variant expression information.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) for which the rule objects are requested.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "context"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FilterCriteria",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "This parameter will allow filtering the rules based on specified criteria such as feature or family or family group instances or combination of them.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "filterCriteria"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This internal service operation returns the default rule instances as per the specified product items(s) in <font face=\"courier\" height=\"10\">context</font> and filter criteria. <br />The parameter '<font face=\"courier\" height=\"10\">filterCriteria</font>' allows filtering the rules returned by this operation based on criteria.<br /><b>Note:</b> In Teamcenter 10.1.2 the product model(s) member in context is not supported.<br />",
      "id": "Teamcenter::Soa::Server::ServiceData#Cfg0::Soa::Configurator::ConfiguratorManagement::getDefaultRules#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FilterCriteria,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getDefaultRules",
      "returnConst": "false",
      "returnDescription": "The list of derived default rules will be returned in plain objects list in service data. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font><br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided in parameter context</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) from which the rule objects are requested.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "context"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FilterCriteria",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "If specified, only rules referencing at least one of the features in the expression are returned.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "filterCriteria"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The severity associated with message. Valid values are one or more of the following:<br /><b>Error</b><br />Configuration criteria that satisfy this constraint are classified as invalid.<br /><b>Warning</b><br />Classifies information associated with this constraint as considerations, such as recommendations, which are important to review if configuration criteria satisfy this constraint.<br /><b>Info</b><br />Classifies information associated with this constraint as additional information, such as hints, which are of interest if configuration criteria satisfy this constraint.<br />",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "severities"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This internal service operation returns the exclusion rule instances based on the specified <font face=\"courier\" height=\"10\">context</font>, the filter criteria and rule severity. <br />The parameter '<font face=\"courier\" height=\"10\">filterCriteria</font>' allows filtering the rules returned by this operation based on criteria.<br /><b>Note:</b> In Teamcenter 10.1.2, the product model(s) member in context is not supported.<br />",
      "id": "Teamcenter::Soa::Server::ServiceData#Cfg0::Soa::Configurator::ConfiguratorManagement::getExcludeRules#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FilterCriteria,&$const,std::vector<std::string>,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getExcludeRules",
      "returnConst": "false",
      "returnDescription": "The list of rule objects in plain objects list in service data. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font> <br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided in parameter context</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) or product model(s) for which the family groups are requested.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "context"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetFamilyGroupResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This internal operation returns the family group instances. The parameter context may provide either the product item(s). <br />If the product item(s) of context is available then those instances of the family group (<font face=\"courier\" height=\"10\">Cfg0AbsFamilyGroup</font> or subtypes) are returned which are allocated to the given product item(s). <br /><br />",
      "id": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetFamilyGroupResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getFamilyGroups#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getFamilyGroups",
      "returnConst": "false",
      "returnDescription": "The list of group objects and their corresponding allocation objects are returned in response structure. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font>.<br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided in parameter context</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) for which the rule objects are requested.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "context"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FilterCriteria",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "If specified, only rules referencing at least one of the features in the expression are returned.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "filterCriteria"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The severity associated with message. Valid values are one or more of the following:<br /><ul><ul><li type=\"disc\"><b>Error</b> :Configuration criteria that satisfy this constraint are classified as invalid.</li><li type=\"disc\"><b>Warning</b> :Classifies information associated with this constraint as considerations, such as recommendations, which are important to review if configuration criteria satisfy this constraint.</li><li type=\"disc\"><b>Info</b>: Classifies information associated with this constraint as additional information, such as hints, which are of interest if configuration criteria satisfy this constraint.</li></ul></ul>",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "severities"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This internal service operation returns the inclusion rule instances based on the specified context, the filter criteria and rule severity. <br />The parameter '<font face=\"courier\" height=\"10\">filterCriteria</font>' allows filtering the rules returned by this operation based on criteria.<br /><b>Note:</b> In Teamcenter 10.1.2, the product model(s) member in context is not supported.<br />",
      "id": "Teamcenter::Soa::Server::ServiceData#Cfg0::Soa::Configurator::ConfiguratorManagement::getIncludeRules#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FilterCriteria,&$const,std::vector<std::string>,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getIncludeRules",
      "returnConst": "false",
      "returnDescription": "The list of rule objects in plain objects list in service data. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font> <br /><br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided in parameter context</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) for which the product models are requested.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "context"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "bool",
              "qualifier": ""
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "The parameter to specify if only the product model (<b>Cfg0AbsProductModel</b> and subtypes) instances should be returned or all instances of <b>Cfg0AbsModel</b> should be returned.<br /><br /><b>Note:</b> In Teamcenter 10.1.2 only <b>Cfg0AbsProductModel</b> instances are supported.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "leafLevelOnly"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This internal operation returns the product model instances for the given product item(s) in parameter context. <br />If the parameter '<font face=\"courier\" height=\"10\">leafLevelOnly</font>' is set to true, then all the product models (or subtypes) are returned and the summary models (or subtypes) are ignored. <br />",
      "id": "Teamcenter::Soa::Server::ServiceData#Cfg0::Soa::Configurator::ConfiguratorManagement::getModelsForProduct#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$bool",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getModelsForProduct",
      "returnConst": "false",
      "returnDescription": "The list of product models. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font>. <br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided in parameter context</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) or the product model(s) for which the family groups are requested.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "context"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamilyGroup",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The list of family group instances. This parameter is optional. If specified, only the families which are members of the specified family groups within the specified context are returned.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "groups"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "bool",
              "qualifier": ""
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "If this parameter is set to true, the families those are not the members of any family group within the specified context are returned.<br />The default value for this parameter is false, which guides the operation to return the families only from the specified family groups.<br /><b>Note:</b> This functionality is not supported in the Teamcenter 10.1.2 release.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "otherFamilies"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "bool",
              "qualifier": ""
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "If this parameter is set to true, the option families those are members of any of the specified groups and are allocated to specified product context are returned even if their availability rule is in an 'unavailable' state. <br />Default value for this parameter is false.  <br /><b>Note: </b>This functionality is not supported in the Teamcenter 10.1.2 release.<br /><br />",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "unavailableFamilies"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetOptionFamiliesResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This internal operation returns the option family instances given <font face=\"courier\" height=\"10\">context</font> information. If the product item(s) member is provided in context, then the option families that are allocated to any of the specified product item(s) are returned. If the product models member is provided in <font face=\"courier\" height=\"10\">context</font>, then the option families that are made available to at least one of given the product model(s) are returned.<br /><br />In addition, to filter the option families further, the '<font face=\"courier\" height=\"10\">groups</font>' input parameter can be leveraged. If this parameter is populated with the family group instances or IDs, then the option families that are allocated to any of the specified product item(s) and which are members of the specified family group instances are returned.<br />If the parameter '<font face=\"courier\" height=\"10\">otherFamilies</font>' is set to 'true', then operation will return that option families which are not the members of any family group instances however are allocated to at least one of the specified product item(s).<br />The default value for this parameter is 'false', which guides the system to only return the Option Families from the Family Groups specified in the input parameter 'groups'. <br />If  parameter '<font face=\"courier\" height=\"10\">unavailableFamilies</font>' is set to true, option families those are the  members of any of the specified groups and are allocated to specified product context are returned even if their availability rule is in an 'unavailable' state. <br /><br /><b>Note:</b>  In Teamcenter 10.1.2 the product model(s) member of context is ignored.",
      "id": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetOptionFamiliesResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getOptionFamilies#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Teamcenter::Cfg0configurator::Cfg0AbsFamilyGroup>,&$bool$bool",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getOptionFamilies",
      "returnConst": "false",
      "returnDescription": "The list of structures, that encapsulate the information about a Family Group and the list of families it contains, along with the allocation objects which allocate the families to the respective product items. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font>.<br /><br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided in parameter context</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2016_09::ConfiguratorManagement::AvailabilityInput",
              "qualifier": ""
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "An object containing input information required to compute the availability of features to models.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2016_09::ConfiguratorManagement::AvailabilityOutput",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.7",
      "description": "This operation computes the available features within a set of requested families and models. The parameters criteriaExpression and familiesToTest are used to pass in the input expression representing a model and families of interest for which available features are requested. The operation response returns the available product variability for all the features in the requested families, if the features satisfy the input expression in criteriaExpression and the constraint(s) present in the system. The input parameter criteriaExpression is required to contain expression representing models. Iif they don't the the criteriaExpression is empty the operation throws an  error, . The input parameter familiesToTest is required to contain list of Family. If the requested family list is empty, the operation throws an error.",
      "id": "Cfg0::Soa::Internal::Configurator::_2016_09::ConfiguratorManagement::AvailabilityOutput#Cfg0::Soa::Configurator::ConfiguratorManagement::getOptionValueAvailability#const,Cfg0::Soa::Internal::Configurator::_2016_09::ConfiguratorManagement::AvailabilityInput",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getOptionValueAvailability",
      "returnConst": "false",
      "returnDescription": "A per model list of features, along with the availability status.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">77075  - The operation has failed, because at least one Family is expected in the input.</li><li type=\"disc\">79009  - An invalid configuration perspective is passed to the operation getOptionValueAvailability.</li><li type=\"disc\">79010  - The operation \"getOptionValueAvailability\" expects one product item in the configuration perspective.</li><li type=\"disc\">256054  - The value for the \"applyConstraints\" bit pattern is invalid. Please refer to documentation for valid values.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) or product model(s) for which the rule objects are requested.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "context"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamilyGroup",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "Optional list of family groups. If specified, only the features belonging to any of the <font face=\"courier\" height=\"10\">families</font>, which are members of the specified family groups are returned.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "groups"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsOptionFamily",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "Optional list of families.  If specified, only the features belonging to any of the specified families are returned.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "families"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "bool",
              "qualifier": ""
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "If this parameter is set to true, the values which are marked with negative availability would also be returned.  Default value for this parameter is 'false'.<br /><b>Note:</b> This functionality is not supported in the Teamcenter 10.1.2 release.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "unavailableValues"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetOptionValuesResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This internal service operation returns the feature instances based on the specified <font face=\"courier\" height=\"10\">context</font> and other parameters. If product item(s) member is provided in the <font face=\"courier\" height=\"10\">context</font>, then the features that are allocated to any of the product items are returned.  If product model(s) member is provided in the context, then the features that are made available to any of the product models are returned.<br />If <font face=\"courier\" height=\"10\">groups</font> parameter is populated with the family group instances, then only those feature instances which belong to the family instances of given list of family group members are returned.<br />If <font face=\"courier\" height=\"10\">families</font> parameter is populated with the family instances, then only those feature instances which belong to the given family instances are returned.<br />If <font face=\"courier\" height=\"10\">unavailableValues</font> is set to 'true', it would also return the features which are marked with negative availability. <br /><br /><b>Note:</b> In Teamcenter 10.1.2 the product model(s) member in context is not considered. This member is used for availability feature and this feature will be supported in Teamcenter 10.1.3 onwards.",
      "id": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetOptionValuesResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getOptionValues#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Teamcenter::Cfg0configurator::Cfg0AbsFamilyGroup>,&$const,std::vector<Teamcenter::Cfg0configurator::Cfg0AbsOptionFamily>,&$bool",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getOptionValues",
      "returnConst": "false",
      "returnDescription": "The list of features along with their availability in product model. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font>.<br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided in parameter context</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the product item(s) in which context the overlap state should be determined.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "context"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::OverlapStateInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "Specifies the set of input structures each of which defines a set of expression and the reference expression for which the degree of overlap should be determined.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "overlapStateInputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::OverlapStateResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.3",
      "description": "This operation determines and returns the degree of overlap between a set of configuration expressions and a reference configuration expression.",
      "id": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::OverlapStateResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getOverlapStates#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::OverlapStateInput>,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getOverlapStates",
      "returnConst": "false",
      "returnDescription": "Overlap information is returned separately for each of the input structure. The degree of overlap between each expression in the input structure and the corresponding reference expression in the same input structure is indicated with an overlap state keyword. This following illustrates possible scenarios:<br /><br /><font face=\"courier\" height=\"10\">VariantRule: . . .|---------------|</font><br /><font face=\"courier\" height=\"10\">Object 0: .|----|. . . . . . . . . . . . . . </font>: k_overlapstate_none <br /><font face=\"courier\" height=\"10\">Object 1: . . |------| . . . . . . . . . . . </font>: k_overlapstate_intersect <br /><font face=\"courier\" height=\"10\">Object 2: . . . . . . . .|----|. . . . . . . </font>: k_overlapstate_subset <br /><font face=\"courier\" height=\"10\">Object 3: . . . . . . . . . .|------|. . . . </font>: k_overlapstate_intersect <br /><font face=\"courier\" height=\"10\">Object 4: .|-----------------------------| . </font>: k_overlapstate_superset <br /><font face=\"courier\" height=\"10\">Object 5: . . . . |---------------|. . . . . </font>: k_overlapstate_match <br /><font face=\"courier\" height=\"10\">Object 6: . . . . |-------------------|. . . </font>: k_overlapstate_superset <br /><font face=\"courier\" height=\"10\">Object 7: . . |-------------------|. . . . . </font>: k_overlapstate_superset <br /><font face=\"courier\" height=\"10\">Object 8: . . . . . . . FALSE. . . . . . . . </font>: k_overlapstate_none<br /><font face=\"courier\" height=\"10\">Object 9: . . . . . . . TRUE . . . . . . . . </font>: k_overlapstate_superset<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided in parameter context</li><li type=\"disc\">256000 - An internal configurator error occurred. </li><li type=\"disc\">256001 - A general configurator error occurred. </li><li type=\"disc\">256002 - The following product is invalid: [DictionaryNamespace]FamilyName (Context: info). </li><li type=\"disc\">256003 - The following feature value is invalid: [DictionaryNamespace]FamilyName (Context: info). </li><li type=\"disc\">256004 - The following feature family is invalid: [DictionaryNamespace]FamilyName (Context: info). </li><li type=\"disc\">256005 - An invalid feature combination was found (Context: info). </li><li type=\"disc\">256006 - An invalid product configuration was found (Context: info). </li><li type=\"disc\">256007 - An invalid expression was found (Context: info). </li><li type=\"disc\">256008 - The following Boolean operator is invalid: opcode (Context: info). </li><li type=\"disc\">256010 - A time-out occurred (Context: info). </li><li type=\"disc\">256011 - A resource is not available (Context: info). </li><li type=\"disc\">256013 - A configurator implementation specific error occurred (Context: info). </li><li type=\"disc\">256014 - The expression contains unmatched quote at position 'number'. </li><li type=\"disc\">256015 - The expression contains unmatched bracket at position 'number'. </li><li type=\"disc\">256016 - An unexpected token 'text' was found at position 'number'. </li><li type=\"disc\">256017 - The entry 'text' was found at position 'number' when an option value was expected. </li><li type=\"disc\">256018 - The token 'text' is missing after 'text' at position 'number'. </li><li type=\"disc\">256019 - The expression adaptor does not support text used at position 'number'. </li><li type=\"disc\">256020 - The XML tag 'text' has no text value. </li><li type=\"disc\">256021 - The string 'formula' cannot be converted into an expression. </li><li type=\"disc\">256022 - The operator code 'opcode' in token at position 'number' is unknown. </li><li type=\"disc\">256023 - The value 'text' in token at position 'number' is unknown. </li><li type=\"disc\">256024 - The family 'text' in token at position 'number' is unknown. </li><li type=\"disc\">256025 - An ambiguous option value name 'FamilyName' in namespace 'DictionaryNamespace' in token at position 'number' was found: text. </li><li type=\"disc\">256026 - An ambiguous option family name 'FamilyName' in token at position 'number' was found: 'text'. </li><li type=\"disc\">256027 - The option namespace 'DictionaryNamespace' in token at position 'number' is invalid. </li><li type=\"disc\">256028 - The option family 'FamilyName' in token at position 'number' is invalid. </li><li type=\"disc\">256029 - The option value 'text' for family 'FamilyName' in token at position 'number' is invalid. </li><li type=\"disc\">256030 - The option value 'text' for family 'FamilyName' in token at position 'number' is invalid: its value is not numeric. </li><li type=\"disc\">256031 - The option value 'text' for family 'FamilyName' in token at position 'number' is invalid: the value unit of measure 'text' does not match the family unit of measure 'text'. </li><li type=\"disc\">256032 - The option / family / family namespace combination 'text' / 'FamilyName' / 'DictionaryNamespace' in token at position 'number' is invalid. </li><li type=\"disc\">256033 - The family 'FamilyName' for option / family namespace combination 'text' / 'DictionaryNamespace' in token at position 'number' is invalid. </li><li type=\"disc\">256034 - There is no option value in token at position 'number'. </li><li type=\"disc\">256035 - The option value 'text' for family 'FamilyName' in token at position 'number' is invalid: the value is not a valid date.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ProductDefaultsInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of <font face=\"courier\" height=\"10\">ProductDeafultsInput</font> structures each of which comprises a list of <font face=\"courier\" height=\"10\">BusinessObjectConfigExpression</font>.Each <font face=\"courier\" height=\"10\">ProductDeafultsInput</font> structure represents its own transaction and partial error boundary.Providing fewer <font face=\"courier\" height=\"10\">ProductDeafultsInput</font> structures where each comprises many <font face=\"courier\" height=\"10\">BusinessObjectConfigExpressions</font> is more efficient than providing <br />many <font face=\"courier\" height=\"10\">ProductDeafultsInput</font> structures where each comprises a few <font face=\"courier\" height=\"10\">BusinessObjectConfigExpressions</font>. However, the latter returns more granular partial errors.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetProductDefaultsResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "Gets the results of applying default rules to a set of input expressions in the context of the associated <b>Cfg0ConfiguratorPerspective</b> objects.",
      "id": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetProductDefaultsResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getProductDefaults#const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ProductDefaultsInput>,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getProductDefaults",
      "returnConst": "false",
      "returnDescription": "The updated expression containing defaults. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font>.<br /><ul><ul><li type=\"disc\">79007 - This operation expects at least one Product Item in the Configurator Perspective object.</li><li type=\"disc\">77034 - The supported variant expression types for the object \"Rule 001\" of type \"Default Rule\" are 27, 33. Invalid variant expression types provided : 38</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchRecipe",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "Recipe for executing the search",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "searchRecipe"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchOptions",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "Search Options for a given Search (load count and sorting)",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "searchOptions"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "Executes a search based on a search recipe. The search results can contain any sub-types of <b>POM_Object</b>. The search recipe could be a complex search definition that combines multiple simpler search definitions in a logical sequence, e.g. multiple saved queries as defined in the Teamcenter application <b>QueryBuilder</b>.<br /><br />The search is executed in the context of a configurator perspective (<b>Cfg0ConfiguratorPerspective</b>). Configurator objects such as features, or constraint rules, are filtered based on their relationship to the product context items and product models in the configurator perspective.<br /><br />Variant and effecitvity configurable objects in the search results are filtered according to the criteria associated with the <b>VariantRule</b> and <b>RevisionRule</b> in the configurator perspective.<br /><br />Revisable objects in the search results are revision configured according to the <b>RevisionRule</b> in the configurator perspective.<br /><br />The results of a search are returned in batches based on the <font face=\"courier\" height=\"10\">defaultLoadCount</font> specified in the search options. A search cursor object is returned in the response with which subsequent batches can be requested with operation <font face=\"courier\" height=\"10\">fetchNextSearchResults</font>.<br /><br />Search options may be used to sort the results of a search using one or more attributes of the returned objects.",
      "id": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::executeSearch#const,Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchRecipe,&$const,Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchOptions,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::executeSearch",
      "returnConst": "false",
      "returnDescription": "The found objects and the search cursor object for retrieving next set of objects. The partial errors are returned for following case<br /><br /><ul><ul><li type=\"disc\">79007 - At least one product item should be provided. </li><li type=\"disc\">79008 - The search criteria provided in input is invalid.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ProductDefaultsInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of ProductDeafultsInput structures each of which comprises a list of BusinessObjectConfigExpression.Each ProductDeafultsInput structure represents its own transaction and partial error boundary.Providing fewer ProductDeafultsInput structures where each comprises many BusinessObjectConfigExpressions is more efficient than providing <br />many ProductDeafultsInput structures where each comprises a few BusinessObjectConfigExpressions. However, the latter returns more granular partial errors.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::GetProductDefaultsResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.5",
      "description": "This operation returns the product defaults for the input expression(s) by applying the default rule(s). The revision rule is used to determine the correct revision of configurator objects like rules, families, features, availability statements etc, that take part in the process. The parameter expressionsToUpdate specifies the input variant expressions for the variant configuration. The parameter families specifies the option families for which a default value assignment is requested. If specified, the server assigns default features for only these families in the response. If the list is empty, the server assigns default features for all the families.<br /><br />This operation also returns the list of mandatory families, which  do not have any value selection. The response returns this list of families in parameter requiredFamilies. The parameter criteriaStatus conveys the information about the status of the configuration.",
      "id": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::GetProductDefaultsResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getProductDefaults#const,std::vector<Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ProductDefaultsInput>,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getProductDefaults",
      "returnConst": "false",
      "returnDescription": "The response is the expression obtained by applying satisfying default rules, which does not conflict with any other constraint in the system.<br />However default rules will be applied on the branches which has satisfying default rules without conflicting with other constraint in that branch.<br /><ul><ul><li type=\"disc\"> The following partial errors may be returned:77034 - The supported variant expression types for the object \"Rule 001\" of type \"Default Rule\" are 27, 33. Invalid variant expression types provided : 38</li><li type=\"disc\">79010 - The operation \"getProductDefaults\" expects one product item in the configuration perspective.</li><li type=\"disc\"> 256054 - The value for the applyDefaults bit pattern is invalid.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::GetRevisionRulesResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.5",
      "description": "This operation provides the list of <b>RevisionRule</b> objects which can be used for configuration of the Configurator contexts in Product Configurator application. <br /><br />The operation will return the <b>RevisionRule</b> instances. The supported rule entries in the Revision Rule mentioned below:<br /><ul><ul><li type=\"disc\">Has Released Status</li><li type=\"disc\">Working </li><li type=\"disc\">Latest Created</li></ul></ul>",
      "id": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::GetRevisionRulesResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getRevRulesForConfiguratorContext",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getRevRulesForConfiguratorContext",
      "returnConst": "false",
      "returnDescription": "Returns the list of <b>RevisionRule</b> objects which can be used with in the Product Configurator application and no partial errors are returned by this operation.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::ItemRevision",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The product context <b>ItemRevision</b> which has the variability data defined. If client does not have instance product item, in that case parameter <font face=\"courier\" height=\"10\">productItemId</font> can be used.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "productItem"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::RevisionRule",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "Revision rule",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "revRule"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::string",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The UID of the product model.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "productModelUID"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::string",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The UID of the product item revision. This parameter is only used if the input does not specify a &quot;productRevision&quot; parameter.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "productItemUID"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetVariantCacheInfoResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This operation is designed to download revision configured variant data from a higher Teamcenter release at real time. Use this operation if data model changes in a higher Teamcenter release make it impossible to use offline data replication. The local replica of the product context <b>ItemRevision</b> will contain a stub <b>VariantExpressionBlock</b>.",
      "id": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetVariantCacheInfoResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getVariantCache#const,Teamcenter::ItemRevision,&$const,Teamcenter::RevisionRule,&$const,std::string,&$const,std::string,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getVariantCache",
      "returnConst": "false",
      "returnDescription": "The variant cache data for the given product item. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font>.<br /><ul><ul><li type=\"disc\">256041 - Product configuration type cannot have attributes 'revRuleName', 'revRuleClientId' and  'RevisionRule' together. Only one should be specified. <font face=\"courier\" height=\"10\"></li></ul></ul><br /></font>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigExpressionDisplayStringInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The expressions to be converted to display format.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::RevisionRule",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The revision rule to use to retrieve the correct revisions of the option data referenced by the expressions.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "revRule"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetDisplayStringResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This operation converts the input variant expressions of boolean expression format into displayable or user readable format.",
      "id": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GetDisplayStringResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getVariantExpressionDisplayStrings#const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigExpressionDisplayStringInput>,&$const,Teamcenter::RevisionRule,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getVariantExpressionDisplayStrings",
      "returnConst": "false",
      "returnDescription": "The converted expression display string for the given inputs. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font>.<br /><ul><ul><li type=\"disc\">256041 - Product configuration type cannot have attributes '', 'revRuleClientId' and a element 'revisionRule'. Only one should be specified.</li><li type=\"disc\">77034 - The supported variant expression types for the object \"Rule 01\" of type \"Default Rule\" are 27,33. An Invalid variant expression types provided : 38</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The list of objects for which variant expressions should be returned. These objects must support variant configurable behavior similar to objects such as <b>Cfg0DefaultRule</b>, <b>Cpd0DesignElement</b>, etc. If the objects don't support variant configurable behavior, no variant expressions are returned.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "targetObjects"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::RevisionRule",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The revision rule to use to retrieve the correct revisions of the option data referenced by the expressions.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "revisionRule"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::GetVariantExpressionsResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.5",
      "description": "This operation returns the variant expressions associated with the given set of target objects. The revision rule specified in <font face=\"courier\" height=\"10\">revRule</font> is used to retrieve the correct revision of variant data referenced by variant expressions.  Setting revRule to nullTag is valid.  In this case  any unconfigured wso would be returned and caller should use it only for thread related properties like objectId, namespace, datatype, UOM.<br /><br />For example using a valid revRule, An inclusion rule has variant expression set as   &quot;[Dict]familyA.feature1 AND NOT [Dict]familyB.feature2&quot; . The grid expression structure returned by this operation in the response will have values populated as follows",
      "id": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::GetVariantExpressionsResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getVariantExpressions#const,std::vector<Teamcenter::BusinessObject>,&$const,Teamcenter::RevisionRule,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getVariantExpressions",
      "returnConst": "false",
      "returnDescription": "Returns a list of expressions for each target object. The list contains one or more expression for each expression type supported by the rule (applicability, constraint, etc).<br /><br />The partial errors are returned in serviceData in following cases<br /><ul><ul><li type=\"disc\">77061 - An invalid revision rule provided to the operation.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::POM_object",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The list of objects for which variant expressions should be returned. These objects should support variant configuable behavior.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "targetObjects"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::RevisionRule",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The revision rule to use to retrieve the correct revisions of the option data referenced by the expressions.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "revisionRule"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::GetVariantExpressionsResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.5",
      "description": "This operation returns the variant expressions associated with the given set of objects.",
      "id": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::GetVariantExpressionsResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getVariantExpressions#const,std::vector<Teamcenter::POM_object>,&$const,Teamcenter::RevisionRule,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getVariantExpressions",
      "returnConst": "false",
      "returnDescription": "The list of variant expressions for each object. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font> in following cases. <br /><ul><ul><li type=\"disc\">77034 - The supported variant expression types for the object \"Rule 01\" of type \"Default Rule\" are 27,33. Invalid variant expression types provided: 38.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement::ConfigurationSessionInfoInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "List of ConfigurationSessionInfoInput structures. Each ConfigurationSessionInfoInput represents a single transaction and partial error boundary.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.4.0",
      "description": "This operation attaches the configuration session information on the target objects. The information is extracted from the input perspective and the configuration profile parameters. The target objects must implement <b>ConfigurationSession</b> behavior. Please refer to the documentation of the business object to find out whether the object implements <b>ConfigurationSession</b> behavior. Also the input perspective should provide exactly one configurator context.",
      "id": "Teamcenter::Soa::Server::ServiceData#Cfg0::Soa::Configurator::ConfiguratorManagement::setConfigurationSessionInfo#const,std::vector<Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement::ConfigurationSessionInfoInput>,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::setConfigurationSessionInfo",
      "returnConst": "false",
      "returnDescription": "The partial errors are returned in serviceData in following cases<br /><br />79010 - The operation expects one product item in the configuration perspective.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::SetVariantExpressionInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "List of <font face=\"courier\" height=\"10\">SetVariantExpressionInput</font> structures that internally contain a list of expressions with target objects. Each <font face=\"courier\" height=\"10\">SetVariantExpressionInput</font> represents a single transaction and partial error boundary.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::RevisionRule",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The revision rule to use to process the correct revisions of the option data referenced by the expressions.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "revisionRule"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.5",
      "description": "This operation sets a variant expression for the input business object. The variant expressions can be set for rules which includes include rule, exclude rule, default rule and availability rules, variant conditions and variant criteria. <br /><br />On configurator rules multiple variant expressions or conditions can be set such as constraint and applicability condition. The variant expression is identified with the &quot;<font face=\"courier\" height=\"10\">expressionType</font>&quot; set on input.<br /><br />User can set transient or in memory variant expression on the target object.. The input flag saveExpressions can be used only for the objects having session recovery feature supported, for example <b>VariantRule</b>. If the parameter saveExpressions is set as TRUE then the variant expression object is saved and the persistent variant expression is returned. <br /><br />If the saveExpressions is set to FALSE, then the operation will create a transient variant expression. If configuration need not be persisted and is for temporary use, the transient variant expression can be used. If a transient configuration expression is created, then user needs to save the target object explicitly or else the changes are lost when the user session ends. Transient changes or objects provide a convenient way to make temporary changes that automatically go out of scope when the session ends.",
      "id": "Teamcenter::Soa::Server::ServiceData#Cfg0::Soa::Configurator::ConfiguratorManagement::setVariantExpressions#const,std::vector<Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::SetVariantExpressionInput>,&$const,Teamcenter::RevisionRule,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::setVariantExpressions",
      "returnConst": "false",
      "returnDescription": "The list of objects with updated variant expressions. <br />The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font> in following cases. <br /><ul><ul><li type=\"disc\">77034 - The supported provided variant expression types for the object \"...Rule 01\"  of type \"..Default Rule\" are ... Invalid: 27,33  variant Valid values are expression types provided : ..37.</li><li type=\"disc\">79005 - The object \"FamilyA...\" of type \"..OptionFamily.\" does not support Variant Configurable Behavior.</li><li type=\"disc\">264009 - The Boolean expression creation has failed because the variant option value cannot be null for the operator \"...Operator\".</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0SearchCursor",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The runtime search cursor object (obtained from <font face=\"courier\" height=\"10\">executeSearch</font> operation).",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "searchCursor"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Teamcenter::Soa::Server::ServiceData",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This operation stops further loading of objects from a previously executed search and clears all the memory allocated for the search operation. It deletes the search cursor and the list of  Objects that are kept track by the Search cursor from the Server Memory. <br /><br />The <font face=\"courier\" height=\"10\">stopSearch</font> does not unload any previously loaded objects. Also there is no locking or unlocking performed by the <font face=\"courier\" height=\"10\">stopSearch</font> operation. <br />",
      "id": "Teamcenter::Soa::Server::ServiceData#Cfg0::Soa::Configurator::ConfiguratorManagement::stopSearch#const,Teamcenter::Cfg0configurator::Cfg0SearchCursor,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::stopSearch",
      "returnConst": "false",
      "returnDescription": "Nothing. The partial error is returned in <font face=\"courier\" height=\"10\">serviceData</font> in following case<br /><br /><ul><ul><li type=\"disc\">79001 - The input cursor object is invalid.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::UpdateAdmissibilityInputList",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The list of update admissibility input structures.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "updateAdmissibilityInputList"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement::GetAdmissibilityResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.3",
      "description": "This operation updates the admissibility state for the families in context of the input context object. The admissibility of a target object such as family is defined as whether that target object is available or not available for the given context object such as partition..:<br />The instance of Cfg0AbsAdmissibility object represents the relation and state between a configurator specific object and a non-configurator specific object. For example, the pair of a partition and a family is associated with state &quot;Available&quot;. This operation will help to update the state for this pair to &quot;Not Available&quot;.<br />If the input state provided is blank then this operation will delete the corresponding Cfg0AbsAdmissibility object and related objects such as Cfg0AbsAdmissibilityThread.",
      "id": "Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement::GetAdmissibilityResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::updateAdmissibility#const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::UpdateAdmissibilityInputList>,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::updateAdmissibility",
      "returnConst": "false",
      "returnDescription": "The updated admissibility object.<br />The following partial errors may be returned.<br />125002 - The object of type cannot have null input context.<br />125003 - The provided object is of type. An object of type is expected.<br />125004 - The object of type has invalid input context because the input context is not the same as the admissibility context object.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0SearchCursor",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A runtime object identifier that keeps track of the Search results and the corresponding indexes as of where the caller has consumed the results",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "searchCursor"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "int",
              "qualifier": ""
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Count of next set of objects to be loaded. The value can be different from the cfg0Count in <b>Cfg0SearchCursor</b>.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "loadCount"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "This operation gets the next set of objects in the search result of a previously executed search. The returned results will be based on the load count specified in the <b>SearchCursor</b> input structure.",
      "id": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::fetchNextSearchResults#const,Teamcenter::Cfg0configurator::Cfg0SearchCursor,&$int",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::fetchNextSearchResults",
      "returnConst": "false",
      "returnDescription": "Returns the <font face=\"courier\" height=\"10\">SearchResponse</font> structure (next chunk of search result, search cursor and partial errors)",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::BusinessObject",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A teamcenter Business Object which has implemented ConfigurationSession behavior and expected to carry Product Configurator configuration session information. This operation expecting to carry Configurator Context and Configuration Profile with this object.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "sessionConfigObj"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::ExpressionMatrix",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "It is a structure of two list of expressions where the first list represents the row headers of an Expression matrix and the second list represents the columns headers of an Expression matrix. Each cell in the Expression matrix represents a combination of two expressions, one is referred to as &ldquo;Expression to validate&rdquo; the other as &ldquo;Scope Expressions&rdquo;. A validation checks the satisfiability of the AND combination of the two expressions for each cell in the context of all configurator constraints.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "expressionMatrix"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::MatrixCell",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "Specifies the subset of cells in the &ldquo;expressionMatrix&rdquo; to validate. The subset is identified as a pair of row and column indexes.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "matrixSubset"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::ValidateProductConditionResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.5.0",
      "description": "This operation process cells of Expression matrix expressionMatrix to validate satisfiability of Expression(s) against optional scope Expression(s). Expression matrix row(s) represents Expressions(s) to validate and column(s) represent scope Expression(s). So each cell in the Expression matrix represents a combination of two expressions, one is referred to as an &ldquo;Expression to validate&rdquo; the other as a &ldquo;Scope Expressions&rdquo;.<br /><br />Cell(s) of the Expression matrix to be process for validation operation are determined with matrixSubset which is a list of cells of Expression matrix. Validation operation also does the application of the constraint rules such as inclusion rule, exclusion rule or availability rule for the Configurator Perspective.<br /><br />This operation retrieves the Product Configurator configuration session information from the sessionConfigObj object that is marked to carry such information. A operation user starts a Product Configurator session to create product configurations using configuration features. The session holds product information such as the, Cfg0ConfContext, RevisionRule, Effectivity, Rule Date. The product information is also represented as Cfg0ConfiguratorPerspective object. The product information configures the features which user can select to build product configuration. The session also holds parameters called as Configuration Profile which govern the evaluation of configurator constraints during validation and expansion of the product configuration. sessionConfigObj must implement ConfigurationSession behavior, so that Product Configurator configuration session information can be attached and retrieved from them. For example operation caller can use VariantRule or Cfg0AbsConfiguratorCriteria type of objects to which they can attach required Configuration session information.<br />The operation response conveys the information about the status of the configuration and independent set of constraint rules which are responsible together for conflict to occur.",
      "id": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::ValidateProductConditionResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::validateProductConditions#const,Teamcenter::BusinessObject,&$const,Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::ExpressionMatrix,&$const,std::vector<Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::MatrixCell>,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::validateProductConditions",
      "returnConst": "false",
      "returnDescription": "<br />Operation Response structure is as below:<br />o   The response conveys errors occurred during operation with service data with index of input Expression(s) and client identifier of Expression(s).<br />o   A validation operation output data and identification information to correlate it with operation input. Identification information is client identifiers for both expression to validate and scope expression.<br />o   Validation operation output has criteria status and conflict information.<br /><br />Correlation Information for input to output structure:<br />o   Index of list of CellValidationResult structure instances has associated entry from operation input matrixSubset list of cells.<br />o   CellValidationResult structure member cellClientIDs pair of string&rsquo;s first member represents client ID of expression to validate and second member represents client ID of Scope Expression. This pair can be used to correlate between operation input and output.<br /><br />The following partial errors may be returned:<br /><br />o   79009 - An invalid configuration perspective is passed to the operation    &ldquo;validateProductConditions &quot;.<br />o   79010 - The operation &quot; validateProductConditions&quot; expects one product item in the configuration perspective.<br />o   256054 - The value for the Constraint Application bit pattern is invalid.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ValidateProductConfigInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of <font face=\"courier\" height=\"10\">ValidateProductConfigInput</font> structures each of which comprises a list of <font face=\"courier\" height=\"10\">BusinessObjectConfigExpression</font>.Each <font face=\"courier\" height=\"10\">ValidateProductConfigInput</font> structure represents its own transaction and partial error boundary.Providing fewer <font face=\"courier\" height=\"10\">ValidateProductConfigInput</font> structures where each comprises many <font face=\"courier\" height=\"10\">BusinessObjectConfigExpressions</font> is more efficient than providing <br />many <font face=\"courier\" height=\"10\">ValidateProductConfigInput</font> structures where each comprises a few <font face=\"courier\" height=\"10\">BusinessObjectConfigExpressions</font>. However, the latter returns more granular partial errors.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ValidateProductConfigurationResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "Validates the given expression by applying the constraint rules and returns violations and an updated expression resulting from the application of include rules that can be set on the expression.<br /><br />The value of <b>TC_Default_Solve_Type</b> preference is used for using solve type for this operation.<br /><br />Values for <font face=\"courier\" height=\"10\">applyConstraints</font> are as integrated as follows<br /> 1 //enable configurator constraint evaluation<br />+ 8 //report warnings in addition to errors<br />+ 16 //also report informational messages<br />+ 32 //don't stop if a violation is encountered<br />+ 256 //skip the check against _allocated_ variability which could raise a <br />&nbsp;&nbsp;&nbsp;&nbsp;&quot;k_variant_criteria_outside&quot; validation failure<br />+ 1024 //skip criteria update based on validation rules (For example configurator exclusion rule). If this flag is not set then the operation will update the variant criteria after applying validation rules.<br />+ 2048 //enable Availability Constraint evaluation.<br />",
      "id": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ValidateProductConfigurationResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::validateProductConfiguration#const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ValidateProductConfigInput>,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::validateProductConfiguration",
      "returnConst": "false",
      "returnDescription": "The list of violations and an updated expression with selections due to constraint application. The partial errors are returned in <font face=\"courier\" height=\"10\">serviceData</font> in following cases.<br /><ul><ul><li type=\"disc\">79007 - At least one Product Item in the Perspective object is required for this operation.</li><li type=\"disc\">77034 - The supported variant expression types for the object \"Rule 01\" of type \"Default Rule\" are 27 and 33. Invalid variant expression types provided : 28<font face=\"courier\" height=\"10\"></li></ul></ul><br /></font>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ValidateProductConfigInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of ValidateProductConfigInput structures each of which comprises a list of BusinessObjectConfigExpression.Each ValidateProductConfigInput structure represents its own transaction and partial error boundary.Providing fewer ValidateProductConfigInput structures where each comprises many BusinessObjectConfigExpressions is more efficient than providing <br />many ValidateProductConfigInput structures where each comprises a few BusinessObjectConfigExpressions. However, the latter returns more granular partial errors.<br />",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ValidateProductConfigurationResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.5",
      "description": "This operation validates the input expression(s) by applying the constraint rules such as inclusion rule, exclusion rule or availability rule for the input configurator perspective. The revision rule is used to determine the correct revision of configurator objects like rules, families, features, availability statements etc, that will take part in validation and configuration process. The parameter expressionsToValidate specifies the input variant expressions that needs to be validated. <br /><br />This operation also returns the list of mandatory families, which don't have any feature selection. The response returns this list of families in parameter requiredFamilies. The parameter criteriaStatus conveys the information about the status of the configuration.",
      "id": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ValidateProductConfigurationResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::validateProductConfiguration#const,std::vector<Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ValidateProductConfigInput>,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::validateProductConfiguration",
      "returnConst": "false",
      "returnDescription": "The list of violations and an updated expression per input expressionsToValidate resulting from the application of constraints.<br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\"> 79009 - An invalid configuration perspective is passed to the operation validateProductConfiguration\".</li><li type=\"disc\"> 79010 - The operation \"validateProductConfiguration\" expects one product item in the configuration perspective.</li><li type=\"disc\">256054  - The value for the applyConstraints bit pattern is invalid.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The Cfg0ConfiguratorPerspective instance to specify the context and revision rule. If configurator perspective is provided by each input structure in list inputStructs, then this operationConfigPerspective parameter can be NULL.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "operationConfigPerspective"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::GetModelOptionCondInput",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The input structure for getModelAndOptionConditions operation. Each entry in this list defines a partial error boundary.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputStructs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::GetModelOptionCondResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.3",
      "description": "This operation splits the given input expressions into the list of model and option condition expressions.<br />The business object type of the Cfg0AbsValue value objects, with which the input expressions are formed, divides these values into a set of Cfg0AbsModel objects and a set of Cfg0AbsOptionValue objects. This operation decomposes each input expression into a two lists. One expression list that is formed exclusively with Cfg0AbsModel objects and other expression list that is formed exclusively with Cfg0AbsOptionValue objects.",
      "id": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::GetModelOptionCondResponse#Cfg0::Soa::Internal::Configurator::ConfiguratorManagement::getModelAndOptionConditions#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::GetModelOptionCondInput>,&",
      "name": "Cfg0::Soa::Internal::Configurator::ConfiguratorManagement::getModelAndOptionConditions",
      "returnConst": "false",
      "returnDescription": "Returns the list of the model and the option condition expressions for the given input expressions.<br />The following partial errors may be returned:<br />79009 - An invalid configuration perspective is passed to the operation.<br />79010 - The operation expects one product item in the configuration perspective.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "A list of Cfg0ConfiguratorPerspective objects to specify the Configurator Context Item, Revision Rule, Effectivity and Rule date.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "configuratorPerspectives"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::GetVariabilityResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.5.0",
      "description": "This operation returns variability for list of input Configurator perspectives. The variability can be all configured model families, models, groups, families and values based on the corresponding Configurator Context Item, Revision Rule, Effectivity and Rule date in the input Configurator perspectives. If an allocated object is a member of a group it will be returned as grouped variability. Otherwise it will be returned as ungrouped variability.",
      "id": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::GetVariabilityResponse#Cfg0::Soa::Internal::Configurator::ConfiguratorManagement::getVariability#const,std::vector<Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective>,&",
      "name": "Cfg0::Soa::Internal::Configurator::ConfiguratorManagement::getVariability",
      "returnConst": "false",
      "returnDescription": "The operation returns service data and list of variability. The response will be populated in the same sequence of input list of objects. If operation fails to retrieve variability for an input object, a partial error is returned for the same and an empty Variability structure instace is populated in the resoponse list at the index of the input object, then the processing continues for the next object in the list.<br /><br />The partial errors are returned in serviceData in following cases: <br />79010 - The operation &ldquo;getVariability&quot; expects one product item in the configuration perspective.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::string",
              "qualifier": "*"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "input admissibilitystate",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "admissibilityState"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::POM_object",
              "qualifier": "*"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The input context for which admissibility is to be updated",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "context"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "tag_t",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "newly created/ updated admissibility object",
          "freeOutputMemory": "false",
          "inputOutput": "Output",
          "name": "outputAdmissibility"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "tag_t",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Output paramter to return the objects to be deleted when admissibility state to be updated is empty.",
          "freeOutputMemory": "false",
          "inputOutput": "Output",
          "name": "objectsToDelete"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.3",
      "description": "Operation to update the admissibility state and revise admissibility if needed.",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0AbsAdmissibility::cfg0UpdateAdmissibility#const,std::string,*$const,Teamcenter::POM_object,*$tag_t,*$std::vector<tag_t>,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0AbsAdmissibility::cfg0UpdateAdmissibility",
      "returnConst": "false",
      "returnDescription": "Returns iFail.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::ReviseInput",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Revise input",
          "freeOutputMemory": "false",
          "inputOutput": "InputOutput",
          "name": "pReviseInput"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::DeepCopyData*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Deep Copy Data Vector",
          "freeOutputMemory": "false",
          "inputOutput": "InputOutput",
          "name": "vecDeepCopyData"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "Finalize Revise Input Descriptor",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::finalizeReviseInput#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::finalizeReviseInput",
      "returnConst": "false",
      "returnDescription": "Failure Code",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::BulkInput*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A vector of data that contains reference information to the objects to be revised",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::BulkData",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "bd"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.2.3",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::fnd0FinalizeReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::fnd0FinalizeReviseInput",
      "returnConst": "false",
      "returnDescription": "",
      "returnFreeMemory": "false",
      "setBased": "true"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::BulkInput*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A vector of data that contains reference information to the objects to be revised",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::BulkData",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "bd"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "true",
      "const": "false",
      "createRelease": "tc11000.2.3",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::fnd0Revise#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::fnd0Revise",
      "returnConst": "false",
      "returnDescription": "",
      "returnFreeMemory": "false",
      "setBased": "true"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::BulkInput*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A vector of data that contains reference information to the objects to be revised",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::BulkData",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "bd"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.2.3",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::fnd0RevisePost#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::fnd0RevisePost",
      "returnConst": "false",
      "returnDescription": "",
      "returnFreeMemory": "false",
      "setBased": "true"
    },
    {
      "MetaException": [
        {
          "name": "Teamcenter::Soa::Server::ServiceException"
        }
      ],
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The Cfg0ConfiguratorPerspective instance to specify the context and revision rule. If configurator perspective is provided by each input structure in list admissibilityInputs, then this operationConfigPerspective parameter can be NULL.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "operationConfigPerspective"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement::GetAdmissibilityInputStruct",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The list of target objects for which admissibility data should be returned.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "admissibilityInputs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement::GetAdmissibilityResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.3",
      "description": "This operation returns the admissibility statements for the variability data associated with a given set of context objects. The instance of Cfg0AbsAdmissibility object represents the relation and state between a configurator specific object and a non-configurator specific object. For example, the pair of a partition and an family is associated with state &quot;Available&quot;. The admissibility states are defined by the LOV Cfg0AdmissibilityState. The allowed values for this property are &quot;Available&quot; and &quot;Not Available&quot;.",
      "id": "Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement::GetAdmissibilityResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getAdmissibility#const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&$const,std::vector<Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement::GetAdmissibilityInputStruct>,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getAdmissibility",
      "returnConst": "false",
      "returnDescription": "This operation returns the list containing the admissibility instances for the families of each input. <br />The following partial errors may be returned:<br />79009 - An invalid configuration perspective is passed to the operation.<br />79010 - The operation expects one product item in the configuration perspective.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::BulkInput*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A vector of data that contains reference information to the objects to be revised",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::BulkData",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "bd"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.2.3",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::fnd0SetPropertiesFromReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::fnd0SetPropertiesFromReviseInput",
      "returnConst": "false",
      "returnDescription": "",
      "returnFreeMemory": "false",
      "setBased": "true"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::BulkInput*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A vector of data that contains reference information to the objects to be revised",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::BulkData",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "bd"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.2.3",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::fnd0ValidateReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::fnd0ValidateReviseInput",
      "returnConst": "false",
      "returnDescription": "",
      "returnFreeMemory": "false",
      "setBased": "true"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::ReviseInput",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Revise Input",
          "freeOutputMemory": "false",
          "inputOutput": "InputOutput",
          "name": "pReviseInput"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::DeepCopyData*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Deep Copy Data Vactor",
          "freeOutputMemory": "false",
          "inputOutput": "InputOutput",
          "name": "vecDeepCopyData"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "tag_t",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "New Object tag",
          "freeOutputMemory": "false",
          "inputOutput": "Output",
          "name": "newObject"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "true",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "Cfg0AbsConfiguratorWSO Revise Operation",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::revise#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*$tag_t,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::revise",
      "returnConst": "false",
      "returnDescription": "Failure Code",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::ReviseInput",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Revise Input Descriptor",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "pReviseInput"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::DeepCopyData*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Deep Copy Data Vector",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "vecDeepCopyData"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "Reivse post operation",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::revisePost#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::revisePost",
      "returnConst": "false",
      "returnDescription": "Failure Code",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::ReviseInput",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Revise Input Descriptor",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "pReviseInput"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "Set properties from revise input.",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::setPropertiesFromReviseInput#Teamcenter::ReviseInput,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::setPropertiesFromReviseInput",
      "returnConst": "false",
      "returnDescription": "Failure code",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::ReviseInput",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Revise Input Descriptor",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "pReviseInput"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::DeepCopyData*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Deep Copy Data Vector",
          "freeOutputMemory": "false",
          "inputOutput": "InputOutput",
          "name": "vecDeepCopyData"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.2",
      "description": "Validate Revise Input Descriptor",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::validateReviseInput#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO::validateReviseInput",
      "returnConst": "false",
      "returnDescription": "Failure Code",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::ReviseInput",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Revise input",
          "freeOutputMemory": "false",
          "inputOutput": "InputOutput",
          "name": "pReviseInput"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::DeepCopyData*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Deep Copy Data Vector",
          "freeOutputMemory": "false",
          "inputOutput": "InputOutput",
          "name": "vecDeepCopyData"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.6.0",
      "description": "Finalize Revise Input Descriptor",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::finalizeReviseInput#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria::finalizeReviseInput",
      "returnConst": "false",
      "returnDescription": "Failure Code",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::BulkInput*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A vector of data that contains reference information to the objects to be revised",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::BulkData",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "bd"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.6.0",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::fnd0FinalizeReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria::fnd0FinalizeReviseInput",
      "returnConst": "false",
      "returnDescription": "",
      "returnFreeMemory": "false",
      "setBased": "true"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::BulkInput*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A vector of data that contains reference information to the objects to be revised",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::BulkData",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "bd"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.6.0",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::fnd0Revise#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria::fnd0Revise",
      "returnConst": "false",
      "returnDescription": "",
      "returnFreeMemory": "false",
      "setBased": "true"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::BulkInput*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A vector of data that contains reference information to the objects to be revised",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::BulkData",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "bd"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.6.0",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::fnd0RevisePost#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria::fnd0RevisePost",
      "returnConst": "false",
      "returnDescription": "",
      "returnFreeMemory": "false",
      "setBased": "true"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2015_03::ConfiguratorManagement::AvailableProductVariabilityInput",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "It is the object containing input information required to compute the available product variability.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2015_03::ConfiguratorManagement::AvailableProductVariabilityOutput",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.4",
      "description": "This operation computes the available features within a set of requested families. The parameters criteriaExpression and familiesToTest are used to pass in the input expression and families of interest requesting the available features. The operation in response returns the available product variability for the requested families satisfying the input expression in criteriaExpression and the constraint(s) present in the system. If the input parameter criteriaExpression is empty, then the response will return the product variability for the requested families satisfying all the system constraints. If the requested family list is empty, the operation will not return any variability information.",
      "id": "Cfg0::Soa::Internal::Configurator::_2015_03::ConfiguratorManagement::AvailableProductVariabilityOutput#Cfg0::Soa::Configurator::ConfiguratorManagement::getAvailableProductVariability#const,Cfg0::Soa::Internal::Configurator::_2015_03::ConfiguratorManagement::AvailableProductVariabilityInput,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getAvailableProductVariability",
      "returnConst": "false",
      "returnDescription": "A list of features, default values, value ranges, violations and/or the suggested expression satisfying input expression and the set of constraints present in the configurator context. <br /><br />The following partial errors may be returned:<br />79010&nbsp;&nbsp;&nbsp;&nbsp;Must provide at least one product item in the configuration perspective.<br />79009&nbsp;&nbsp;&nbsp;&nbsp;An invalid configuration .<br />79012&nbsp;&nbsp;&nbsp;&nbsp;The target family container is empty.<br />256054 The value for the applyConstraints bit pattern is invalid. Please refer to documentation for valid values.<br />",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::BulkInput*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A vector of data that contains reference information to the objects to be revised",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::BulkData",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "bd"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.6.0",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::fnd0SetPropertiesFromReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria::fnd0SetPropertiesFromReviseInput",
      "returnConst": "false",
      "returnDescription": "",
      "returnFreeMemory": "false",
      "setBased": "true"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::BulkInput*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A vector of data that contains reference information to the objects to be revised",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "inputs"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::BulkData",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "A data structure to store objects and other information relevant for set-based operation",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "bd"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.6.0",
      "description": "This operation is not supported now, there will be no support for issues stemming from uses of this operation.",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::fnd0ValidateReviseInput#std::vector<Teamcenter::BulkInput*>,*$Teamcenter::BulkData,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria::fnd0ValidateReviseInput",
      "returnConst": "false",
      "returnDescription": "",
      "returnFreeMemory": "false",
      "setBased": "true"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::ReviseInput",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Revise Input",
          "freeOutputMemory": "false",
          "inputOutput": "InputOutput",
          "name": "pReviseInput"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::DeepCopyData*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Deep Copy Data Vactor",
          "freeOutputMemory": "false",
          "inputOutput": "InputOutput",
          "name": "vecDeepCopyData"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "tag_t",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "New Object tag",
          "freeOutputMemory": "false",
          "inputOutput": "Output",
          "name": "newObject"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.6.0",
      "description": "Cfg0VariantCriteria Revise Operation",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::revise#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*$tag_t,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria::revise",
      "returnConst": "false",
      "returnDescription": "Failure Code",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::ReviseInput",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Revise Input Descriptor",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "pReviseInput"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::DeepCopyData*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Deep Copy Data Vector",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "vecDeepCopyData"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.6.0",
      "description": "Reivse post operation",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::revisePost#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria::revisePost",
      "returnConst": "false",
      "returnDescription": "Failure Code",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::ReviseInput",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Revise Input Descriptor",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "pReviseInput"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.6.0",
      "description": "Set properties from revise input.",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::setPropertiesFromReviseInput#Teamcenter::ReviseInput,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria::setPropertiesFromReviseInput",
      "returnConst": "false",
      "returnDescription": "Failure code",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::ReviseInput",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Revise Input Descriptor",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "pReviseInput"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "std::vector<Teamcenter::DeepCopyData*>",
              "qualifier": "*"
            }
          ],
          "const": "false",
          "defaultValue": "",
          "description": "Deep Copy Data Vector",
          "freeOutputMemory": "false",
          "inputOutput": "InputOutput",
          "name": "vecDeepCopyData"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "int",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.6.0",
      "description": "Validate Revise Input Descriptor",
      "id": "int#Teamcenter::Cfg0configurator::Cfg0VariantCriteria::validateReviseInput#Teamcenter::ReviseInput,*$std::vector<Teamcenter::DeepCopyData*>,*",
      "name": "Teamcenter::Cfg0configurator::Cfg0VariantCriteria::validateReviseInput",
      "returnConst": "false",
      "returnDescription": "Failure Code",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::AvailableProductVariabilityInput",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "It is the object containing input information required to compute the available product variability.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "input"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::AvailableProductVariabilityOutput",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc10000.1.5",
      "description": "This operation computes the available features within a set of requested families. The parameters criteriaExpression and familiesToTest are used to pass in the input expression and families of interest requesting the available features. The operation in response returns the available product variability for the requested families satisfying the input expression in criteriaExpression and the constraint(s) present in the system. If the input parameter criteriaExpression is empty, then the response will return the product variability for the requested families satisfying all the system constraints. If the requested family list is empty, the operation will not return any variability information.",
      "id": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::AvailableProductVariabilityOutput#Cfg0::Soa::Configurator::ConfiguratorManagement::getAvailableProductVariability#const,Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::AvailableProductVariabilityInput,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getAvailableProductVariability",
      "returnConst": "false",
      "returnDescription": "A list of features, default values, value ranges, violations and/or the suggested expression satisfying input expression and the set of constraints present in the configurator context. &lt;br /&gt;&lt;br /&gt;The following partial errors may be returned:&lt;br /&gt;79010&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Must provide at least one product item in the configuration perspective.&lt;br /&gt;79009&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;An invalid configuration .&lt;br /&gt;79012&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The target family container is empty.&lt;br /&gt;256054 The value for the applyConstraints bit pattern is invalid. Please refer to documentation for valid values.&lt;br /&gt;",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2018_11::ConfiguratorManagement::ConfigurationRosterInput",
              "qualifier": ""
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "Contains input required to perform solution completeness check for a given set of combinations.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "configurationRoster"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2018_11::ConfiguratorManagement::ConfigurationRosterCoverage",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.6.0",
      "description": "The Service operation expects a user to provide a set of configurations which are to be checked for validity and completeness. The service operation also returns a set of configurations which are unknown to the user.<br /><br />These configurations are passed to and returned by the service operation via a &lsquo;Roster Table&rsquo;. <br /><br />A &lsquo;Roster Table&rsquo; is used to represent configurations. A &lsquo;Roster Table&rsquo; is capable of storing configurations. A configuration record in &lsquo;Roster Table&rsquo; is similar to saved variant rule. &lsquo;Roster Table&rsquo; consists of two parts,<br /><br />1.&nbsp;&nbsp;&nbsp;&nbsp;Column Headers &ndash; A list of config expressions, one for each column in the table. A config expression is used to identify family name, family namespace, value and operator. Example: In the config Expression &ldquo;[Teamcenter]A=A1&rdquo;, family name is A, namespace is &ldquo;Teamcenter&rdquo;, operator is &ldquo;=&rdquo; and operand is &ldquo;A1&rdquo;.<br /> <br />2.&nbsp;&nbsp;&nbsp;&nbsp;Rows &ndash; Rows store multiple row. A row contains a configuration, just like a Saved Variant Rule. The configuration is stored in a bit string, which means it can only contain &lsquo;0&rsquo; or &lsquo;1&rsquo;.  The total length of bit string is twice the number of columns present in &lsquo;Roster Table&rsquo;. Hence a string representing a cell has a size of 2.  Given string can only have either &lsquo;0&rsquo; or &lsquo;1&rsquo; the following strings can represent a cell. They are described below with their logical meaning<br />&nbsp;&nbsp;&nbsp;&nbsp;a.&nbsp;&nbsp;&nbsp;&nbsp;&lsquo;00&rsquo; &ndash; Both True and False conditions are possible for corresponding column header config Expression.<br />&nbsp;&nbsp;&nbsp;&nbsp;b.&nbsp;&nbsp;&nbsp;&nbsp;&lsquo;01&rsquo; &ndash; Only True condition is possible for corresponding column header config Expression.<br />&nbsp;&nbsp;&nbsp;&nbsp;c.&nbsp;&nbsp;&nbsp;&nbsp;&lsquo;10&rsquo; &ndash; Only False Condition is possible for corresponding column header config Expression.<br />&nbsp;&nbsp;&nbsp;&nbsp;d.&nbsp;&nbsp;&nbsp;&nbsp;&lsquo;11&rsquo; -  Not Defined<br /><br />A user input consisting of one/more configurations is passed to the service operation using &lsquo;Roster Table&rsquo;. These configurations are checked by the service operation for validity and completeness. An input &lsquo;Roster Table&rsquo; is said to be complete if the input &lsquo;Roster Table&rsquo; passed by user is able to represent all the possible combinations given no constraint is violated.<br /><br />User has ability to provide scope to the service operation while doing completeness check. This is done by passing a list of families. Only families present in the list are used by the service operation to compute the possible combinations and then evaluate whether the passed configurations via input &lsquo;Roster Table&rsquo; are able to cover each and every one of them.<br /><br />User also has an ability to provide &lsquo;explicit families&rsquo; to service operation. When a configuration from input &lsquo;Roster Table&rsquo; is checked for validity turns out to be &lsquo;invalid&rsquo; then service operation checks weather the reason for its invalidity is due to a family present in &lsquo;explicit families&rsquo;. If yes, then exception conditions on those family is checked, if we find an exception condition that meets the configuration input this implies the exception condition allows the configuration to be valid.<br /><br />Given all configurations passed via input &lsquo;Roster Table&rsquo; are valid, and they are able to represent all possible combinations then input is said to be complete. If they don&rsquo;t the configurations passed via input &lsquo;Roster Table&rsquo; are termed incomplete. Missing configurations are computed by service operation and returned via output &lsquo;Roster Table&rsquo;<br /><br />If some but not all configuration passed by user via &lsquo;Roster Table&rsquo; is found to be invalid, this means that the configuration wasn&rsquo;t able to satisfy constraints present in the system. User can specify severity of constraints which will participate in evaluating the configurations in input &lsquo;Roster Table&rsquo;. These invalid configurations are communicated back to the user and missing configurations are evaluated using valid configurations present in input &lsquo;Roster Table&rsquo;.<br /><br />If all the configurations passed to the service operation are invalid the service operation will return empty output &lsquo;Roster Table&rsquo;.<br /><br />Use Case 1: <br />A product context has 3 Boolean Families &lsquo;A&rsquo;, &lsquo;B&rsquo; and &lsquo;C&rsquo;.<br /><br />These 3 families can create a total of 8 configurations given there is no constraint in the system.<br /><br />A user can use &lsquo;getConfigurationRosterCoverage&rsquo; service operation to pass 3 configuration among the 8 possible via input &lsquo;Roster Table&rsquo;. <br /><br />In the current example all the 8 configurations are possible but the user only passed 3 of them in input. Hence the service operation provides verdict as &lsquo;valid&rsquo; for all the 3 input configurations. The remaining 5 configurations are returned back to user via output &lsquo;Roster Table&rsquo;. Additionally service operation also returns a verdict of &lsquo;incomplete&rsquo; to user as he missed 5 possible configurations in input &lsquo;Roster Table&rsquo;.",
      "id": "Cfg0::Soa::Internal::Configurator::_2018_11::ConfiguratorManagement::ConfigurationRosterCoverage#Cfg0::Soa::Configurator::ConfiguratorManagement::getConfigurationRosterCoverage#const,Cfg0::Soa::Internal::Configurator::_2018_11::ConfiguratorManagement::ConfigurationRosterInput",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getConfigurationRosterCoverage",
      "returnConst": "false",
      "returnDescription": "Output structure tells user which combinations passed in input via &lsquo;Roster Table&rsquo; were valid and which were invalid. Additionally if also informs user how a correction can be made to an invalid input configuration such that it becomes a valid configuration.<br /><br />The following partial errors may be returned:<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;79001 - The operation has encountered an internal error.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "List of objects of type <b>VariantRule</b> or <b>Cfg0AbsConfiguratorCriteria</b> from which the Product Configurator configuration session information needs to be retrieved.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "sessionConfigObjs"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::GetConfigurationSessionInfoResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.5.0",
      "description": "This operation retrieves the Product Configurator configuration session information from the objects that are marked to carry such information. User starts a Product Configurator session to create product configurations using configuration features. The session holds product information such as the, <b>Cfg0ConfContext</b>, <b>RevisionRule</b>, <b>Effectivity</b>, <b>Rule Date</b>. The product information is also represented as <b>Cfg0ConfiguratorPerspective</b> object. The product information configures the features  which user can select to build product configuration. The session also holds parameters called as Configuration Profile which govern the evaluation of configurator constraints during validation and expansion of the product configuration. The objects must implement ConfigurationSession behavior, so that Product Configurator configuration session information can be attached and retrieved from them.",
      "id": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::GetConfigurationSessionInfoResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getConfigurationSessionInfo#const,std::vector<Teamcenter::BusinessObject>,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getConfigurationSessionInfo",
      "returnConst": "false",
      "returnDescription": "Returns a list of configuration session information structures where each session information structure holds a product information to select the features and constraints as a Configurator Perspective and parameters to govern the constraint evaluation as Configuration Profile. The input list of objects is processed in sequence. If operation fails to retrieve session information for an input object, a partial error is returned for the same and the processing continues for the next object in the list.<br /><br />The partial errors are returned in serviceData in following cases:<br /><br />77103 - The operation has failed, because the input object is not session configurable.",
      "returnFreeMemory": "false",
      "static": "false"
    },
    {
      "OperationParameter": [
        {
          "OperationParameterDataTypeRef": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject",
                  "qualifier": ""
                }
              ],
              "dataType": "std::vector",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The list of objects for which variant expressions should be returned. These objects must support variant configurable behavior similar to objects such as <b>Cfg0DefaultRule</b> and <b>Cpd0DesignElement</b>. If the objects don't support variant configurable behavior,  no variant expressions are returned.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "targetObjects"
        },
        {
          "OperationParameterDataTypeRef": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective",
              "qualifier": "&"
            }
          ],
          "const": "true",
          "defaultValue": "",
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance which provides the RevisionRule and the Configurator Context.",
          "freeOutputMemory": "false",
          "inputOutput": "Input",
          "name": "perspective"
        }
      ],
      "OperationReturnDataTypeRef": [
        {
          "dataType": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement::GetContextBasedVariantExprsResponse",
          "qualifier": ""
        }
      ],
      "accessControl": "false",
      "const": "false",
      "createRelease": "tc11000.4.0",
      "description": "This operation returns the variant expressions associated with the given set of target objects based on the Configurator Perspective input which provides the Revision Rule and Configuration Context.",
      "id": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement::GetContextBasedVariantExprsResponse#Cfg0::Soa::Configurator::ConfiguratorManagement::getContextBasedVariantExpressions#const,std::vector<Teamcenter::BusinessObject>,&$const,Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective,&",
      "name": "Cfg0::Soa::Configurator::ConfiguratorManagement::getContextBasedVariantExpressions",
      "returnConst": "false",
      "returnDescription": "Returns a list of expressions for each target object. The list contains one or more expression for each expression type supported by the rule (applicability and constraint).<br /><br />The partial errors are returned in serviceData in following cases<br /><ul><ul><li type=\"disc\">79009 - An invalid configuration perspective is passed to the operation &ldquo;<b>getContextBasedVariantExpressions</b> &quot;. </li><li type=\"disc\">79010 - The operation &quot;<b>getContextBasedVariantExpressions</b>&quot; expects one product item in the configuration perspective.</li><li type=\"disc\">77061 - An invalid revision rule provided to the operation.</li></ul></ul>",
      "returnFreeMemory": "false",
      "static": "false"
    }
  ],
  "ServiceInterface": [
    {
      "createRelease": "tc10000.1.2",
      "dependencies": "DataManagement",
      "description": "This Service contains operations related to variant configuration and variant configurator data. The <font face=\"courier\" height=\"10\">createObjects</font> operation in the <font face=\"courier\" height=\"10\">DataManagementService</font> can be used to create configurator or variability data such as feature (e.g. <b>Cfg0LiteralOptionValue</b>) and their families. The families can be arranged into family groups (e.g. <b>Cfg0FamilyGroup</b>). The features, families, and family groups need to be allocated to items in order to make them visible to these items. <br /><br />The configurator rules ( <b>Cfg0AbsRule</b> or subtypes) reference a set of product items and define the relationship among variant option values in the context of these product item(s). The configurator rules can be categorized broadly as   the default rules (e.g. <b>Cfg0AbsDefaultRule</b>) and the constraint rules (<b>Cfg0AbsContraintRule</b>). The constraint rule business object types can further be categorized as rule to validate (e.g. <b>Cfg0AbsExcludeRule</b>) and to modify (e.g. <b>Cfg0AbsIncludeRule</b>)  the configuration criteria. All constraint rules are imperative in nature, while all default rules are suggestive.<br /><br />The configuration rules that derive from <b>Cfg0AbsAssociation</b> type define the relationship between the variability data (such as features, families or family groups) and a product configuration context. For example variability data is not visible in a product item until it is explicitly allocated to this product (e.g. with a <b>Cfg0Allocation</b> object). For product context items with positive biased variant availability (see Item property <font face=\"courier\" height=\"10\">fnd0PosBiasedVariantAvail</font>) all variability data is available by default. In this case explicit availability rules (e.g.<b>Cfg0ValueAvailability</b>) are only required if the corresponding variability data needs to be made unavailable. <br /><br />The operations in this Service allow you find and update the configuration criteria (e.g. <b>VariantRule</b>). Use operation <font face=\"courier\" height=\"10\">createUpdateVariantRules</font> to create or update transient configuration criteria. For persistent variant configuration criteria and for variant conditions that qualify product content (e.g. <b>Cpd0DesignElement</b>) use operation <font face=\"courier\" height=\"10\">setVariantExpressions</font>. Operation <font face=\"courier\" height=\"10\">getVariantExpressions</font> can be used for transient as well as persistent objects.",
      "libraryName": "Cfg0SoaConfigurator",
      "name": "ConfiguratorManagement",
      "namespace": "Cfg0::Soa::Configurator",
      "serviceLibraryRef": ""
    }
  ],
  "Struct": [
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsAdmissibility"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of the admissibility objects associated with the context POM_Objects.",
          "name": "admissibilityList"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::POM_object"
            }
          ],
          "description": "The context object for which the admissibility information is being returned.",
          "name": "contextObject"
        }
      ],
      "createRelease": "tc10000.1.3",
      "description": "The output structure containing the admissibility data corresponding to the context object.",
      "isPublished": "true",
      "name": "AdmissibilityData",
      "namespace": "Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement::AdmissibilityData"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of admissibility data associated with the context Business Object.",
          "name": "admissibilityDataList"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The index for corresponding input structure.",
          "name": "index"
        }
      ],
      "createRelease": "tc10000.1.3",
      "description": "The output structure containing the admissibility data corresponding to one input entry.",
      "isPublished": "true",
      "name": "AdmissibilityOutput",
      "namespace": "Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_03::ConfiguratorManagement::AvailableVariability"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of AvailableVariability expressions defining available variability. The number of elements in this list corresponds to the number of available values in the input families (parameter familiesToTest). If an empty familiesToTest list was specified this vector would be empty.",
          "name": "availabilityExpressions"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::Violation"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of constraints that were violated for a given user selected values/input expression.",
          "name": "voilations"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigExpression"
            }
          ],
          "description": "A sample expression satisfying the given input expression and existing set of constraint in the configurator context. This is an output expression containing system suggested features from the available features.",
          "name": "suggestedSatisfyingExpr"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data for errors and returned objects.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.4",
      "description": "The response structure returned by getAvailableProductVariability.",
      "isPublished": "false",
      "name": "AvailableProductVariabilityOutput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_03::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::BusinessObjectConfigExpression"
            }
          ],
          "description": "Updated <font face=\"courier\" height=\"10\">BusinessObjectConfigExpression</font> with values applied from inclusion rules of the given product item.",
          "name": "updatedExpression"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::Violation"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of <font face=\"courier\" height=\"10\">Violation</font> structures with rules and error messages.",
          "name": "violations"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "The output structure with the given input <font face=\"courier\" height=\"10\">BusinessObjectConfigExpression</font> to <font face=\"courier\" height=\"10\">validateProductConfiguration</font> operation and the list of violations for the given BusinessObjectConfigExpression. Each <font face=\"courier\" height=\"10\">Volation</font> structure provides information about the rule which is violate with its severity and the error message.",
      "isPublished": "false",
      "name": "ValidateProductConfigOutput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::BusinessObjectConfigExpression"
            }
          ],
          "description": "An expanded expression satisfying the given expression to validate and existing set of constraint in the configurator perspective.",
          "name": "updatedExpression"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::Violation"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of constraints that were violated for a given expression to validate.",
          "name": "violations"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The status of the configuration. Valid  values  are: validAndComplete, validAndInComplete or inValid.  <br />validAndComplete: all mandatory families in configuration have value selections.  <br />validAndInComplete: not all mandatory families in configuration have value selections. <br />inValid: there are some violations .",
          "name": "criteriaStatus"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamily"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of mandatory families, which do not have any value selection based on input expression and default value in the context.",
          "name": "requiredFamilies"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "It is structure containing output information per input expressionsToValidate.",
      "isPublished": "false",
      "name": "ValidateProductConfigOutput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data for errors and returned objects.",
          "name": "serviceData"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ValidateProductConfigOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of expressions that was validated and updated with selections due to application of constraints.",
          "name": "outputs"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "The response structure for the operation <font face=\"courier\" height=\"10\">ValidateProductConfiguration</font>",
      "isPublished": "false",
      "name": "ValidateProductConfigurationResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data for errors and returned objects.",
          "name": "serviceData"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ValidateProductConfigOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of expressions that was validated and updated with selections due to application of constraints.",
          "name": "outputs"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "The response structure for the operation ValidateProductConfiguration ",
      "isPublished": "false",
      "name": "ValidateProductConfigurationResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of value IDs (<font face=\"courier\" height=\"10\"> cfg0object_id</font> ). If specified all values with matching criteria will be searched and will be used to filter rules. This parameter is mutually exclusive of <font face=\"courier\" height=\"10\">values</font>.",
          "name": "valueIDs"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsOptionValue"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of values. If specified values will be used to filter rules. This parameter is mutually exclusive of <font face=\"courier\" height=\"10\">valueIds</font>.",
          "name": "values"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A filter filtering rules for all features specified in this structure.",
      "isPublished": "false",
      "name": "ValueFilters",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::FamilyInfo"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of model families and their models. The list will not be in any specific order.",
          "name": "models"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::GroupInfo"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of groups and their member families with values. The list will not be in any specific order.",
          "name": "groupedVariability"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::FamilyInfo"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of ungrouped families and their vaues. The list will not be in any specific order.",
          "name": "ungroupedVariability"
        }
      ],
      "createRelease": "tc11000.5.0",
      "description": "The structure represents output variability information such as all configured model families, models, family groups, families and values.",
      "isPublished": "false",
      "name": "Variability",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::DateTime"
            }
          ],
          "description": "Last updated time of cache. Use this value to decide whether cache needs to be refreshed.",
          "name": "lastUpdate"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::VariantOption"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A collection of the option families and thier values associated with the variant cache of the item revision.",
          "name": "variantOption"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::Expression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Collection of free from familiy value ranges associated with the item revision.",
          "name": "validValueRanges"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::Expression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A collection of Expression (wrapper over Math::BooleanExpression) objects associated with the variant data. Default conditions are the combined expression of modelCondition, if any, and applicabilityCondition, if any, for each default rule, which need to be satisfied before the default value is applied to the expression.",
          "name": "defaultConditions"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::Expression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A collection of Expression (wrapper over Math::BooleanExpression) objects. Default expressions are the subject part of a default rules that would be applied on the input expression if default conditions are satisfied (earlier called derived defaults) or even without them (earlier called fixed defaults).",
          "name": "defaultExpressions"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfiguratorConstraint"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A collection of ConfiguratorConstraint objects that contain inclusion and exclusion rules defined on the variant data for this item revision.",
          "name": "ruleChecks"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FamilyHash"
            }
          ],
          "description": "The Map of pairs ( <b>Cfg0AbsFamily</b>, <font face=\"courier\" height=\"10\">VariantOption</font> ) representing the family instance and its structure form.",
          "name": "familyHash"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FamilyNameHash"
            }
          ],
          "description": "A data structure comprising of map between the family name (as a key) and its family information (representation Math::VariantOption) as the value. Family name is used as the key in this map as against the fully qualified name used in familyHash.",
          "name": "familyNameHash"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::Expression"
            }
          ],
          "description": "Rule check expression is the combined boolean expression of all the inclusion and exclusion rules defined on the variant data associated with this item revision.",
          "name": "ruleCheckExpressions"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A SOA structure representation of <font face=\"courier\" height=\"10\">Cfg0BaseConfigurator</font>::<font face=\"courier\" height=\"10\">VaraintInfo</font>. This structure can be viewed as the serialization of the cache of variant data stored as a part of <font face=\"courier\" height=\"10\">Cfg0BaseConfigurator</font>::<font face=\"courier\" height=\"10\">VaraintInfo</font>.",
      "isPublished": "false",
      "name": "VariantInfo",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Option namespace",
          "name": "optionNamespace"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Name of the option",
          "name": "name"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "User entered description value of this option.",
          "name": "description"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Concatenated value of the format dict.familyname{operator}value",
          "name": "tag"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Data type of this family. Valid values for this parameter are defined by the ListOfValues &quot;Cfg0FamilyValueDataType&quot;.",
          "name": "valueDataType"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Unit of measure associated with this option.",
          "name": "uom"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Varaint option is a wrapper over Math::VariantOption, an internal representation that holds the variant data associated with this item revision. Data from <font face=\"courier\" height=\"10\">Math</font>::<font face=\"courier\" height=\"10\">VariantOption</font> would be transfered into the <font face=\"courier\" height=\"10\">VariantOption</font> SOA structure during serialization and converted back into <font face=\"courier\" height=\"10\">Math</font>::<font face=\"courier\" height=\"10\">VaraintOption</font> during de-serialization.",
      "isPublished": "false",
      "name": "VariantOption",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of variant expressions to set on the variant rule.",
          "name": "expressions"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "Indicates whether the rule should be saved before returning. If the value is FALSE a transient variant rule will be returned. Transient variant rules and transient variant rule changes are discarded at the end of the Teamcenter session unless they are explicitly saved in a separate operation.",
          "name": "saveRule"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::POM_object"
            }
          ],
          "description": "If specified the expression on this rule is updated with the input expression; to create a new rule this param is set to null.",
          "name": "ruleToUpdate"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::CreateInput"
            }
          ],
          "description": "A map that ties properties to their values for the new rule.",
          "name": "creInputs"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The relationship name to use when associating the variant rule to the object specified in parameter \"<font face=\"courier\" height=\"10\">referenceObject</font>\". This is an optional parameter. If specified a relationship of this type is used to associate the variant rule to the reference object. A NULL value causes the default relationship name to be used as specified in preference \"<b>TC_Default_SVR_Relationship</b>\".",
          "name": "relationName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::WorkspaceObject"
            }
          ],
          "description": "When specified the newly created rule is related to the given reference object.",
          "name": "referenceObject"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A structure that provides information required to create or update a variant rules.",
      "isPublished": "false",
      "name": "VariantRuleInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Specifies the corresponding variant rule input index.",
          "name": "index"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::POM_object"
            }
          ],
          "description": "An object that carries variant configuration criteria.",
          "name": "ruleObject"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of  variant expressions that represent the variant configuration criteria associated with this object.",
          "name": "variantExpression"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Output structure for each <font face=\"courier\" height=\"10\">VariantRuleInput</font> in <font face=\"courier\" height=\"10\">createUpdateVariantRules</font> operation",
      "isPublished": "false",
      "name": "VariantRuleOutput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::AvailableVariability"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of AvailableVariability expressions defining available variability. The number of elements in this list should be equal to the number of  families which at least have a one available feature or default feature for the given input expression(criteriaExpression ). If an empty familiesToTest list was specified this vector would be empty.",
          "name": "availabilityExpressions"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::Violation"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of constraints that were violated for a given user selected values/input expression.",
          "name": "violations"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ApplicationConfigExpression"
            }
          ],
          "description": "A sample expression satisfying the given input expression and existing set of constraint in the configurator context. This is an output expression containing system suggested features from the available features.",
          "name": "suggestedSatisfyingExpr"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The status of the configuration. Valid values are: validAndComplete, validAndInComplete or inValid.  <br />validAndComplete: all mandatory families in configuration have value selections.  <br />validAndInComplete: not all mandatory families in configuration have value selections. <br />inValid: there are some violations.",
          "name": "criteriaStatus"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamily"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of mandatory families, which do not have any feature selection based on input expression and default feature in the context.",
          "name": "requiredFamilies"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data for errors and returned objects.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "The response structure returned by getAvailableProductVariability.",
      "isPublished": "false",
      "name": "AvailableProductVariabilityOutput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The message to display if this rule is violated.",
          "name": "message"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The severity associated with the message. Valid values for this parameter are defined by the ListOfValues \"Cfg0ConstraintSeverity\".",
          "name": "severity"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigExpression"
            }
          ],
          "description": "The rule that was found to be violated.",
          "name": "violatedRule"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Represents a violated rule along with the message and severity associated with rule violation.",
      "isPublished": "false",
      "name": "Violation",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The message to display if this rule is violated.",
          "name": "message"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The severity associated with the message. Valid values for this parameter are defined by the ListOfValues &quot;Cfg0ConstraintSeverity&quot;.",
          "name": "severity"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ApplicationConfigExpression"
            }
          ],
          "description": "The rule that was found to be violated.",
          "name": "violatedRule"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO"
            }
          ],
          "description": "Validation constraint for product variant configurations. It might contain NULL in case user is not privileged to read validation constraint rule.",
          "name": "configuratorWSO"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "Represents a violated rule along with the message and severity associated with rule violation.",
      "isPublished": "false",
      "name": "Violation",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Status code.",
          "name": "statusCode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Status message",
          "name": "statusMessage"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::Violation"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Set of violated rules which together are responsible for conflict.",
          "name": "violations"
        }
      ],
      "createRelease": "tc11000.5.0",
      "description": "Structure contains violated rules along with the message and severity associated with rule violation. It is structure which represent Independent set of constraint rules which are responsible for conflict.",
      "isPublished": "false",
      "name": "ViolationList",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigExpressionTerm"
            }
          ],
          "description": "Specifies the configuration expression term default value. If no default rules exist, or they select a default value such that it is ruled out due to other constraints, this will be an empty ConfigExpressionTerm object to indicate a non-existing default value.",
          "name": "defaultValue"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigExpressionTerm"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of configuration expressions referencing values only from the requested families. This is a list of discrete values or ranges.",
          "name": "availability"
        }
      ],
      "createRelease": "tc10000.1.4",
      "description": "Defines available features for a given family along with the default value for operation getAvailableProductVariability. The AvailableVariability structure is interpreted as &quot;NULL&quot; if it has the following values set for its parameters: <br />defaultValue: NULL structure<br />availability: empty list",
      "isPublished": "false",
      "name": "AvailableVariability",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_03::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConfigExpressionTerm"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Specifies the list of configuration expression terms referencing default features from the requested family. This list can have more than one element only if the family is a multi-select otherwise list would contain either zero or one element. If no default rules exist or they select a default feature such that it is ruled out due to other constraints, this will be an empty list to indicate  non-existing default values.",
          "name": "defaultValues"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConfigExpressionTerm"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of configuration expressions referencing values only from the requested families. This is a list of discrete values or ranges.",
          "name": "availability"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "Defines available features for a given family along with the default features for operation getAvailableProductVariability. The AvailableVariability structure is interpreted as &quot;NULL&quot; if it has the following values set for its parameters:<br /><br />defaultValues: empty list<br /><br />availability: empty list",
      "isPublished": "false",
      "name": "AvailableVariability",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "This unique ID is used to identify return data elements and partial errors associated with this input structure.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::POM_object"
            }
          ],
          "description": "The business object (e.g. Cpd0DesignElement, VariantRule, or Cfg0ExcludeRule), to which the configuration expressions specified in parameter 'expressions' are linked.",
          "name": "targetObject"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of expressions related to the business object specified in parameter 'targetObject'. The list of suported expression categories varies from business object type to business object type. The expression category is specified with the expressionType parameter in each expression.",
          "name": "expressions"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Relates a business object (e.g. <b>Cpd0DesignElement</b>, <b>VariantRule</b>, or <b>Cfg0ExcludeRule</b>) to a list of configuration expressions.",
      "isPublished": "false",
      "name": "BusinessObjectConfigExpression",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "The business object (e.g. <b>Cpd0DesignElement</b>, <b>VariantRule</b>, or <b>Cfg0ExcludeRule</b>), to which the configuration expressions specified in parameter <font face=\"courier\" height=\"10\">expressions</font> are linked.",
          "name": "targetObject"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ApplicationConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of <font face=\"courier\" height=\"10\">ApplicationConfigExpression</font> structures for the business object.",
          "name": "expressions"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The unique identifier to distinguish the input and corrosponding output.",
          "name": "clientId"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "Relates a business object (e.g. <b>Cpd0DesignElement</b>, <b>VariantRule</b>, or <b>Cfg0ExcludeRule</b>) to a list of configuration expressions.",
      "isPublished": "false",
      "name": "BusinessObjectConfigExpression",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Client ID of an Expression to validate. Client IDs are generated by callers of the this Operation. Callers of the Operation use it to correlate between Operation input and Operation output.",
          "name": "expressionToValidateClientID"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Client ID of a Scope Expression. Client IDs are generated by callers of the this Operation. Callers of the Operation use it to correlate between Operation input and Operation output.",
          "name": "scopeExpressionClientID"
        }
      ],
      "createRelease": "tc11000.5.0",
      "description": "Represents address of a cell within an Expression Matrix.",
      "isPublished": "false",
      "name": "CellReference",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::CellReference"
            }
          ],
          "description": "Pair of identifiers where first identifier is of Expression to validate and second identifier is of scope Expression.",
          "name": "cellClientIDs"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::ValidateProductConditionOutptStruct"
            }
          ],
          "description": "Validation operation output and Expression identifier information per processed Expression Matrix cell.",
          "name": "verdictStruct"
        }
      ],
      "createRelease": "tc11000.5.0",
      "description": "Structure containing list of structure instances which in turn contains pair of identifiers for expression to validate and scope expression along with validation operation output. It contains a one entry for each pair of expressions from input structure expressionMatrix and identified with list of pair of integers matrixSubset.",
      "isPublished": "false",
      "name": "CellValidationResult",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Display string for configuration expression.",
          "name": "configExprDisplayString"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "It contains the config expression populated with formula, SOA grid structure and display format.",
      "isPublished": "false",
      "name": "ConfigExprWithDisplayString",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "This unique ID is used to identify return data elements and partial errors associated with this input structure.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Specifies the expression category and the intent of this expression. <br /><br />The valid values are as follows:<br /><ul><ul><li type=\"disc\">25 - Applicability</li><li type=\"disc\">28 - Inclusive Constraint</li><li type=\"disc\">29 - Exclusive Constraint</li><li type=\"disc\">33 - Product Model</li><li type=\"disc\">37 - Default Rule</li></ul></ul>",
          "name": "expressionType"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The persistent formula string in Teamcenter syntax (see documentation for property '<font face=\"courier\" height=\"10\">cfg0SubjectCondition</font>' or <b>BOMLine</b> property '<font face=\"courier\" height=\"10\">bl_formula</font>').",
          "name": "formula"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigSubExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Represents a list of sub-expressions in a Boolean expression. The sub-expressions in this list are combined with logical operator 'OR'.",
          "name": "subExpressions"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Defines a Boolean expression to be used for configuration purposes.",
      "isPublished": "false",
      "name": "ConfigExpression",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ApplicationConfigExpression"
            }
          ],
          "description": "The application configuration expression for which formula,  grid structure and display format is requested.",
          "name": "applConfigExpr"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Display string for application configuration expression.",
          "name": "applConfigExprDisplayString"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConfigExpressionSetInfo"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of configuration expression set which will contain list of configuration expressions populated with formula,  grid structure and display format.",
          "name": "configExprSetsInfo"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "It contains the application configuration expression populated with formula,  grid structure and display format.",
      "isPublished": "false",
      "name": "ApplConfigExprWithDisplayString",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "This unique ID is used to identify return data elements and partial errors associated with this input structure.",
          "name": "clientID"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The expression category and the intent of this expression.<br /><br />The valid values are as follows:<br /><ul><ul><li type=\"disc\">9   - Variant Condition</li><li type=\"disc\">18 - Variant Rule</li><li type=\"disc\">25 - Applicability</li><li type=\"disc\">44 - Subject</li></ul></ul>",
          "name": "expressionType"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The persistent formula string in Teamcenter syntax (see documentation for property '<font face=\"courier\" height=\"10\">cfg0SubjectCondition</font>' or <b>BOMLine</b> property '<font face=\"courier\" height=\"10\">bl_formula</font>').",
          "name": "formula"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConfigSubExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of sub-expressions in a Boolean variant expression. The sub-expressions are joined together by OR operator.",
          "name": "subExpressions"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "Defines a Boolean expression to be used for configuration purposes.",
      "isPublished": "false",
      "name": "ConfigExpression",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "This unique ID is used to identify return data elements and partial errors associated with this input structure.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The expressions for which the display format is requested.",
          "name": "expressions"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "An input structure defining the expressions for which the display format is requested.",
      "isPublished": "false",
      "name": "ConfigExpressionDisplayStringInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "This unique ID is used to identify return data elements and partial errors associated with this input structure.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The display strings for each input expression.",
          "name": "expressionStrings"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Output structure returned by operation getVariantExpressionDisplayStrings. It contains the list of display strings for the input expressions.",
      "isPublished": "false",
      "name": "ConfigExpressionDisplayStringOutput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The name for the group containing the expression terms. If the group name is provided as FALSE with empty term expressions then group expression would be considered as FALSE. If the group name is provided as TRUE with empty term expressions then group expression would be considered as TRUE.",
          "name": "groupName"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigExpressionTerm"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of ConfigExpressionTerm structures",
          "name": "terms"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "This structure groups <font face=\"courier\" height=\"10\">ConfigExpressionTerm</font> structures. A mixture of positive and negated expression terms in the same expression group is not allowed.  Positive terms within an expression group are combined with operator 'OR', e.g. Color=Red | Color=Green. Negated terms within an expression group are combined with operator 'AND', e.g. Color!=Red & Color!=Green",
      "isPublished": "false",
      "name": "ConfigExpressionGroup",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamily"
            }
          ],
          "description": "The family object instance to be used in a free form family expression term, or a feature range expression.",
          "name": "context"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The name for the group containing the expression terms. If the group name is provided as FALSE then group expression would be considered as FALSE. If the group name is provided as TRUE then group expression would be considered as TRUE.",
          "name": "groupName"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConfigExpressionTerm"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "the list of <font face=\"courier\" height=\"10\">ConfigExpressionTerm</font> structures. The terms are combined together by OR operator.",
          "name": "terms"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "This structure groups <font face=\"courier\" height=\"10\">ConfigExpressionTerm</font> structures. A mixture of positive and negated expression terms in the same expression group is not allowed. Positive terms within an expression group are combined with operator 'OR', e.g. Color=Red | Color=Green. Negated terms within an expression group are combined with operator 'AND', e.g. Color!=Red & Color!=Green.",
      "isPublished": "false",
      "name": "ConfigExpressionGroup",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of <font face=\"courier\" height=\"10\">ConfigExpression</font> structures which are collected as a set for the business object. Each structure defines a variant expression which can be used for the configuration purposes.",
          "name": "configExpressions"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "The collection of <font face=\"courier\" height=\"10\">ConfigExpressions</font> refered as set for the business object. A set collects different type of varint expressions such as applicability and subject. These will be joined together by AND operation and evaluated as part of single statement.",
      "isPublished": "false",
      "name": "ConfigExpressionSet",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConfigExprWithDisplayString"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of configuration expressions populated with formula,  grid structure and display format.",
          "name": "configExprsWithDisplayString"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "It contains the list of config expressions populated with formula, SOA grid structure and display format.",
      "isPublished": "false",
      "name": "ConfigExpressionSetInfo",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The option family namespace. This parameter is mutually exclusive with parameter 'value'. When this structure is used in a request, this parameter is ignored if a valid family business object is specified in parameter 'family'",
          "name": "familyNamespace"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The ID of the family in the term. This parameter is mutually exclusive with parameter 'value'. When this structure is used in a request, this parameter is ignored if a valid family business object is specified in parameter 'family'",
          "name": "familyID"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The operator code to use for this expression terms.<br />The Valid values are as follows:<br /><ul><ul><li type=\"disc\">5 - Equals</li><li type=\"disc\">6 - Not Equals</li><li type=\"disc\">10 - And</li><li type=\"disc\">11 - OR</li></ul></ul>",
          "name": "operatorCode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The ID of the feature object or the feature to use for a free form family. This parameter is mutually exclusive with parameters 'family' and 'rangeExpressions'. It is recommended to author variant conditions involving free form features by using inequation operators in parameter 'rangeExpressions'. Equality condition for free form features should only be used in variant configuration criteria. In that case parameter 'valueText' may be used to specify a free form feature. When this structure is used in a request, this parameter is ignored if a valid feature business object is specified in parameter 'value'.",
          "name": "valueText"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::RangeExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of elemental expression literals describing a value range for a given family. This parameter requires a family to be specified with parameters 'familyNamespace' and 'familyID', or 'family'. This parameter is mutually exclusive with parameter 'value'.",
          "name": "rangeExpressions"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamily"
            }
          ],
          "description": "Specifies family object to be used in a free form family expression term, or a feature range expression. This parameter is mutually exclusive with parameter 'value'.",
          "name": "family"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsValue"
            }
          ],
          "description": "Specifies feature object to be used in an elemental expression literal. This parameter is mutually exclusive with parameters 'family' and 'rangeExpressions'.",
          "name": "value"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Defines an elemental expression literal for a single feature, or feature range expression for a given family.",
      "isPublished": "false",
      "name": "ConfigExpressionTerm",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamily"
            }
          ],
          "description": "The family object instance to be used in a free form family expression term, or a feature range expression.",
          "name": "family"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The ID of the family in the term",
          "name": "familyID"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The family namespace by which the family object is uniquely identified.",
          "name": "familyNamespace"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The operator code to use for this expression terms.<br /><br />The Valid values are as follows:<br /><ul><ul><li type=\"disc\">5 - Equals</li><li type=\"disc\">6 - Not Equals</li><li type=\"disc\">10 - And</li><li type=\"disc\">11 - OR</li></ul></ul>",
          "name": "operatorCode"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::RangeExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of elemental expression literals describing a feature range for a given  family.",
          "name": "rangeExpressions"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsValue"
            }
          ],
          "description": "The feature object to be used in an elemental expression literal.",
          "name": "value"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The ID of the feature object or the feature to use for a free form family.",
          "name": "valueText"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Specifies the selection type of the feature object. This parameter specifies whether the feature object is user selected, default selected or system selected.<br /><br />Valid Values are as follow:<br /><ul><ul><li type=\"disc\"><b>EmptyInitialized</b> A constraint has initialized a family with the empty value.</li><li type=\"disc\"><b>Default</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  A constraint has assigned a default value.</li><li type=\"disc\"><b>PackageDefault</b>   A package constraint has assigned a default value.</li><li type=\"disc\"><b>Unknown</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  An administrator authored constraint with unknown severity has assigned a value. If a feature selection is not known precisely, it will be represented as unknown.</li><li type=\"disc\"><b>Information</b>&nbsp;&nbsp;&nbsp;&nbsp;  A constraint with Info severity has assigned a value. Refer Cfg0ConstraintSeverity list of values for details.</li><li type=\"disc\"><b>Warning</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  A constraint with Warning severity has assigned a value. Refer Cfg0ConstraintSeverity list of values for details.</li><li type=\"disc\"><b>Error</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A constraint with Error severity has assigned a value. Refer Cfg0ConstraintSeverity list of values for details.</li><li type=\"disc\"><b>User</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; User has assigned a value.</li></ul></ul>",
          "name": "selectionClass"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "Defines an elemental expression literal for a single feature, or feature range expression for a given family.",
      "isPublished": "false",
      "name": "ConfigExpressionTerm",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigExpressionGroup"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Represents a list of clauses in a Boolean expression. The clauses in this list are combined with logical operator AND.",
          "name": "expressionGroups"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "This structure groups <font face=\"courier\" height=\"10\">ConfigExpressionGroup</font> structures which are joined together by \"AND\" operator.",
      "isPublished": "false",
      "name": "ConfigSubExpression",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The persistent formula string in Teamcenter syntax.",
          "name": "formula"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The application expression identifier used to distinguish the current expression from other variant expressions authored for the same business object.",
          "name": "exprID"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Specifies the expression category and the intent of this expression. The valid values are as follows:<br /><ul><ul><li type=\"disc\"> 9 -  Variant Condition</li><li type=\"disc\">18 - Variant Rule</li><li type=\"disc\">28 - Inclusive Constraint</li><li type=\"disc\">29 - Exclusive Constraint</li><li type=\"disc\">37 - Default Rule</li><li type=\"disc\">41 - Availability Rule</li></ul></ul>",
          "name": "expressionType"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConfigExpressionSet"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of <font face=\"courier\" height=\"10\">ConfigExpressionSet</font> which are relevant to the business object. The variant expression sets are combined by OR operator.",
          "name": "configExprSets"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "The configuration expression for the business object.",
      "isPublished": "false",
      "name": "ApplicationConfigExpression",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConfigExpressionGroup"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of clauses in a Boolean expression. The groups are combined together by AND operator.",
          "name": "expressionGroups"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "This structure lists the <font face=\"courier\" height=\"10\">ConfigExpressionGroup</font> structures which are joined together by \"AND\" operator.",
      "isPublished": "false",
      "name": "ConfigSubExpression",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement::IntVectorMap2"
            }
          ],
          "description": "Map (string/list of ints) of configuration Profile preferences of Integer type.",
          "name": "intMap"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement::BoolVectorMap2"
            }
          ],
          "description": "Map (string/list of booleans) of configuration Profile preferences of Boolean type.",
          "name": "boolMap"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement::StringVectorMap2"
            }
          ],
          "description": "Map (string/list of strings) of configuration Profile preferences of String type.",
          "name": "stringMap"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement::DoubleVectorMap2"
            }
          ],
          "description": "Map (string/list of doubles) of configuration Profile preferences of Double type.",
          "name": "doubleMap"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement::ObjectVectorMap2"
            }
          ],
          "description": "Map (string/list of business objects) of configuration Profile preferences of Business Object type.",
          "name": "objectMap"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement::DateVectorMap2"
            }
          ],
          "description": "Map (string/list of dates) of configuration Profile preferences of Date type.",
          "name": "dateMap"
        }
      ],
      "createRelease": "tc11000.4.0",
      "description": "Structure consisting maps of different primitive types.<br />Following are the Configuration Profile keys that can be passed:<br /><ul><ul><li type=\"disc\">applyConfigConstraints  - Boolean - Enables configurator constraint evaluation in the solve operation.</li><li type=\"disc\">applyDefaults - Boolean - Enables configurator default rules evaluation in the solve operation.</li><li type=\"disc\">intentFilterInclude - List of Strings - The list of configurator Intents which should participate in the solve operation.</li><li type=\"disc\">intentFilterExclude - List of Strings - The list of configurator Intents which should be ignored in the solve operation.</li><li type=\"disc\">violationComputationTimeout - Integer - Indicates the max time in seconds that should be spent in violations computation.</li><li type=\"disc\">minReportSeverity - Integer - Indicates the minimum report severity to be evaluated for validation failures.</li><li type=\"disc\">minErrorSeverity - Integer - Indicates the minimum error severity to be evaluated for validation failures.</li><li type=\"disc\">computeAllProblems - Boolean - Enables computation of all the problems of the unsat core while reporting violations.</li><li type=\"disc\">minimizeProblem - Boolean - Decides if minimization of computed essential violation is required.</li></ul></ul>",
      "isPublished": "false",
      "name": "ConfigurationProfile",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "String Representing JSON output.",
          "name": "jsonResponse"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Information about errors if any.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc11000.6.0",
      "description": "Response structure for getConfigurationRosterCoverage service.",
      "isPublished": "false",
      "name": "ConfigurationRosterCoverage",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2018_11::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
            }
          ],
          "description": "Configurator perspective details.<br />Property cfg0ProductItems of perspective must contain reference to a single Configurator context item and property cfg0RevisonRule must be set to a RevisionRule",
          "name": "perspective"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "String Representing JSON input, Please read JSON schema to understand it in detail.",
          "name": "jsonRequest"
        }
      ],
      "createRelease": "tc11000.6.0",
      "description": "Input Data structure for getConfigurationRosterCoverage service.",
      "isPublished": "false",
      "name": "ConfigurationRosterInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2018_11::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
            }
          ],
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance which provides the <b>RevisionRule</b> and the Configurator Context.",
          "name": "perspective"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement::ConfigurationProfile"
            }
          ],
          "description": "The Configuration Profile information required for Configurator Solver.",
          "name": "configProfile"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of target objects on which the Configuration Profile information needs to be set.",
          "name": "targetObjects"
        }
      ],
      "createRelease": "tc11000.4.0",
      "description": "An input structure containing list of configurator perspective object, configuration profile map and a vector of variant rule objects.",
      "isPublished": "false",
      "name": "ConfigurationSessionInfoInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "The session configurable object of type <b>VariantRule</b> or <b>Cfg0AbsConfiguratorCriteria</b> for which the product information and Configuration Profile is retrieved.",
          "name": "sessionConfigObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
            }
          ],
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance which provides the product information used to select the features and constraints. The product information consists of a <b>Cfg0ConfContext</b>, <b>RevisionRule</b>, <b>Effectivity</b>, <b>Rule Date</b>.",
          "name": "perspective"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement::ConfigurationProfile"
            }
          ],
          "description": "The Configuration Profile information which contains the parameters governing the constraint evaluation behavior in a Product Configurator configuration session.",
          "name": "configProfile"
        }
      ],
      "createRelease": "tc11000.5.0",
      "description": "The structure for retrieving a Product Configurator configuration session information. A Product Configurator session can be constructed using the session information.",
      "isPublished": "false",
      "name": "ConfigurationSessionInfoOutput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::Expression"
            }
          ],
          "description": "Text representation of model condition defined on a rule.",
          "name": "modelDesignator"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::Expression"
            }
          ],
          "description": "Text representation of applicability condition defined on a rule.",
          "name": "applicability"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::Expression"
            }
          ],
          "description": "Text representation of subject condition defined on a rule.",
          "name": "restriction"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "User entered message on the rule. This string is a localizable string which is displayed to the user when any rule execution fails.",
          "name": "comment"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::VariantOption"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of Variation families that are associated with the model condition of a rule.",
          "name": "modelOptions"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::VariantOption"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A collection of Variation families that are associated with the applicability condition of a rule.",
          "name": "applicabilityOptions"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::VariantOption"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A collection of Variation families that are associated with the subject condition of a rule.",
          "name": "restrictionOptions"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::VariantOption"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A unique collection of all the families, model, applicability and subject, that are contained within this constraint object.",
          "name": "ruleOptions"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The type of constraint.<br />Valid values for this parameter are as follow:<br /><ul><ul><li type=\"disc\"><b>IncludeConstraint:</b> A constraint rule that is used to validate and possibly modify the configuration criteria. Validation fails whenever adding the condition of this constraint rule with operator AND would result in unsatisfiable configuration criteria. If the scope of the input variant criteria exceeds the scope of the constraint rule condition, the scope is reduced to stay within the bounds of the constraint rule scope by ANDing the rule condition to the configuration criteria.</li></ul></ul><br /><br /><ul><ul><li type=\"disc\"><b>ExcludeConstraint:</b> A constraint rule that is used to validate configuration criteria without modifying it. Validation fails when the configuration criteria satisfy the condition of this constraint rule.</li></ul></ul>",
          "name": "constraintType"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The severity associated with the message. Valid values for this parameter are defined by the ListOfValues \"Cfg0ConstraintSeverity\".",
          "name": "constraintSeverity"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A SOA structure representation of Teamcenter::ConfiguratorConstraint. The data members of this SOA structure correspond the Teamcenter runtime objects in namespace Teamcenter::Math. For example, a ConfigurationManagement::VaraintOption corresponds to a Math::VariantOption.",
      "isPublished": "false",
      "name": "ConfiguratorConstraint",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "This unique ID is used to identify return data elements and partial errors associated with this input structure.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ApplicationConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of application config expressions for which fomula, SOA grid struture and the display format is requested.",
          "name": "exprsToConvert"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
            }
          ],
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to specify the context and revision rule. This is a mandatory parameter.",
          "name": "context"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "This flag will indicate what will be populated in output <font face=\"courier\" height=\"10\">ApplicationConfigExpression</font> structure. Following are valid values:<br />0 - formulae, grid expression and display formulae<br />1 - formulae<br />2 - grid expression <br />3 - formulae and grid expression<br />4 - display formulae <br />5 - formulae and display formulae<br />6 - grid expression and display formulae",
          "name": "expressionFormat"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "An input structure defining the list of application configuration expressions for which formula,  grid structure and the display format is requested.",
      "isPublished": "false",
      "name": "ConvertVariantExpressionInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "This unique ID is used to identify return data elements and partial errors associated with the input structure.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ApplConfigExprWithDisplayString"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of application configuration expression populated with formula,  grid structure and display format.",
          "name": "applConfigExprsWithDisplayString"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "It contains the list of application config expressions populated with formula, SOA grid structure and display format.",
      "isPublished": "false",
      "name": "ConvertVariantExpressionOutput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConvertVariantExpressionOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of converted variant expressions.",
          "name": "outputs"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Service Data",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "The response structure for the operation with the converted variant expressions and in required formats.",
      "isPublished": "false",
      "name": "ConvertVariantExpressionsResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::BusinessObjectConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of structures each relating a business object to a set of configuration expressions.<br />For the details of the structure BusinessObjectConfigExpression please refer to Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement:: BusinessObjectConfigExpression",
          "name": "criteriaExpression"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamily"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of configuration families (Cfg0AbsFamily) for which available features are requested.",
          "name": "familiesToTest"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConfigExpressionTerm"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of Configuration Expression Terms (ConfigExpressionTerm) whose availability is to be calculated.",
          "name": "valuesToTest"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
            }
          ],
          "description": "Configurator perspective details.<br />Property cfg0ProductItems of perspective must contain reference to a single Configurator context item and property cfg0RevisonRule must be set to a RevisionRule",
          "name": "perspective"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Defines the mode to apply the constraints. The value is a bitwise OR the following values: <br />0: disable configurator constraint evaluation <br />1: enable configurator constraint evaluation <br />512:  get available features for each family individually after resetting the config expression for the inquired family<br />2048: enable Availability Constraint evaluation.",
          "name": "applyConstraints"
        }
      ],
      "createRelease": "tc10000.1.7",
      "description": "It is the object containing input information required to compute the availability.",
      "isPublished": "false",
      "name": "AvailabilityInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2016_09::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Business object type name",
          "name": "boName"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::StringMap"
            }
          ],
          "description": "Map of string property names to values (<font face=\"courier\" height=\"10\">string, string</font>)",
          "name": "stringProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::DoubleVectorMap"
            }
          ],
          "description": "Map of double array property names to values map( string, double)",
          "name": "doubleArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FloatMap"
            }
          ],
          "description": "Map of float property names to values (string, bool)",
          "name": "floatProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FloatVectorMap"
            }
          ],
          "description": "Map of float array property names to values map( string, float)",
          "name": "floatArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::TagMap"
            }
          ],
          "description": "Map of BusinessObject property names to values (<font face=\"courier\" height=\"10\">string, BusinessObjec</font>t)",
          "name": "objectProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::TagVectorMap"
            }
          ],
          "description": "Map of <b>BusinessObject</b> array property names to values (<font face=\"courier\" height=\"10\">string, vector<BusinessObject></font>)",
          "name": "objectArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::CreateInputMap"
            }
          ],
          "description": "Map of reference or relation property name to secondary <font face=\"courier\" height=\"10\">CreateInput</font> objects <font face=\"courier\" height=\"10\">(string, vector<CreateInput></font>)",
          "name": "compoundCreateInput"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::StringVectorMap"
            }
          ],
          "description": "Map of string array property names to values (<font face=\"courier\" height=\"10\">string, vector<string></font>)",
          "name": "stringArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::BoolMap"
            }
          ],
          "description": "Map of boolean property names to values (string, bool)",
          "name": "boolProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::BoolVectorMap"
            }
          ],
          "description": "Map of boolean array property names to values (<font face=\"courier\" height=\"10\">string, vector<bool></font>)",
          "name": "boolArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::DateMap"
            }
          ],
          "description": "Map of DateTime property names to values (<font face=\"courier\" height=\"10\">string, DateTime</font>)",
          "name": "dateProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::DateVectorMap"
            }
          ],
          "description": "Map of DateTime array property names to values (<font face=\"courier\" height=\"10\">string, vector<DateTime></font>)",
          "name": "dateArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::IntMap"
            }
          ],
          "description": "Map of integer property names to values (string, int)",
          "name": "intProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::IntVectorMap"
            }
          ],
          "description": "Map of ineteger array property names to values map( string, int)",
          "name": "intArrayProps"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::DoubleMap"
            }
          ],
          "description": "Map of double property names to values (string, double)",
          "name": "doubleProps"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "This structure captures the inputs required for creation of a business object. It is a nested structure containing the <font face=\"courier\" height=\"10\">CreateInput</font>(s) for any secondary(compounded) objects that might be created (e.g <b>Item</b> also creates <b>ItemRevision</b> and <b>ItemMaster</b> Form, etc.). This structure should only be used for purposes specific to this Service Interface, e.g. when creating transient VariantRules. Generally business objects should be created with the DataManagement Service Interface.",
      "isPublished": "false",
      "name": "CreateInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::VariantRuleOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of variant rule output structures",
          "name": "ruleOutputs"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Service Data",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Response structure for the <font face=\"courier\" height=\"10\">createUpdateVariantRules</font> operation.",
      "isPublished": "false",
      "name": "CreateUpdateVariantRulesResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::VariantOption"
            }
          ],
          "description": "SOA representation of Math::VaraintOption that defines an family.",
          "name": "family"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::Expression"
            }
          ],
          "description": "A SOA expression representation of valueRange, Math::BooleanExpression, present in Teamcenter::ConfigurationFamilyFactory::DeclaredFamily.",
          "name": "valueRange"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::StringVariantOptionMap"
            }
          ],
          "description": "The map of values in pairs of (string, string) for family and feature.",
          "name": "values"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "A SOA representation of variantMode data member in Teamcenter::ConfigurationFamilyFactory::DeclaredFamily.",
          "name": "variantMode"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A SOA structure representation of <font face=\"courier\" height=\"10\">Teamcenter</font>::<font face=\"courier\" height=\"10\">ConfigurationFamilyFactory</font>::<font face=\"courier\" height=\"10\">DeclaredFamily</font>.",
      "isPublished": "false",
      "name": "DeclaredFamily",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "A unique ID associated with this expression structure. <b>Note</b>: <i>Currently this attribute is unused. The main intention of using this id is to be able to reduce the data over the wire by serializing only one Expression structure and leverage this ID wherever it is used.</i>",
          "name": "id"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Text representation of Math::BooleanExpression returned from Cfg::expressionsAsStrings().",
          "name": "asTextExpression"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A SOA structure that represents the <font face=\"courier\" height=\"10\">Math</font>::<font face=\"courier\" height=\"10\">BooleanExpression</font> as a text. The collection of these text expressions in the vector is the output returned from <font face=\"courier\" height=\"10\">Cfg</font>::<font face=\"courier\" height=\"10\">expressionsAsStrings</font>(). The string representation can be converted back into <font face=\"courier\" height=\"10\">Math</font>::<font face=\"courier\" height=\"10\">BooleanExpression</font> by invoking <font face=\"courier\" height=\"10\">Cfg</font>::<font face=\"courier\" height=\"10\">getExpressions</font>().",
      "isPublished": "false",
      "name": "Expression",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Identifies this structure within the scope of an operation. The identifier allows this structure to be referenced from other search definition input strructures in the same operation, e.g. this structure could be referenced from within an enclosing ExpressionGroupInput structure.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchGroupOperator"
            }
          ],
          "description": "The set operator to use when combining the results from each search definition in this group. Possible values are:<br /><ul><ul><li type=\"disc\">\"UnionAll\"</li><li type=\"disc\">\"UnionUnique\"</li><li type=\"disc\">\"Intersection\"</li><li type=\"disc\">\"Difference\"</li></ul></ul><br />Use \"UnionAll\" if search results are not expected to contain duplicates, or if duplicates are not a concern. The search expressions in this group are combined in the sequence in which they appear in the group.<br /><br />\"UnionAll\" and \"UnionUnique\" combine the results of two search definitions into a set that contains all of the objects that are returned from either the left or the right search definition operand. \"UnionAll\" does not remove duplicates and is therefore often faster.<br /><br />\"Intersection\" combines the results of two search definitions into a set that contains all of the objects that are returned from the left as well as the right search definition operand.<br /><br />\"Difference\" combines the results of two search definitions into a set that contains all of the objects that are returned from the left but not from the right search definition operand.<br /><br />Search definitions constructed from a <font face=\"courier\" height=\"10\">ResultTypeInput</font> are always combined with \"Intersection\".<br /><br />Exclude search definitions constructed from a <font face=\"courier\" height=\"10\">ObjectReferenceInput</font> are always combined with \"Difference\".<br /><br />Include search definitions constructed from a <font face=\"courier\" height=\"10\">ObjectReferenceInput</font> are combined with \"UnionAll\" if the set operator for the group is \"UnionAll\", otherwise with \"UnionUnique\".<br /><br />For example, a \"UnionAll\" group that combines the following search definitions:<br /><ul><ul><li type=\"disc\">\"savedQuery\"</li><li type=\"disc\">\"includeObjects\"</li><li type=\"disc\">\"resultTypes\"</li><li type=\"disc\">\"excludeObjects\"</li></ul></ul><br />would return:<br />$savedQuery UnionAll $includeObjects Intersection $resultTypes Difference $excludeObjects.",
          "name": "searchOperator"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of client Ids of the search expressions to combine in this group. Any client ID that is assigned to a search definition input structure within the same <font face=\"courier\" height=\"10\">SearchExpressionInput</font> can be used, including other <font face=\"courier\" height=\"10\">ExpressionGroupInput</font> client ID values. For example you could specify two client ID values that are given in the \"<font face=\"courier\" height=\"10\">savedQueries</font>\" parameter of the SearchExpressionInput that also contains this <font face=\"courier\" height=\"10\">ExpressionGroupInput</font> structure if you want to intersect or union the results from these two searches. Or you could combine one of the client ID values in parameter \"<font face=\"courier\" height=\"10\">savedQueries</font>\" with one of the ID values in parameter \"<font face=\"courier\" height=\"10\">excludeObjects</font>\" if you want to explicitly remove some objects from the search results of the saved query. This <font face=\"courier\" height=\"10\">ExpressionGroupInput</font> then forms a new search criterion as a combination of the results from the search definitions that are referenced in this list.",
          "name": "expressionIds"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SettingsMap"
            }
          ],
          "description": "Search pragmata, which describe how the server should should process the input. <br /><b>Note:</b> Support for search pragmata is not implemented in Teamcenter 10.1.2.",
          "name": "settings"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Aggregates multiple search criteria into complex search expressions.",
      "isPublished": "false",
      "name": "ExpressionGroupInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The index of the column in the left search in this join.",
          "name": "left"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The operator to use in this join condition when matching the columns in the left and right search. Supported operators are:<br /><ul><ul><li type=\"disc\">15000 (POM_enquiry_equal)</li></ul></ul>",
          "name": "operatorCode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The index of the column in the right search in this join.",
          "name": "right"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Defines the join condition for the results of two searches.<br />An <font face=\"courier\" height=\"10\">ExpressionJoinCondition</font> with values<br /><ul><ul><li type=\"disc\">left=2</li><li type=\"disc\">operatorCode=1500</li><li type=\"disc\">right=3</li></ul></ul><br />defines a join condition between values in the 2nd column of the left and the 3rd column of the right search using the EQUAL comparison operator.",
      "isPublished": "false",
      "name": "ExpressionJoinCondition",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Identifies this structure within the scope of an operation. The identifier allows this structure to be referenced from other search definition input strructures in the same operation, e.g. this structure could be referenced from within an enclosing ExpressionGroupInput structure.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchJoinOperator"
            }
          ],
          "description": "The join operator to use when combining the results from each search definition in this join.",
          "name": "searchOperator"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of client Ids of the search expressions to combine in this join. Any client ID that is assigned to a search definition input structure within the same <font face=\"courier\" height=\"10\">SearchExpressionInput</font> can be used, including other <font face=\"courier\" height=\"10\">ExpressionJoinInput</font> client ID values. For example you could specify two client ID values that are given in the \"<font face=\"courier\" height=\"10\">savedQueries</font>\" parameter of the <font face=\"courier\" height=\"10\">SearchExpressionInput</font> that also contains this <font face=\"courier\" height=\"10\">ExpressionGroupInput</font> structure if you want to join the results from these two searches. Or you could combine one of the client ID values in parameter \"savedQueries\" with one of the ID values in parameter \"<font face=\"courier\" height=\"10\">includeObjects</font>\" if you want to explicitly join some objects from the search results of the saved query. This <font face=\"courier\" height=\"10\">ExpressionJoinInput</font> then forms a new search criterion as a combination of the results from the search definitions that are referenced in this list.",
          "name": "expressionIds"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SettingsMap"
            }
          ],
          "description": "Search pragmata, which describe how the server should should process the input.<br /><b>Note:</b> Support for search pragmata is not implemented in Teamcenter 10.1.3.",
          "name": "settings"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ExpressionJoinCondition"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Defines the join condition to use when joining the 1st search in parameter \"<font face=\"courier\" height=\"10\">expressionIds</font>\" with the other searches parameter \"<font face=\"courier\" height=\"10\">expressionIds</font>\".<br />Teamcenter 10.1.3 only support one single join condition.",
          "name": "joinConditions"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Combines multiple search criteria into a single search expression returning a result table with multiple columns.",
      "isPublished": "false",
      "name": "ExpressionJoinInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::BusinessObjectConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of Expression(s) to validate.",
          "name": "expressionsToValidate"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::BusinessObjectConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of scope Expression(s) against which expressions from list expressionsToValidate to validate.",
          "name": "scopeExpressions"
        }
      ],
      "createRelease": "tc11000.5.0",
      "description": "It is structure which pairs list of BusinessObjectConfigExpressions.",
      "isPublished": "false",
      "name": "ExpressionMatrix",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of family IDs ( <font face=\"courier\" height=\"10\">cfg0object_id</font> ). If specified all families with matching criteria will be searched and values belongs to searched families will be used to filter rules. This parameter is mutually exclusive of <font face=\"courier\" height=\"10\">families</font>.",
          "name": "familyIDs"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsOptionFamily"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of families. If specified values belongs to all families will be used to filter rules. This parameter is mutually exclusive of <font face=\"courier\" height=\"10\">familyIds</font>.",
          "name": "families"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A filter filtering rules for all features belonging to all families specified in this structure.",
      "isPublished": "false",
      "name": "FamilyFilters",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamily"
            }
          ],
          "description": "The Cfg0AbsFamily object.",
          "name": "family"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsConfiguratorWSO"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of Cfg0AbsConfiguratorWSO objects, the objects can be objects of type, Cfg0AbsValue or Cfg0AbsFeature. The list of values will not be in any specific order.",
          "name": "values"
        }
      ],
      "createRelease": "tc11000.5.0",
      "description": "The FamilyInfo is a structure which represents family and the values belongs to it. Here family can be model family or option family or dynamic family and value can be model or option value or standalone feature.",
      "isPublished": "false",
      "name": "FamilyInfo",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2016_09::ConfiguratorManagement::AvailableFamilyVariabilityStruct"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of list containing AvailableFamilyVariabilityStruct. This represents availability records for all the models in the input. The entry corresponds to the input by index.",
          "name": "availabilityStruct"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data for errors and returned objects.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.7",
      "description": "An object containing input information required to represent avialability of features for models.",
      "isPublished": "false",
      "name": "AvailabilityOutput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2016_09::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GroupFilters"
            }
          ],
          "description": "Filter for filtering based on all features belonging to families in specified groups.",
          "name": "groupFilters"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FamilyFilters"
            }
          ],
          "description": "Filter for filtering based on all features belonging to families specified.",
          "name": "familyFilters"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ValueFilters"
            }
          ],
          "description": "Filter for filtering based on all features specified.",
          "name": "valueFilters"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "This parameter determines whether or not rules that do not have any variant expressions set on them be returned or not.<br /><br />If this parameter is set to 'true', all such rules would be returned. If this parameter is set to 'false', such rules are not returned.",
          "name": "includeUnreferencedRules"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Criteria that allows filtering rule objects. The filter criteria can be given in the following ways:<br /><ul><ul><li type=\"disc\">If <font face=\"courier\" height=\"10\">groupFilters</font> is populated, then the system shall find all groups within the current context that match the filter and find rules that reference all features within families of the group.</li><li type=\"disc\">If <font face=\"courier\" height=\"10\">familyFilters</font> is populated, then the system shall find all families within the current context that match the filter and find rules that reference all features within the families.</li><li type=\"disc\">If <font face=\"courier\" height=\"10\">valueFilters</font> is populated, then the system shall find all features within the current context that match the filter and find rules that reference the features.</li><li type=\"disc\">Criteria within multiple fields are intersected.</li></ul></ul>",
      "isPublished": "false",
      "name": "FilterCriteria",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
            }
          ],
          "description": "The Cfg0ConfiguratorPerspective instance to specify the context and revision rule. This parameter can be NULL if the operation parameter for the perspective is not NULL.",
          "name": "configPerspective"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::POM_object"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of context business objects having configurator context as defined by configPrespective.",
          "name": "contextObjects"
        }
      ],
      "createRelease": "tc10000.1.3",
      "description": "The input structure for the getAdmissibility operation containing the contexts and perspective instance with RevisionRule.",
      "isPublished": "true",
      "name": "GetAdmissibilityInputStruct",
      "namespace": "Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement::AdmissibilityOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of admissibility information output structures for each input.",
          "name": "admissibilityOutputList"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Service data to return partial errors.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.3",
      "description": "Response structure for getAdmissibility operation.",
      "isPublished": "true",
      "name": "GetAdmissibilityResponse",
      "namespace": "Cfg0::Soa::Configurator::_2014_12::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::ConfigurationSessionInfoOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of  session information retrieved from a session configurable object is returned with the same object. The session information is retrieved as a combination of <b>Cfg0ConfiguratorPerspective</b> representing the product information and Configuration Profile which represents the parameters for constraint evaluation. The session information can be used to recreate a Product Configurator session.",
          "name": "configSessionInfos"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data returns partial error encountered in retrieving the session information from an input object against the index of the object in input list.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc11000.5.0",
      "description": "The response structure for retrieving a number of Product Configurator configuration session information structures. A session information retrieved from a session configurable object is returned with the same object. The session information is retrieved as a combination of <b>Cfg0ConfiguratorPerspective</b> representing the product information and Configuration Profile which represents the parameters for constraint evaluation. The session information can be used to recreate a Product Configurator session. The service data returns partial error encountered in retrieving the session information from an input object against the index of the object in input list.",
      "isPublished": "false",
      "name": "GetConfigurationSessionInfoResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::BusinessObjectConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of structures each relating a business object to a set of configuration expressions.",
          "name": "configObjectExpressions"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Teamcenter service data.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc11000.4.0",
      "description": "The response structure for operation getContextBasedVariantExpressions.",
      "isPublished": "false",
      "name": "GetContextBasedVariantExprsResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ConfigExpressionDisplayStringOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of display strings for the input expressions",
          "name": "displayStrings"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Service Data",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Response structure for <font face=\"courier\" height=\"10\">getVariantExpressionDisplayStrings</font> operation",
      "isPublished": "false",
      "name": "GetDisplayStringResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GroupAllocationMap"
            }
          ],
          "description": "The Map of ( <b>Cfg0AbsFamilyGroup</b>, <b>Cfg0AbsAssociation</b>) having a family group to the corresponding allocation objects for the product item.",
          "name": "groupAndAllocation"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Teamcenter Service Data.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Response structure to return allocated groups and their corresponding allocation objects.",
      "isPublished": "false",
      "name": "GetFamilyGroupResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
            }
          ],
          "description": "The Cfg0ConfiguratorPerspective instance to specify the context and revision rule. This parameter can be NULL if the operation parameter for the perspective is not NULL. If a perspective is specified here it overwrites the operation parameter operationConfigPerspective for corresponding processing of inputExpressions.",
          "name": "configPerspective"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ApplicationConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The List of input expression to be split in the model and the option variant condition expressions.",
          "name": "inputExpressions"
        }
      ],
      "createRelease": "tc10000.1.3",
      "description": "Input structure containing the expressions which are to be split in the model and the option variant condition components. Each GetModelOptionCondInput forms a partial error boundary.",
      "isPublished": "false",
      "name": "GetModelOptionCondInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The index corresponding to input structure index.",
          "name": "index"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::ModelOptionCondStruct"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of structures having condition information one for each input condition.",
          "name": "modelOptionCondList"
        }
      ],
      "createRelease": "tc10000.1.3",
      "description": "Output structure containing the model and the option variant condition expressions for the input expressions.",
      "isPublished": "false",
      "name": "GetModelOptionCondOutput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::GetModelOptionCondOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of output structures one for each input having variant expression information.",
          "name": "modelOptionCondOutputList"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "ServiceData to return partial errors.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.3",
      "description": "Response structure for getModelAndOptionConditions operation.<br />Each entry will correspond to the partial error boundary of one input structure.",
      "isPublished": "false",
      "name": "GetModelOptionCondResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ConfigExpressionTerm"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Specifies the list of configuration expression terms referencing available features from the requested family.",
          "name": "availability"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::vector<std::string>"
            }
          ],
          "description": "A string representing the availability status of the feature. Presently three values are supported<br /><ul><ul><li type=\"disc\">Available</li><li type=\"disc\">Not Available</li><li type=\"disc\">Not Editable</li></ul></ul>",
          "name": "availibilityStatus"
        }
      ],
      "createRelease": "tc10000.1.7",
      "description": "Defines the availability status of option values from the given family input for the operation getOptionValueAvailability.",
      "isPublished": "false",
      "name": "AvailableFamilyVariability",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2016_09::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::GroupAndFamilies"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of structure with the family groups and families associated with them. A <font face=\"courier\" height=\"10\">GroupAndFamilies</font> structure describes an instance of family group and the families which are associated with it.",
          "name": "groupAndFamilies"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Teamcenter service data.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A list of structures consisting of family groups and families that are attached to the respective family groups.",
      "isPublished": "false",
      "name": "GetOptionFamiliesResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ValueAssociationMap"
            }
          ],
          "description": "This is the map of feature objects and their corresponding association objects with the product item or the product model. The product item and the product model is associated with a features by an allocation object and an availability object, respectively.",
          "name": "valueAndAssocations"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Teamcenter service data.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A list of structures having families and features of the respective families.",
      "isPublished": "false",
      "name": "GetOptionValuesResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::BusinessObjectConfigExpression"
            }
          ],
          "description": "The list of output variant expressions that result from applying default rules to the input variant expressions.",
          "name": "expressionWithDefaults"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The status of the configuration. Valid values are: validAndComplete, validAndInComplete or inValid.  <br />validAndComplete: all mandatory families in configuration have value selections.  <br />validAndInComplete: not all mandatory families in configuration have value selections. <br />inValid: there are some violations.",
          "name": "criteriaStatus"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamily"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of mandatory families, which do not have any value selection based on input expression and default feature in the context.",
          "name": "requiredFamilies"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "The list of expressions that was validated and status of configuration along with required families.",
      "isPublished": "false",
      "name": "GetProductDefaultsConfigOutput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::BusinessObjectConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Contains the output expression that result from aplying default rules to the input expressions.",
          "name": "expressionsWithDefaults"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data to return any additional information.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "The response structure for operation <font face=\"courier\" height=\"10\">GetProductDefaults</font>",
      "isPublished": "false",
      "name": "GetProductDefaultsResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::GetProductDefaultsConfigOutput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of the output expressions that result from applying default constraints to the input expressions.",
          "name": "outputs"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data to return any additional information.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "The response structure for operation GetProductDefaults.",
      "isPublished": "false",
      "name": "GetProductDefaultsResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::RevisionRule"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of <b>RevisionRule</b> instances.",
          "name": "applicableRevisionRules"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The teamcenter service data",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "The list of applicable RevisionRule objects with the service data.<br /><br /><br /><br /> ",
      "isPublished": "false",
      "name": "GetRevisionRulesResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data for errors and returned objects.",
          "name": "serviceData"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::Variability"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of model families and their models, list of groups and their families with values and ungrouped families with their values.",
          "name": "variabilityList"
        }
      ],
      "createRelease": "tc11000.5.0",
      "description": "The response structure is returned by the operation getVariablility. The list of variability in the output response will be populated in the sequence of input list of configurator perspectives in the request. If there is any failure, the service data will be populated with partial error at the same index of input configurator perspective. The variability can be all configured model families, models, groups, families and values.",
      "isPublished": "false",
      "name": "GetVariabilityResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::VariantInfo"
            }
          ],
          "description": "Contains revision configured variant data such as variant features, families, and rules.",
          "name": "variantInfo"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Service data of teamcenter.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Revision configured variant data for the given product <font face=\"courier\" height=\"10\">context</font> item revision.",
      "isPublished": "false",
      "name": "GetVariantCacheInfoResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::BusinessObjectConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of structures each relating a business object to a set of configuration expressions.",
          "name": "configObjectExpressions"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The Teamcenter service data",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "The response structure for operation <font face=\"courier\" height=\"10\">getVariantExpressions</font>.",
      "isPublished": "false",
      "name": "GetVariantExpressionsResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamilyGroup"
            }
          ],
          "description": "A family group object.",
          "name": "familyGroup"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::FamilyAssociationMap"
            }
          ],
          "description": "The Map of ( <b>Cfg0AbsFamilyGroup</b>, <b>Cfg0AbsAssociation</b>)  having a family group to the corresponding allocation objects for the product item.",
          "name": "familyAndAssociation"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "The structure with the family group and its associated families.",
      "isPublished": "false",
      "name": "GroupAndFamilies",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2016_09::ConfiguratorManagement::AvailableFamilyVariability"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of family variability, each element represents variability of features form a single family",
          "name": "availabilityExpressions"
        }
      ],
      "createRelease": "tc10000.1.7",
      "description": "Represents availability for features for a single model.",
      "isPublished": "false",
      "name": "AvailableFamilyVariabilityStruct",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2016_09::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of group IDs ( <font face=\"courier\" height=\"10\">cfg0object_id</font> ). If specified all groups with matching criteria will be searched and values belongs to all families in searched groups will be used to filter rules. This parameter is mutually exclusive of <font face=\"courier\" height=\"10\">groups</font>.",
          "name": "groupIDs"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamilyGroup"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of groups. If specified values belongs to all families in groups will be used to filter rules. This parameter is mutually exclusive of <font face=\"courier\" height=\"10\">groupIds</font>.",
          "name": "groups"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A filter structure specifying filtering rules for all option values belonging to all families to group.",
      "isPublished": "false",
      "name": "GroupFilters",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamilyGroup"
            }
          ],
          "description": "The Cfg0AbsFamilyGroup object.",
          "name": "familyGroup"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::FamilyInfo"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of  familyGroup&rsquo;s member families with their values. The list of families will not be in any specific order.",
          "name": "families"
        }
      ],
      "createRelease": "tc11000.5.0",
      "description": "The GroupInfo is a structure which represents configured group and the families belong to it.",
      "isPublished": "false",
      "name": "GroupInfo",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Integer type object.",
          "name": "rowIndex"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Integer type object.",
          "name": "columnIndex"
        }
      ],
      "createRelease": "tc11000.5.0",
      "description": "It is structure which represents a pair of integer.",
      "isPublished": "false",
      "name": "MatrixCell",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ApplicationConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of application configuration expression structures for processing.",
          "name": "modelExpressions"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ApplicationConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of expression providing information of the option conditions.",
          "name": "optionConditions"
        }
      ],
      "createRelease": "tc10000.1.3",
      "description": "Structure containing the model expressions and the option variant conditions corresponding to the one input ApplicationConfigExpression.",
      "isPublished": "false",
      "name": "ModelOptionCondStruct",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "This unique ID is used to identify return data elements and partial errors associated with this input structure.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::POM_object"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Reference to a list of <b>POM_Object</b> objects used to create the include or exclude search expression.",
          "name": "objects"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchResultTableColumn"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of additional columns to return in the search result. This search definition uses a predefined result table column for attribute \"puid\" at index 0. This parameter can be used to define additional columns to be returned in the result table for this search table.",
          "name": "resultColumns"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Represents a list of object to by explicitly included in, or explicitly excluded from, the search results.<br />",
      "isPublished": "false",
      "name": "ObjectReferenceInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "This index identifies the input structure for which overlap states are recorded.",
          "name": "index"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Each overlap state value indicates the degree of overlap between the expression at a given index in the corresponding input structure and the reference expression in that input structure.<br />The getDisplayStrings operation in the SessionService can be used to obtain a display value for each of the following overlap state keys:<br /><ul><ul><li type=\"disc\">k_overlapstate_none: The two expressions have no overlap. There is no satisfying solution common to both expressions. A conjunction (AND combination) of the two is unsatisfiable.</li><li type=\"disc\">k_overlapstate_subset: The two expressions overlap. The solution set of the expression is a subset of the solution set of the reference expression. The conjunction (AND combination) of the expression with the negated reference expression is unsatisfiable.</li><li type=\"disc\">k_overlapstate_match: The two expressions are logically equivalent. Every solution that satisfies one expression also satisfies the other, and vice versa.</li><li type=\"disc\">k_overlapstate_superset: The two expressions overlap. The solution set of the expression is a superset of the solution set of the reference expression. The conjunction (AND combination) of the negated expression with the reference expression is unsatisfiable.</li><li type=\"disc\">k_overlapstate_intersect: The two expressions overlap. The solution set of the expression has some overlap with the solution set of the reference expression.</li></ul></ul>",
          "name": "overlapStates"
        }
      ],
      "createRelease": "tc10000.1.3",
      "description": "Contains information about the degree of overlap between a set of configuration expressions and a given reference configuration expression.",
      "isPublished": "false",
      "name": "OverlapStateInfo",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ApplicationConfigExpression"
            }
          ],
          "description": "The reference expression for which the degree of overlap with each of the <i>expressions</i> should be determined.",
          "name": "referenceExpression"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::ApplicationConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of application configuration expressions for which the overlap state with the <i>referenceExpression</i> should be determined.",
          "name": "expressions"
        }
      ],
      "createRelease": "tc10000.1.3",
      "description": "Contains a reference expression and a list of configuration expressions with the intent to determine the degree of overlap between them.",
      "isPublished": "false",
      "name": "OverlapStateInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::OverlapStateInfo"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Contains overlap state information for the expression in each input record.",
          "name": "overlapInfo"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The standard Teamcenter ServiceData structure.",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.3",
      "description": "Returns the degree of overlap between the expressions in each input structure.",
      "isPublished": "false",
      "name": "OverlapStateResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Indicates whether or not to apply defaults. The parameter value is a bit pattern specifying one or more of the following: <br />0 - indicates that defaults should not be applied <br />1 - will enable application of defaults <br />2 - ignore all derived defaults and only process fixed defaults <br />4 - skip derived defaults whose applicability or product model condition is not fully and explicitly satisfied. For example, a default rule 'set W=10 if H=10' is skipped for the input expression 'L=10' because 'L=10' also includes configurations that don't satisfy the applicabliity condition, such as 'L=10 & H=20'.<br />8 - force partially satisfied derived defaults. For example, applying a default rule 'set W=10 if H=10' to an input expression 'L=10' results in 'W=10 & H=10 & L=10'",
          "name": "applyDefaults"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::BusinessObjectConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The expressions for which defaults are requested to be applied.",
          "name": "expressionsToUpdate"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamily"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "This is an optional parameter. If specified, the server returns defaults only for these families. If null, the server returns defaults for all families.",
          "name": "families"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
            }
          ],
          "description": "An <b>Cfg0ConfiguratorPerspective</b> object to provide input data which includes product item(s), product model(s). It may also include configuration information e.g. a revision rule and/or a variant rule.",
          "name": "context"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Input structure for the <font face=\"courier\" height=\"10\">getProductDefaults</font> operation",
      "isPublished": "false",
      "name": "ProductDefaultsInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The default actions to apply. The parameter is a bitwise OR the following values: <br /><ul><ul><li type=\"disc\">0 - Indicates that defaults should not be applied </li><li type=\"disc\">1 - Will enable application of defaults </li><li type=\"disc\">2 - Ignore all derived defaults and only process fixed defaults </li><li type=\"disc\">4 - Skip derived defaults whose applicability or product model condition is not fully and explicitly satisfied. For example, a default rule 'set W=10 if H=10' is skipped for the input expression 'L=10' because 'L=10' also includes configurations that don't satisfy the applicability condition, such as 'L=10 & H=20'.</li><li type=\"disc\">8 - Force partially satisfied derived defaults.</li></ul></ul>",
          "name": "applyDefaults"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::BusinessObjectConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of expressions for which defaults are requested to be applied.",
          "name": "expressionsToUpdate"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamily"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "This is an optional parameter. If specified, the server returns defaults only for these families. If null, the server returns defaults for all families",
          "name": "families"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
            }
          ],
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance to provide the  configurator context(s) and <b>RevisionRule</b>. It may also include configuration information e.g. a variant rule. Expression with Variant Rule is used as additional criteria for validation.",
          "name": "context"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "Input structure for the getProductDefaults operation.",
      "isPublished": "false",
      "name": "ProductDefaultsInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::BusinessObjectConfigExpression"
            }
          ],
          "description": "The input criteria expression for which the available product variability is to be calculated.",
          "name": "criteriaExpression"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamily"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of configuration families of which available values are requested. ",
          "name": "familiesToTest"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
            }
          ],
          "description": "Configurator context details. ",
          "name": "context"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "How to apply the constraints. The action is a bitwise OR the following values: <br />0: disable configurator constraint evaluation <br />1: enable configurator constraint evaluation <br />2: skip constraints if they only reference unset families <br />4: skip constraints that don't reference all configExpression families <br />8: report warnings in addition to errors <br />16: report informational messages <br />32: don't stop if a violation is encountered (use with care) <br />64: treat constraints with warning severity as if they had error severity.<br /><br />1024: skip criteria update based on validation rules (For example configurator exclusion rule). If this flag is not set then the operation will update the variant criteria after applying validation rules.<br /><br />2048: enable Availability Constraint evaluation. <br />",
          "name": "applyConstraints"
        }
      ],
      "createRelease": "tc10000.1.4",
      "description": "It is the object containing input information required to compute the available product variability.",
      "isPublished": "false",
      "name": "AvailableProductVariabilityInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_03::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Operator Code",
          "name": "operatorCode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The ID of the feature object or the feature to use for a free form family.",
          "name": "valueText"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "An elemental expression literal that is used in a value range expression for a given family.<br />Supported operators are (see ):<br /> - PS_variant_operator_not_equal<br /> - PS_variant_operator_gt<br /> - PS_variant_operator_lt<br /> - PS_variant_operator_gt_eq<br /> - PS_variant_operator_lt_eq<br />Operator PS_variant_operator_is_equal is not supported (use ConfigExpressionTerm structures for equality literals).",
      "isPublished": "false",
      "name": "RangeExpression",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The operator code by which the value should be used in variant expression.",
          "name": "operatorCode"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The string value of the feature.",
          "name": "valueText"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsValue"
            }
          ],
          "description": "This is an optional parameter. If specified, the server and client should use it. If null, the server and client should work with valueText. Specifies feature object to be used in an range expression.",
          "name": "feature"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "An elemental expression literal that is used in a value range expression for a given family. <br /><b>Note:</b> Operator PS_variant_operator_is_equal is not supported (use <font face=\"courier\" height=\"10\">ConfigExpressionTerm</font> structures for equality literals).<br />",
      "isPublished": "false",
      "name": "RangeExpression",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Identifies this structure within the scope of an operation. The identifier allows this structure to be referenced from other search definition input strructures in the same operation, e.g. this structure could be referenced from within an enclosing ExpressionGroupInput structure.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of the search result type names. The search will filter out objects that don't match any of the business object types in this list, or their sub types.",
          "name": "searchResultObjectTypes"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchResultTableColumn"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of additional columns to return in the search result. This search definition uses a predefined result table column for attribute \"puid\" at index 0. This parameter can be used to define additional columns to be returned in the result table for this search table.",
          "name": "resultColumns"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchPredicateParameters"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of WHERE clause parameters to filter this ResultType search definition. Adding a WHERE clause can significantly improve the performance, especially when the corresponding database tables are large.",
          "name": "predicateClauseParameters"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Defines a search result filter based on a list of business object types. The search results of the enclosing ConfigExpressionGroup are limited to objects that match one of the given businesses object types, or one of their sub types. Search definitions enclosed in a ConfigExpressionGroup that are constructed from a ResultTypeInput are combined with operation \"Intersection\". ResultTypeInput can also be used to perform a SELECT operation on a list of business object type, or their subtypes tables. As the result could sometimes be very large, user can filter the result by providing a where clause condition. You can refer to the description of SearchPredicateParameters.",
      "isPublished": "false",
      "name": "ResultTypeInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "Identifies this structure within the scope of an operation. The identifier allows this structure to be referenced from other search definition input strructures in the same operation, e.g. this structure could be referenced from within an enclosing ExpressionGroupInput structure.",
          "name": "clientId"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of entry names specified in the saved query for which values are specified in parameter 'values'.",
          "name": "entries"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of values for the specified entries. Wild card characters are supported as documented for the Teamcenter QueryBuilder application.",
          "name": "values"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::ImanQuery"
            }
          ],
          "description": "A saved query object that was created in the Teamcenter QueryBuilder application (or its corresponding APIs).",
          "name": "savedQuery"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchResultTableColumn"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of additional columns to return in the search result. This search definition uses a predefined result table column for attribute \"puid\" at index 0. This parameter can be used to define additional columns to be returned in the result table for this search table.",
          "name": "resultColumns"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Defines a search based on a saved query that was created in the Teamcenter QueryBuilder application.",
      "isPublished": "false",
      "name": "SavedQueryExpressionInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::TraversalExpressionInput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Input structures to define traversal expressions. Teamcenter 10.1.2 does not support traversal expressions.",
          "name": "traversals"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ObjectReferenceInput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of search definitions for objects that explicitly excluded from the search results. Exclude lists are not subject to context filtering according to the product context items and product models in the <font face=\"courier\" height=\"10\">Cfg0ConfiguratorPerspective</font>. Exclude search definitions are always combined with operator \"Difference\", even if they are contained in a \"UnionAll\" group search definition.",
          "name": "excludeObjects"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ObjectReferenceInput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of search definitions for objects that explicitly included to the search results. Include lists are subject to context filtering according to the product context items and product models in the Cfg0ConfiguratorPerspective. Include search definitions that are contained in a \"UnionAll\" group search definition are combined with operator \"UnionAll\", all other include search definitions are combined with operator \"UnionUnique\" even if they are contained in a \"Difference\" group search definition.",
          "name": "includeObjects"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SavedQueryExpressionInput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Input structures to construct search definitions based on saved queries. Each saved query search definitions references a saved query object along with a list of entries and values. Multiple values for a given entry need to be separated according to preference <font face=\"courier\" height=\"10\">WSOM_find_list_separator</font>. The values support the standard Teamcenter saved query wildcards characters.",
          "name": "savedQueries"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ExpressionGroupInput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Input structures for constructing group search definitions. The input for a group search definition may contain references to other group search definitions for as long as the referencee precedes the referencer in this list. Group search definitions can be used to aggregate search criteria for complex searches.",
          "name": "expressionGroups"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ExpressionJoinInput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Input structures for constructing join search definitions. Join search definitions can be used to combine multiple search criteria into a single search expression returning a result table with multiple columns.<br />The input for a join search definition may contain references to other join search definitions for as long as the referencee precedes the referencer in this list.",
          "name": "expressionJoins"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::ResultTypeInput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Input structure to define result type filter definitions. When applied to a search the result will contain only objects that match one of the business object type names listed in the applied <font face=\"courier\" height=\"10\">ResultTypeInput</font>, or one of their sub types.",
          "name": "resultTypes"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Describes the search criteria for the search operation",
      "isPublished": "false",
      "name": "SearchExpressionInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The number of objects to return in the initial batch of search results. The rest of them could be retrieved by calling fetchNextSearchResults. A defaultLoadCount of zero will return all the results found.",
          "name": "defaultLoadCount"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of attribute names of the class being searched based on which the results are sorted. The position of an attribute in this list defines its precedence ranking with respect to sorting. The result is first sorted based on the first attribute in this list.",
          "name": "sortAttributes"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SortOperator"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "order in which results are sorted",
          "name": "sortOrder"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Search options for a given search, such as load count and sort criteria.",
      "isPublished": "false",
      "name": "SearchOptions",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The name of the Column on which the where condition is to be applied.",
          "name": "attribute"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::POM_object"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of Input value objects to be evaluated in the results, this forms the predicate condition.",
          "name": "valueObjects"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The Predicate condition operator. The supported operators for this parameter are:<br /><ul><ul><li type=\"disc\">15000 (POM_enquiry_equal)</li><li type=\"disc\">15005 (POM_enquiry_not_equal)</li><li type=\"disc\">16501 (POM_enquiry_in)</li><li type=\"disc\">16502 (POM_enquiry_not_in)</li></ul></ul><br />The semantics for these values follow the definitions in pom_tokens.h",
          "name": "predicateOperator"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A list of WHERE clause parameters to filter ResultType search definition. Adding a WHERE clause can significantly improve the performance, especially when the corresponding database tables are large.",
      "isPublished": "false",
      "name": "SearchPredicateParameters",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
            }
          ],
          "description": "Defines the scope of the search. Results are filtered based on the parameters defined by the perspective, e.g. revision rule, variant rule, product item(s), and product model(s).",
          "name": "configuratorPerspective"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SettingsMap"
            }
          ],
          "description": "Processing directives, for example parameters to pass on to the configurator for evaluation of variant configuration constraint rules. <br /><br />The settings which are supported  are:<br /><br /><b>Cfg0PerspectiveColumnsToReturn</b>  - List of strings used to specify the column indices of the result table that should be returned back to the client. For example: if the list  contains { \"0\", \"2\" }, only columns at 0th and 2nd index will be returned back to the client. If no value is specified, all columns will be returned.",
          "name": "settings"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchExpressionInput"
            }
          ],
          "description": "Search criteria to be evaluated",
          "name": "searchExpression"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The <font face=\"courier\" height=\"10\">clientId</font> value of the  root search definition structure . The search definitions that are contained in parameter \"<font face=\"courier\" height=\"10\">searchExpression</font>\" are the individual building blocks that aggregate into a single query. The \"<font face=\"courier\" height=\"10\">rootExpressionInputClientId</font>\" parameter identifies which of the search criteria definitions in \"<font face=\"courier\" height=\"10\">searchExpression</font>\" represents the composition of all individual search criteria. For example if \"<font face=\"courier\" height=\"10\">searchExpression</font>\" contained a <font face=\"courier\" height=\"10\">savedQuery</font> \"Q\", an <font face=\"courier\" height=\"10\">includeObject</font> definition \"I\", and an <font face=\"courier\" height=\"10\">expressionGroup</font> \"G\" which combines \"Q\" and \"I\", then the <font face=\"courier\" height=\"10\">rootExpressionInputClientId</font> would be \"G\".",
          "name": "rootExpressionInputClientId"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "description": "Input Object with Variant Expression to be used for filtering the search result. <br />This filter is having 'AND' relation with the searchExpression and it is applied applied on top of searchExpression. <br /> <br />The expresion used for filtering is based on the 'opcode' passed as input in settings.<br />If no Variant Expression is found for the 'opcode' passed as input or the input object is not Variant Configurable then following validation error is thrown:<br />79008 - The search criteria provided in input is invalid.",
          "name": "variantCriteria"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "The recipe for executing a search.",
      "isPublished": "false",
      "name": "SearchRecipe",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "<i>\"Deprecated, use </i><b>rowsDone</b><i> instead\"</i><br />An integer value specifying the number of objects returned so far for executeSearch and fetchNextSearchResults operations.",
          "name": "objectsDone"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "An integer value specifying the number of rows returned so far for executeSearch and fetchNextSearchResults operations.",
          "name": "rowsDone"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "<i>\"Deprecated, use </i><b>estimatedRowsLeft</b><i> instead\"</i><br />An integer value specifying the estimated number of objects that still are potentially results of this search.",
          "name": "estimatedObjectsLeft"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "An integer value specifying the estimated number of rows that still are potentially results of this search.",
          "name": "estimatedRowsLeft"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::POM_object"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of objects returned by the executeSearch or fetchNextSearchResults operation.",
          "name": "foundObjects"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchResultTable"
            }
          ],
          "description": "A table of rows returned by the executeSearch or fetchNextSearchResults operation.",
          "name": "searchResultTable"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0SearchCursor"
            }
          ],
          "description": "Search cursor object that tracks the search results. This object is used to get the next set of results for this executeSearch operation.",
          "name": "searchCursor"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "Service Data for any error information. Typically this will contain errors about any malformed search recipes. <br />Following are some of the error codes that may be populated as partial errors in the ServiceData object(To be added later)<br />",
          "name": "serviceData"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Response SOA Structure for search results",
      "isPublished": "false",
      "name": "SearchResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::TagVectorMap"
            }
          ],
          "description": "A map tying a column header to a vector of objects. The column header corresponds to the \"<font face=\"courier\" height=\"10\">alias</font>\" field that was specified in the <font face=\"courier\" height=\"10\">SearchResultTableColumn</font> definition in the <font face=\"courier\" height=\"10\">SearchExpressionInput</font> that produced this result column. If no <font face=\"courier\" height=\"10\">alias</font> name was assigned a system generated column header like \"column__0\" will be used.",
          "name": "objectColumns"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::StringVectorMap"
            }
          ],
          "description": "A map tying a column header to a vector of string values. The column header corresponds to the \"<font face=\"courier\" height=\"10\">alias</font>\" field that was specified in the <font face=\"courier\" height=\"10\">SearchResultTableColumn</font> definition in the<font face=\"courier\" height=\"10\"> </font><font face=\"courier\" height=\"10\">SearchExpressionInput</font> that produced this result column. If no alias name was assigned a system generated column header like \"column__0\" will be used.",
          "name": "stringColumns"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::IntVectorMap"
            }
          ],
          "description": "A map tying a column header to a vector of integer values. The column header corresponds to the \"<font face=\"courier\" height=\"10\">alias</font>\" field that was specified in the <font face=\"courier\" height=\"10\">SearchResultTableColumn</font> definition in the <font face=\"courier\" height=\"10\">SearchExpressionInput</font> that produced this result column. If no alias name was assigned a system generated column header like \"column__0\" will be used.",
          "name": "intColumns"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::DoubleVectorMap"
            }
          ],
          "description": "A map tying a column header to a vector of double precision floating point values. The column header corresponds to the \"<font face=\"courier\" height=\"10\">alias</font>\" field that was specified in the <font face=\"courier\" height=\"10\">SearchResultTableColumn</font> definition in the <font face=\"courier\" height=\"10\">SearchExpressionInput</font> that produced this result column. If no alias name was assigned a system generated column header like \"column__0\" will be used.",
          "name": "doubleColumns"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::BoolVectorMap"
            }
          ],
          "description": "A map tying a column header to a vector of Boolean values. The column header corresponds to the \"<font face=\"courier\" height=\"10\">alias</font>\" field that was specified in the <font face=\"courier\" height=\"10\">SearchResultTableColumn</font> definition in the <font face=\"courier\" height=\"10\">SearchExpressionInput</font> that produced this result column. If no alias name was assigned a system generated column header like \"column__0\" will be used.",
          "name": "logicalColumns"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::DateVectorMap"
            }
          ],
          "description": "A map tying a column header to a vector of date values. The column header corresponds to the \"<font face=\"courier\" height=\"10\">alias</font>\" field that was specified in the <font face=\"courier\" height=\"10\">SearchResultTableColumn</font> definition in the <font face=\"courier\" height=\"10\">SearchExpressionInput</font> that produced this result column. If no alias name was assigned a system generated column header like \"column__0\" will be used.",
          "name": "dateColumns"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Represents a set of search result records. Each result column is return in the member that corresponds to the data type for this column. For example, a search that produced a result table comprising an object column, a string column, and another object column will return the two object columns in member \"<font face=\"courier\" height=\"10\">objectColumns</font>\" as <font face=\"courier\" height=\"10\">objectColumns</font><font face=\"courier\" height=\"10\">[\"column__</font><font face=\"courier\" height=\"10\">0</font><font face=\"courier\" height=\"10\">\"]</font> and <font face=\"courier\" height=\"10\">objectColumns</font><font face=\"courier\" height=\"10\">[\"column__</font><font face=\"courier\" height=\"10\">2</font><font face=\"courier\" height=\"10\">\"]</font>, while the string value column will be returned in member \"<font face=\"courier\" height=\"10\">stringColumns</font>\" as <font face=\"courier\" height=\"10\">stringColumns</font><font face=\"courier\" height=\"10\">[\"column__</font><font face=\"courier\" height=\"10\">1</font><font face=\"courier\" height=\"10\">\"]</font>.",
      "isPublished": "false",
      "name": "SearchResultTable",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::BusinessObjectConfigExpression"
            }
          ],
          "description": "The input criteria expression for which the available product variability is to be calculated.",
          "name": "criteriaExpression"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamily"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of configuration families of which available features are requested.",
          "name": "familiesToTest"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
            }
          ],
          "description": "Configurator context details.",
          "name": "context"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "How to apply the constraints. The action is a bitwise OR the following values: &lt;br /&gt;0: disable configurator constraint evaluation &lt;br /&gt;1: enable configurator constraint evaluation &lt;br /&gt;2: skip constraints if they only reference unset families &lt;br /&gt;4: skip constraints that don&apos;t reference all configExpression families &lt;br /&gt;8: report warnings in addition to errors &lt;br /&gt;16: report informational messages &lt;br /&gt;32: don&apos;t stop if a violation is encountered (use with care) &lt;br /&gt;64: treat constraints with warning severity as if they had error severity.&lt;br /&gt;&lt;br /&gt;1024: skip criteria update based on validation rules (For example configurator exclusion rule). If this flag is not set then the operation will update the variant criteria after applying validation rules.&lt;br /&gt;&lt;br /&gt;2048: enable Availability Constraint evaluation. &lt;br /&gt;",
          "name": "applyConstraints"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "It is the object containing input information required to compute the available product variability.",
      "isPublished": "false",
      "name": "AvailableProductVariabilityInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The index of the column in the search result table. Some search definitions use a predefined column for attribute \"puid\" at index 0. For these search definitions the index should be >= 1.",
          "name": "index"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The name of the POM attribute to return in this column of the search result table.",
          "name": "attribute"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The alias name of the search result table column. A NULL value indicates that no alias name is assigned.",
          "name": "alias"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The data type of the search result table column. The value must match a POM type token between POM_MIN_type_token and POM_MAX_type_token defined in <pom/pom/pom_tokens.h>.",
          "name": "dataType"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Defines a column to be returned in the search result table for this search definition. Some search definitions use a predefined column for attribute \"puid\" at index 0.",
      "isPublished": "false",
      "name": "SearchResultTableColumn",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::BusinessObjectConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of business objects and corrosponding expressions.",
          "name": "businessObjectExpressions"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::RevisionRule"
            }
          ],
          "description": "The revision rule to use to retrieve the correct revisions of the option data referenced by the expressions.",
          "name": "revisionRule"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "bool"
            }
          ],
          "description": "The flag which indicates if the configuration expressions should be saved on the target objects or set as transient configuration expressions. If an transient configuration expression is create, then user need to save the target object explicitly.",
          "name": "saveExpressions"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "<font face=\"courier\" height=\"10\">SetVariantExpressionInput</font> represents a single transaction and partial error boundary for setting expressions on a list of target business objects.",
      "isPublished": "false",
      "name": "SetVariantExpressionInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "This unique ID is used to identify return data elements and partial errors associated with this input structure.",
          "name": "clientID"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::TransferOptionSet"
            }
          ],
          "description": "Defines the traversal to apply as a post process after executing a search query. The specified <b>TransferOptionSet</b> object contains to reference a <b>TransferMode</b> object along with the list of defined parameters for this transfer mode. The selected transfer mode contains a reference to the traversal rule (<b>ClosureRule</b>) to be used along with the definition of the output format, and the filters to apply.",
          "name": "transferOptionsSet"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of the names of the parameters for which a value is provided. The list of available names depends on the TransferOptionSet that is specified in parameter.",
          "name": "optionNames"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Specifies the values of the provided parameters. <b>TransferOptionSet</b> objects represent a parameterized transfer mode. The list of valid values depends on the specific transfer mode that is selected by the option set given in parameter transferOptionsSet.",
          "name": "optionValues"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::SearchResultTableColumn"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "A list of additional columns to return in the search result. This search definition uses a predefined result table column for attribute \"puid\" at index 0. This parameter can be used to define additional columns to be returned in the result table for this search table.",
          "name": "resultColumns"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Defines search criteria based on a <b>TransferOptionSet</b> along with a set of configuration parameters available for this <b>TransferOptionSet</b>. Search criteria defined by a <font face=\"courier\" height=\"10\">TraversalExpressionInput</font> structure specify how the search results should be post processed. The given <b>TransferOptionSet</b> references a <b>TransferMode</b> and <b>ClosureRule</b> to traverse to objects that are related to the search results. <b>TransferOptionSet</b> search definitions are not supported in Teamcenter 10.1.2.",
      "isPublished": "false",
      "name": "TraversalExpressionInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsAdmissibility"
            }
          ],
          "description": "The admissibility Cfg0AbsAdmissibility object to be updated.",
          "name": "admissibilityObject"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The new admissibility state to be updated. The admissibility state is driven by LOV Cfg0AdmissibilityState.",
          "name": "admissibilityState"
        }
      ],
      "createRelease": "tc10000.1.3",
      "description": "The admissibility data to be updated.",
      "isPublished": "false",
      "name": "UpdateAdmissibilityData",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::UpdateAdmissibilityInputStruct"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of admissibility input to be updated.",
          "name": "updateAdmissibilityInputs"
        }
      ],
      "createRelease": "tc10000.1.3",
      "description": "List of update admissibility input.",
      "isPublished": "false",
      "name": "UpdateAdmissibilityInputList",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::POM_object"
            }
          ],
          "description": "The context business object (POM_object) for which admissibility data to be updated.",
          "name": "contextObject"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement::UpdateAdmissibilityData"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The list of admissibility data corresponding to one context object.",
          "name": "updateAdmissibilityData"
        }
      ],
      "createRelease": "tc10000.1.3",
      "description": "The input structure for the operation updateAdmissibility corresponding to one context object.",
      "isPublished": "false",
      "name": "UpdateAdmissibilityInputStruct",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_12::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            }
          ],
          "description": "The status of the configuration. <br />Valid values are: validAndComplete, validAndInComplete or inValid. <br />validAndComplete: All mandatory families in configuration have value selections. <br />validAndInComplete: Not all mandatory families in configuration have value selections. <br />inValid: There are some violations .",
          "name": "criteriaStatus"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::ViolationList"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "List of conflicts that was identified for a given cell in the validation matrix. A conflict is represented by a list of constraint rule violations",
          "name": "conflicts"
        }
      ],
      "createRelease": "tc11000.5.0",
      "description": "Validation operation output information.",
      "isPublished": "false",
      "name": "ValidateProductConditionOutptStruct",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Soa::Server::ServiceData"
            }
          ],
          "description": "The service data for errors and returned objects.",
          "name": "serviceData"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement::CellValidationResult"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "Validation operation output information along with identifiers of input Expressions for input and output correlation.",
          "name": "validationResults"
        }
      ],
      "createRelease": "tc11000.5.0",
      "description": "The response structure for the operation validateProductConditions.",
      "isPublished": "false",
      "name": "ValidateProductConditionResponse",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2018_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "Indicates whether or not to apply the constraints. The parameter value is a bit pattern specifying the requested operation. A parameter value of 25 reports warnings and informational messages in addition to errors : <br />Apply constraints | Report Warnings | Report Info = 1+8+16 = 25 <br />0 - indicates constraint application is not required <br />1 - apply configuration constraints <br />2 - skip constraints if they only reference unset families <br />4 - skip constraints that don't reference all configExpression families <br />8 - report warnings in addition to errors <br />16 - also report informational messages <br />32 - continue Validation On Error <br />64 - treat constraints with warning severity as if they had error severity<br />128 - skip all variability checks which could raise a \"k_variant_criteria_outside\" validation failure<br />256 - skip the check against allocated variability which could raise a \"k_variant_criteria_outside\" validation failure<br />1024 - skip criteria update based on validation rules ( e.g. Exclude rule ). If this flag is not set it will update the criteria after applying validation rules<br />2048 - enable Availability Constraint evaluation",
          "name": "applyConstraints"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::BusinessObjectConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The expressions to be validated.",
          "name": "expressionsToValidate"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
            }
          ],
          "description": "A runtime object to provide input data which include product item(s), product model(s). It also include configuration information e.g. revision rule and or variant rule.",
          "name": "context"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Input structure for the <font face=\"courier\" height=\"10\">validateProductConfiguration</font> SOA",
      "isPublished": "false",
      "name": "ValidateProductConfigInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "StructElement": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "int"
            }
          ],
          "description": "The constraint rules application. The parameter is a bitwise OR of the following values: <br /><ul><ul><li type=\"disc\">0: disable configurator constraint evaluation </li><li type=\"disc\">1: enable configurator constraint evaluation </li><li type=\"disc\">2: skip constraints if they only reference unset families </li><li type=\"disc\">4: skip constraints that don't reference all Expression families </li><li type=\"disc\">8: report warnings in addition to errors </li><li type=\"disc\">16: report informational messages </li><li type=\"disc\">32: Continue even if a violation is encountered </li><li type=\"disc\">64: treat constraints with warning severity as if they had error severity.</li><li type=\"disc\">1024: skip criteria update based on validation rules (For example configurator exclusion rule). If this flag is not set then the operation will update the variant criteria after applying validation rules.</li><li type=\"disc\">2048: enable Availability Constraint evaluation.</li></ul></ul>",
          "name": "applyConstraints"
        },
        {
          "DataTypeRefParam": [
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement::BusinessObjectConfigExpression"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "description": "The input criteria expression for which the validation is requested.",
          "name": "expressionsToValidate"
        },
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0ConfiguratorPerspective"
            }
          ],
          "description": "The <b>Cfg0ConfiguratorPerspective</b> instance which provides the <b>RevisionRule</b> and the configurator context.",
          "name": "context"
        }
      ],
      "createRelease": "tc10000.1.5",
      "description": "It is structure containing input information required to validate product configuration.",
      "isPublished": "false",
      "name": "ValidateProductConfigInput",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2015_10::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    }
  ],
  "TcVersion": "tc13000.0.0",
  "Typedef": [
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "bool"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map of bool property names to values <font face=\"courier\" height=\"10\">(string, bool</font>).",
      "isPublished": "false",
      "name": "BoolMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "bool"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map of bool array property names to values (<font face=\"courier\" height=\"10\">string, vector< bool ></font>).",
      "isPublished": "false",
      "name": "BoolVectorMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsOptionFamily"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsAssociation"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A map of family and its association with product item and model. Association object representing the family in the context of the product item or model.  If a product item has been specified, then an allocation object is included.  If a product model has been specified, then an availability object is included.",
      "isPublished": "false",
      "name": "FamilyAssociationMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::DeclaredFamily"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A map comprising of fully qualified name of a family as a key and its contents - name, data type and other attributes.",
      "isPublished": "false",
      "name": "FamilyHash",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::DeclaredFamily"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A map comprising of name of a family as a key and its contents - name, data type and other attributes.",
      "isPublished": "false",
      "name": "FamilyNameHash",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "float"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map of float property names to values (<font face=\"courier\" height=\"10\">string</font>, <font face=\"courier\" height=\"10\">float</font>).",
      "isPublished": "false",
      "name": "FloatMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "float"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map of float array property names to values (<font face=\"courier\" height=\"10\">string</font>, <font face=\"courier\" height=\"10\">vector</font>).",
      "isPublished": "false",
      "name": "FloatVectorMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsFamilyGroup"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsAllocation"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A map which contains all allocation records for a group in product model.",
      "isPublished": "false",
      "name": "GroupAllocationMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "int"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map of ineteger property names to values (<font face=\"courier\" height=\"10\">string</font>, <font face=\"courier\" height=\"10\">int</font>).",
      "isPublished": "false",
      "name": "IntMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "int"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map of integer array property names to values (<font face=\"courier\" height=\"10\">string</font>, <font face=\"courier\" height=\"10\">vector</font>).",
      "isPublished": "false",
      "name": "IntVectorMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "int"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc11000.4.0",
      "description": "Map of String to List of Integer values.",
      "isPublished": "false",
      "name": "IntVectorMap2",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc11000.4.0",
      "description": "Map of String to List of BO values.",
      "isPublished": "false",
      "name": "ObjectVectorMap2",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "std::vector<bool>"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc11000.4.0",
      "description": "Map of String to List of Boolean values.",
      "isPublished": "false",
      "name": "BoolVectorMap2",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Maps processing directive names to their values, or value list",
      "isPublished": "false",
      "name": "SettingsMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "std::string"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map of Strings",
      "isPublished": "false",
      "name": "StringMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::VariantOption"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map between family and variant option",
      "isPublished": "false",
      "name": "StringVariantOptionMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map of string array property names to values (<font face=\"courier\" height=\"10\">string, vector<string></font>).",
      "isPublished": "false",
      "name": "StringVectorMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "std::string"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc11000.4.0",
      "description": "Map of String to List of String values.",
      "isPublished": "false",
      "name": "StringVectorMap2",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "Teamcenter::BusinessObject"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map of <b>BusinessObject</b> property names to values (<font face=\"courier\" height=\"10\">string, BusinessObject</font>).",
      "isPublished": "false",
      "name": "TagMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::BusinessObject"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map of <b>BusinessObject</b> array property names to values (<font face=\"courier\" height=\"10\">string, vector<BusinessObject></font>).",
      "isPublished": "false",
      "name": "TagVectorMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsOptionValue"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::Cfg0configurator::Cfg0AbsAssociation"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "A map of values and its corresponding association with product item or model. Association object representing the feature in the context of the product item or model.  If a product item has been specified, then an allocation object is included.  If a product model has been specified, then an availability object is included.",
      "isPublished": "false",
      "name": "ValueAssociationMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement::CreateInput"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map of reference or relation property name to secondary <font face=\"courier\" height=\"10\">CreateInput</font> objects (<font face=\"courier\" height=\"10\">string, vector<CreateInput></font>).",
      "isPublished": "false",
      "name": "CreateInputMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "Teamcenter::DateTime"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map of date property names to values (<font face=\"courier\" height=\"10\">string, date</font>).",
      "isPublished": "false",
      "name": "DateMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::DateTime"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map of DateTime array property names to values (<font face=\"courier\" height=\"10\">string, vector<DateTime></font>).",
      "isPublished": "false",
      "name": "DateVectorMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "Teamcenter::DateTime"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc11000.4.0",
      "description": "Map of String to List of DateTime values.",
      "isPublished": "false",
      "name": "DateVectorMap2",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "dataType": "double"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map of  double property names to values (string, float).",
      "isPublished": "false",
      "name": "DoubleMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "double"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc10000.1.2",
      "description": "Map of double array property names to values (string, vector).",
      "isPublished": "false",
      "name": "DoubleVectorMap",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2014_06::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    },
    {
      "DataTypeRefParam": [
        {
          "DataTypeRefParam": [
            {
              "dataType": "std::string"
            },
            {
              "DataTypeRefParam": [
                {
                  "dataType": "double"
                }
              ],
              "dataType": "std::vector"
            }
          ],
          "dataType": "std::map"
        }
      ],
      "createRelease": "tc11000.4.0",
      "description": "Map of String to List of Double values.",
      "isPublished": "false",
      "name": "DoubleVectorMap2",
      "namespace": "Cfg0::Soa::Internal::Configurator::_2017_11::ConfiguratorManagement",
      "scope": "Cfg0::Soa::Configurator::ConfiguratorManagement"
    }
  ],
  "xmlns": "http://teamcenter.com/BusinessModel/TcBusinessData"
}