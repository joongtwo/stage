{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-include.directive",
        "js/aw-flex-row.directive",
        "js/aw-data-navigator.directive",
        "js/aw-panel-body.directive",
        "js/exist-when.directive",
        "js/aw-flex-column.directive",
        "js/aw-navigate-breadcrumb.directive",
        "js/aw-model-icon.directive"


    ],
    "actions": {
        "initializeMergeChangesPanel": {
            "actionType": "JSFunction",
            "method": "initializeOccmgmtSublocation",
            "inputData": {
                "data": "{{data}}",
                "subPanelContext": "{{props.subPanelContext}}"
            },
            "outputData": {
                "contextKey": "contextKey"
            },
            "deps": "js/occmgmtSublocationService",
            "events": {
                "success": [
                    {
                        "name": "mergeUpdateState"
                    }
                ]
            }
        },
        
        "updateStateForMerge": {
            "actionType": "JSFunction",
            "method": "updateState",
            "inputData": {
                "contextKey": "{{data.contextKey}}",
                "subPanelContext": "{{props.subPanelContext}}"
            },
            "deps": "js/occmgmtSublocationService"
        },
        "cleanupMergeChangesPanel": {
            "actionType": "JSFunction",
            "method": "destroyOccmgmtSublocation",
            "inputData": {
                "data": "{{data}}",
                "subPanelContext": "{{props.subPanelContext}}"
            },
            "deps": "js/occmgmtSublocationService"
        },
        "updateStartFreshNavigation": {
            "actionType": "JSFunction",
            "method": "updateValueOnCtxOrState",
            "deps": "js/occmgmtUtils",
            "inputData": {
                "path": "",
                "value": {
                    "transientRequestPref": {
                        "jitterFreePropLoad": true,
                        "useProductIndex": false,
                        "startFreshNavigation": true
                    },
                    "pwaReset": true
                },
                "target": "{{props.subPanelContext.occContext}}"

            }
        }
    
    },
    "onEvent": [ {
        "eventId": "updateStartFreshNavigation",
        "action": "updateStartFreshNavigation"
        
    },{
        "eventId": "updateStateForMerge",
        "action": "updateStateForMerge"
    } ,
    {
        "eventId": "locationChangeSuccess",
        "action": "updateStateForMerge",
        "condition": "conditions.isNotSplitView"
    }],
    "dataProviders": {

    },

    "lifecycleHooks": {
        "onMount": "initializeMergeChangesPanel",
        "onUnmount": "cleanupMergeChangesPanel"
    },

    "data": {
        "contextInfo":{}

    },
    "props": {
       
        "sub-panel-context":{
            "type":"object"
        },
        "base-selection": {
            "type": "object"
        }
    },

    "i18n":
    {

    },
    "conditions": {
        "isNotSplitView": {
            "expression": "!ctx.splitView"
        }
    }
}
