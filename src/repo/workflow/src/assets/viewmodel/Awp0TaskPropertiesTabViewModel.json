{
    "schemaVersion":"1.0.0",
    "imports":
    [
        "js/visible-when.directive",
        "js/aw-panel-body.directive",
        "js/aw-widget.directive",
        "js/aw-column.directive",
        "js/aw-checkbox.directive",
        "js/aw-panel-section.directive",
        "js/exist-when.directive",
        "js/aw-listbox.directive",
        "js/aw-radiobutton.directive"
    ],

    "actions":
    {
        "reveal": {
            "actionType": "TcSoaService",
            "serviceName": "Core-2006-03-DataManagement",
            "method": "getProperties",
            "inputData": {
                "objects": [
                    "{{props.subPanelContext.workflowDgmState.selectedObject}}"
                ],
                "attributes": [
                    "template_name",
                    "object_desc",
                    "fnd0Instructions",
                    "fnd0FilterCondition",
                    "fnd0InteractiveTask"
                ]
            },
            "policy": {
                "types": [ {
                        "name": "EPMTaskTemplate",
                        "properties": [
                            {
                                "name": "template_name"
                            },
                            {
                                "name": "object_desc"
                            },
                            {
                                "name": "task_type"
                            },
                            {
                                "name": "object_type"
                            },
                            {
                                "name": "fnd0Instructions"
                            },
                            {
                                "name": "fnd0ExecuteAsync"
                            },
                            {
                                "name": "fnd0RequireCompleteConfirm"
                            },
                            {
                                "name": "show_in_process_stage_list"
                            },
                            {
                                "name": "fnd0FilterCondition"
                            },
                            {
                                "name": "fnd0StoreParticipantsOnJob"
                            },
                            {
                                "name": "fnd0DecisionSetLOV"
                            },
                            {
                                "name": "fnd0AsyncPriority"
                            },
                            {
                                "name": "action_handlers",
                                "modifiers":
                                [
                                    {
                                        "name": "withProperties",
                                        "Value": "true"
                                    }
                                ]
                             }

                        ]
                    },
                    {
                        "name": "ListOfValuesString",
                        "properties":
                        [
                           {
                              "name": "lov_values"
                           },
                           {
                              "name": "lov_value_descriptions"
                           }
                        ]
                    },
                    {
                        "name": "EPMConditionTaskTemplate",
                        "properties":
                        [
                           {
                              "name": "action_handlers",
                              "modifiers":
                              [
                                  {
                                      "name": "withProperties",
                                      "Value": "true"
                                  }
                              ]
                           }
                        ]
                    },
                    {
                        "name": "EPMAddStatusTaskTemplate",
                        "properties":
                        [
                           {
                              "name": "action_handlers",
                              "modifiers":
                              [
                                  {
                                      "name": "withProperties",
                                      "Value": "true"
                                  }
                              ]
                           }
                        ]
                    },
                    {
                        "name": "EPMHandler",
                        "properties":
                        [
                           {
                              "name": "arguments"
                           }
                        ]
                    }
                ]
            },
            "outputData":
            {
                "epmCreateStatusHandler" : "{{function:getEPMCreateStatusHandler}}"
            },
            "events":
            {
                "success":
                [
                    {
                        "name": "loadPreferenceForSelectedTemplate"
                    },
                    {
                        "name": "epmTaskTemplate.loadFilterConditions"
                    },
                    {
                        "name": "epmTaskTemplate.loadDecisions"
                    },
                    {
                        "name": "epmTaskTemplate.loadSavedQueries"
                    },
                    {
                        "name": "epmTaskTemplate.loadReleaseStatusList"
                    },
                    {
                        "name": "epmTaskTemplate.propertiesLoaded"
                    }
                ]
            },
            "deps": "js/Awp0TemplateProperties"
        },
        "populatePanelData": {
            "actionType": "JSFunction",
            "method": "populatePanelData",
            "inputData":
            {
                "data": "{{data}}",
                "selection": "{{props.subPanelContext.workflowDgmState.selectedObject}}",
                "ctx" : "{{ctx}}"

            },
            "outputData":
            {
                "vmo":"vmo",
                "allowedDefaultObjectTypes":"allowedDefaultObjectTypes",
                "isPanelEditable":"isPanelEditable",
                "showInProcessStage":"showInProcessStage",
                "processBackground":"processBackground",
                "requireTaskConfirmation":"requireTaskConfirmation",
                "selectWorkflowParticipant":"selectWorkflowParticipant",
                "filterCondition":"filterCondition",
                "decisionLabels":"decisionLabels",
                "asyncPriority":"asyncPriority",
                "queryScope":"queryScope",
                "queryAganist":"queryAganist",
                "savedQueries":"savedQueries",
                "savedConditions":"savedConditions",
                "queryCondition":"queryCondition",
                "includeRepliaceTarget":"includeRepliaceTarget",
                "currentQuery":"currentQuery",
                "currentCondition":"currentCondition",
                "releaseStatus":"releaseStatus",
                "createStatusHandler":"createStatusHandler",
                "templateDesc":"templateDesc",
                "templateName":"templateName",
                "setConditionHandler":"setConditionHandler",
                "setDurationHandler":"setDurationHandler",
                "taskExecutedBy": "taskExecutedBy"
            },
            "deps": "js/Awp0TemplateProperties"
        },
        "queryOptionSelected" : {
            "actionType": "JSFunction",
            "method": "queryOptionSelected",
            "inputData":
            {
                "data": "{{data}}"
            },
            "deps": "js/Awp0TemplateProperties"
        },
        "loadFilterConditions": {
            "actionType": "TcSoaService",
            "serviceName": "Core-2013-05-LOV",
            "method": "getInitialLOVValues",
            "inputData": {
                "initialData": {
                    "propertyName": "fnd0FilterCondition",
                    "lovInput": {
                        "owningObject":  {
                            "type": "{{props.subPanelContext.selected.type}}",
                            "uid": "{{props.subPanelContext.selected.uid}}"
                        },
                        "operationName": "Edit",
                        "boName": "EPMTaskTemplate",
                        "propertyValues" : {
                        }
                    },
                    "filterData":
                     {
                        "filterString":"",
                        "maxResults":0,
                        "numberToReturn":2000,
                        "sortPropertyName":"",
                        "order":1
                     }
                }
            },
            "outputData": {
                "filterConditionList": "{{function:getFilterConditionLOVList}}",
                "moreValuesExist": "moreValuesExist"
            },
            "deps": "js/Awp0TemplateProperties"
        },
        "loadSavedAsyncPriorities": {
            "actionType": "TcSoaService",
            "serviceName": "Core-2013-05-LOV",
            "method": "getInitialLOVValues",
            "inputData": {
                "initialData": {
                    "propertyName": "fnd0AsyncPriority",
                    "lovInput": {
                        "owningObject":  {
                            "type": "{{props.subPanelContext.selected.type}}",
                            "uid": "{{props.subPanelContext.selected.uid}}"
                        },
                        "operationName": "Edit",
                        "boName":  "EPMTaskTemplate",
                        "propertyValues" : {
                        }
                    },
                    "filterData":
                     {
                        "filterString":"",
                        "maxResults":0,
                        "numberToReturn":2000,
                        "sortPropertyName":"",
                        "order":1
                     }
                }
            },
            "outputData": {
                "asyncPriorityList": "{{function:getAsyncPriorityLOVList}}"
            },
            "deps": "js/Awp0TemplateProperties"
        },
        "loadReleaseStatusList" : {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2012-10-Finder",
            "method": "findObjectsByClassAndAttributes2",
            "inputData":
            {
                "input":
                {
                    "clientId": "GWT_THIN_CLIENT",
                    "startIndex": 0,
                    "maxLoad": 2000,
                    "maxToReturn": 2000,
                    "searchCriteria":
                    [
                        {
                            "className": "TaskType",
                            "searchAttributes":
                            {
                                "tasktype_name": "*"
                            }
                        }
                    ],

                    "searchMode": "GeneralQuery",
                    "uids":
                    [

                    ],

                    "attributes":
                    [

                    ]
                }
            },
            "policy": {
                "types": [ {
                    "name": "ImanType",
                    "properties": [
                        { "name": "type_name" }
                    ]
                } ]
            },

            "outputData":
            {
                "releaseStatusList": "{{function:getReleaseStatusList}}"
            },
            "events":
            {
                "success":
                [

                    {
                        "name": "epmAddStatusTaskTemplate.updatePanel"
                    }
                ]
            },
            "deps": "js/Awp0TemplateProperties"
        },
        "loadSavedQueries": {
            "actionType": "TcSoaService",
            "serviceName": "Core-2013-05-LOV",
            "method": "getInitialLOVValues",
            "inputData": {
                "initialData": {
                    "propertyName": "awp0AdvancedQueryName",
                    "lovInput": {
                        "owningObject":  {
                            "type": "Awp0AdvancedSearchInput",
                            "uid": "AAAAAAAAAAAAAA"
                        },
                        "operationName": "Specialedit",
                        "boName": "Awp0AdvancedSearchInput",
                        "propertyValues" : {
                        }
                    },
                    "filterData":
                     {
                        "filterString":"",
                        "maxResults":0,
                        "numberToReturn":2000,
                        "sortPropertyName":"",
                        "order":1
                     }
                }
            },
            "outputData": {
                "savedQueriesList": "{{function:getSavedQueryLOVList}}",
                "moreQueryValuesExist": "moreValuesExist"
            },
            "events":
            {
                "success":
                [

                    {
                        "name": "epmConditionTaskTemplate.updatePanel"
                    }
                ]
            },
            "deps": "js/Awp0TemplateProperties"
        },
        "loadSavedConditions": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2019-06-Finder",
            "method": "performSearchViewModel4",
            "inputData": {
                "columnConfigInput": {
                    "clientName": "AWClient",
                    "clientScopeURI": ""
                },
                "searchInput": {
                    "maxToLoad": 50,
                    "maxToReturn": 50,
                    "startIndex": "{{data.dataProviders.getSavedConditions.startIndex}}",
                    "providerName": "Awp0ResourceProvider",
                    "searchCriteria": {
                        "searchString": "{{data.savedConditions.uiValue}}",
                        "resourceProviderContentType": "Condition"
                    }
                },
                "searchFilterFieldSortType": "Alphabetical",
                "inflateProperties": true
            },
            "outputData": {
                "objectTypeSearchResults": "{{function:getConditionLOVListValues}}",
                "totalFound": "totalFound",
                "totalLoaded": "totalLoaded",
                "moreValuesExist": "moreValuesExist"
             },
              "deps": "js/Awp0TemplateProperties"
        },
        "loadDecisions": {
            "actionType": "TcSoaService",
            "serviceName": "Core-2013-05-LOV",
            "method": "getInitialLOVValues",
            "inputData": {
                "initialData": {
                    "propertyName": "fnd0DecisionSetLOV",
                    "lovInput": {
                        "owningObject":  {
                            "type": "{{props.subPanelContext.workflowDgmState.selectedObject.type}}",
                            "uid": "{{props.subPanelContext.workflowDgmState.selectedObject.uid}}"
                        },
                        "operationName": "Edit",
                        "boName": "{{props.subPanelContext.workflowDgmState.selectedObject.type}}",
                        "propertyValues" : {
                        }
                    },
                    "filterData":
                     {
                        "filterString":"",
                        "maxResults":0,
                        "numberToReturn":2000,
                        "sortPropertyName":"",
                        "order":1
                     }
                }
            },
            "outputData": {
                "decisionLabelList": "{{function:getLOVList}}",
                "moreValuesExist": "moreValuesExist"
            },
            "deps": "js/Awp0TemplateProperties"
        },
        "saveEditsTemplateAction": {
            "actionType": "JSFunction",
            "method": "saveTemplateProperties",
            "inputData":
            {
                "refreshPanel": true,
                "data":"{{data}}"
            },
            "deps": "js/Awp0TemplatePropertiesEditService"
        },
        "updateOnTaskTemplateDelete": {
            "actionType": "JSFunction",
            "method": "updateOnTaskTemplateDelete",
            "inputData":
            {
            },
            "deps": "js/Awp0TemplateProperties"
        },
        "updatePropertiesOnObjectChanged": {
            "actionType": "JSFunction",
            "method": "updatePropertiesOnObjectChanged",
            "inputData":
            {
                "modifiedObjects": "{{data.eventMap['cdm.updated'].updatedObjects}}",
                "selectedObject": "{{props.subPanelContext.workflowDgmState.selectedObject}}",
                "data": "{{data}}"
            },
            "deps": "js/Awp0TemplateProperties"
        },
        "loadTaskTemplateTypes": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2016-03-Finder",
            "method": "performSearch",
            "inputData":
            {
                "searchInput":
                {
                    "maxToLoad": 2000,
                    "maxToReturn": 2000,
                    "providerName": "Awp0TypeSearchProvider",
                    "searchCriteria":
                    {
                        "searchString": "",
                        "listOfIncludeObjectTypes": "EPMTaskTemplate",
                        "loadSubTypes": "true",
                        "typeSelectorId": ""
                    },
                    "attributesToInflate": [ "type_name", "object_string"],
                    "startIndex": 0
                }
            },
            "policy": {
                "types": [ {
                    "name": "ImanType",
                    "properties": [
                        { "name": "type_name" },
                        { "name": "fnd0InternalName" },
                        { "name": "object_string" }
                    ]
                } ]
            },
            "outputData":
            {
                "taskTemplateObjectTypes": "{{function:getTaskTemplateObjectTypeList}}"
            },
            "events":
            {
                "success":
                [
                    {
                        "name": "taskProperties.taskTypesLoaded"
                    }
                ]
            },
            "deps": "js/Awp0CreateWorkflowTemplate"
        },
        "loadValidTaskTemplateTypes": {
            "actionType": "JSFunction",
            "method": "loadValidTaskTemplateTypes",
            "inputData":
            {
                "data": "{{data}}",
                "selectedObject": "{{props.subPanelContext.workflowDgmState.selectedObject}}"
            },
            "deps": "js/Awp0TemplateProperties"
        },
        "updateDataSource": {
            "actionType": "JSFunction",
            "method": "addHtmlPanelPropertiesInDataSource",
            "inputData": {
                "updatedProperties": [
                        "{{data.filterCondition}}",
                        "{{data.allowedDefaultObjectTypes}}",
                        "{{data.decisionLabels}}",
                        "{{data.taskDuration}}",
                        "{{data.templateName}}",
                        "{{data.templateDesc}}",
                        "{{data.processBackground}}",
                        "{{data.requireTaskConfirmation}}",
                        "{{data.selectWorkflowParticipant}}",
                        "{{data.showInProcessStage}}",
                        "{{data.releaseStatus}}",
                        "{{data.currentQuery}}",
                        "{{data.currentCondition}}",
                        "{{data.savedQueries}}",
                        "{{data.savedConditions}}",
                        "{{data.queryAganist}}",
                        "{{data.queryAganistOptions}}",
                        "{{data.queryScopeOptions}}",
                        "{{data.includeRepliaceTarget}}",
                        "{{data.queryCondition}}",
                        "{{data.queryScope}}",
                        "{{data.queryConditionOptions}}",
                        "{{data.asyncPriority}}",
                        "{{data.taskExecutedBy}}"
                ],
                "type": "TEMPLATE_PROPERTIES_EDIT"
            },
            "deps": "js/xrtUtilities"
        },
        "loadWorkspaceObjectType": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2019-06-Finder",
            "method": "performSearchViewModel4",
            "inputData":
             {
                "searchInput":
                {
                    "maxToLoad": 50,
                    "maxToReturn": 50,
                    "providerName": "Awp0ResourceProvider",
                    "searchCriteria": {
                        "searchString": "{{data.allowedDefaultObjectTypes.filterString}}",
                        "resourceProviderContentType": "WorkspaceObjectType"
                    },
                    "cursor": {
                        "startIndex":"{{data.dataProviders.getWorkspaceObjectType.startIndex}}"
                    },
                    "attributesToInflate" : [ "fnd0InternalName", "object_name"],
                    "searchFilterFieldSortType": "Alphabetical",
                    "searchFilterMap6": {},
                    "searchSortCriteria": []
                }
             },
             "policy":
             {
                 "types":
                 [
                     {
                         "name": "ImanType",
                         "properties": [
                             {
                                 "name": "fnd0InternalName"
                             },
                             {
                                 "name": "object_string"
                             },
                             {
                                "name": "object_name"
                            }
                         ]
                     }
                 ]
             },
             "outputData": {
              "objectTypeSearchResults": "{{function:getObjectTypeLOVListValues}}",
              "totalFound": "totalFound",
              "totalLoaded":"totalLoaded",
              "moreValuesExist": true
           },
            "deps": "js/Awp0TemplateProperties"
        },
        "loadPreferenceForSelectedTemplate": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2019-06-Finder",
            "method": "performSearchViewModel4",
            "inputData":
             {
                "searchInput":
                {
                    "maxToLoad": 50,
                    "maxToReturn": 50,
                    "providerName": "Awp0ResourceProvider",
                    "searchCriteria": {
                        "searchString": "{{props.subPanelContext.selected.props.template_name.uiValues[0]}}",
                        "resourceProviderContentType": "TypesHavingDefaultWorkflow"
                    },
                    "cursor": {
                        "startIndex":0
                    },
                    "attributesToInflate" : [ "fnd0InternalName", "object_name"],
                    "searchFilterFieldSortType": "Alphabetical",
                    "searchFilterMap6": {},
                    "searchSortCriteria": []
                }
             },
             "policy":
             {
                 "types":
                 [
                     {
                         "name": "ImanType",
                         "properties": [
                             {
                                 "name": "fnd0InternalName"
                             },
                             {
                                 "name": "object_string"
                             },
                             {
                                "name": "object_name"
                            }
                         ]
                     }
                 ]
             },
             "outputData": {
              "preferencesForTemplate": "{{function:getObjectTypeLOVListValues}}"
           },
           "events":
            {
                "success":
                [
                    {
                        "name": "epmTaskTemplate.propertiesLoadedForPWA"
                    }
                ]
            },
           "deps": "js/Awp0TemplateProperties"
        },
        "initilaizePropertyTab" : {
            "actionType": "batchJob",
            "steps":[
                {
                    "action": "reveal",
                    "condition": "props.subPanelContext.workflowDgmState.selectedObject"
                },
                {
                    "action": "loadTaskTemplateTypes",
                    "condition": "props.subPanelContext.workflowDgmState.selectedObject"
                },
                {
                    "action": "loadSavedAsyncPriorities",
                    "condition": "props.subPanelContext.workflowDgmState.selectedObject && ( ( ctx.preferences.EPM_task_execution_mode && ctx.preferences.EPM_task_execution_mode.length !== 0 && ctx.preferences.EPM_task_execution_mode[0] && ctx.preferences.EPM_task_execution_mode[0]==='CONFIGURABLE' ) || (ctx.preferences.EPM_task_execution_mode && ctx.preferences.EPM_task_execution_mode.length !== 0 && ctx.preferences.EPM_task_execution_mode[0] && ctx.preferences.EPM_task_execution_mode[0]==='BACKGROUND' ))"

                }
            ]
        }
    },

    "data":
    {
        "templateName":
        {
            "displayName": "{{i18n.Workflow_Name}}",
            "type": "STRING",
            "isRequired": "true",
            "maxLength": 128,
            "isEditable": "false",
            "dbValue": "",
            "uiValue": ""
        },
        "templateDesc":
        {
            "displayName": "{{i18n.taskInstructions}}",
            "type": "STRING",
            "isRequired": "false",
            "isEditable": "false",
            "dbValue": "",
            "uiValue": ""
        },
        "taskDuration": {
            "displayName": "{{i18n.taskDuration}}",
            "type": "INTEGER",
            "dbValue": "",
            "dispValue": "",
            "isEditable": "false",
            "propertyLabelDisplay": "PROPERTY_LABEL_AT_LEFT"
        },
        "processBackground": {
            "displayName": "{{i18n.processBackgroud}}",
            "type": "BOOLEAN",
            "isRequired": "false",
            "propertyLabelDisplay": "PROPERTY_LABEL_AT_RIGHT",
            "isEditable": "false"
        },
        "requireTaskConfirmation": {
            "displayName": "{{i18n.requireTaskConfirmation}}",
            "type": "BOOLEAN",
            "isRequired": "false",
            "propertyLabelDisplay": "PROPERTY_LABEL_AT_RIGHT",
            "isEditable": "false"
        },
        "selectWorkflowParticipant": {
            "displayName": "{{i18n.selectWorkflowParticipant}}",
            "type": "BOOLEAN",
            "isRequired": "false",
            "propertyLabelDisplay": "PROPERTY_LABEL_AT_RIGHT",
            "isEditable": "false"
        },
        "showInProcessStage" : {
            "displayName": "{{i18n.showInProcessStage}}",
            "type": "BOOLEAN",
            "isRequired": "false",
            "propertyLabelDisplay": "PROPERTY_LABEL_AT_RIGHT",
            "isEditable": "false"
        },
        "filterCondition":
        {
            "displayName": "{{i18n.filterCondition}}",
            "type": "STRING",
            "hasLov": true,
            "isEditable": "false"
        },
        "decisionLabels":
        {
            "displayName": "{{i18n.decisionLabel}}",
            "type": "STRING",
            "hasLov": true,
            "isEditable": "false"
        },
        "releaseStatus":
        {
            "displayName": "{{i18n.releaseStatus}}",
            "type": "STRING",
            "hasLov": true,
            "isEditable": "false"
        },
        "currentQuery" :
        {
            "displayName": "{{i18n.currentQuery}}",
            "type": "STRING",
            "isRequired": "false",
            "isEditable": "false",
            "isEnabled": "true",
            "dbValue": "",
            "uiValue": ""
        },
        "currentCondition" :
        {
            "displayName": "{{i18n.currentCondition}}",
            "type": "STRING",
            "isRequired": "false",
            "isEditable": "false",
            "isEnabled": "true",
            "dbValue": "",
            "uiValue": ""
        },
        "savedQueries":
        {
            "displayName": "{{i18n.query}}",
            "type": "STRING",
            "hasLov": true,
            "isEditable": "false"
        },
        "savedConditions":
        {
            "displayName": "{{i18n.condition}}",
            "type": "STRING",
            "hasLov": true,
            "isEditable": "false",
            "dbValue": "{{data.condition}}",
            "uiValue": "{{data.condition}}",
            "dataProvider" : "getSavedConditions"
        },
        "queryAganist": {
            "displayName": "{{i18n.queryAganist}}",
            "type": "STRING",
            "isRequired": "false",
            "isEditable": "false",
            "dbValue": "target",
            "labelPosition": "PROPERTY_LABEL_AT_SIDE"
        },
        "queryAganistOptions" : {
            "type": "STRING",
            "dbValue": [
                {
                    "propDisplayValue": "{{i18n.target}}",
                    "propInternalValue": "target"
                },
                {
                    "propDisplayValue": "{{i18n.task}}",
                    "propInternalValue": "task"
                },
                {
                    "propDisplayValue": "{{i18n.subProcess}}",
                    "propInternalValue": "sub-process"
                }
            ]
        },
        "queryScope": {
            "displayName": "{{i18n.scope}}",
            "type": "STRING",
            "isRequired": "false",
            "isEditable": "false",
            "dbValue": "all",
            "labelPosition": "PROPERTY_LABEL_AT_SIDE"
        },
        "queryScopeOptions" : {
            "type": "STRING",
            "dbValue": [
                {
                    "propDisplayValue": "{{i18n.all}}",
                    "propInternalValue": "all"
                },
                {
                    "propDisplayValue": "{{i18n.any}}",
                    "propInternalValue": "any"
                },
                {
                    "propDisplayValue": "{{i18n.none}}",
                    "propInternalValue": "none"
                }
            ]
        },
        "includeRepliaceTarget" : {
            "displayName": "{{i18n.includeRepliaceTarget}}",
            "type": "BOOLEAN",
            "isRequired": "false",
            "propertyLabelDisplay": "PROPERTY_LABEL_AT_RIGHT",
            "isEditable": "false",
            "dbValue" : false
        },
        "queryCondition": {
            "displayName": "",
            "type": "STRING",
            "isRequired": "false",
            "isEditable": "false",
            "dbValue": "query",
            "labelPosition": "NO_PROPERTY_LABEL"
        },
        "queryConditionOptions" : {
            "type": "STRING",
            "dbValue": [
                {
                    "propDisplayValue": "{{i18n.query}}",
                    "propInternalValue": "query"
                },
                {
                    "propDisplayValue": "{{i18n.condition}}",
                    "propInternalValue": "condition"
                }
            ]
        },
        "asyncPriority":
        {
            "displayName": "{{i18n.asyncPriority}}",
            "type": "STRING",
            "hasLov": true,
            "isEditable": "false",
            "dbValue": "",
            "uiValue": "",
            "emptyLOVEntry": false
        },
        "taskTemplateType": {
            "displayName": "{{i18n.typeString}}",
            "type": "STRING",
            "hasLov": true,
            "isEditable": "false",
            "dbValue": "{{props.subPanelContext.workflowDgmState.selectedObject.props.task_type.dbValues[0]}}",
            "uiValue": "{{props.subPanelContext.workflowDgmState.selectedObject.props.task_type.uiValues[0]}}",
            "emptyLOVEntry": false
        },
        "allowedDefaultObjectTypes":
        {
            "displayName": "{{i18n.DefaultForTypes}}",
            "type": "CHECKBOX",
            "isArray": true,
            "hasLov": true,
            "isEditable": "true",
            "dbValue": [],
            "uiValue": "",
            "renderingHint": "checkboxoptionlov",
            "dataProvider" : "getWorkspaceObjectType"
        },
        "taskExecutedBy": {
            "displayName": "{{i18n.taskExecutedBy}}",
            "type": "BOOLEAN",
            "renderingHint": "radiobutton",
            "isRequired": "false",
            "isEditable": "false",
            "labelPosition": "PROPERTY_LABEL_AT_SIDE",
            "vertical": false,
            "propertyRadioTrueText": "{{i18n.userExecution}}",
            "propertyRadioFalseText": "{{i18n.systemExecution}}"
        }
    },
    "props": {
        "sub-panel-context":{
            "type":"object"
        }
    },
    "dataProviders":
    {
        "getSavedConditions": {
            "action" : "loadSavedConditions",
            "response": "{{data.objectTypeSearchResults}}",
            "moreValuesExist": "{{data.moreValuesExist}}",
            "totalFound": "{{data.totalFound}}"
        },
        "getWorkspaceObjectType": {
            "action" : "loadWorkspaceObjectType",
            "initializeAction" : "loadWorkspaceObjectType",
            "nextAction": "loadWorkspaceObjectType",
            "response": "{{data.objectTypeSearchResults}}",
            "moreValuesExist": "{{data.moreValuesExist}}",
            "totalFound": "{{data.totalFound}}",
            "totalLoaded":"{{data.totalLoaded}}"
        }
    },

    "functions":
    {
        "getEPMCreateStatusHandler" : {
            "functionName": "getEPMCreateStatusHandler",
            "parameters": [
            ]
        },
        "getLOVList": {
            "functionName": "getLOVList",
            "parameters": [
                "{{response}}"
            ]
        },
        "getAsyncPriorityLOVList": {
            "functionName": "getAsyncPriorityLOVList",
            "parameters": [
                "{{response}}"
            ]
        },
        "getFilterConditionLOVList": {
            "functionName": "getFilterConditionLOVList",
            "parameters": []
        },
        "getSavedQueryLOVList": {
            "functionName": "getSavedQueryLOVList",
            "parameters": []
        },
        "getReleaseStatusList": {
            "functionName": "getReleaseStatusList",
            "parameters": [
                "{{data.releaseStatusListInput}}"
            ]
        },
        "getObjectTypeLOVListValues": {
            "functionName": "getObjectTypeLOVListValues",
            "parameters":
            [
            ]
        },
        "getConditionLOVListValues": {
            "functionName": "getConditionLOVListValues",
            "parameters":
            [
            ]
        },
        "getTaskTemplateObjectTypeList": {
            "functionName": "getTaskTemplateObjectTypeList",
            "parameters":
            [
            ]
        }
    },

    "onEvent":
    [
        {
            "eventId": "epmTaskTemplate.propertiesLoaded",
            "condition" : "props.subPanelContext.selected.uid !== props.subPanelContext.workflowDgmState.selectedObject.uid",
            "action": "populatePanelData"
        },
        {
            "eventId": "epmTaskTemplate.propertiesLoadedForPWA",
            "condition" : "props.subPanelContext.selected.uid === props.subPanelContext.workflowDgmState.selectedObject.uid",
            "action": "populatePanelData"
        },
        {
            "eventId": "epmTaskTemplate.loadFilterConditions",
            "condition" : "props.subPanelContext.selected.uid === props.subPanelContext.workflowDgmState.selectedObject.uid",
            "action": "loadFilterConditions"
        },
        {
            "eventId": "epmTaskTemplate.loadDecisions",
            "condition" : "props.subPanelContext.workflowDgmState.selectedObject && ( props.subPanelContext.workflowDgmState.selectedObject.modelType.typeHierarchyArray.indexOf( 'EPMReviewTaskTemplate' ) > -1  || props.subPanelContext.workflowDgmState.selectedObject.modelType.typeHierarchyArray.indexOf( 'EPMAcknowledgeTaskTemplate' ) > -1) ",
            "action": "loadDecisions"
        },
        {
            "eventId": "epmTaskTemplate.loadSavedQueries",
            "condition" : "props.subPanelContext.workflowDgmState.selectedObject &&  props.subPanelContext.workflowDgmState.selectedObject.modelType.typeHierarchyArray.indexOf( 'EPMConditionTaskTemplate' ) > -1",
            "action": "loadSavedQueries"
        },
        {
            "eventId": "epmTaskTemplate.loadReleaseStatusList",
            "condition" : "props.subPanelContext.workflowDgmState.selectedObject && data.epmCreateStatusHandler",
            "action": "loadReleaseStatusList"
        },
        {
            "eventId": "epmAddStatusTaskTemplate.updatePanel",
            "action": "populatePanelData"
        },
        {
            "eventId": "epmConditionTaskTemplate.updatePanel",
            "action": "populatePanelData"
        },
        {
            "eventId": "epmTaskTemplate.updatePanel",
            "action": "populatePanelData"
        },
        {
            "eventId": "workflowGraph.selectionChanged",
            "action": "reveal"
        },
        {
            "eventId": "epmTaskTemplate.reloadPanel",
            "action": "reveal"
        },
        {
            "eventId": "workflowDesigner.saveEdit",
            "action": "saveEditsTemplateAction"
        },
        {
            "eventId": "cdm.deleted",
            "cacheEventData": true,
            "action": "updateOnTaskTemplateDelete"
        },
        {
            "eventId": "cdm.updated",
            "action": "updatePropertiesOnObjectChanged",
            "cacheEventData": true
        },
        {
            "eventId": "taskProperties.taskTypesLoaded",
            "action": "loadValidTaskTemplateTypes"
        },
        {
            "eventId": "loadPreferenceForSelectedTemplate",
            "action": "loadPreferenceForSelectedTemplate",
            "condition" : "props.subPanelContext.selected.uid === props.subPanelContext.workflowDgmState.selectedObject.uid"
        }

    ],
    "lifecycleHooks": {
        "onUpdate":{
            "action": "updateDataSource",
            "observers": [
                        "viewModel.data.filterCondition",
                        "viewModel.data.allowedDefaultObjectTypes",
                        "viewModel.data.decisionLabels",
                        "viewModel.data.taskDuration",
                        "viewModel.data.templateName",
                        "viewModel.data.templateDesc",
                        "viewModel.data.processBackground",
                        "viewModel.data.requireTaskConfirmation",
                        "viewModel.data.selectWorkflowParticipant",
                        "viewModel.data.showInProcessStage",
                        "viewModel.data.releaseStatus",
                        "viewModel.data.currentQuery",
                        "viewModel.data.currentCondition",
                        "viewModel.data.savedQueries",
                        "viewModel.data.savedConditions",
                        "viewModel.data.queryAganist",
                        "viewModel.data.queryAganistOptions",
                        "viewModel.data.queryScopeOptions",
                        "viewModel.data.includeRepliaceTarget",
                        "viewModel.data.queryCondition",
                        "viewModel.data.queryScope",
                        "viewModel.data.queryConditionOptions",
                        "viewModel.data.asyncPriority",
                        "viewModel.data.taskExecutedBy"

            ]
        },
        "onMount":"initilaizePropertyTab"
    },

    "conditions":
    {
        "isBackgroundProcessingConfigurable":
        {
            "expression": "ctx.preferences.EPM_task_execution_mode && ctx.preferences.EPM_task_execution_mode.length !== 0 && ctx.preferences.EPM_task_execution_mode[0] && ctx.preferences.EPM_task_execution_mode[0]==='CONFIGURABLE'"
        },
        "isBackgroundProcessingEnabled":
        {
            "expression": "ctx.preferences.EPM_task_execution_mode && ctx.preferences.EPM_task_execution_mode.length !== 0 && ctx.preferences.EPM_task_execution_mode[0] && ctx.preferences.EPM_task_execution_mode[0]==='BACKGROUND'"
        },
        "isRootTaskTemplate":
        {
            "expression": "props.subPanelContext.workflowDgmState.selectedObject && props.subPanelContext.workflowDgmState.selectedObject.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1 && props.subPanelContext.workflowDgmState.selectedObject.props.template_classification.dbValues[0] === '0'"
        },
        "isReviewTaskTemplate":
        {
            "expression": "props.subPanelContext.workflowDgmState.selectedObject && props.subPanelContext.workflowDgmState.selectedObject.modelType.typeHierarchyArray.indexOf( 'EPMReviewTaskTemplate' ) > -1"
        },
        "isAcknowledgeTaskTemplate":
        {
            "expression": "props.subPanelContext.workflowDgmState.selectedObject && props.subPanelContext.workflowDgmState.selectedObject.modelType.typeHierarchyArray.indexOf( 'EPMAcknowledgeTaskTemplate' ) > -1"
        },
        "isRevieworAckTaskTemplate":
        {
            "expression": "props.subPanelContext.workflowDgmState.selectedObject && ( props.subPanelContext.workflowDgmState.selectedObject.modelType.typeHierarchyArray.indexOf( 'EPMReviewTaskTemplate' ) > -1 || props.subPanelContext.workflowDgmState.selectedObject.modelType.typeHierarchyArray.indexOf( 'EPMAcknowledgeTaskTemplate' ) > -1)"
        },
        "checkSelectionChange":
        {
            "expression": "name === 'selected'"
        },
        "isTcReleaseAtleast116Or121": {
            "expression": "( ( ctx.tcSessionData.tcMajorVersion === 11 && ctx.tcSessionData.tcMinorVersion === 2 && ctx.tcSessionData.tcQRMNumber > 6 ) || (  ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion>=1 ) || ( ctx.tcSessionData.tcMajorVersion > 12 ) ) "
        },
        "isTcReleaseAtleast142": {
            "expression": "(ctx.tcSessionData.tcMajorVersion > 14 || (ctx.tcSessionData.tcMajorVersion === 14 && (ctx.tcSessionData.tcMinorVersion >= 2)))"
        },
        "isValidToSave" : {
            "expression": "data.templateName.dbvalue && data.templateName.dbvalue.length > 0"
        },
        "isTaskExecutionModeVisible": {
            "expression": "conditions.isTcReleaseAtleast142 && !conditions.isRootTaskTemplate"
        },
        "isTemplateInEditMode" : {
            "expression": {
                "$and": [
                    {
                        "$source": "ctx.workflowDgmEditCtx.editObjectUids",
                        "$query": {
                            "$in": [
                                "{{props.subPanelContext.selected.uid}}"
                            ]
                        }
                    },
                    {
                        "$source": {
                            "$adapt": "props.subPanelContext.selected"
                        },
                        "$query": {
                            "$and": [
                                {
                                    "$source": "props.stage.dbValues.0.length",
                                    "$query": {
                                        "$eq": "1"
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "isSecondColumnVisible": {
            "expression": "props.subPanelContext.workflowDgmState.selectedObject && ( props.subPanelContext.workflowDgmState.selectedObject.modelType.typeHierarchyArray.indexOf( 'EPMConditionTaskTemplate' ) > -1 || props.subPanelContext.workflowDgmState.selectedObject.modelType.typeHierarchyArray.indexOf( 'EPMSelectSignoffTaskTemplate' ) > -1)"
        },
        "isConditionTaskTemplate" : {
            "expression": "props.subPanelContext.workflowDgmState.selectedObject &&  props.subPanelContext.workflowDgmState.selectedObject.modelType.typeHierarchyArray.indexOf( 'EPMConditionTaskTemplate' ) > -1"
        },
        "isTaskQueryOptionSelected" : {
            "expression": "data.queryAganist && data.queryAganist.dbValue === 'task'"
        },
        "isSubProcessQueryOptionSelected" : {
            "expression": "data.queryAganist && data.queryAganist.dbValue === 'sub-process'"
        },
        "isTargetQueryOptionSelected" : {
            "expression": "data.queryAganist && data.queryAganist.dbValue === 'target'"
        },
        "isReleaseStatusTaskTemplate" : {
            "expression": "props.subPanelContext.workflowDgmState.selectedObject && data.epmCreateStatusHandler !== undefined && data.epmCreateStatusHandler.uid"
        }
    },
    "preferences":
    [
        "SM_Hours_Per_Day_Preference",
        "SM_Hours_Per_Week_Preference",
        "SM_Hours_Per_Year_Preference"
    ],
    "i18n":
    {
        "processBackgroud": [ "WorkflowDesignerMessages" ],
        "requireTaskConfirmation": [ "WorkflowDesignerMessages" ],
        "selectWorkflowParticipant": [ "WorkflowDesignerMessages" ],
        "showInProcessStage": [ "WorkflowDesignerMessages" ],
        "filterCondition" : [ "WorkflowDesignerMessages" ],
        "decisionLabel" : [ "WorkflowDesignerMessages" ],
        "Workflow_Name": [ "WorkflowCommandPanelsMessages" ],
        "Description": [ "WorkflowCommandPanelsMessages" ],
        "taskInstructions" : [ "InboxMessages" ],
        "save" :  [ "TCUICommandPanelsMessages" ],
        "conditionQuery": [ "WorkflowDesignerMessages" ],
        "query": [ "WorkflowDesignerMessages" ],
        "queryAganist": [ "WorkflowDesignerMessages" ],
        "target": [ "WorkflowDesignerMessages" ],
        "task": [ "WorkflowDesignerMessages" ],
        "subProcess": [ "WorkflowDesignerMessages" ],
        "includeRepliaceTarget": [ "WorkflowDesignerMessages" ],
        "scope": [ "WorkflowDesignerMessages" ],
        "all": [ "WorkflowDesignerMessages" ],
        "any": [ "WorkflowDesignerMessages" ],
        "none": [ "WorkflowDesignerMessages" ],
        "emptyQuery" :  [ "WorkflowDesignerMessages" ],
        "currentQuery" : [ "WorkflowDesignerMessages" ],
        "releaseStatus" : [ "WorkflowDesignerMessages" ],
        "taskDuration": [ "WorkflowDesignerMessages" ],
        "condition": [ "WorkflowDesignerMessages" ],
        "currentCondition": [ "WorkflowDesignerMessages" ],
        "asyncPriority": [ "WorkflowDesignerMessages" ],
        "typeString": [ "WorkflowDesignerMessages" ],
        "DefaultForTypes": [ "WorkflowDesignerMessages" ],
        "PreferenceCreateDescription": [ "WorkflowDesignerMessages" ],
        "taskExecutedBy": [ "WorkflowDesignerMessages" ],
        "userExecution": [ "WorkflowDesignerMessages" ],
        "systemExecution": [ "WorkflowDesignerMessages" ]
    }
}
