{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-add.directive",
        "js/aw-panel-footer.directive",
        "js/aw-button.directive",
        "js/aw-i18n.directive",
        "js/aw-form.directive",
        "js/exist-when.directive"
    ],
    "data": {
        "addPanelState": {
            "initialValues": {
                "sourceObjects": "",
                "selectedTab": ""
            },
            "meta": {}
        }
    },
    "actions": {
        "addProcessAttachments": {
            "actionType": "JSFunction",
            "method": "addProcessAttachments",
            "inputData": {
                "selectedObjects": "{{addPanelState.sourceObjects}}",
                "submitPanelState": "{{props.subPanelContext.submitPanelState}}",
                "prePanelId": "{{props.prePanelId}}",
                "singleCheckedOutError": "{{i18n.singleCheckedOutError}}",
                "multipleCheckedOutError": "{{i18n.multipleCheckedOutError}}"
            },
            "deps": "js/Awp0WorkflowAttachmentTargetReferenceService"
        }
    },
    "conditions": {
        "isAddButtonVisible": {
            "expression": "conditions.isPaletteTabAddButtonVisible || conditions.isSearchTabAddButtonVisible"
        },
        "isPaletteTabAddButtonVisible": {
          "expression":"addPanelState.selectedTab.view==='PaletteTabPageSub' && addPanelState.sourceObjects.length > 0"
        },
        "isSearchTabAddButtonVisible": {
          "expression":"addPanelState.selectedTab.view==='SearchTabPageSub'  && addPanelState.selectedTab.view!='PaletteTabPageSub' && addPanelState.sourceObjects.length > 0"
        },
        "isSubmittableObjectTypesLoaded": {
            "expression": "subPanelContext.submitPanelState.submittableObjectTypes && subPanelContext.submitPanelState.submittableObjectTypes !== ''"
        }
    },
    "onEvent": [
    ],
    "i18n": {
        "Add_Title": [ "WorkflowCommandPanelsMessages" ],
        "singleCheckedOutError": [ "WorkflowCommandPanelsMessages"],
        "multipleCheckedOutError": [ "WorkflowCommandPanelsMessages"]
    }
}
