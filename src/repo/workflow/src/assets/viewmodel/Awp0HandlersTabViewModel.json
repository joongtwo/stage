{
    "schemaVersion": "1.0.0",
    "imports": [
    ],
    "actions": {
        "loadTreeData": {
            "actionType": "JSFunctionAsync",
            "method": "loadTreeTableData",
            "inputData": {
                "data": "{{data}}",
                "treeLoadInput": "request.treeLoadInput",
                "selected": "{{props.subPanelContext.selectionData.selected[0]}}",
                "attributes" : [ "assign_action_rules", "start_action_rules", "perform_action_rules", "complete_action_rules",
                    "skip_action_rules", "suspend_action_rules", "resume_action_rules", "abort_action_rules", "undo_action_rules",
                    "assign_action_handlers", "start_action_handlers", "perform_action_handlers", "complete_action_handlers", "skip_action_handlers",
                    "suspend_action_handlers", "resume_action_handlers", "abort_action_handlers", "undo_action_handlers" ],
                "i18n":"{{i18n}}"
            },
            "deps": "js/Awp0TemplateHandlersTab",
            "outputData": {
                "treeLoadResult": "treeLoadResult",
                "handlerInfoMap": "handlerInfoMap",
                "objectName":"objectName"
            },
            "events": {
                "success": [ {
                    "name": "handlersDataProvider.selectAction",
                    "eventData": {
                        "setSelection": "{{function:setPreSelection}}"
                    }
                } ]
            }
        },
        "registerPropPolicy": {
            "actionType": "JSFunction",
            "method": "registerPropPolicy",
            "inputData": {
                "dataProvider": "{{data.dataProviders.handlersDataProvider}}"
            },
            "deps": "js/Awp0TemplateHandlersTab"
        },
        "unRegisterPropPolicy": {
            "actionType": "JSFunction",
            "method": "unRegisterPropPolicy",
            "inputData": {},
            "deps": "js/Awp0TemplateHandlersTab"
        },
        "refreshTable": {
            "actionType": "dataProvider",
            "method": "handlersDataProvider"
        },
        "getIndexOfSelectedHandler": {
            "actionType": "JSFunction",
            "method": "getIndexOfSelectedHandler",
            "inputData":
            {
                "selectedHandler": "{{dataProviders.handlersDataProvider.selectedObjects[0]}}",
                "selectedObject":"{{props.subPanelContext.workflowDgmState.selectedObject}}",
                "data":"{{data}}"
            },
            "outputData":{
                "enableHandlerMoveUp":"enableHandlerMoveUp",
                "enableHandlerMoveDown":"enableHandlerMoveDown",
                "selectedHandler":"selectedHandler",
                "selectedObject":"selectedObject"
            },
            "deps": "js/Awp0TemplateHandlersTab"
        },
        "loadTreeTableProperties": {
            "actionType": "JSFunctionAsync",
            "method": "loadTreeTableProperties",
            "inputData": {
                "propertyLoadInput": "request.propertyLoadInput"
            },
            "outputData": {},
            "deps": "js/Awp0TemplateHandlersTab"
        },
        "expandTreeNodes": {
            "actionType": "JSFunction",
            "method": "expandTreeNodes",
            "inputData": {
                "nodesToExpand": "{{data.eventMap['workflowHandler.expandNodes'].nodesToExpand}}"
            },
            "deps": "js/Awp0TemplateHandlersTab"
        }
    },
    "functions": {
        "setPreSelection": {
            "functionName": "setPreSelection",
            "parameters": [
                "{{ctx}}",
                "{{data}}"
            ]
        }
    },
    "columnProviders": {
        "handlersColumnProvider": {
            "frozenColumnIndex": -1,
            "columns" : [
                {
                    "name": "object_name",
                    "displayName": "{{i18n.action_type}}",
                    "minWidth": 100,
                    "isTableCommand": false,
                    "enableSorting": false,
                    "width": 250,
                    "isTreeNavigation": true
                },
                {
                    "name": "arguments",
                    "displayName": "{{i18n.arguments}}",
                    "minWidth": 100,
                    "isTableCommand": false,
                    "enableSorting": false,
                    "width": 200,
                    "isTreeNavigation": false
                }
            ]
        }
    },
    "dataProviders": {
        "handlersDataProvider": {
            "initializeAction": "loadTreeData",
            "nextAction": "loadTreeData",
            "previousAction": "loadTreeData",
            "editContext": "HANDLER_TABLE_CONTEXT",
            "treeLoadResult": "action.result.treeLoadResult",
            "selectionModelMode": "single",
            "contextMenuCommandsAnchor": "aw_HandlersTreeTableContextMenu",
            "inputData": {
                "accessMode": "tree"
            },
            "policy": {
                "types": [ {
                        "name": "EPMTaskTemplate",
                        "properties": [ {
                                "name": "action_handlers",
                                "modifiers": [ {
                                    "name": "withProperties",
                                    "Value": "true"
                                } ]
                            },
                            {
                                "name": "actions",
                                "modifiers": [ {
                                    "name": "withProperties",
                                    "Value": "true"
                                } ]
                            },
                            {
                               "name": "rules",
                                "modifiers": [ {
                                    "name": "withProperties",
                                    "Value": "true"
                                } ]
                            },
                            {
                                "name": "object_string"
                            }
                        ]
                    },
                    {
                        "name": "EPMAction",
                        "properties": [ {
                                "name": "action_handlers",
                                "modifiers": [ {
                                    "name": "withProperties",
                                    "Value": "true"
                                } ]
                            },
                            {
                                "name": "rule_handlers",
                                "modifiers": [ {
                                    "name": "withProperties",
                                    "Value": "true"
                                } ]
                            },
                            {
                                "name": "rules",
                                "modifiers": [ {
                                    "name": "withProperties",
                                    "Value": "true"
                                } ]
                            },
                            {
                                "name": "actions"
                            }
                        ]
                    },
                    {
                        "name": "EPMBusinessRule",
                        "properties": [ {
                                "name": "rule_handlers",
                                "modifiers": [ {
                                    "name": "withProperties",
                                    "Value": "true"
                                } ]
                            },
                            {
                                "name": "object_name"
                            },
                            {
                                "name": "rule_quorum"
                            }
                        ]
                    },
                    {
                        "name": "EPMHandler",
                        "properties": [ {
                            "name": "arguments"
                        },
                        {
                            "name": "handler_arguments"
                        },
                        {
                            "name": "object_name"
                        },
                        {
                            "name": "object_string"
                        } ]
                    },
                    {
                        "name": "EPMBRHandler",
                        "properties": [ {
                            "name": "arguments"
                        },
                        {
                            "name": "handler_arguments"
                        },
                        {
                            "name": "object_name"
                        },
                        {
                            "name": "object_string"
                        } ]
                    }
                ]
            }
        },
        "handlersTreeTablePropertyProvider": {
            "action": "loadTreeTableProperties",
            "propertyLoadResult": "action.result.propertyLoadResult"
        }
    },
    "lifecycleHooks": {
        "onMount":"registerPropPolicy",
        "onUnmount":"unRegisterPropPolicy",
        "onUpdate": [
            {
                "action": "getIndexOfSelectedHandler",
                "observers": [
                    "viewModel.dataProviders.handlersDataProvider.selectedObjects"
                ]
            }
        ]
    },
    "grids": {
        "handlersTreeView": {
            "columnProvider": "handlersColumnProvider",
            "dataProvider": "handlersDataProvider",
            "propertyProvider" : "handlersTreeTablePropertyProvider",
            "enableArrangeMenu": false,
            "addIconColumn": false,
            "gridOptions": {
                "enableGridMenu": false,
                "enablePinning": false,
                "enableSorting": false,
                "textBundle": {
                    "TwistieTooltipCollapsed": "{{i18n.expand}}",
                    "TwistieTooltipExpanded": "{{i18n.collapse}}"
                },
                "useStaticFirstCol": true
            }
        }
    },
    "data": {
        "handlerInfoMap":{},
        "objectName":
        {
            "displayName": "{{i18n.taskName}}",
            "type": "STRING",
            "isEditable": "false"

        }
    },
    "onEvent": [
        {
            "eventId": "workflowHandler.expandNodes",
            "action": "expandTreeNodes",
            "cacheEventData": true
        },
        {
            "eventId": "workflowGraph.selectionChanged",
            "action": "refreshTable"
        },
        {
            "eventId": "workflowDesigner.updateHandlerTree",
            "action": "refreshTable"
        },
        {
            "eventId": "getIndexOfSelectedHandler",
            "action": "getIndexOfSelectedHandler"
        },
        {
            "eventId": "workflowDesigner.saveEdit",
            "action": "refreshTable"
        }
    ],
    "conditions": {
        "isTaskHandlerInfoOrCreatePanel" : {
            "expression":"dataProviders.handlersDataProvider.selectedObjects.length > 0 && dataProviders.handlersDataProvider.selectedObjects[0].type ==='Action'"
        }
    },
    "i18n": {
        "taskName": [ "InboxMessages" ],
        "arguments": [ "WorkflowDesignerMessages" ],
        "assign_action": [ "WorkflowDesignerMessages" ],
        "start_action": [ "WorkflowDesignerMessages" ],
        "perform_action": [ "WorkflowDesignerMessages" ],
        "complete_action": [ "WorkflowDesignerMessages" ],
        "skip_action": [ "WorkflowDesignerMessages" ],
        "suspend_action": [ "WorkflowDesignerMessages" ],
        "resume_action": [ "WorkflowDesignerMessages" ],
        "abort_action": [ "WorkflowDesignerMessages" ],
        "undo_action": [ "WorkflowDesignerMessages" ],
        "quorumRuleLabel" : [ "WorkflowDesignerMessages" ],
        "orRuleLabel" : [ "WorkflowDesignerMessages" ],
        "andRuleLabel" : [ "WorkflowDesignerMessages" ],
        "expand" : [ "WorkflowCommandPanelsMessages" ],
        "collapse" : [ "WorkflowCommandPanelsMessages" ],
        "action_type" : [ "WorkflowDesignerMessages" ]
    }
}
