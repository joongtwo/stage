{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-command-panel.directive",
        "js/visible-when.directive",
        "js/aw-command-panel-section.directive",
        "js/aw-command-sub-panel.directive"
    ],
    "actions": {
        "initPanel": {
            "actionType": "JSFunction",
            "method": "populatePanelContextData",
            "inputData": {
                "panelContext": "{{ctx.panelContext}}",
                "addUserPanelState": "{{data.addUserPanelState}}"
            },
            "outputData": {
                "palContextData": "panelData",
                "isDataInit": "isDataInit",
                "addUserPanelState": "userPanelState"
            },
            "deps": "js/Awp0PalMgmtService"
        },
        "setActiveView": {
            "actionType": "JSFunction",
            "method": "resetActiveView",
            "inputData": {
                "stateName": "{{data.activeState}}",
                "destPanelId": "Awp0TemplateAssignmentPanelSub"
            },
            "outputData": {
                "activeState": ""
            },
            "deps": "js/addObjectUtils"
        },
        "updateSideNavUserPanelStateBatchJob": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "updateSideNavUserPanelState",
                    "condition": "activeState.activeView ==='Awp0TemplateAssignmentPanelSub'"
                }
            ]
        },
        "updateSideNavUserPanelState": {
            "actionType": "JSFunction",
            "method": "updateSideNavUserPanelState",
            "inputData": {
                "sideNavMode": "{{props.subPanelContext.sidenavMode}}",
                "addUserPanelState": "{{fields.addUserPanelState}}"
            },
            "deps": "js/peoplePickerUtils"
        }
    },
    "functions": {},
    "conditions": {},
    "data": {
        "activeView": "Awp0TemplateAssignmentPanelSub",
        "addUserPanelState": {
            "initialValues": {
                "provider": "Awp0PeoplePickerProvider",
                "selectionModelMode": "multiple",
                "criteria": {
                    "providerContentType": "GroupMember,User,ResourcePool",
                    "searchString": "*",
                    "searchSubGroup": "true",
                    "group": "",
                    "role": "",
                    "participantType": ""
                },
                "defaultCriteria": {
                    "providerContentType": "GroupMember,User,ResourcePool",
                    "searchSubGroup": "true",
                    "group": "",
                    "role": "",
                    "participantType": ""
                },
                "preferenceCriteria": [
                    "WRKFLW_user_panel_content_display",
                    "WRKFLW_allow_resourcepool_assignments",
                    "WRKFLW_show_user_assignment_options"
                ],
                "selectedUsers": "",
                "isAddButtonNeeded": false,
                "triggerUpdateSearchCriteria": false
            },
            "meta": {
                "selectedUsers": {
                    "field": "true",
                    "type": "OBJECTARRAY"
                }
            }
        },
        "activeState": {
            "initialValues": {
                "activeView": "Awp0TemplateAssignmentPanelSub",
                "prePanelId": "Awp0TemplateAssignmentPanelSub",
                "context": {}
            },
            "meta": {
                "activeView": {
                    "field": "true",
                    "type": "STRING"
                },
                "context": {
                    "field": "true",
                    "type": "OBJECT"
                }
            }
        },
        "taskInfoObject": {
            "initialValues": {
                "updatePropContext": "",
                "isTemplateAssignmentInProgress": false,
                "isPALAssignmentCase": true
            },
            "meta": {
            }
        }
    },
    "onEvent": [
    ],
    "lifecycleHooks": {
        "onMount": "initPanel",
        "onUpdate": [
            {
                "action": "updateSideNavUserPanelStateBatchJob",
                "observers": [ "props.subPanelContext.sidenavMode" ]
            }
        ]
    },
    "ctx": {
        "panelContext": null
    },
    "i18n": {
        "taskAssignments": [ "WorkflowCommandPanelsMessages" ],
        "Add_Title": [ "WorkflowCommandPanelsMessages" ]
    }
}
