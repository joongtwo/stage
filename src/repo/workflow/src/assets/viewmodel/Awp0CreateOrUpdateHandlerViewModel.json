{
    "schemaVersion": "1.0.0",
    "imports": [

    ],
    "actions": {
        "populateActionOrRuleHandlers": {
            "actionType": "TcSoaService",
            "serviceName": "Workflow-2019-06-Workflow",
            "method": "getRegisteredHandlers",
            "inputData": {
            },
            "outputData": {
                "handlerResponse" : "response",
                "actionHandlers": "actionHandlers",
                "ruleHandlers": "ruleHandlers"
            },
            "events": {
                "success": [
                    {
                        "name": "populateHandlersLOV"
                    }
                ]
            }
        },
        "populateHandlersLOV": {
            "actionType": "JSFunction",
            "method": "populateHandlersLOV",
            "inputData": {
                "actionHandlers" : "{{data.actionHandlers}}",
                "ruleHandlers" : "{{data.ruleHandlers}}"
            },
            "outputData": {
                "actionHandlerValues":"actionHandlerValues",
                "ruleHandlerValues":"ruleHandlerValues"
            },
            "deps": "js/Awp0CreateOrUpdateTaskHandlers"
        },
        "populateHandlerPanelData": {
            "actionType": "JSFunction",
            "method": "populateHandlerPanelData",
            "inputData": {
                "data": "{{data}}",
                "selected" : "{{props.subPanelContext.selectedActionOrHandlerObject}}",
                "ctx" : "{{ctx}}"
            },
            "outputData": {
                "handlerType":"handlerType",
                "ruleQuorumValue":"ruleQuorumValue",
                "ruleHandlersLOV":"ruleHandlersLOV",
                "actionHandlersLOV":"actionHandlersLOV",
                "actionHandlerValues":"actionHandlerValues",
                "ruleHandlerValues":"ruleHandlerValues",
                "vmo":"vmo",
                "isPanelEditable":"isPanelEditable",
                "handlerData":"handlerData",
                "actionHandler":"actionHandler",
                "ruleHandler":"ruleHandler",
                "selectedHandlerArguments":"selectedHandlerArguments",
                "argumentToValueMap":"argumentToValueMap"
            },
            "deps": "js/Awp0CreateOrUpdateTaskHandlers"
        },
        "populateSelectedHandlerPanelData": {
            "actionType": "JSFunction",
            "method": "populateHandlerPanelData",
            "inputData": {
                "data": "{{data}}",
                "selected" : "{{props.subPanelContext.selectedActionOrHandlerObject}}",
                "ctx" : "{{ctx}}"
            },
            "deps": "js/Awp0CreateOrUpdateTaskHandlers"
        },
        "getSelectedHandlerInfo": {
            "actionType": "TcSoaService",
            "serviceName": "Workflow-2020-01-Workflow",
            "method": "getSupportedHandlerArguments",
            "inputData": {
                "input":
                [
                    {
                        "clientId": "supportedHandlerArgumentsId",
                        "handlerName": "{{props.subPanelContext.selectedActionOrHandlerObject.props.object_string.dbValues[0]}}"
                    }
                ]
            },
            "outputData": {
                "handlerData": "output['0'].handlerData"
            },
            "events": {
                "success": [
                    {
                        "name": "populateHandlerInfo"
                    }
                ]
            },
            "deps": "js/Awp0CreateOrUpdateTaskHandlers"
        },
        "getActionHandlerInfo": {
            "actionType": "TcSoaService",
            "serviceName": "Workflow-2020-01-Workflow",
            "method": "getSupportedHandlerArguments",
            "inputData": {
                "input":
                [
                    {
                        "clientId": "supportedHandlerArgumentsId",
                        "handlerName": "{{data.actionHandlersLOV.dbValue}}"
                    }
                ]
            },
            "outputData": {
                "handlerData": "output['0'].handlerData"
            },
            "events": {
                "success": [
                    {
                        "name": "populateHandlerInfo"
                    }
                ]
            },
            "deps": "js/Awp0CreateOrUpdateTaskHandlers"
        },
        "getRuleHandlerInfo": {
            "actionType": "TcSoaService",
            "serviceName": "Workflow-2020-01-Workflow",
            "method": "getSupportedHandlerArguments",
            "inputData": {
                "input":
                [
                    {
                        "clientId": "supportedHandlerArgumentsId",
                        "handlerName": "{{data.ruleHandlersLOV.dbValue}}"
                    }
                ]
            },
            "outputData": {
                "handlerData": "output['0'].handlerData"
            },
            "events": {
                "success": [
                    {
                        "name": "populateHandlerInfo"
                    }
                ]
            },
            "deps": "js/Awp0CreateOrUpdateTaskHandlers"
        },
        "populateHandlerInfo" : {
            "actionType": "JSFunction",
            "method": "populateHandlerInfo",
            "inputData": {
                "data": "{{data}}"
            },
            "outputData": {
                "allOptionalArgumentsMap":"allOptionalArgumentsMap",
                "allMandatoryArgumentsMap":"allMandatoryArgumentsMap",
                "optionalArgumentNames":"optionalArgumentNames",
                "mandatoryArgumentNames":"mandatoryArgumentNames",
                "no_arguments":"no_arguments",
                "handlerData":"handlerData",
                "isAddHandlerArgumentPanelVisible":"isAddHandlerArgumentPanelVisible",
                "selectedHandlerArguments":"selectedHandlerArguments",
                "argumentToValueMap":"argumentToValueMap",
                "hint":"hint"
            },
            "events": {
                "success": [
                    {
                        "name": "populateArgumentsTable",
                        "condition": "(props.subPanelContext.selectedActionOrHandlerObject.modelType.typeHierarchyArray.indexOf( 'EPMHandler' ) > -1 && ( ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion > 2 ) ) )"
                    }
                ]
            },
            "deps": "js/Awp0CreateOrUpdateTaskHandlers"
        },
        "populateArgumentsTable" : {
            "actionType": "JSFunction",
            "method": "populateArgumentsTableForSelectedHandler",
            "inputData": {
                "data": "{{data}}",
                "ctx":"{{ctx}}",
                "selectedHandler":"{{props.subPanelContext.selectedActionOrHandlerObject}}"
            },
            "outputData": {
                "selectedHandlerArguments": "selectedHandlerArguments",
                "argumentToValueMap":"argumentToValueMap",
                "actionHandler":"actionHandler",
                "ruleHandler":"ruleHandler",
                "isPanelEditable":"isPanelEditable"
            },
            "deps": "js/Awp0CreateOrUpdateTaskHandlers"
        },
        "createOrUpdateHandler" : {
            "actionType": "JSFunction",
            "method": "createOrUpdateHandler",
            "deps": "js/Awp0CreateOrUpdateTaskHandlers",
            "inputData": {
                "data": "{{data}}",
                "ctx":"{{ctx}}",
                "props":"{{props}}"
            }
        },
        "addHandlerArgumentRowAction" : {
            "actionType": "JSFunction",
            "method": "addHandlerArgumentRow",
            "deps": "js/Awp0CreateOrUpdateTaskHandlers",
            "inputData": {
                "selectedHandlerArguments":"{{fields.selectedHandlerArguments}}",
                "data":"{{data}}"
            }
        },
        "evaluateSelection": {
            "actionType": "batchJob",
            "steps":[
                {
                    "action": "getSelectedHandlerInfo",
                    "condition": "conditions.isRuleOrActionHandlerSelected"
                },
                {
                    "action": "populateActionOrRuleHandlers",
                    "condition": "conditions.isTaskActionOrBRObjectSelected"
                },
                {
                    "action": "populateHandlerPanelData",
                    "condition": "conditions.isTaskActionOrBRObjectSelected"
                }
            ]
        },
        "populateRuleQuorumValues" : {
            "actionType": "JSFunction",
            "method": "populateRuleQuorumValues",
            "inputData": {
                "ruleQuorumLength": "{{props.subPanelContext.selectedActionOrHandlerObject.props.rule_handlers.dbValue.length}}"
            },
            "outputData":{
                "ruleQuorumValueList":""
            },
            "deps": "js/Awp0CreateOrUpdateTaskHandlers"
        },
        "emptyPreviousLOV" : {
            "actionType": "JSFunction",
            "method": "emptyPreviousLOV",
            "inputData": {
                "data": "{{data}}"
            },
            "outputData":{
                "actionHandlersLOV":"actionHandlersLOV",
                "ruleHandlersLOV":"ruleHandlersLOV"
            },
            "deps": "js/Awp0CreateOrUpdateTaskHandlers"
        },
        "updateSelectedHandlerArgumentsWhenRemove" : {
            "actionType": "JSFunction",
            "method": "updateSelectedHandlerArgumentsWhenRemove",
            "inputData": {
                "selectedHandlerArguments": "{{data.eventMap['updateSelectedHandlerArgumentsWhenRemove'].selectedHandlerArguments}}",
                "index":"{{data.eventMap['updateSelectedHandlerArgumentsWhenRemove'].index}}"
            },
            "outputData":{
            },
            "deps": "js/Awp0CreateOrUpdateTaskHandlers"
        },
        "modifyQuorumValue": {
            "actionType": "TcSoaService",
            "serviceName": "Core-2010-09-DataManagement",
            "method": "setProperties",
            "inputData": {
                "info":
                [
                    {
                        "object": "{{props.subPanelContext.selectedActionOrHandlerObject}}",
                        "timestamp": "",
                        "vecNameVal":
                        [
                            {
                                "name": "rule_quorum",
                                "values":
                                [
                                    "{{data.ruleQuorumValue.dbValue}}"
                                ]
                            }
                        ]
                    }
                ]
            }
        }

    },
    "ctx": {
        "preferences": null
    },
    "data": {
        "argumentToValueMap": {
            "initialValues": {

            },
            "meta": {}
        },
        "selectedHandlerArguments": {
            "initialValues": {
                "arguments":[]
            },
            "meta": {}
        },
        "subPanelContext":{
            "type":"object"
        },
        "handlerObject":
        {
            "type": "OBJECT",
            "dbValue": "{{props.subPanelContext.selectedActionOrHandlerObject}}"
        },
        "actionHandler":
        {
            "displayName": "{{i18n.Name}}",
            "type": "STRING",
            "hasLov": false,
            "dbValue": "{{props.subPanelContext.selectedActionOrHandlerObject.props.object_string.dbValues[0]}}",
            "uiValue": "{{props.subPanelContext.selectedActionOrHandlerObject.props.object_string.uiValues[0]}}"
        },
        "ruleHandler":
        {
            "displayName": "{{i18n.Name}}",
            "type": "STRING",
            "hasLov": false,
            "dbValue": "{{props.subPanelContext.selectedActionOrHandlerObject.props.object_string.dbValues[0]}}",
            "uiValue": "{{props.subPanelContext.selectedActionOrHandlerObject.props.object_string.uiValues[0]}}"
        },
        "handlerType":
        {
            "displayName": "{{i18n.handlerType}}",
            "type": "BOOLEAN",
            "propertyRadioFalseText": "{{i18n.ruleLabel}}",
            "propertyRadioTrueText": "{{i18n.actionLabel}}",
            "dbValue": true,
            "isEditable": "false"
        },
        "ruleQuorumValue":
        {
            "labelPosition": "NO_PROPERTY_LABEL",
            "type": "STRING",
            "hasLov": true,
            "isEditable": "false",
            "dataProvider": "dataProviderRuleQuorumValues"
        },
        "ruleHandlersLOV":
        {
            "displayName": "{{i18n.Name}}",
            "type": "STRING",
            "hasLov": true,
            "isEditable": "false",
            "isRequired": true,
            "labelPosition": "PROPERTY_LABEL_AT_SIDE"
        },
        "actionHandlersLOV":
        {
            "displayName": "{{i18n.Name}}",
            "type": "STRING",
            "hasLov": true,
            "isEditable": "false",
            "isRequired": true,
            "labelPosition": "PROPERTY_LABEL_AT_SIDE"
        },
        "header1":
        {
            "displayName": "{{i18n.argumentName}}",
            "type": "STRING",
            "labelPosition": "PROPERTY_LABEL_AT_SIDE"
        },
        "header2":
        {
            "displayName": "{{i18n.argumentValue}}",
            "type": "STRING",
            "labelPosition": "PROPERTY_LABEL_AT_SIDE"
        },
        "handlerTableColumns" : [
            {
                "propName": "argument_name",
                "propDisplayName": "{{i18n.argumentName}}",
                "width": 150,
                "enableCellEdit" : true,
                "isTreeNavigation": false,
                "isTableCommand" : false,
                "minWidth" : 100,
                "type":"String"
            },
            {
                "propName": "argument_value",
                "propDisplayName": "{{i18n.argumentValue}}",
                "width": 300,
                "enableCellEdit" : true,
                "isTreeNavigation": false,
                "isTableCommand" : false,
                "minWidth" : 250,
                "type":"String"
            }
        ],
        "hint":
        {
            "displayName": "{{i18n.hint}}",
            "type": "STRING",
            "isEditable": "false"
        }
    },
    "dataProviders": {
        "dataProviderRuleQuorumValues": {
            "action": "populateRuleQuorumValues",
            "response": "{{data.ruleQuorumValueList}}",
            "moreValuesExist": false
        }
    },
    "props": {
        "sub-panel-context":{
            "type":"object"
        }
    },
    "conditions":
    {
        "isActionHandlerSelected":
        {
            "expression": "props.subPanelContext.selectedActionOrHandlerObject && props.subPanelContext.selectedActionOrHandlerObject.modelType.typeHierarchyArray.indexOf( 'EPMHandler' ) > -1 && props.subPanelContext.selectedActionOrHandlerObject.modelType.typeHierarchyArray.indexOf( 'EPMBRHandler' ) <= -1"
        },
        "isRuleHandlerSelected":
        {
            "expression": "props.subPanelContext.selectedActionOrHandlerObject && props.subPanelContext.selectedActionOrHandlerObject.modelType.typeHierarchyArray.indexOf( 'EPMBRHandler' ) > -1"
        },
        "isRuleOrActionHandlerSelected":
        {
            "expression": "props.subPanelContext.selectedActionOrHandlerObject && props.subPanelContext.selectedActionOrHandlerObject.modelType.typeHierarchyArray.indexOf( 'EPMHandler' ) > -1"
        },
        "isTaskActionOrBRObjectSelected":
        {
            "expression": "props.subPanelContext.selectedActionOrHandlerObject && ( props.subPanelContext.selectedActionOrHandlerObject.type === 'Action' || props.subPanelContext.selectedActionOrHandlerObject.modelType.typeHierarchyArray.indexOf( 'EPMBusinessRule' ) > -1)"
        },
        "isBusinessRuleObjectSelected":
        {
            "expression": "props.subPanelContext.selectedActionOrHandlerObject && props.subPanelContext.selectedActionOrHandlerObject.modelType.typeHierarchyArray.indexOf( 'EPMBusinessRule' ) > -1"
        },
        "isTaskActionObjectSelected":
        {
            "expression": "props.subPanelContext.selectedActionOrHandlerObject && props.subPanelContext.selectedActionOrHandlerObject.type === 'Action'"
        },
        "isRuleHandlerCreation":
        {
            "expression": "data.handlerType.dbValue === false || conditions.isBusinessRuleObjectSelected"
        },
        "isActionHandlerCreation":
        {
            "expression": "data.handlerType.dbValue === true && !conditions.isBusinessRuleObjectSelected"
        },
        "isTaskTemplateInEditMode": {
            "expression": "props.subPanelContext.workflowDgmEditCtx.editObjectUids && props.subPanelContext.workflowDgmEditCtx.editObjectUids.indexOf( ctx.xrtSummaryContextObject.uid ) > -1"
        },
        "isHandlerLOVSelected":{
            "expression":"data.ruleHandlersLOV.dbValue !=='' ||  data.actionHandlersLOV.dbValue !==''"
        }
    },
    "lifecycleHooks": {
        "onUpdate":[{
            "action": "evaluateSelection",
            "observers": [
                        "props.subPanelContext.selectedActionOrHandlerObject"
            ]
        }
      ]
    },
    "onEvent":
    [
        {
            "eventId": "populateHandlerInfo",
            "action": "populateHandlerInfo"
        },
        {
            "eventId": "getSelectedHandlerInfo",
            "action": "getSelectedHandlerInfo"
        },
        {
            "eventId": "populateHandlerPanelData",
            "action": "populateHandlerPanelData"
        },
        {
            "eventId": "populateArgumentsTable",
            "action": "populateArgumentsTable"
        },
        {
            "eventId": "populateActionOrRuleHandlers",
            "action": "populateActionOrRuleHandlers"
        },
        {
            "eventId": "populateHandlersLOV",
            "action": "populateHandlersLOV"
        },
        {
            "eventId": "addHandlerArgumentRow",
            "action": "addHandlerArgumentRowAction"
        },
        {
            "eventId":"updateSelectedHandlerArgumentsWhenRemove",
            "action":"updateSelectedHandlerArgumentsWhenRemove",
            "cacheEventData": true
        }
    ],
    "i18n": {
        "actionHandler":  [ "WorkflowDesignerMessages" ],
        "ruleHandler": [ "WorkflowDesignerMessages" ],
        "actionLabel":  [ "WorkflowDesignerMessages" ],
        "ruleLabel": [ "WorkflowDesignerMessages" ],
        "handlerInfo": [ "WorkflowDesignerMessages" ],
        "argumentName" : [ "WorkflowDesignerMessages" ],
        "argumentValue": [ "WorkflowDesignerMessages" ],
        "createHandler": [ "WorkflowDesignerMessages" ],
        "handlerType": [ "WorkflowDesignerMessages" ],
        "quorum": [ "WorkflowDesignerMessages" ],
        "action": [ "WorkflowCommandPanelsMessages" ],
        "removeCommandTitle" : [ "InboxMessages" ],
        "addTitle" : [ "WorkflowDesignerMessages" ],
        "Name" : [ "WorkflowDesignerMessages" ],
        "arguments" : [ "WorkflowDesignerMessages" ],
        "save" : [ "InboxMessages" ],
        "modify": [ "WorkflowCommandPanelsMessages" ],
        "addValue":["WorkflowDesignerMessages"],
        "hint":["WorkflowDesignerMessages"],
        "hintMessage":["WorkflowDesignerMessages"],
        "invalidValue":["WorkflowDesignerMessages"]
    }
}
