{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-panel-body.directive",
        "js/aw-button.directive",
        "js/aw-textbox.directive",
        "js/aw-widget.directive",
        "js/aw-listbox.directive",
        "js/exist-when.directive",
        "js/aw-i18n.directive",
        "js/aw-label.directive",
        "js/aw-radiobutton.directive",
        "js/visible-when.directive",
        "js/enable-when.directive",
        "js/aw-row.directive",
        "js/aw-column.directive",
        "js/aw-break.directive"
    ],
    "actions": {
        "updateEdgeDataInPropertiesTab": {
            "actionType": "JSFunction",
            "method": "updateEdgeDataInPropertiesTab",
            "inputData": {
                "ctx": "{{ctx}}",
                "data": "{{data}}",
                "subPanelContext": "{{props.subPanelContext}}"
            },
            "outputData": {
                "conditionTaskRadioButton": "conditionTaskRadioButton",
                "validateTaskRadioButton": "validateTaskRadioButton",
                "sourceNode": "sourceNode",
                "targetNode": "targetNode",
                "customPathsMultiselect": "customPathsMultiselect",
                "vmo": "vmo",
                "customPathlist": "customPathlist"
            },
            "deps": "js/Awp0TemplateEdgeService"
        },
        "onChangeConditionTaskRadioButton": {
            "actionType": "JSFunction",
            "method": "onChangeConditionTaskRadioButton",
            "inputData": {
                "data": "{{data}}",
                "ctx": "{{ctx}}",
                "subPanelContext": "{{props.subPanelContext}}"
            },
            "outputData": {
                "customPathsMultiselect": "customPathsMultiselect",
                "customPathlist": "customPathlist"
            },
            "deps": "js/Awp0TemplateEdgeService"
        },
        "onChangeValidateTaskRadioButton": {
            "actionType": "JSFunction",
            "method": "onChangeValidateTaskRadioButton",
            "inputData": {
                "data": "{{data}}",
                "ctx": "{{ctx}}",
                "subPanelContext": "{{props.subPanelContext}}"
            },
            "outputData": {
                "customPathsMultiselect": "customPathsMultiselect",
                "customPathlist": "customPathlist"
            },
            "deps": "js/Awp0TemplateEdgeService"
        },
        "addTocustomPaths": {
            "actionType": "JSFunction",
            "method": "addTocustomPaths",
            "inputData": {
                "data": "{{data}}",
                "ctx": "{{ctx}}"
            },
            "outputData": {
                "customPathsMultiselect": "customPathsMultiselect",
                "customPathlist": "customPathlist",
                "errorCodeText": "errorCodeText",
                "customPathText": "customPathText"
            },
            "deps": "js/Awp0TemplateEdgeService"
        },
        "getCurrentCustomPathForEdge": {
            "actionType": "JSFunction",
            "method": "getCurrentCustomPathForEdge",
            "inputData": {
                "ctx": "{{ctx}}",
                "data": "{{data}}",
                "subPanelContext": "{{props.subPanelContext}}"
            },
            "deps": "js/Awp0TemplateEdgeService"
        },
        "closeCurrentOpenedPanel": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {

                "events": [

                    {
                        "name": "complete",
                        "eventData": {

                            "source": "toolAndInfoPanel"
                        }
                    }
                ]
            }
        },
        "getEdgeProperties": {
            "actionType": "TcSoaService",
            "serviceName": "Core-2006-03-DataManagement",
            "method": "getProperties",
            "inputData": {
                "objects": [

                    "{{props.subPanelContext.workflowDgmState.selectedEdges[0].targetNode.modelObject}}"
                ],
                "attributes": [
                    "start_action_rules"
                ]
            },
            "policy": {
                "types": [
                    {
                        "name": "EPMTaskTemplate",
                        "properties": [
                            {
                                "name": "template_name"
                            },
                            {
                                "name": "object_string"
                            },
                            {
                                "name": "subtask_template"
                            },
                            {
                                "name": "parent_task_template"
                            },
                            {
                                "name": "successors"
                            },
                            {
                                "name": "predecessors"
                            },
                            {
                                "name": "stage"
                            },
                            {
                                "name": "template_classification"
                            },
                            {
                                "name": "start_action_rules",
                                "modifiers": [
                                    {
                                        "name": "withProperties",
                                        "Value": "true"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "EPMAction",
                        "properties": [
                            {
                                "name": "rule_handlers",
                                "modifiers": [
                                    {
                                        "name": "withProperties",
                                        "Value": "true"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "EPMBusinessRule",
                        "properties": [
                            {
                                "name": "rule_handlers",
                                "modifiers": [
                                    {
                                        "name": "withProperties",
                                        "Value": "true"
                                    }
                                ]
                            },
                            {
                                "name": "object_name"
                            },
                            {
                                "name": "rule_quorum"
                            },
                            {
                                "name": "action"
                            }
                        ]
                    },
                    {
                        "name": "EPMBRHandler",
                        "properties": [
                            {
                                "name": "arguments"
                            },
                            {
                                "name": "handler_arguments"
                            },
                            {
                                "name": "object_name"
                            },
                            {
                                "name": "object_string"
                            },
                            {
                                "name": "parent_action_type"

                            }
                        ]


                    }
                ]

            },
            "outputData": {}
        },
        "updateHandlerEdge": {
            "actionType": "JSFunction",
            "method": "updateHandlerEdge",
            "inputData": {
                "ctx": "{{ctx}}",
                "data":"{{data}}",
                "subPanelContext":"{{props.subPanelContext}}"
            },
            "deps": "js/Awp0TemplateEdgeService"
        },
        "labelTextChangeAction": {
            "actionType": "JSFunction",
            "method": "labelTextChangeAction",
            "inputData": {
                "eventData": "{{data.eventMap['awGraph.labelTextChanged']}}",
                "data":"{{data}}",
                "subPanelContext":"{{props.subPanelContext}}"
            },
            "deps": "js/Awp0TemplateEdgeService"
        },
        "updateDataSource": {
            "actionType": "JSFunction",
            "method": "addHtmlPanelPropertiesInDataSource",
            "inputData": {
                "updatedProperties": [
                        "{{data.customPathsMultiselect}}",
                        "{{data.validateTaskRadioButton}}",
                        "{{data.conditionTaskRadioButton}}"
                ],
                "type": "EDGE_PROPERTIES_EDIT"
            },
            "deps": "js/xrtUtilities"
        }
    },
    "functions": {},
    "dataProviders": {
        "customPathsListProvider": {
            "response": "{{data.customPathlist}}",
            "moreValuesExist": false
        }
    },
    "lifecycleHooks": {
        "onMount": "updateEdgeDataInPropertiesTab",
        "onUpdate":{
            "action": "updateDataSource",
            "observers": [
                        "viewModel.data.customPathsMultiselect",
                        "viewModel.data.conditionTaskRadioButton",
                        "viewModel.data.validateTaskRadioButton"
            ]
        }
    },
    "columnProviders": {},

    "data": {
        "sourceNode": {

            "displayName": "{{i18n.sourceTask}}",
            "type": "STRING",
            "isEditable": "false",
            "dbValue": "{{props.subPanelContext.workflowDgmState.selectedEdges[0].sourceNode.modelObject.props.object_name.dbValues[0]}}",
            "uiValue": "{{props.subPanelContext.workflowDgmState.selectedEdges[0].sourceNode.modelObject.props.object_name.dbValues[0]}}"
        },
        "targetNode": {

            "displayName": "{{i18n.targetTask}}",
            "type": "STRING",
            "isEditable": "false",
            "dbValue": "{{props.subPanelContext.workflowDgmState.selectedEdges[0].targetNode.modelObject.props.object_name.dbValues[0]}}",
            "uiValue": "{{props.subPanelContext.workflowDgmState.selectedEdges[0].targetNode.modelObject.props.object_name.dbValues[0]}}"
        },
        "results": {

            "displayName": "{{i18n.results}}",
            "type": "STRING",
            "isEditable": "false"
        },
        "customPathsMultiselect": {
            "displayName": "{{i18n.resultList}}",
            "type": "STRINGARRAY",
            "isArray": true,
            "dataProvider": "customPathsListProvider",
            "isEditable": "true",
            "renderingHint": "checkboxoptionlov"
        },
        "customPathText": {

            "displayName": "{{i18n.customResult}}",
            "type": "STRING",
            "isEditable": "true",
            "dbValue": ""
        },
        "errorCodeText": {

            "displayName": "{{i18n.addErrorCode}}",
            "type": "STRING",
            "isEditable": "true",
            "dbValue": ""
        },
        "conditionTaskRadioButton": {
            "displayName": "{{i18n.results}}",
            "type": "BOOLEAN",
            "isRequired": "false",
            "isEditable": "true",
            "dbValue": "",
            "labelPosition": "PROPERTY_LABEL_AT_SIDE"
        },
        "validateTaskRadioButton": {
            "displayName": "{{i18n.results}}",
            "type": "STRING",
            "isRequired": "false",
            "isEditable": "true",
            "labelPosition": "PROPERTY_LABEL_AT_SIDE"
        },
        "validateTaskRadioValues": {
            "type": "STRING",
            "dbValue": [
                {
                    "propDisplayValue": "{{i18n.allErrors}}",
                    "propInternalValue": "ANY"
                },
                {
                    "propDisplayValue": "{{i18n.selectedErrors}}",
                    "propInternalValue": "error"
                }
            ]
        }
    },
    "props": {
        "sub-panel-context": {
            "type": "object"
        }
    },
    "onEvent": [
        {
            "eventId": "workflowGraph.selectionChanged",
            "action": "closeCurrentOpenedPanel"
        },
        {
            "eventId": "workflowGraph.selectionChanged",
            "action": "updateEdgeDataInPropertiesTab"
        },
        {
            "eventId": "getEdgeProperties",
            "action": "getEdgeProperties"
        },
        {
            "eventId": "workflowDesigner.saveEdit",
            "action": "updateHandlerEdge"
        },
        {

            "eventId": "awGraph.labelTextChanged",
            "action": "labelTextChangeAction",
            "cacheEventData": true
        }
    ],
    "conditions": {
        "isConditionTaskTemplate": {

            "expression": "props.subPanelContext.workflowDgmState.selectedEdges.length > 0 && props.subPanelContext.workflowDgmState.selectedEdges[0].sourceNode.modelObject.type === 'EPMConditionTaskTemplate' && props.subPanelContext.workflowDgmState.selectedEdges[0].category === 'SuccessPath'"
        },
        "isValidateTaskTemplate": {

            "expression": "props.subPanelContext.workflowDgmState.selectedEdges.length > 0 && props.subPanelContext.workflowDgmState.selectedEdges[0].sourceNode.modelObject.type === 'EPMValidateTaskTemplate' && props.subPanelContext.workflowDgmState.selectedEdges[0].category === 'FailPath'"
        },
        "isTaskTemplateInEditMode": {
            "expression": "ctx.xrtSummaryContextObject && ctx.workflowDgmEditCtx.editObjectUids && ctx.workflowDgmEditCtx.editObjectUids.indexOf( ctx.xrtSummaryContextObject.uid ) > -1"
        }
    },
    "i18n": {
        "addTitle": [
            "WorkflowDesignerMessages"
        ],
        "save": [
            "InboxMessages"
        ],
        "resultList": [
            "WorkflowDesignerMessages"
        ],
        "customResult": [
            "WorkflowDesignerMessages"
        ],
        "sourceTask": [
            "WorkflowDesignerMessages"
        ],
        "targetTask": [
            "WorkflowDesignerMessages"
        ],
        "results": [
            "WorkflowDesignerMessages"
        ],
        "allErrors": [
            "WorkflowDesignerMessages"
        ],
        "selectedErrors": [
            "WorkflowDesignerMessages"
        ],
        "addErrorCode": [
            "WorkflowDesignerMessages"
        ]
    }
}
