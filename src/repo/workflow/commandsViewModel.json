{
  "commands": {
    "Awp0PromoteTask": {
      "iconId": "cmdPromoteTask",
      "isGroup": false,
      "title": "{{i18n.promote}}",
      "description": "{{i18n.Awp0PromoteTaskDesc}}"
    },
    "Awp0OutOfOffice": {
      "iconId": "cmdAssignTask",
      "isGroup": false,
      "title": "{{i18n.outOfOfficeCommandTitle}}",
      "description": "{{i18n.Awp0OutOfOfficeDesc}}"
    },
    "Awp0OpenInboxLocation": {
      "iconId": "cmdOpenInbox",
      "isGroup": false,
      "title": "{{i18n.openInboxLocationCommand}}",
      "description": "{{i18n.Awp0OpenInboxLocationDesc}}"
    },
    "Awp0InboxFilters": {
      "iconId": "cmdfilter",
      "isGroup": false,
      "title": "{{i18n.inboxFiltersCommandTitle}}",
      "description": "{{i18n.Awp0InboxFiltersDesc}}"
    },
    "Awp0InboxAddCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.surrogateAdd}}",
      "description": "{{i18n.surrogateAdd}}"
    },
    "Awp0SurrogateAddCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.surrogateAdd}}",
      "description": "{{i18n.Awp0SurrogateAddCmdDesc}}"
    },
    "Awp0AddReviewProfileSignoffCellCommand": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.surrogateAdd}}",
      "description": "{{i18n.Awp0AddReviewProfileSignoffCellCommandDesc}}"
    },
    "Awp0AddReviewAdhocSignoffCommand": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.surrogateAdd}}",
      "description": "{{i18n.Awp0AddReviewAdhocSignoffCommandDesc}}"
    },
    "Awp0RemoveReviewProfileSignoffCommand": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0RemoveReviewAdhocSignoffCommandDesc}}"
    },
    "Awp0RemoveReviewAdhocSignoffCommand": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0RemoveReviewAdhocSignoffCommandDesc}}"
    },
    "Awp0AddSurrogate": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addSurrogateTitle}}",
      "description": "{{i18n.Awp0AddSurrogateDesc}}"
    },
    "Awp0AddResourcePool": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.surrogateAdd}}",
      "description": "{{i18n.Awp0AddResourcePoolDesc}}"
    },
    "Awp0RemoveResourcePool": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0RemoveResourcePoolDesc}}"
    },
    "Awp0AddAcknowledgeAdhocSignoffCommand": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.add}}",
      "description": "{{i18n.Awp0AddAcknowledgeAdhocSignoffCommandDesc}}"
    },
    "Awp0RemoveAcknowledgeAdhocSignoffCommand": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0RemoveResourcePoolDesc}}"
    },
    "Awp0AddNotifyAdhocSignoffCommand": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.add}}",
      "description": "{{i18n.surrogateAdd}}"
    },
    "Awp0RemoveNotifyAdhocSignoffCommand": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0RemoveResourcePoolDesc}}"
    },
    "Awp0ReassignTask": {
      "iconId": "cmdAssignTask",
      "isGroup": false,
      "title": "{{i18n.reassign}}",
      "description": "{{i18n.Awp0ReassignTaskDesc}}"
    },
    "Awp0Release": {
      "iconId": "cmdRelease",
      "isGroup": false,
      "title": "{{i18n.releaseCommand}}",
      "description": "{{i18n.Awp0ReleaseDesc}}"
    },
    "Awp0StandIn": {
      "iconId": "cmdStandIn",
      "isGroup": false,
      "title": "{{i18n.standInCommand}}",
      "description": "{{i18n.Awp0StandInDesc}}"
    },
    "Awp0AddReviewer": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.add}}",
      "description": "{{i18n.Awp0AddReviewerDesc}}"
    },
    "Awp0RemoveSurrogate": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeSurrogateCommand}}",
      "description": "{{i18n.Awp0RemoveSurrogateDesc}}"
    },
    "Awp0PerformTaskPanel": {
      "iconId": "cmdPerformTask",
      "isGroup": false,
      "title": "{{i18n.performTask}}",
      "description": "{{i18n.Awp0PerformTaskPanelDesc}}"
    },
    "Awp0ClaimTask": {
      "iconId": "cmdClaimTask",
      "isGroup": false,
      "title": "{{i18n.claimTask}}",
      "description": "{{i18n.Awp0ClaimTaskDesc}}"
    },
    "Awp0AbortTask": {
      "iconId": "cmdAbortTask",
      "isGroup": false,
      "title": "{{i18n.abort}}",
      "description": "{{i18n.Awp0AbortTaskDesc}}"
    },
    "Awp0GoInbox": {
      "iconId": "cmdInbox",
      "title": "{{i18n.inboxTitle}}",
      "template": {
        "text": "{{ctx.unviewedWFTaskCount}}"
      },
      "description": "{{i18n.Awp0GoInboxDesc}}"
    },
    "Awp0GoInboxWithoutBubble": {
      "iconId": "cmdInbox",
      "title": "{{i18n.inboxTitle}}",
      "description": "{{i18n.Awp0GoInboxWithoutBubbleDesc}}"
    },
    "Awp0DemoteTask": {
      "iconId": "cmdDemoteTask",
      "isGroup": false,
      "title": "{{i18n.demote}}",
      "description": "{{i18n.Awp0DemoteTaskDesc}}"
    },
    "Awp0SuspendTask": {
      "iconId": "cmdSuspendTask",
      "isGroup": false,
      "title": "{{i18n.suspend}}",
      "description": "{{i18n.Awp0SuspendTaskDesc}}"
    },
    "Awp0ResumeTask": {
      "iconId": "cmdResumeTask",
      "isGroup": false,
      "title": "{{i18n.resume}}",
      "description": "{{i18n.Awp0ResumeTaskDesc}}"
    },
    "Awp0DeleteWorkflow": {
      "iconId": "cmdDelete",
      "title": "{{i18n.deleteWorkflow}}",
      "description": "{{i18n.Awp0DeleteWorkflowDesc}}"
    },
    "Awp0AddRemoteInboxCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.surrogateAdd}}",
      "description": "{{i18n.Awp0ShowAddObjectDesc}}"
    },
    "Awp0ReplaceMultipleParticipants": {
      "iconId": "cmdReplace",
      "isGroup": false,
      "title": "{{i18n.replaceMultipleParticipantsCommandTitle}}",
      "description": "{{i18n.Awp0ReplaceMultipleParticipantsDesc}}"
    },
    "OpenProcessInViewer": {
      "iconId": "cmdOpen",
      "isGroup": false
    },
    "Awp0FromSectionAddCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.assignFrom}}",
      "description": "{{i18n.Awp0FromSectionAddCmdDesc}}"
    },
    "Awp0ToSectionAddCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.assignTo}}",
      "description": "{{i18n.Awp0ToSectionAddCmdDesc}}"
    },
    "Awp0ReassignParticipantsRemoveCellCmd": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.removeCommandTitle}}"
    },
    "Awp0ToggleChildren": {
      "iconId": "cmdChild",
      "isGroup": false,
      "title": "{{i18n.hideChildren}}"
    },
    "Awp0ToggleSubProcessFixedLayout": {
      "iconId": "cmdShowOutgoingRelations",
      "isGroup": false,
      "title": "{{i18n.hideChildren}}"
    },
    "Awp0ToggleSubProcessAutoLayout": {
      "iconId": "cmdShowOutgoingRelations",
      "isGroup": false,
      "title": "{{i18n.hideChildren}}"
    },
    "Awp0NewWorkflowProcess": {
      "iconId": "cmdSubmitToWorkflow",
      "isGroup": false,
      "title": "{{i18n.Workflow_Title}}",
      "description": "{{i18n.Awp0NewWorkflowProcessDesc}}"
    },
    "Awp0AddParticipant": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Add}}",
      "description": "{{i18n.Awp0AddParticipantDesc}}"
    },
    "Awp0ReplaceParticipant": {
      "iconId": "cmdReplace",
      "isGroup": false,
      "title": "{{i18n.Replace_Title}}",
      "description": "{{i18n.Awp0ReplaceParticipantDesc}}"
    },
    "Awp0RemoveParticipant": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0RemoveParticipantDesc}}"
    },
    "Awp0AddProcessAssignmentCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Add}}",
      "description": "{{i18n.Awp0AddParticipantDesc}}"
    },
    "Awp0RemoveProcessAssignmentCmd": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0RemoveProcessAssignmentCmdDesc}}"
    },
    "Awp0AddTaskAssignmentCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Add}}",
      "description": "{{i18n.Awp0AddTaskAssignmentCmdDesc}}"
    },
    "Awp0RemoveTaskAssignmentCmd": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0RemoveTaskAssignmentCmdDesc}}"
    },
    "Awp0PasteUserAssignmentCmd": {
      "iconId": "cmdAssignUsers",
      "isGroup": false,
      "title": "{{i18n.assignCmdTitle}}",
      "description": "{{i18n.Awp0PasteUserAssignmentCmdDesc}}"
    },
    "Awp0PasteProfileUserAssignmentCmd": {
      "iconId": "cmdAssignUsers",
      "isGroup": false,
      "title": "{{i18n.assignCmdTitle}}",
      "description": "{{i18n.Awp0PasteUserAssignmentCmdDesc}}"
    },
    "Awp0ProfileSignoffCellCommand": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.add}}",
      "description": "{{i18n.Awp0ProfileSignoffCellCommandDesc}}"
    },
    "Awp0TasksAferSubmitProfileCellCommand": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.add}}",
      "description": "{{i18n.Awp0AddUsersAssignmentCmdDesc}}"
    },
    "Awp0AddUsersAssignmentCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Add}}",
      "description": "{{i18n.Awp0AddUsersAssignmentCmdDesc}}"
    },
    "Awp0RemoveUsersAssignmentCmd": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0RemoveProcessAssignmentCmdDesc}}"
    },
    "Awp0SaveAssignment": {
      "iconId": "cmdSave",
      "isGroup": false,
      "title": "{{i18n.saveEdit}}",
      "description": "{{i18n.Awp0SaveAssignmentDesc}}"
    },
    "Awp0CancelAssignment": {
      "iconId": "cmdCancelEdit",
      "isGroup": false,
      "title": "{{i18n.cancelEdit}}",
      "description": "{{i18n.Awp0CancelAssignmentDesc}}"
    },
    "Awp0StartEditAssignment": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.Awp0StartEditTitle}}",
      "description": "{{i18n.Awp0StartEditAssignmentDesc}}"
    },
    "Awp0WorkflowAutoLayoutTopToBottom": {
      "iconId": "cmdDownArrow",
      "isGroup": false,
      "title": "{{i18n.topToBottomLayout}}",
      "selected": {
        "iconId": "cmdDownArrow",
        "title": "{{i18n.topToBottomLayout}}"
      },
      "description": "{{i18n.topToBottomLayoutDesc}}"
    },
    "Awp0WorkflowAutoLayoutRightToLeft": {
      "iconId": "cmdLeftArrow",
      "isGroup": false,
      "title": "{{i18n.rightToLeftLayout}}",
      "selected": {
        "iconId": "cmdLeftArrow",
        "title": "{{i18n.rightToLeftLayout}}"
      },
      "description": "{{i18n.rightToLeftLayoutDesc}}"
    },
    "Awp0WorkflowAutoLayoutLeftToRight": {
      "iconId": "cmdRightArrow",
      "isGroup": false,
      "title": "{{i18n.leftToRightLayout}}",
      "selected": {
        "iconId": "cmdRightArrow",
        "title": "{{i18n.leftToRightLayout}}"
      },
      "description": "{{i18n.leftToRightLayoutDesc}}"
    },
    "Awp0WorkflowFixedLayout": {
      "iconId": "cmdFreezeExchange",
      "isGroup": false,
      "title": "{{i18n.fixedLayout}}",
      "selected": {
        "iconId": "cmdFreezeExchange",
        "title": "{{i18n.fixedLayout}}"
      },
      "description": "{{i18n.Awp0WorkflowFixedLayoutDesc}}"
    },
    "Awp0NewWorkflowSubProcess": {
      "iconId": "cmdSubmitToWorkflow",
      "isGroup": false,
      "title": "{{i18n.createWorkflowSubProcess}}",
      "description": "{{i18n.Awp0NewWorkflowSubProcessDesc}}"
    },
    "Awp0AddWorkflowProcessTarget": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Add_Title}}",
      "description": "{{i18n.Awp0AddWorkflowProcessTargetDesc}}"
    },
    "Awp0RemoveWorkflowProcessTarget": {
      "iconId": "cmdCut",
      "isGroup": false,
      "title": "{{i18n.Awp0CutTitle}}",
      "description": "{{i18n.Awp0RemoveWorkflowProcessTargetDesc}}"
    },
    "Awp0RemoveTaskAssignmentCtx": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0RemoveTaskAssignmentDesc}}"
    },
    "Awp0ReplaceTaskAssignmentCtx": {
      "iconId": "cmdReplace",
      "isGroup": false,
      "title": "{{i18n.Replace_Title}}",
      "description": "{{i18n.Awp0ReplaceTaskAssignmentDesc}}"
    },
    "Awp0WorkflowClosePopupCommand": {
      "iconId": "cmdClosePanel",
      "isGroup": false,
      "title": "{{i18n.closeText}}",
      "description": "{{i18n.Awp0CloseCommandPanelDesc}}"
    },
    "Awp0AddTaskParticipantAssignmentCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Add}}",
      "description": "{{i18n.Awp0AddTaskParticipantAssignmentCmdDesc}}"
    },
    "Awp0RemoveTaskParticipantAssignmentCmd": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0RemoveTaskParticipantAssignmentCmdDesc}}"
    },
    "Awp0AssignTask": {
      "iconId": "cmdAssignTask",
      "isGroup": false,
      "title": "{{i18n.assignTask}}",
      "description": "{{i18n.assignTask}}"
    },
    "Awp0ClearAllSelections": {
      "iconId": "cmdCheckmark",
      "isGroup": false,
      "title": "{{i18n.clearSelections}}",
      "description": "{{i18n.Awp0DeselectAllDesc}}"
    },
    "Awp0AddWorkflowProcessReference": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Add_Title}}",
      "description": "{{i18n.Add_Title}}"
    },
    "Awp0CreateWorkflow": {
      "iconId": "cmdSubmitToWorkflow",
      "isGroup": false,
      "title": "{{i18n.createWorkflow}}"
    },
    "Am0ManageACLForWD": {
      "iconId": "cmdManage",
      "title": "{{i18n.Am0ManageACLTitle}}",
      "description": "{{i18n.Am0ManageACLDesc}}"
    },
    "Awp0TaskMoveUp": {
      "iconId": "cmdMoveUp",
      "isGroup": false,
      "title": "{{i18n.moveUp}}",
      "description": "{{i18n.handlerMoveupDesc}}"
    },
    "Awp0TaskMoveDown": {
      "iconId": "cmdMoveDown",
      "isGroup": false,
      "title": "{{i18n.moveDown}}",
      "description": "{{i18n.handlerMoveDownDesc}}"
    },
    "Awp0HandlerMoveUp": {
      "iconId": "cmdMoveUp",
      "isGroup": false,
      "title": "{{i18n.exportMoveUpCommandTitle}}",
      "description": "{{i18n.handlerMoveupDesc}}"
    },
    "Awp0HandlerMoveDown": {
      "iconId": "cmdMoveDown",
      "isGroup": false,
      "title": "{{i18n.exportMoveDownCommandTitle}}",
      "description": "{{i18n.handlerMoveDownDesc}}"
    },
    "Awp0HandlerPasteForActionType": {
      "iconId": "cmdPaste",
      "isGroup": false,
      "title": "{{i18n.Awp0PasteTitle}}",
      "description": "{{i18n.pasteHandlerDesc}}"
    },
    "Awp0HandlerPasteForRuleQuorum": {
      "iconId": "cmdPaste",
      "isGroup": false,
      "title": "{{i18n.Awp0PasteTitle}}",
      "description": "{{i18n.pasteHandlerDesc}}"
    },
    "Awp0HandlerCut": {
      "iconId": "cmdCut",
      "isGroup": false,
      "title": "{{i18n.Awp0CutTitle}}",
      "description": "{{i18n.handlerCutDesc}}"
    },
    "Awp0HandlerCopy": {
      "iconId": "cmdCopy",
      "isGroup": false,
      "title": "{{i18n.Awp0CopyTitle}}",
      "description": "{{i18n.handlerCopyDesc}}"
    },
    "Awp0RemoveHandler": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.delete}}",
      "description": "{{i18n.Awp0RemoveHandlerDesc}}"
    },
    "Awp0NewWorkflowProcessTemplate": {
      "iconId": "cmdSubmitToWorkflow",
      "isGroup": false,
      "title": "{{i18n.newWorkflowProcessTemplate}}",
      "description": "{{i18n.Awp0NewWorkflowProcessTemplateDesc}}"
    },
    "Awp0RemoveProcessTemplate": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.delete}}",
      "description": "{{i18n.Awp0RemoveProcessTemplateDesc}}"
    },
    "Awp0ImportWorkflowTemplate": {
      "iconId": "cmdImport",
      "isGroup": false,
      "title": "{{i18n.import}}",
      "description": "{{i18n.Awp0ImportWorkflowTemplateDesc}}"
    },
    "Awp0ExportWorkflowTemplate": {
      "iconId": "cmdExport",
      "isGroup": false,
      "title": "{{i18n.export}}",
      "description": "{{i18n.Awp0ExportWorkflowTemplateDesc}}"
    },
    "Awp0ToggleTemplateChildren": {
      "iconId": "cmdChild",
      "isGroup": false,
      "title": "{{i18n.showChildren}}",
      "description": "{{i18n.Awp0ToggleTemplateChildrenDesc}}"
    },
    "Awp0WorkflowGraphGridSettings": {
      "iconId": "cmdSettings",
      "isGroup": false,
      "title": "{{i18n.gridSetting}}",
      "description": "{{i18n.Awp0WorkflowGraphGridSettingsDesc}}"
    },
    "Awp0TemplateFilters": {
      "iconId": "cmdfilter",
      "isGroup": false,
      "title": "{{i18n.inboxFiltersCommandTitle}}",
      "description": "{{i18n.Awp0TemplateFiltersDesc}}"
    },
    "Awp0TemplateStartEdit": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.Awp0StartEditTitle}}",
      "description": "{{i18n.Awp0TemplateStartEditDesc}}"
    },
    "Awp0TemplateSaveEdit": {
      "iconId": "cmdPublish",
      "isGroup": false,
      "title": "{{i18n.onlineOption}}",
      "description": "{{i18n.Awp0TemplateSaveEditDesc}}"
    },
    "Awp0TemplateEndEdit": {
      "iconId": "cmdSave",
      "isGroup": false,
      "title": "{{i18n.endTemplateEdit}}",
      "description": "{{i18n.Awp0TemplateEndEditDesc}}"
    },
    "Awp0ToggleShowTaskRelatedInfo": {
      "iconId": "cmdPropagateSelection",
      "isGroup": false,
      "title": "{{i18n.showTaskInfo}}",
      "description": "{{i18n.Awp0ToggleShowTaskRelatedInfoDesc}}"
    },
    "Awp0RemoveTaskTemplate": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.Awp0NameValueRemoveTitle}}",
      "description": "{{i18n.Awp0DeleteDesc}}"
    },
    "Awp0TemplateConvertToParent": {
      "iconId": "cmdConvertToParent",
      "isGroup": false,
      "title": "{{i18n.convertToParentCmdTitle}}",
      "description": "{{i18n.Awp0TemplateConvertToParentDesc}}"
    },
    "Awp0TemplateAddNotificationHandler": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addTitle}}",
      "description": "{{i18n.Awp0TemplateAddNotificationHandlerDesc}}"
    },
    "Awp0TemplateShowNotificationHandlerInfo": {
      "iconId": "cmdShowInfoPanel",
      "isGroup": false,
      "title": "{{i18n.Awp0ObjectInfoTitle}}",
      "description": "{{i18n.Awp0TemplateShowNotificationHandlerInfoDesc1}}"
    },
    "Awp0TemplateEditNotificationHandlerInfo": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.Awp0StartEditTableTitle}}",
      "description": "{{i18n.Awp0TemplateEditNotificationHandlerInfoDesc}}"
    },
    "Awp0TemplateRemoveNotificationHandler": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0TemplateRemoveNotificationHandlerDesc1}}"
    },
    "Awp0TemplateAddArgument": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addTitle}}",
      "description": "{{i18n.Awp0TemplateAddArgumentDesc}}"
    },
    "Awp0TemplateRemoveArgument": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0TemplateRemoveArgumentDesc}}"
    },
    "Awp0AddHandlerArgumentPanel": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addTitle}}",
      "description": "{{i18n.Awp0AddHandlerArgumentPanelDesc}}"
    },
    "Awp0RemoveHandlerArgumentPanel": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.delete}}",
      "description": "{{i18n.Awp0RemoveHandlerArgumentPanelDesc}}"
    },
    "Awp0AddArgument": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addArguments}}",
      "description": "{{i18n.Awp0AddHandlerArgumentPanelDesc}}"
    },
    "Awp0RemoveArgument": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.delete}}",
      "description": "{{i18n.Awp0RemoveHandlerArgumentPanelDesc}}"
    },
    "Awp0TemplateAddAssignmentHandler": {
      "iconId": "cmdAdd",
      "isGroup": true,
      "title": "{{i18n.addTitle}}",
      "description": "{{i18n.Awp0TemplateAddAssignmentHandlerDesc}}"
    },
    "Awp0TemplateAssignmentAssignee": {
      "iconId": "cmdAdd",
      "title": "{{i18n.RESPONSIBLE_PARTY}}",
      "isGroup": false,
      "selected": {
        "iconId": "cmdAdd",
        "title": "{{i18n.RESPONSIBLE_PARTY}}"
      },
      "description": "{{i18n.Awp0TemplateAssignmentAssigneeDesc}}"
    },
    "Awp0TemplateAssignmentAssigner": {
      "iconId": "cmdAdd",
      "title": "{{i18n.Assigner}}",
      "isGroup": false,
      "selected": {
        "iconId": "cmdAdd",
        "title": "{{i18n.Assigner}}"
      },
      "description": "{{i18n.Awp0TemplateAssignmentAssignerDesc}}"
    },
    "Awp0TemplateAssignmentReviewers": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addReviewerLabelText}}",
      "selected": {
        "iconId": "cmdAdd",
        "title": "{{i18n.addReviewerLabelText}}"
      },
      "description": "{{i18n.Awp0TemplateAssignmentReviewersDesc}}"
    },
    "Awp0TemplateAssignmentAcknowledgers": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Acknowledgers}}",
      "selected": {
        "iconId": "cmdAdd",
        "title": "{{i18n.Acknowledgers}}"
      },
      "description": "{{i18n.Awp0TemplateAssignmentAcknowledgersDesc}}"
    },
    "Awp0TemplateAssignmentNotifyees": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Notifyees}}",
      "selected": {
        "iconId": "cmdAdd",
        "title": "{{i18n.Notifyees}}"
      },
      "description": "{{i18n.Awp0TemplateAssignmentNotifyeesDesc}}"
    },
    "Awp0AddAssignmentUser": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addTitle}}",
      "description": "{{i18n.Awp0AddAssignmentUserDesc}}"
    },
    "Awp0TemplateReplaceProfile": {
      "iconId": "cmdReplace",
      "isGroup": false,
      "title": "{{i18n.Replace_Title}}",
      "description": "{{i18n.Awp0TemplateReplaceProfileDesc}}"
    },
    "Awp0TemplateShowProfileInfo": {
      "iconId": "cmdShowInfoPanel",
      "isGroup": false,
      "title": "{{i18n.Awp0ObjectInfoTitle}}",
      "description": "{{i18n.Awp0TemplateShowAssignmentHandlerInfoDesc}}"
    },
    "Awp0TemplateEditProfileInfo": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.Awp0StartEditTableTitle}}",
      "description": "{{i18n.Awp0TemplateEditAssignmentHandlerInfoDesc}}"
    },
    "Awp0TemplateShowAssignmentHandlerInfo": {
      "iconId": "cmdShowInfoPanel",
      "isGroup": false,
      "title": "{{i18n.Awp0ObjectInfoTitle}}",
      "description": "{{i18n.Awp0TemplateShowAssignmentHandlerInfoDesc}}"
    },
    "Awp0TemplateEditAssignmentHandlerInfo": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.Awp0StartEditTableTitle}}",
      "description": "{{i18n.Awp0TemplateEditAssignmentHandlerInfoDesc}}"
    },
    "Awp0TemplateRemoveSignoffProfile": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0TemplateRemoveAssignmentHandlerDesc}}"
    },
    "Awp0TemplateRemoveAssignmentHandler": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0TemplateRemoveAssignmentHandlerDesc}}"
    },
    "Awp0TemplateAddFormHandler": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addTitle}}"
    },
    "Awp0TemplateShowFormHandlerInfo": {
      "iconId": "cmdShowInfoPanel",
      "isGroup": false,
      "title": "{{i18n.Awp0ObjectInfoTitle}}"
    },
    "Awp0TemplateEditFormHandlerInfo": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.Awp0StartEditTableTitle}}"
    },
    "Awp0TemplateRemoveFormHandler": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.delete}}"
    },
    "Awp0SaveGraphPositions": {
      "iconId": "cmdSaveAsDiagram",
      "isGroup": false,
      "title": "{{i18n.saveGraphPosition}}",
      "description": "{{i18n.Awp0SaveGraphPositionsDesc}}"
    },
    "Awp0ShowFixedLayout": {
      "iconId": "cmdManualValidation",
      "isGroup": false,
      "title": "{{i18n.showFixedLayout}}",
      "description": "{{i18n.Awp0ShowFixedLayoutDesc}}"
    },
    "Awp0ShowAutoLayout": {
      "iconId": "cmdAutoLayout",
      "isGroup": false,
      "title": "{{i18n.showAutoLayout}}",
      "description": "{{i18n.Awp0ShowAutoLayoutDesc}}"
    },
    "Awp0WorkflowGraphLegendPanel": {
      "iconId": "cmdShowRelationsControls",
      "isGroup": false,
      "title": "{{i18n.taskPalette}}"
    },
    "Awp0HandlerHelp": {
      "iconId": "homeHelp",
      "isGroup": false,
      "title": "{{i18n.helpTitle}}",
      "description": "{{i18n.helpDesc}}"
    },
    "Awp0TemplateAssignmentProfileCellCommand": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Add_Title}}",
      "description": "{{i18n.Awp0TemplateAssignmentProfileCellCommandDesc}}"
    },
    "Awp0ImportPAL": {
      "iconId": "cmdImport",
      "isGroup": false,
      "title": "{{i18n.import}}",
      "description": "{{i18n.importPALDesc}}"
    },
    "Awp0ExportPAL": {
      "iconId": "cmdExport",
      "isGroup": false,
      "title": "{{i18n.export}}",
      "description": "{{i18n.exportPALDesc}}"
    },
    "Awp0AddTemplateUserAssignmentCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Add_Title}}",
      "description": "{{i18n.Awp0AddTemplateUserAssignmentCmdDesc}}"
    },
    "Awp0RemoveTemplateUsersAssignmentCmd": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeCommandTitle}}",
      "description": "{{i18n.Awp0RemoveProcessAssignmentCmdDesc}}"
    },
    "Awp0StartEditTemplateAssignment": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.Awp0StartEditTitle}}",
      "description": "{{i18n.Awp0StartEditTemplateAssignmentDesc}}"
    },
    "Awp0SaveTemplateAssignment": {
      "iconId": "cmdSave",
      "isGroup": false,
      "title": "{{i18n.saveEdit}}",
      "description": "{{i18n.Awp0SaveTemplateAssignmentDesc}}"
    },
    "Awp0CancelTemplateAssignment": {
      "iconId": "cmdCancelEdit",
      "isGroup": false,
      "title": "{{i18n.cancelEdit}}",
      "description": "{{i18n.Awp0CancelTemplateAssignmentDesc}}"
    },
    "Awp0CreateProcessAssignmentList": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.createProcessAssignmentList}}",
      "description": "{{i18n.Awp0CreateProcessAssignmentListDesc}}"
    },
    "Awp0RemovePAL": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removePAL}}",
      "description": "{{i18n.Awp0RemovePALDesc}}"
    }
  },
  "commandHandlers": {
    "OpenTaskCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "workflowShowDelegatedObject",
      "activeWhen": {
        "condition": "conditions.workflowOpenConditionActive"
      },
      "visibleWhen": {
        "condition": "conditions.workflowOpenConditionActive"
      }
    },
    "awp0PromoteTaskCommandHandler": {
      "id": "Awp0PromoteTask",
      "action": "awp0PromoteTaskCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0PromoteTaskCommandCondition"
      }
    },
    "awp0OutOfOfficeCommandHandler": {
      "id": "Awp0OutOfOffice",
      "action": "awp0OutOfOfficeCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0OutOfOfficeCommandCondition"
      }
    },
    "awp0OpenInboxLocationCommandHandler": {
      "id": "Awp0OpenInboxLocation",
      "action": "awp0OpenInboxLocationCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0OpenInboxLocationCommandCondition"
      }
    },
    "awp0InboxFiltersCommandHandler": {
      "id": "Awp0InboxFilters",
      "action": "awp0InboxFiltersCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0InboxFiltersCommandCondition"
      }
    },
    "Awp0InboxAddCmdHandler": {
      "id": "Awp0InboxAddCmd",
      "action": "awp0InboxUserTabSubPanelAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0SurrogateAddCmdHandler": {
      "id": "Awp0SurrogateAddCmd",
      "action": "openAddSurrogateUserPanel",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0UserAssignmentShowObjectCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "Awp0UserAssignmentShowDelegatedObject",
      "activeWhen": {
        "condition": "conditions.Awp0UserAssignmentOpenConditionActive"
      },
      "visibleWhen": {
        "condition": "conditions.Awp0UserAssignmentOpenConditionActive"
      }
    },
    "Awp0AddReviewProfileSignoffCellCommandHandler": {
      "id": "Awp0AddReviewProfileSignoffCellCommand",
      "action": "addReviewProfileSignoffCellCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddReviewProfileSignoffCommandVisible"
      }
    },
    "Awp0AddReviewAdhocSignoffCommandHandler": {
      "id": "Awp0AddReviewAdhocSignoffCommand",
      "action": "addReviewAdhocSignoffCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0RemoveReviewProfileSignoffCommandHandler": {
      "id": "Awp0RemoveReviewProfileSignoffCommand",
      "action": "removeReviewProfileSignoffCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isReviewProfileSignoffObjectsSelected"
      }
    },
    "Awp0RemoveReviewAdhocSignoffCommandHandler": {
      "id": "Awp0RemoveReviewAdhocSignoffCommand",
      "action": "removeReviewAdhocSignoffCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isReviewAdhocSignoffObjectsSelected"
      }
    },
    "Awp0AddSurrogateCommandHandler": {
      "id": "Awp0AddSurrogate",
      "action": "createPresenterForAddSurrogate",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.addSurrogateCmdCond"
      }
    },
    "Awp0AddResourcePoolCommandHandler": {
      "id": "Awp0AddResourcePool",
      "action": "AddResourcePoolCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.addResPoolSubCmdCond"
      }
    },
    "Awp0RemoveResourcePoolCommandHandler": {
      "id": "Awp0RemoveResourcePool",
      "action": "getUserSubscribeResourcePoolProps",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.removeSubResPool"
      }
    },
    "Awp0UserAssignmentShowObjectCellCommandHandler": {
      "id": "Awp0ShowObjectCell",
      "action": "openUserAssignmentCellAction",
      "activeWhen": {
        "condition": "conditions.Awp0UserAssignmentShowObjectCellCondition"
      },
      "visibleWhen": {
        "condition": "conditions.Awp0UserAssignmentShowObjectCellCondition"
      }
    },
    "Awp0AddAcknowledgeAdhocSignoffCommandHandler": {
      "id": "Awp0AddAcknowledgeAdhocSignoffCommand",
      "action": "addAcknowledgeAdhocSignoffCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0RemoveAcknowledgeAdhocSignoffCommandHandler": {
      "id": "Awp0RemoveAcknowledgeAdhocSignoffCommand",
      "action": "removeAcknowledgeAdhocSignoffCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAcknowledgeAdhocSignoffObjectsSelected"
      }
    },
    "Awp0AddNotifyAdhocSignoffCommandHandler": {
      "id": "Awp0AddNotifyAdhocSignoffCommand",
      "action": "addNotifyAdhocSignoffCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0RemoveNotifyAdhocSignoffCommandHandler": {
      "id": "Awp0RemoveNotifyAdhocSignoffCommand",
      "action": "removeNotifyAdhocSignoffCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isNotifyAdhocSignoffObjectsSelected"
      }
    },
    "Awp0ReassignTaskCommandHandler": {
      "id": "Awp0ReassignTask",
      "action": "reassignTaskAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0ReassignTaskCommandCondition"
      }
    },
    "Awp0ReleaseCommandHandler": {
      "id": "Awp0Release",
      "action": "releaseCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.releaseCmdCond"
      }
    },
    "inboxCopyCommandHandler": {
      "id": "Awp0Copy",
      "action": "copyUserAssignment",
      "activeWhen": {
        "condition": "conditions.isSurrogate"
      },
      "enableWhen": {
        "condition": "conditions.cmdCopyCommandVisible"
      }
    },
    "inboxCopyContextMenuCommandHandler": {
      "id": "Awp0CopyContextMenu",
      "action": "copyUserAssignment",
      "activeWhen": {
        "condition": "conditions.isSurrogate"
      },
      "visibleWhen": {
        "condition": "conditions.cmdCopyCommandVisible"
      }
    },
    "Awp0StandInCommandHandler": {
      "id": "Awp0StandIn",
      "action": "performStandInAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.standInCmdCond"
      }
    },
    "Awp0AddReviewerCmdHandler": {
      "id": "Awp0AddReviewer",
      "action": "setContextVariableForAddReviewer",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0AddReviewerCmdCond"
      }
    },
    "Awp0RemoveSurrogateCommandHandler": {
      "id": "Awp0RemoveSurrogate",
      "action": "getAwp0UserProperty",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.removeSurrogate"
      }
    },
    "Awp0PerformTaskCommandHandler": {
      "id": "Awp0PerformTaskPanel",
      "action": "isPerformTaskCommandClicked",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0PerformTaskCommandCondition"
      }
    },
    "Awp0ClaimTaskCommandHandler": {
      "id": "Awp0ClaimTask",
      "action": "ClaimTask",
      "activeWhen": {
        "condition": "conditions.claimTaskCmdCond"
      },
      "visibleWhen": {
        "condition": "conditions.claimTaskCmdCond"
      }
    },
    "Awp0ClaimSignoffCommandHandler": {
      "id": "Awp0ClaimTask",
      "action": "claimSignoffObject",
      "activeWhen": {
        "condition": "conditions.claimSignoffCmdCond"
      },
      "visibleWhen": {
        "condition": "conditions.claimSignoffCmdCond"
      }
    },
    "EPMTaskOrSignoffShowObjectCellNavigateCommandHandler": {
      "id": "Awp0ShowObjectCellForObjectNavigation",
      "action": "openEPMTaskOrSignoffCommandAction",
      "activeWhen": {
        "condition": "conditions.openEPMTaskOrSignoffCommandVisibleCondition"
      },
      "visibleWhen": {
        "condition": "conditions.openEPMTaskOrSignoffCommandVisibleCondition"
      }
    },
    "EPMTaskOrSignoffShowObjectCellCommandHandler": {
      "id": "Awp0ShowObjectCell",
      "action": "openEPMTaskOrSignoffCommandAction",
      "activeWhen": {
        "condition": "conditions.openEPMTaskOrSignoffCommandVisibleCondition"
      },
      "visibleWhen": {
        "condition": "conditions.openEPMTaskOrSignoffCommandVisibleCondition"
      }
    },
    "Awp0AbortTaskCommandHandler": {
      "id": "Awp0AbortTask",
      "action": "Awp0AbortTaskActivatePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0AbortTaskCommandVisibility"
      }
    },
    "Awp0UserAssignmentCutCommandHandler": {
      "id": "Awp0Cut",
      "activeWhen": {
        "condition": "conditions.Awp0UserAssignmentCutConditionActive"
      },
      "enableWhen": false
    },
    "Awp0UserAssignmentCutCtxMwenuCommandHandler": {
      "id": "Awp0CutContextMenu",
      "activeWhen": {
        "condition": "conditions.Awp0UserAssignmentCutConditionActive"
      },
      "visibleWhen": false
    },
    "Awp0SignoffReviewersCutCommandHandler": {
      "id": "Awp0Cut",
      "activeWhen": {
        "condition": "conditions.Awp0SignoffReviewersCutConditionActive"
      },
      "enableWhen": false
    },
    "Awp0SignoffReviewersCutCtxMwenuCommandHandler": {
      "id": "Awp0CutContextMenu",
      "activeWhen": {
        "condition": "conditions.Awp0SignoffReviewersCutConditionActive"
      },
      "visibleWhen": false
    },
    "Awp0GoInboxHandler": {
      "id": "Awp0GoInbox",
      "action": "showInbox",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.enableInboxWihBubbleCommand"
      }
    },
    "awp0DemoteTaskCommandHandler": {
      "id": "Awp0DemoteTask",
      "action": "awp0DemoteTaskCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0DemoteTaskCommandCondition"
      }
    },
    "awp0SuspendTaskCommandHandler": {
      "id": "Awp0SuspendTask",
      "action": "awp0SuspendTaskCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0SuspendTaskCommandCondition"
      }
    },
    "awp0ResumeTaskCommandHandler": {
      "id": "Awp0ResumeTask",
      "action": "awp0ResumeTaskCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0ResumeTaskCommandCondition"
      }
    },
    "showInboxWithoutBubbleCommandHandler": {
      "id": "Awp0GoInboxWithoutBubble",
      "action": "showInbox",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.enableInboxWithoutBubbleCommand"
      }
    },
    "Awp0DeleteTaskCommandHandler": {
      "id": "Awp0Delete",
      "action": "deleteTaskAction",
      "activeWhen": {
        "condition": "conditions.isDeleteTaskCommandActive"
      },
      "visibleWhen": false
    },
    "Awp0DeleteWorkflowCommandHandler": {
      "id": "Awp0DeleteWorkflow",
      "action": "deleteTaskAction",
      "activeWhen": {
        "condition": "conditions.isDeleteTaskCommandActive"
      },
      "visibleWhen": {
        "condition": "conditions.isDeleteTaskCommandVisible"
      }
    },
    "Awp0AddRemoteInboxCommandHandler": {
      "id": "Awp0AddRemoteInboxCmd",
      "action": "openAddRemoteInboxPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddRemoteInboxCommandVisible"
      }
    },
    "Awp0RemoteInboxShowObjectCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "openSelectedRemoteInboxObject",
      "activeWhen": {
        "condition": "conditions.openRemoteInboxCommandVisibleCondition"
      },
      "visibleWhen": {
        "condition": "conditions.openRemoteInboxCommandVisibleCondition"
      }
    },
    "Awp0RemoteInboxShowObjectCommandHandlerCellHandler": {
      "id": "Awp0ShowObjectCell",
      "action": "openContextRemoteInboxObject",
      "activeWhen": {
        "condition": "conditions.openRemoteInboxCellContextCommandVisibleCondition"
      },
      "visibleWhen": {
        "condition": "conditions.openRemoteInboxCellContextCommandVisibleCondition"
      }
    },
    "Awp0RemoteInboxInNewTabHandler": {
      "id": "Awp0OpenInNewTab",
      "action": "openSelectedRemoteInboxObject",
      "activeWhen": {
        "condition": "conditions.openRemoteInboxCommandVisibleCondition"
      },
      "visibleWhen": {
        "condition": "conditions.openRemoteInboxCommandVisibleCondition"
      }
    },
    "Awp0RemoteInboxInNewWindowHandler": {
      "id": "Awp0OpenInNewWindow",
      "action": "openSelectedRemoteInboxObject",
      "activeWhen": {
        "condition": "conditions.openRemoteInboxCommandVisibleCondition"
      },
      "visibleWhen": {
        "condition": "conditions.openRemoteInboxCommandVisibleCondition"
      }
    },
    "Awp0CutRemoteTaskInboxCommandHandler": {
      "id": "Awp0Cut",
      "action": "removeRemoteInboxSubscription",
      "activeWhen": {
        "condition": "conditions.isCutRemoteInboxCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isCutRemoteInboxCommandVisible"
      },
      "enableWhen": {
        "condition": "conditions.isCutRemoteInboxCommandVisible"
      }
    },
    "Awp0CutCtxMenuRemoteTaskInboxCommandHandler": {
      "id": "Awp0CutContextMenu",
      "action": "removeRemoteInboxSubscription",
      "activeWhen": {
        "condition": "conditions.isCutRemoteInboxCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isCutRemoteInboxCommandVisible"
      }
    },
    "Awp0RemoteInboxCreateTraceLinkHandler": {
      "id": "Arm0CreateTraceLinkCtx",
      "activeWhen": {
        "condition": "conditions.isRemoteInboxTracelinkCommandCondition"
      },
      "visibleWhen": false
    },
    "Awp0RemoteInboxArm0ExistingTraceLinkHandler": {
      "id": "Arm0ExistingTraceLink",
      "activeWhen": {
        "condition": "conditions.isRemoteInboxTracelinkCommandCondition"
      },
      "visibleWhen": false
    },
    "awp0ReplaceMultipleParticipantsCommandHandler": {
      "id": "Awp0ReplaceMultipleParticipants",
      "action": "awp0ReplaceMultipleParticipantsCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0ReplaceMultipleParticipantsCommandCondition"
      }
    },
    "Awp0ProfileSignoffCellCommandHandler": {
      "id": "Awp0ProfileSignoffCellCommand",
      "action": "awp0AddTasksAssignmentAction",
      "activeWhen": {
        "condition": "conditions.isProfileSubmitWithTemplateCellCommandActive"
      },
      "visibleWhen": {
        "condition": "conditions.isProfileSubmitWithTemplateCommandVisible"
      }
    },
    "openProcessInViewerCommandHandler": {
      "id": "OpenProcessInViewer",
      "action": "openProcessInViewerCommandAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0FromSectionAddCmdHandler": {
      "id": "Awp0FromSectionAddCmd",
      "action": "Awp0FromSectionAddCmdAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0ToggleChildrenCommandHandler": {
      "id": "Awp0ToggleChildren",
      "action": "expandChildren",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0ToggleSubProcessFixedLayoutCommandHandler": {
      "id": "Awp0ToggleSubProcessFixedLayout",
      "action": "expandSubProcess",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0ToggleSubProcessAutoLayoutCommandHandler": {
      "id": "Awp0ToggleSubProcessAutoLayout",
      "action": "expandChildren",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0ToSectionAddCmdHandler": {
      "id": "Awp0ToSectionAddCmd",
      "action": "Awp0ToSectionAddCmdAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0NewWorkflowProcessCommandHandler": {
      "id": "Awp0NewWorkflowProcess",
      "action": "getSubmitToWorkflowInputs",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0NewWorkflowProcessCommandCondition"
      },
      "selectWhen": {
        "condition": "conditions.isSubmitWorkflowPopupPanelActive"
      }
    },
    "Awp0AddParticipantCommandHandler": {
      "id": "Awp0AddParticipant",
      "action": "addParticipantBatchAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0AddParticipantCommandVisibility"
      }
    },
    "Awp0ReplaceParticipantCommandHandler": {
      "id": "Awp0ReplaceParticipant",
      "action": "replaceParticipantBatchAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0ReplaceParticipantCommandVisibility"
      }
    },
    "Awp0RemoveParticipantCommandHandler": {
      "id": "Awp0RemoveParticipant",
      "action": "removeParticipantBatchAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0RemoveParticipantCommandVisibility"
      }
    },
    "Awp0ProcessAssignmentCommandHandler": {
      "id": "Awp0AddProcessAssignmentCmd",
      "action": "awp0ProcessAssignmentAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0ProcessAssignmentCommandVisibility"
      }
    },
    "Awp0RemoveProcessAssignmentCommandHandler": {
      "id": "Awp0RemoveProcessAssignmentCmd",
      "action": "removeParticipantAssignments",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0RemoveProcessAssignmentCommandVisibility"
      }
    },
    "WorkflowShowLegendHandler": {
      "id": "graphLegend",
      "activeWhen": {
        "condition": "conditions.WorkflowShowLegendHandlerConditionActive"
      },
      "visibleWhen": false
    },
    "Awp0AddTasksAssignmentCommandHandler": {
      "id": "Awp0AddTaskAssignmentCmd",
      "action": "awp0AddTasksAssignmentAction",
      "activeWhen": {
        "condition": "conditions.Awp0AddTaskAssignmentCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.Awp0AddTaskAssignmentCommandVisibility"
      }
    },
    "Awp0RemoveTaskAssignmentCommandHandler": {
      "id": "Awp0RemoveTaskAssignmentCmd",
      "action": "awp0RemoveTaskAssignmentAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0RemoveTaskAssignmentCommandVisibility"
      }
    },
    "Awp0PasteUserAssignmentCmdCommandHandler": {
      "id": "Awp0PasteUserAssignmentCmd",
      "action": "awp0PasteUsersAssignmentAction",
      "activeWhen": {
        "condition": "conditions.Awp0PasteUsersAssignmentCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.Awp0PasteUsersAssignmentCommandVisibility"
      }
    },
    "Awp0PasteProfileUserAssignmentCmdCommandHandler": {
      "id": "Awp0PasteProfileUserAssignmentCmd",
      "action": "awp0PasteUsersAssignmentAction",
      "activeWhen": {
        "condition": "conditions.Awp0PasteProfileUsersAssignmentCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.Awp0PasteProfileUsersAssignmentCommandVisibility"
      }
    },
    "Awp0StartEditCommandDelegate": {
      "id": "Awp0StartEdit",
      "activeWhen": {
        "condition": "conditions.Awp0StartEditConditionActive"
      },
      "visibleWhen": false
    },
    "Awp0WorkflowAutoLayoutTopToBottomCmdHandler": {
      "id": "Awp0WorkflowAutoLayoutTopToBottom",
      "action": "setWorkflowViewerActiveLayoutAsTopToBottom",
      "activeWhen": {
        "condition": "conditions.cmdWorkflowViewerLayoutOptionsActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdWorkflowViewerLayoutOptionsActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdWorkflowViewerTopToBottomLayoutSelected"
      }
    },
    "Awp0WorkflowAutoLayoutRightToLeftCmdHandler": {
      "id": "Awp0WorkflowAutoLayoutRightToLeft",
      "action": "setWorkflowViewerActiveLayoutAsRightToLeft",
      "activeWhen": {
        "condition": "conditions.cmdWorkflowViewerLayoutOptionsActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdWorkflowViewerLayoutOptionsActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdWorkflowViewerRightToLeftLayoutSelected"
      }
    },
    "Awp0WorkflowAutoLayoutLeftToRightCmdHandler": {
      "id": "Awp0WorkflowAutoLayoutLeftToRight",
      "action": "setWorkflowViewerActiveLayoutAsLeftToRight",
      "activeWhen": {
        "condition": "conditions.cmdWorkflowViewerLayoutOptionsActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdWorkflowViewerLayoutOptionsActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdWorkflowViewerLeftToRightLayoutSelected"
      }
    },
    "Awp0WorkflowFixedLayoutCmdHandler": {
      "id": "Awp0WorkflowFixedLayout",
      "action": "setWorkflowViewerActiveLayoutAsFixed",
      "activeWhen": {
        "condition": "conditions.cmdWorkflowViewerFixedLayoutActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdWorkflowViewerFixedLayoutActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdWorkflowViewerFixedLayoutSelected"
      }
    },
    "InboxSaveEditsPWACommandHandler": {
      "id": "Awp0SaveEditsPWA",
      "action": "saveEditsInboxPWA",
      "activeWhen": {
        "condition": "conditions.isInboxEditInProgress"
      },
      "visibleWhen": {
        "condition": "conditions.isInboxEditInProgress"
      }
    },
    "InboxCancelEditsPWAHandler": {
      "id": "Awp0CancelEditsPWA",
      "action": "isDirtyInboxOnCancelEditsPWA",
      "activeWhen": {
        "condition": "conditions.isInboxEditInProgress"
      },
      "visibleWhen": {
        "condition": "conditions.isInboxEditInProgress"
      }
    },
    "Awp0NewWorkflowSubProcessCmdHandler": {
      "id": "Awp0NewWorkflowSubProcess",
      "action": "createWorkflowSubProcess",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isCreateSubProcessCommandVisible"
      },
      "selectWhen": {
        "condition": "conditions.isSubmitWorkflowPopupPanelActive"
      }
    },
    "Awp0AddWorkflowProcessTargetCmdHandler": {
      "id": "Awp0AddWorkflowProcessTarget",
      "action": "addWorkflowProcessTargets",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddProcessTargetCommandVisible"
      }
    },
    "Awp0RemoveWorkflowProcessTargetCmdHandler": {
      "id": "Awp0RemoveWorkflowProcessTarget",
      "action": "removeWorkflowProcessTarget",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveSelectedProcessTargetCommandVisible"
      }
    },
    "Awp0SelectAllWorkflowTargetHandler": {
      "id": "Awp0SelectAllObjectSet",
      "action": "selectAllWorkflowTargetAction",
      "activeWhen": {
        "condition": "conditions.awp0SelectAllWorkflowTargetCondition"
      },
      "visibleWhen": {
        "condition": "conditions.awp0SelectAllWorkflowTargetCondition"
      }
    },
    "Awp0StartEditTaskAssignmentCommandHandler": {
      "id": "Awp0StartEditAssignment",
      "action": "startEditTaskAssignmentBatchAction",
      "activeWhen": {
        "condition": "conditions.Awp0StartEditTaskAssignmentCommandActive"
      },
      "visibleWhen": {
        "condition": "conditions.Awp0StartEditTaskAssignmentCommandVisibility"
      }
    },
    "Awp0SaveTaskAssignmentCommandHandler": {
      "id": "Awp0SaveAssignment",
      "action": "saveTaskAssignmentBatchAction",
      "activeWhen": {
        "condition": "conditions.Awp0SaveTaskAssignmentCommandVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.Awp0SaveTaskAssignmentCommandVisibility"
      }
    },
    "Awp0CancelTaslAssignmentCommandHandler": {
      "id": "Awp0CancelAssignment",
      "action": "cancelTaskAssignmentAction",
      "activeWhen": {
        "condition": "conditions.Awp0CancelTaskAssignmentCommandVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.Awp0CancelTaskAssignmentCommandVisibility"
      }
    },
    "Awp0RemoveTaskAssignmentCtxCmdHandler": {
      "id": "Awp0RemoveTaskAssignmentCtx",
      "action": "removeTaskAssignment",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveTaskAssignmentCtxCommandVisible"
      }
    },
    "Awp0ReplaceTaskAssignmentCtxCmdHandler": {
      "id": "Awp0ReplaceTaskAssignmentCtx",
      "action": "replaceTaskAssignments",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isReplaceTaskAssignmentCtxCommandVisible"
      }
    },
    "Awp0AddUsersTaskAssignmentCommandHandler": {
      "id": "Awp0AddUsersAssignmentCmd",
      "action": "addUsersTaskAssignmentAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0AddUserAfterSubmitCommandVisible"
      }
    },
    "Awp0RemoveUsersTaskAssignmentCommandHandler": {
      "id": "Awp0RemoveUsersAssignmentCmd",
      "action": "removeTaskAssignemntAfterSubmit",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0RemoveUserAfterSubmitCommandVisible"
      }
    },
    "Awp0TasksAferSubmitProfileCellCommandHandler": {
      "id": "Awp0TasksAferSubmitProfileCellCommand",
      "action": "addUsersTaskAssignmentAction",
      "activeWhen": {
        "condition": "conditions.Awp0TasksAferSubmitProfileCellCommandActive"
      },
      "visibleWhen": {
        "condition": "conditions.Awp0TasksAferSubmitProfileCellCommandVisible"
      }
    },
    "Awp0WorkflowClosePopupCommandHandler": {
      "id": "Awp0WorkflowClosePopupCommand",
      "action": "workflowPopupPanelCloseAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0AddTaskParticipantAssignmentCommandHandler": {
      "id": "Awp0AddTaskParticipantAssignmentCmd",
      "action": "addTaskParticipantAssignmentAfterSubmit",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddTaskParticipantAssignmentCommandVisible"
      }
    },
    "Awp0RemoveTaskParticipantAssignmentCommandHandler": {
      "id": "Awp0RemoveTaskParticipantAssignmentCmd",
      "action": "removeTaskParticipantAssignemntAfterSubmit",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveTaskParticipantAssignmentCommandVisible"
      }
    },
    "Awp0AssignTaskCommandHandler": {
      "id": "Awp0AssignTask",
      "action": "assignTaskAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0AssignTaskCommandCondition"
      }
    },
    "Awp0ReassignParticipantsRemoveCellCmdCommandHandler": {
      "id": "Awp0ReassignParticipantsRemoveCellCmd",
      "action": "removeUsersFromReassignParticipants",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0AddWorkflowProcessReferenceCmdHandler": {
      "id": "Awp0AddWorkflowProcessReference",
      "action": "addWorkflowProcessReferences",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddProcessTargetCommandVisible"
      }
    },
    "Awp0ClearAllSelectionsCmdHandler": {
      "id": "Awp0ClearAllSelections",
      "action": "selectNoneWorkflowAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveSelectedProcessTargetCommandVisible"
      }
    },
    "Awp0CreateWorkflowCommandHandler": {
      "id": "Awp0CreateWorkflow",
      "action": "getSubmitToWorkflowInputs",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.displayCreateWorkflow"
      }
    },
    "Am0AddACEEntryCommandHandlerForWD": {
      "id": "Am0AddACEEntry",
      "action": "Am0AddACEEntryAction",
      "activeWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "visibleWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "enableWhen": true
    },
    "Am0RemoveACEEntryCommandHandlerForWD": {
      "id": "Am0RemoveACEEntry",
      "action": "Am0RemoveACEEntryAction",
      "activeWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "visibleWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "enableWhen": true
    },
    "Am0AllowPrivilegeCommandHandlerForWD": {
      "id": "Am0AllowALLPrivilegeCommand",
      "action": "Am0AllowALLPrivilegeAction",
      "activeWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "visibleWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "enableWhen": true
    },
    "Am0DenyPrivilegeCommandHandlerForWD": {
      "id": "Am0DenyALLPrivilegeCommand",
      "action": "Am0DenyALLPrivilegeAction",
      "activeWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "visibleWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "enableWhen": true
    },
    "Am0ResetPrivilegesCommandHandlerForWD": {
      "id": "Am0ResetPrivilegesCommand",
      "action": "Am0ResetPrivilegesAction",
      "activeWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "visibleWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "enableWhen": true
    },
    "Am0ClearAllCommandHandlerForWD": {
      "id": "Am0ClearAllCommand",
      "action": "Am0ClearAllAction",
      "activeWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "visibleWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "enableWhen": true
    },
    "Am0AddAlsACEEntryCommandHandlerForWD": {
      "id": "Am0AddAlsACEEntry",
      "action": "Am0AddAlsACEEntryAction",
      "activeWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "visibleWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "enableWhen": true
    },
    "Am0RemoveAlsACEEntryCommandHandlerForWD": {
      "id": "Am0RemoveAlsACEEntry",
      "action": "Am0RemoveAlsACEEntryAction",
      "activeWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "visibleWhen": {
        "condition": "conditions.isValidWDLocationWithEditCriteria"
      },
      "enableWhen": true
    },
    "Am0ManageACLCommandHandlerForWorkflow": {
      "id": "Am0ManageACLForWD",
      "action": "showAm0ManageACLForWD",
      "activeWhen": {
        "condition": "conditions.manageACLCommandVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.manageACLCommandVisibility"
      }
    },
    "Awp0TaskMoveUpCommandHandler": {
      "id": "Awp0TaskMoveUp",
      "action": "moveUpTask",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAwp0TaskMoveUpCommandVisible"
      }
    },
    "Awp0TaskMoveDownCommandHandler": {
      "id": "Awp0TaskMoveDown",
      "action": "moveDownTask",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAwp0TaskMoveDownCommandVisible"
      }
    },
    "Awp0HandlerMoveUpCommandHandler": {
      "id": "Awp0HandlerMoveUp",
      "action": "moveUpHandler",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAwp0HandlerMoveUpCommandVisible"
      }
    },
    "Awp0HandlerMoveDownCommandHandler": {
      "id": "Awp0HandlerMoveDown",
      "action": "moveDownHandler",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAwp0HandlerMoveDownCommandVisible"
      }
    },
    "Awp0HandlerCutCommandHandler": {
      "id": "Awp0HandlerCut",
      "action": "cutHandlerOpertaion",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAwp0CutHandlerCommandVisible"
      }
    },
    "Awp0HandlerPasteForActionTypeCommandHandler": {
      "id": "Awp0HandlerPasteForActionType",
      "action": "pasteHandlerForActionType",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAwp0HandlerPasteForActionTypeCommandVisible"
      }
    },
    "Awp0HandlerPasteForRuleQuorumCommandHandler": {
      "id": "Awp0HandlerPasteForRuleQuorum",
      "action": "pasteHandlerForRuleQuorum",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAwp0HandlerPasteForRuleQuorumCommandVisible"
      }
    },
    "Awp0HandlerCopyCommandHandler": {
      "id": "Awp0HandlerCopy",
      "action": "copyHandler",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAwp0CopyHandlerCommandVisible"
      }
    },
    "Awp0RemoveHandlerCommandHandler": {
      "id": "Awp0RemoveHandler",
      "action": "RemoveHandler",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAwp0RemoveHandlerCommandVisible"
      }
    },
    "Awp0NewWorkflowProcessTemplateCommandHandler": {
      "id": "Awp0NewWorkflowProcessTemplate",
      "action": "awp0NewWorkflowProcessTemplateOpenPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0NewWorkflowProcessTemplateCommandCondition"
      }
    },
    "Awp0RemoveProcessTemplateCommandHandler": {
      "id": "Awp0RemoveProcessTemplate",
      "action": "removeProcessTemplateAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.removeProcessTemplateCondition"
      }
    },
    "importWorkflowTemplateCommandHandler": {
      "id": "Awp0ImportWorkflowTemplate",
      "action": "importWorkflowTemplate",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isImportWorkflowTemplateCmdVisible"
      }
    },
    "exportWorkflowTemplateCommandHandler": {
      "id": "Awp0ExportWorkflowTemplate",
      "action": "exportWorkflowTemplate",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isExportWorkflowTemplateCmdVisible"
      }
    },
    "Awp0ToggleTemplateChildrenCommandHandler": {
      "id": "Awp0ToggleTemplateChildren",
      "action": "expandTemplateChildren",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0WorkflowGraphGridSettingsCommandHandler": {
      "id": "Awp0WorkflowGraphGridSettings",
      "action": "activateWorkflowDesignerGridSettingsPanel",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": true
    },
    "Awp0TemplateFiltersCommandHandler": {
      "id": "Awp0TemplateFilters",
      "action": "awp0TemplateFiltersCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0TemplateFiltersCommandCondition"
      }
    },
    "Awp0TemplateStartEditCommandHandler": {
      "id": "Awp0TemplateStartEdit",
      "action": "startEditTemplateAction",
      "activeWhen": {
        "condition": "conditions.isTemplateStartEditCommandVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.isTemplateStartEditCommandVisibility"
      }
    },
    "Awp0TemplateSaveCommandHandler": {
      "id": "Awp0TemplateSaveEdit",
      "action": "saveTemplateAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isTemplateEditCommandVisibility"
      }
    },
    "Awp0TemplateEndEditCommandHandler": {
      "id": "Awp0TemplateEndEdit",
      "action": "endEditsTemplateAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isTemplateEndEditCommandVisibility"
      }
    },
    "Awp0ToggleShowTaskRelatedInfoCommandHandler": {
      "id": "Awp0ToggleShowTaskRelatedInfo",
      "action": "toggleShowTaskRelatedInfo",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0ToggleShowTaskRelatedInfoCmdCond"
      },
      "selectWhen": {
        "condition": "conditions.Awp0ToggleShowTaskRelatedInfoActive"
      }
    },
    "Awp0RemoveTaskTemplateCommandHandler": {
      "id": "Awp0RemoveTaskTemplate",
      "action": "removeTaskTemplateAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isTaskTemplateRemoveCommandVisibility"
      }
    },
    "Awp0TemplateConvertToParentCommandHandler": {
      "id": "Awp0TemplateConvertToParent",
      "action": "convertToParentTemplateAction",
      "activeWhen": true,
      "visibleWhen": false
    },
    "Awp0TemplateAddNotificationHandlerCommandHandler": {
      "id": "Awp0TemplateAddNotificationHandler",
      "action": "addNotificationHandlerAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddNotificationHandler"
      }
    },
    "Awp0TemplateShowNotificationHandlerInfoCommandHandler": {
      "id": "Awp0TemplateShowNotificationHandlerInfo",
      "action": "showNotificationHandlerInfoAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isShowNotificationHandler"
      }
    },
    "Awp0TemplateEditNotificationHandlerInfoCommandHandler": {
      "id": "Awp0TemplateEditNotificationHandlerInfo",
      "action": "editNotificationHandlerInfoAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isEditNotificationHandler"
      }
    },
    "Awp0TemplateRemoveNotificationHandlerCommandHandler": {
      "id": "Awp0TemplateRemoveNotificationHandler",
      "action": "removeNotificationHandlerAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveNotificationHandler"
      }
    },
    "Awp0TemplateAddArgumentCommandHandler": {
      "id": "Awp0TemplateAddArgument",
      "action": "addKeyRoleArguments",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddTemplateArgumentCommandVisible"
      }
    },
    "Awp0TemplateRemoveArgumentCommandHandler": {
      "id": "Awp0TemplateRemoveArgument",
      "action": "removeKeyRoleArguments",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveTemplateArgumentCommandVisible"
      }
    },
    "Awp0AddArgumentCommandHandler": {
      "id": "Awp0AddArgument",
      "action": "Awp0AddHandlerArgument",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddHandlerArgumentCommandVisible"
      }
    },
    "Awp0RemoveArgumentCommandHandler": {
      "id": "Awp0RemoveArgument",
      "action": "Awp0RemoveArgumentAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveArgumentCommandVisible"
      }
    },
    "Awp0TemplateAddAssignmentHandlerCommandHandler": {
      "id": "Awp0TemplateAddAssignmentHandler",
      "action": "",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddAssignmentHandler"
      }
    },
    "Awp0TemplateAssignmentAssigneeCommandHandler": {
      "id": "Awp0TemplateAssignmentAssignee",
      "action": "addAssigneeAssignmentHandler",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddAssigneeAssignmentHandler"
      }
    },
    "Awp0TemplateAssignmentAssignerCommandHandler": {
      "id": "Awp0TemplateAssignmentAssigner",
      "action": "addAssignerAssignmentHandler",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddAssignerAssignmentHandler"
      }
    },
    "Awp0TemplateAssignmentReviewersCommandHandler": {
      "id": "Awp0TemplateAssignmentReviewers",
      "action": "addReviewersAssignmentHandler",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddReviewersAssignmentHandler"
      }
    },
    "Awp0TemplateAssignmentAcknowledgersCommandHandler": {
      "id": "Awp0TemplateAssignmentAcknowledgers",
      "action": "addAcknowledgersAssignmentHandler",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddAcknowledgersAssignmentHandler"
      }
    },
    "Awp0TemplateAssignmentNotifyeesCommandHandler": {
      "id": "Awp0TemplateAssignmentNotifyees",
      "action": "addNotifyeesAssignmentHandler",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddNotifyeesAssignmentHandler"
      }
    },
    "Awp0AddAssignmentUserCommandHandler": {
      "id": "Awp0AddAssignmentUser",
      "action": "addAssignmentUsers",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddAssignmentUserVisible"
      }
    },
    "Awp0TemplateReplaceProfileCommandHandler": {
      "id": "Awp0TemplateReplaceProfile",
      "action": "replaceTemplateProfile",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isReplaceProfileCommandVisible"
      }
    },
    "Awp0TemplateShowAssignmentHandlerInfoCommandHandler": {
      "id": "Awp0TemplateShowAssignmentHandlerInfo",
      "action": "showAssignmentHandlerInfoAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isShowAssignemntHandler"
      }
    },
    "Awp0TemplateEditAssignmentHandlerInfoCommandHandler": {
      "id": "Awp0TemplateEditAssignmentHandlerInfo",
      "action": "editAssignmentHandlerInfoAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isEditAssignemntHandler"
      }
    },
    "Awp0TemplateShowProfileInfoCommandHandler": {
      "id": "Awp0TemplateShowProfileInfo",
      "action": "showProfileInfoAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isShowProfileInfo"
      }
    },
    "Awp0TemplateEditProfileInfoCommandHandler": {
      "id": "Awp0TemplateEditProfileInfo",
      "action": "showProfileInfoAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isEditProfileInfo"
      }
    },
    "Awp0TemplateRemoveSignoffProfileCommandHandler": {
      "id": "Awp0TemplateRemoveSignoffProfile",
      "action": "removeSignoffProfileAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveSignoffProfile"
      }
    },
    "Awp0TemplateRemoveAssignmentHandlerCommandHandler": {
      "id": "Awp0TemplateRemoveAssignmentHandler",
      "action": "removeAssignmentHandlerAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveAssignmentHandler"
      }
    },
    "Awp0TemplateAddFormHandlerCommandHandler": {
      "id": "Awp0TemplateAddFormHandler",
      "action": "addFormHandlerAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddFormHandler"
      }
    },
    "Awp0TemplateShowFormHandlerInfoCommandHandler": {
      "id": "Awp0TemplateShowFormHandlerInfo",
      "action": "showFormHandlerInfoAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isShowFormHandler"
      }
    },
    "Awp0TemplateEditFormHandlerInfoCommandHandler": {
      "id": "Awp0TemplateEditFormHandlerInfo",
      "action": "editFormHandlerInfoAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isEditFormHandler"
      }
    },
    "Awp0TemplateRemoveFormHandlerCommandHandler": {
      "id": "Awp0TemplateRemoveFormHandler",
      "action": "removeFormHandlerAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveFormHandler"
      }
    },
    "Awp0WorkflowGraphLegendPanelCommandHandler": {
      "id": "Awp0WorkflowGraphLegendPanel",
      "action": "showWorkflowGraphLegendPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isTaskPaletteVisible"
      },
      "selectWhen": {
        "condition": "conditions.isTaskPaletteSelected"
      }
    },
    "Awp0SaveGraphPositionsCommandHandler": {
      "id": "Awp0SaveGraphPositions",
      "action": "saveGraphPositions",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isSaveNodePositions"
      }
    },
    "Awp0ShowFixedLayoutCommandHandler": {
      "id": "Awp0ShowFixedLayout",
      "action": "showFixedLayout",
      "activeWhen": true,
      "visibleWhen": false
    },
    "Awp0ShowAutoLayoutCommandHandler": {
      "id": "Awp0ShowAutoLayout",
      "action": "showAutoLayout",
      "activeWhen": true,
      "visibleWhen": false
    },
    "Awp0WorkflowDesignerAutoLayoutTopToBottomCmdHandler": {
      "id": "Awp0WorkflowAutoLayoutTopToBottom",
      "action": "setWorkflowDesignerActiveLayoutAsTopToBottom",
      "activeWhen": {
        "condition": "conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
      },
      "visibleWhen": {
        "condition": "conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdWorkflowDesignerTopToBottomLayoutSelected"
      }
    },
    "Awp0WorkflowDesignerAutoLayoutRightToLeftCmdHandler": {
      "id": "Awp0WorkflowAutoLayoutRightToLeft",
      "action": "setWorkflowDesignerActiveLayoutAsRightToLeft",
      "activeWhen": {
        "condition": "conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
      },
      "visibleWhen": {
        "condition": "conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdWorkflowDesignerRightToLeftLayoutSelected"
      }
    },
    "Awp0WorkflowDesignerAutoLayoutLeftToRightCmdHandler": {
      "id": "Awp0WorkflowAutoLayoutLeftToRight",
      "action": "setWorkflowDesignerActiveLayoutAsLeftToRight",
      "activeWhen": {
        "condition": "conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
      },
      "visibleWhen": {
        "condition": "conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdWorkflowDesignerLeftToRightLayoutSelected"
      }
    },
    "Awp0WorkflowDesignerFixedLayoutCmdHandler": {
      "id": "Awp0WorkflowFixedLayout",
      "action": "setWorkflowDesignerActiveLayoutAsFixed",
      "activeWhen": {
        "condition": "conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
      },
      "visibleWhen": {
        "condition": "conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdWorkflowDesignerFixedLayoutSelected"
      }
    },
    "Awp0HandlerHelpCommandHandler": {
      "id": "Awp0HandlerHelp",
      "action": "Awp0HandlerHelpCommandAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "importPALCommandHandler": {
      "id": "Awp0ImportPAL",
      "action": "actionImportPAL",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isImportPALCmdVisible"
      }
    },
    "exportPALCommandHandler": {
      "id": "Awp0ExportPAL",
      "action": "actionExportPAL",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isExportPALCmdVisible"
      }
    },
    "Awp0PasteTemplateUserAssignmentCmdCommandHandler": {
      "id": "Awp0PasteUserAssignmentCmd",
      "action": "awp0PasteTemplateUsersAssignmentAction",
      "activeWhen": {
        "condition": "conditions.Awp0PasteTemplateUsersAssignmentCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.Awp0PasteTemplateUsersAssignmentCommandVisibility"
      }
    },
    "Awp0PasteTemplateProfileUserAssignmentCmdCommandHandler": {
      "id": "Awp0PasteProfileUserAssignmentCmd",
      "action": "awp0PasteTemplateUsersAssignmentAction",
      "activeWhen": {
        "condition": "conditions.Awp0PastePALProfileUsersAssignmentCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.Awp0PastePALProfileUsersAssignmentCommandVisibility"
      }
    },
    "Awp0TemplateAssignmentProfileCellCommandHandler": {
      "id": "Awp0TemplateAssignmentProfileCellCommand",
      "action": "addUsersTemplateAssignmentAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isProfileCommandVisible"
      }
    },
    "Awp0AddTemplateUserAssignmentCommandHandler": {
      "id": "Awp0AddTemplateUserAssignmentCmd",
      "action": "addUsersTemplateAssignmentAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddTemplateUserAssignmentCommandVisible"
      }
    },
    "Awp0RemoveTemplateUsersAssignmentCommandHandler": {
      "id": "Awp0RemoveTemplateUsersAssignmentCmd",
      "action": "removeUsersTemplateAssignmentAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveTemplateAssignmentCommandVisible"
      }
    },
    "Awp0StartEditTemplateAssignmentCommandHandler": {
      "id": "Awp0StartEditTemplateAssignment",
      "action": "startEditTemplateAssignment",
      "activeWhen": {
        "condition": "conditions.isTemplateAssignmentStartEditCommandVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.isTemplateAssignmentStartEditCommandVisibility"
      }
    },
    "Awp0SaveTemplateAssignmentCommandHandler": {
      "id": "Awp0SaveTemplateAssignment",
      "action": "saveTemplateAssignmentAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isTemplateAssignmentEditCommandVisibility"
      }
    },
    "Awp0CancelTemplateAssignmentCommandHandler": {
      "id": "Awp0CancelTemplateAssignment",
      "action": "cancelTemplateAssignmentAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isTemplateAssignmentEditCommandVisibility"
      }
    },
    "Awp0CreateProcessAssignmentListCommandHandler": {
      "id": "Awp0CreateProcessAssignmentList",
      "action": "createProcessAssignmentListAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isCreateAssignmentListCommandVisibility"
      }
    },
    "Awp0RemovePALCommandHandler": {
      "id": "Awp0RemovePAL",
      "action": "removePALBatchJob",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.removePALCommandVisibility"
      }
    },
    "Arm0GenerateTraceabilityMatrixCommandDelegate": {
      "id": "Arm0GenerateTraceabilityMatrix",
      "activeWhen": {
        "condition": "conditions.isPALContextCondition"
      },
      "visibleWhen": false
    },
    "Awp0InContextReportsCommandDelegate": {
      "id": "Awp0InContextReports",
      "activeWhen": {
        "condition": "conditions.isPALContextCondition"
      },
      "visibleWhen": false
    }
  },
  "commandPlacements": {
    "Awp0AddResourcePoolCommandPlacement": {
      "id": "Awp0AddResourcePool",
      "uiAnchor": "aw_resourcePoolSubRightSide",
      "priority": 50
    },
    "Awp0RemoveResourcePoolCommandPlacement": {
      "id": "Awp0RemoveResourcePool",
      "uiAnchor": "aw_resourcePoolSubRightSide",
      "priority": 50
    },
    "Awp0AddRemoteInboxCmdCommandPlacement": {
      "id": "Awp0AddRemoteInboxCmd",
      "uiAnchor": "aw_remoteInboxSubscriptionSubRightSide",
      "priority": 50
    },
    "awp0PromoteTaskDisplay": {
      "id": "Awp0PromoteTask",
      "uiAnchor": "aw_rightWall",
      "priority": 520,
      "parentGroupId": "Awp0ManageGroup"
    },
    "awp0OutOfOfficeDisplay": {
      "id": "Awp0OutOfOffice",
      "uiAnchor": "aw_rightWall",
      "priority": 110,
      "parentGroupId": "Awp0ShareGroup"
    },
    "awp0OpenInboxLocationDisplay": {
      "id": "Awp0OpenInboxLocation",
      "uiAnchor": "aw_rightWall",
      "priority": 290,
      "parentGroupId": "Awp0OpenGroup"
    },
    "awp0InboxFiltersCommandDisplay": {
      "id": "Awp0InboxFilters",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 1010
    },
    "Awp0InboxAddCmdDisplay": {
      "id": "Awp0InboxAddCmd",
      "uiAnchor": "awp0_sectionCommands",
      "priority": -1
    },
    "Awp0SurrogateAddCmdDisplay": {
      "id": "Awp0SurrogateAddCmd",
      "uiAnchor": "awp0_addSurrogateSectionCommands",
      "priority": -1
    },
    "Awp0AddReviewProfileSignoffCellCommandPlacement": {
      "id": "Awp0AddReviewProfileSignoffCellCommand",
      "uiAnchor": "aw_taskProfileCellCommand",
      "priority": 10,
      "cellDisplay": {
        "position": "TOP_RIGHT"
      }
    },
    "Awp0RemoveReviewProfileSignoffCommandPlacement": {
      "id": "Awp0RemoveReviewProfileSignoffCommand",
      "uiAnchor": "aw_taskProfileSignoffCommand",
      "priority": 10
    },
    "Awp0AddReviewAdhocSignoffCommandPlacement": {
      "id": "Awp0AddReviewAdhocSignoffCommand",
      "uiAnchor": "aw_taskAdhocSignoffCommand",
      "priority": 10
    },
    "Awp0RemoveReviewAdhocSignoffCommandPlacement": {
      "id": "Awp0RemoveReviewAdhocSignoffCommand",
      "uiAnchor": "aw_taskAdhocSignoffCommand",
      "priority": 10
    },
    "Awp0AddAcknowledgeAdhocSignoffCommandPlacement": {
      "id": "Awp0AddAcknowledgeAdhocSignoffCommand",
      "uiAnchor": "aw_ackTaskAdhocSignoffCommand",
      "priority": 10
    },
    "Awp0RemoveAcknowledgeAdhocSignoffCommandPlacement": {
      "id": "Awp0RemoveAcknowledgeAdhocSignoffCommand",
      "uiAnchor": "aw_ackTaskAdhocSignoffCommand",
      "priority": 10
    },
    "Awp0AddNotifyAdhocSignoffCommandPlacement": {
      "id": "Awp0AddNotifyAdhocSignoffCommand",
      "uiAnchor": "aw_notifyTaskAdhocSignoffCommand",
      "priority": 10
    },
    "Awp0RemoveNotifyAdhocSignoffCommandPlacement": {
      "id": "Awp0RemoveNotifyAdhocSignoffCommand",
      "uiAnchor": "aw_notifyTaskAdhocSignoffCommand",
      "priority": 10
    },
    "Awp0ReassignTaskCmdPlacement": {
      "id": "Awp0ReassignTask",
      "uiAnchor": "aw_rightWall",
      "priority": 10,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Awp0ReleaseCommandPlacement": {
      "id": "Awp0Release",
      "uiAnchor": "aw_rightWall",
      "priority": 610,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Awp0StandInCommandPlacement": {
      "id": "Awp0StandIn",
      "uiAnchor": "aw_rightWall",
      "priority": 730,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Awp0RemoveSurrogateCommandPlacement": {
      "id": "Awp0RemoveSurrogate",
      "uiAnchor": "aw_rightWall",
      "priority": 326,
      "parentGroupId": "Awp0EditGroup"
    },
    "Awp0PerformTaskCommandPlacement": {
      "id": "Awp0PerformTaskPanel",
      "uiAnchor": "aw_rightWall",
      "priority": 320,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Awp0ClaimTaskCommandPlacement": {
      "id": "Awp0ClaimTask",
      "uiAnchor": "aw_rightWall",
      "priority": 260,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Awp0AbortTaskCmdPlacement": {
      "id": "Awp0AbortTask",
      "uiAnchor": "aw_rightWall",
      "priority": 570,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Awp0GoInboxGlobalNavigationbar": {
      "id": "Awp0GoInbox",
      "uiAnchor": "aw_globalNavigationbar",
      "priority": 70
    },
    "Awp0GoInboxWithoutBubbleGlobalNavigationbar": {
      "id": "Awp0GoInboxWithoutBubble",
      "uiAnchor": "aw_globalNavigationbar",
      "priority": 71
    },
    "awp0DemoteTaskDisplay": {
      "id": "Awp0DemoteTask",
      "uiAnchor": "aw_rightWall",
      "priority": 1,
      "parentGroupId": "Awp0ManageGroup",
      "relativeTo": "Awp0PromoteTask"
    },
    "awp0SuspendTaskDisplay": {
      "id": "Awp0SuspendTask",
      "uiAnchor": "aw_rightWall",
      "priority": -1,
      "parentGroupId": "Awp0ManageGroup",
      "relativeTo": "Awp0PromoteTask"
    },
    "awp0ResumeTaskDisplay": {
      "id": "Awp0ResumeTask",
      "uiAnchor": "aw_rightWall",
      "priority": -1,
      "parentGroupId": "Awp0ManageGroup",
      "relativeTo": "Awp0PromoteTask"
    },
    "Awp0DeleteWorkflowCmdPlacement": {
      "id": "Awp0DeleteWorkflow",
      "uiAnchor": "aw_rightWall",
      "priority": 500,
      "parentGroupId": "Awp0EditGroup"
    },
    "awp0ReplaceMultipleParticipantsDisplay": {
      "id": "Awp0ReplaceMultipleParticipants",
      "uiAnchor": "aw_rightWall",
      "priority": 560,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Awp0ProfileSignoffCellCommandPlacement": {
      "id": "Awp0ProfileSignoffCellCommand",
      "uiAnchor": "aw_profileCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Awp0TasksAferSubmitProfileCellCommandPlacement": {
      "id": "Awp0TasksAferSubmitProfileCellCommand",
      "uiAnchor": "aw_tasksAferSubmitProfileCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "openProcessInViewerDisplay": {
      "id": "OpenProcessInViewer",
      "uiAnchor": "aw_graph_node",
      "priority": 0
    },
    "Awp0FromSectionAddCmdPlacement": {
      "id": "Awp0FromSectionAddCmd",
      "uiAnchor": "awp0_fromSectionCommands",
      "priority": 0
    },
    "Awp0ToggleChildrenTileNode": {
      "id": "Awp0ToggleChildren",
      "uiAnchor": "aw_graph_node",
      "priority": 50
    },
    "Awp0ToggleSubProcessFixedLayoutTileNode": {
      "id": "Awp0ToggleSubProcessFixedLayout",
      "uiAnchor": "aw_graph_node",
      "priority": 50
    },
    "Awp0ToggleSubProcessAutoLayoutTileNode": {
      "id": "Awp0ToggleSubProcessAutoLayout",
      "uiAnchor": "aw_graph_node",
      "priority": 50
    },
    "Awp0ToSectionAddCmdPlacement": {
      "id": "Awp0ToSectionAddCmd",
      "uiAnchor": "awp0_toSectionCommands",
      "priority": 0
    },
    "Awp0NewWorkflowProcessCmdPlacement": {
      "id": "Awp0NewWorkflowProcess",
      "uiAnchor": "aw_rightWall",
      "priority": 1,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Awp0NewWorkflowProcessFooterToolbar": {
      "id": "Awp0NewWorkflowProcess",
      "uiAnchor": "aw_footer",
      "priority": 0.4
    },
    "Awp0RemoveParticipantCmdPlacement": {
      "id": "Awp0RemoveParticipant",
      "uiAnchor": "aw_rightWall",
      "priority": 323,
      "parentGroupId": "Awp0EditGroup"
    },
    "Awp0AddProcessAssignmentCmdPlacement": {
      "id": "Awp0AddProcessAssignmentCmd",
      "uiAnchor": "awp0_addParticipantEPMJobSectionCommands",
      "priority": 0
    },
    "Awp0PasteUserParticipantAssignmentCmdPlacement": {
      "id": "Awp0PasteUserAssignmentCmd",
      "uiAnchor": "awp0_addParticipantEPMJobSectionCommands",
      "priority": 0
    },
    "Awp0AddUsersAssignmentCmdPlacement": {
      "id": "Awp0AddUsersAssignmentCmd",
      "uiAnchor": "awp0_addUsersOnPanelAnchor",
      "priority": 0
    },
    "Awp0PasteUserAssignmentCmdPlacement": {
      "id": "Awp0PasteUserAssignmentCmd",
      "uiAnchor": "awp0_addUsersOnPanelAnchor",
      "priority": 0
    },
    "Awp0PasteProfileUserAssignmentCmdPlacement": {
      "id": "Awp0PasteProfileUserAssignmentCmd",
      "uiAnchor": "awp0_addUsersOnPanelAnchor",
      "priority": 0
    },
    "Awp0PasteUserAssignmentCategoryPanelCmdPlacement": {
      "id": "Awp0PasteUserAssignmentCmd",
      "uiAnchor": "awp0_addUsersOnPanelAnchorForCategoriesPanel",
      "priority": 0
    },
    "Awp0PasteProfileUserAssignmentCategoryPanelCmdPlacement": {
      "id": "Awp0PasteProfileUserAssignmentCmd",
      "uiAnchor": "awp0_addUsersOnPanelAnchorForCategoriesPanel",
      "priority": 0
    },
    "Awp0RemoveUsersAssignmentCmdPlacement": {
      "id": "Awp0RemoveUsersAssignmentCmd",
      "uiAnchor": "awp0_addUsersOnPanelAnchor",
      "priority": 0
    },
    "Awp0RemoveProcessAssignmentCmdPlacement": {
      "id": "Awp0RemoveProcessAssignmentCmd",
      "uiAnchor": "awp0_addParticipantEPMJobSectionCommands",
      "priority": 0
    },
    "Awp0AddTasksAssignmentCmdPlacement": {
      "id": "Awp0AddTaskAssignmentCmd",
      "uiAnchor": "newWorkflowProcess.taskAssigneeSection",
      "priority": 0
    },
    "Awp0RemoveTaskAssignmentCmdPlacement": {
      "id": "Awp0RemoveTaskAssignmentCmd",
      "uiAnchor": "awp0_addUsersOnPanelAnchor",
      "priority": 0
    },
    "Awp0AddTasksAssignmentCategoriesCmdPlacement": {
      "id": "Awp0AddTaskAssignmentCmd",
      "uiAnchor": "awp0_addUsersOnPanelAnchor",
      "priority": 0
    },
    "Awp0RemoveTaskAssignmentCategoriesCmdPlacement": {
      "id": "Awp0RemoveTaskAssignmentCmd",
      "uiAnchor": "awp0_addUsersOnPanelAnchorForCategoriesPanel",
      "priority": 0
    },
    "GcLayoutCommandGroupPlacement": {
      "id": "GcLayoutCommandGroup",
      "uiAnchor": "aw_workflowViewer",
      "priority": 150,
      "showGroupSelected": false
    },
    "Awp0SaveAssignmentCmdPlacement": {
      "id": "Awp0SaveAssignment",
      "uiAnchor": "Awp0EditCommands_Right",
      "priority": 323
    },
    "Awp0CancelAssignmentCmdPlacement": {
      "id": "Awp0CancelAssignment",
      "uiAnchor": "Awp0EditCommands_Right",
      "priority": 323
    },
    "Awp0StartEditAssignmentCmdPlacement": {
      "id": "Awp0StartEditAssignment",
      "uiAnchor": "Awp0EditCommands_Right",
      "priority": 323
    },
    "Awp0WorkflowAutoLayoutTopToBottomOneStep": {
      "id": "Awp0WorkflowAutoLayoutTopToBottom",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "Awp0WorkflowAutoLayoutRightToLeftOneStep": {
      "id": "Awp0WorkflowAutoLayoutRightToLeft",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "Awp0WorkflowAutoLayoutLeftToRightOneStep": {
      "id": "Awp0WorkflowAutoLayoutLeftToRight",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "Awp0WorkflowFixedLayoutOneStep": {
      "id": "Awp0WorkflowFixedLayout",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "Awp0NewWorkflowSubProcessCmdPlacement": {
      "id": "Awp0NewWorkflowSubProcess",
      "uiAnchor": "aw_rightWall",
      "priority": 100,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Awp0AddWorkflowProcessTargetCmdPlacement": {
      "id": "Awp0AddWorkflowProcessTarget",
      "uiAnchor": "workflow_process_attachment_anchor",
      "priority": 101
    },
    "Awp0RemoveWorkflowProcessTargetCmdPlacement": {
      "id": "Awp0RemoveWorkflowProcessTarget",
      "uiAnchor": "workflow_process_attachment_anchor",
      "priority": 100
    },
    "Awp0SelectAllObjectSetCmdPlacement": {
      "id": "Awp0SelectAllObjectSet",
      "uiAnchor": "workflow_process_attachment_anchor",
      "priority": 102
    },
    "Awp0RemoveTaskAssignmentCtxCmdPlacement": {
      "id": "Awp0RemoveTaskAssignmentCtx",
      "uiAnchor": "aw_taskAssignmentTreeTableContextMenu",
      "priority": 0
    },
    "Awp0ReplaceTaskAssignmentCtxCmdPlacement": {
      "id": "Awp0ReplaceTaskAssignmentCtx",
      "uiAnchor": "aw_taskAssignmentTreeTableContextMenu",
      "priority": 1
    },
    "Awp0WorkflowClosePopupCommandCmdPlacemnet": {
      "id": "Awp0WorkflowClosePopupCommand",
      "uiAnchor": "workflow_popup_panel_anchor",
      "priority": 300
    },
    "Awp0AddTaskParticipantAssignmentCmdPlacement": {
      "id": "Awp0AddTaskParticipantAssignmentCmd",
      "uiAnchor": "awp0_addTaskParticipantAssignmentOnPanelAnchor",
      "priority": 0
    },
    "Awp0RemoveTaskParticipantAssignmentCmdPlacement": {
      "id": "Awp0RemoveTaskParticipantAssignmentCmd",
      "uiAnchor": "awp0_addTaskParticipantAssignmentOnPanelAnchor",
      "priority": 1
    },
    "Awp0PasteUserAssignmentParticipantCmdPlacement": {
      "id": "Awp0PasteUserAssignmentCmd",
      "uiAnchor": "awp0_addTaskParticipantAssignmentOnPanelAnchor",
      "priority": 0
    },
    "Awp0AssignTaskCmdPlacement": {
      "id": "Awp0AssignTask",
      "uiAnchor": "aw_footer",
      "priority": -1
    },
    "Awp0AddParticipantTableCmdPlacement": {
      "id": "Awp0AddParticipant",
      "uiAnchor": "aw_participantTableRightAnchor",
      "priority": 0
    },
    "Awp0ReplaceParticipantTableCmdPlacement": {
      "id": "Awp0ReplaceParticipant",
      "uiAnchor": "aw_participantTableRightAnchor",
      "priority": 1
    },
    "Awp0RemoveParticipantTableCmdPlacement": {
      "id": "Awp0RemoveParticipant",
      "uiAnchor": "aw_participantTableRightAnchor",
      "priority": 0
    },
    "Awp0ReassignParticipantsRemoveCellCmdPlacement": {
      "id": "Awp0ReassignParticipantsRemoveCellCmd",
      "uiAnchor": "aw_reassignParticipantsCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Awp0AddWorkflowProcessReferenceCmdPlacement": {
      "id": "Awp0AddWorkflowProcessReference",
      "uiAnchor": "workflow_process_reference_anchor",
      "priority": 101
    },
    "Awp0RemoveWorkflowProcessReferencesCmdPlacement": {
      "id": "Awp0RemoveWorkflowProcessTarget",
      "uiAnchor": "workflow_process_reference_anchor",
      "priority": 100
    },
    "Awp0SelectAllObjectSetReferencesCmdPlacement": {
      "id": "Awp0SelectAllObjectSet",
      "uiAnchor": "workflow_process_reference_anchor",
      "priority": 102
    },
    "Awp0ClearAllSelectionsCmdPlacement": {
      "id": "Awp0ClearAllSelections",
      "uiAnchor": "workflow_process_attachment_anchor",
      "priority": 102
    },
    "Awp0ClearAllReferencesCmdPlacement": {
      "id": "Awp0ClearAllSelections",
      "uiAnchor": "workflow_process_reference_anchor",
      "priority": 102
    },
    "Awp0CreateWorkflowDisplay": {
      "id": "Awp0CreateWorkflow",
      "uiAnchor": "aw_rightWall",
      "priority": 110,
      "parentGroupId": "Awp0NewGroup"
    },
    "Am0ManageACLCommandPlacementForWD": {
      "id": "Am0ManageACLForWD",
      "uiAnchor": "am0_aclSaveCommands",
      "priority": 1
    },
    "Awp0TaskMoveUpCmdPlacement": {
      "id": "Awp0TaskMoveUp",
      "uiAnchor": "Awp0TaskEditCommands_left",
      "priority": 323
    },
    "Awp0TaskMoveDownCmdPlacement": {
      "id": "Awp0TaskMoveDown",
      "uiAnchor": "Awp0TaskEditCommands_left",
      "priority": 323
    },
    "Awp0HandlerMoveUpCmdPlacement": {
      "id": "Awp0HandlerMoveUp",
      "uiAnchor": "aw_taskTemplatePropertiesLeft",
      "priority": 1
    },
    "Awp0HandlerMoveDownCmdPlacement": {
      "id": "Awp0HandlerMoveDown",
      "uiAnchor": "aw_taskTemplatePropertiesLeft",
      "priority": 1
    },
    "Awp0HandlerCutCmdPlacement": {
      "id": "Awp0HandlerCut",
      "uiAnchor": "aw_taskTemplatePropertiesLeft",
      "priority": 1
    },
    "Awp0HandlerPasteForActionTypeCmdPlacement": {
      "id": "Awp0HandlerPasteForActionType",
      "uiAnchor": "aw_taskTemplatePropertiesLeft",
      "priority": 1
    },
    "Awp0HandlerPasteForRuleQuorumCmdPlacement": {
      "id": "Awp0HandlerPasteForRuleQuorum",
      "uiAnchor": "aw_taskTemplatePropertiesLeft",
      "priority": 1
    },
    "Awp0HandlerCopyCmdPlacement": {
      "id": "Awp0HandlerCopy",
      "uiAnchor": "aw_taskTemplatePropertiesLeft",
      "priority": 1
    },
    "Awp0RemoveHandlerCmdPlacement": {
      "id": "Awp0RemoveHandler",
      "uiAnchor": "aw_taskTemplatePropertiesLeft",
      "priority": 2
    },
    "Awp0NewWorkflowProcessCommandPlacement": {
      "id": "Awp0NewWorkflowProcessTemplate",
      "uiAnchor": "aw_rightWall",
      "priority": 1,
      "parentGroupId": "Awp0NewGroup"
    },
    "Awp0TemplateStartEditCmdPlacement": {
      "id": "Awp0TemplateStartEdit",
      "uiAnchor": "aw_rightWall",
      "priority": 1,
      "parentGroupId": "Awp0EditGroup"
    },
    "Awp0TemplateSaveCmdPlacement": {
      "id": "Awp0TemplateSaveEdit",
      "uiAnchor": "aw_rightWall",
      "priority": 2,
      "parentGroupId": "Awp0EditGroup"
    },
    "Awp0TemplateEndEditCmdPlacement": {
      "id": "Awp0TemplateEndEdit",
      "uiAnchor": "aw_rightWall",
      "priority": 1,
      "parentGroupId": "Awp0EditGroup"
    },
    "Awp0TemplateSaveEditToolBarCmdPlacement": {
      "id": "Awp0TemplateSaveEdit",
      "uiAnchor": "aw_toolbarRight",
      "priority": -1
    },
    "Awp0TemplateStartEditToolBarCmdPlacement": {
      "id": "Awp0TemplateStartEdit",
      "uiAnchor": "aw_toolbarRight",
      "priority": 0
    },
    "Awp0TemplateEndEditToolBarCmdPlacement": {
      "id": "Awp0TemplateEndEdit",
      "uiAnchor": "aw_toolbarRight",
      "priority": 0
    },
    "Awp0RemoveProcessTemplateCmdPlacement": {
      "id": "Awp0RemoveProcessTemplate",
      "uiAnchor": "aw_rightWall",
      "priority": 4,
      "parentGroupId": "Awp0EditGroup"
    },
    "Awp0ImportWorkflowTemplateCmdPlacement": {
      "id": "Awp0ImportWorkflowTemplate",
      "uiAnchor": "aw_rightWall",
      "priority": 2,
      "parentGroupId": "Awp0NewGroup"
    },
    "Awp0ExportWorkflowTemplateCmdPlacement": {
      "id": "Awp0ExportWorkflowTemplate",
      "uiAnchor": "aw_toolsAndInfo",
      "priority": 1,
      "parentGroupId": "Awp0ShareGroup"
    },
    "Awp0ToggleTemplateChildrenTileNode": {
      "id": "Awp0ToggleTemplateChildren",
      "uiAnchor": "aw_graph_node",
      "priority": 50
    },
    "Awp0WorkflowGraphGridSettingsCmdPlacement": {
      "id": "Awp0WorkflowGraphGridSettings",
      "uiAnchor": "aw_workflowDesigner",
      "priority": 2
    },
    "Awp0WorkflowDesignerLayoutCommandGroupPlacement": {
      "id": "GcLayoutCommandGroup",
      "uiAnchor": "aw_workflowDesigner",
      "priority": 4,
      "showGroupSelected": false
    },
    "Awp0TemplateFiltersCmdPlacement": {
      "id": "Awp0TemplateFilters",
      "uiAnchor": "aw_primaryWorkArea_workflowDesignerLocation",
      "priority": 1010
    },
    "Awp0ToggleShowTaskRelatedInfoCmdPlacement": {
      "id": "Awp0ToggleShowTaskRelatedInfo",
      "uiAnchor": "aw_workflowDesigner",
      "priority": 1,
      "showGroupSelected": false
    },
    "Awp0RemoveTaskTemplateCmdPlacement": {
      "id": "Awp0RemoveTaskTemplate",
      "uiAnchor": "aw_workflowDesigner",
      "priority": 6
    },
    "Awp0TemplateConvertToParentCmdPlacement": {
      "id": "Awp0TemplateConvertToParent",
      "uiAnchor": "aw_workflowDesigner",
      "priority": 7
    },
    "Awp0TemplateAddNotificationCmdPlacement": {
      "id": "Awp0TemplateAddNotificationHandler",
      "uiAnchor": "aw_workflowNotificationsAnchor",
      "priority": 1
    },
    "Awp0TemplateShowNotificationHandlerInfoCmdPlacement": {
      "id": "Awp0TemplateShowNotificationHandlerInfo",
      "uiAnchor": "aw_workflowNotificationsAnchor",
      "priority": 1
    },
    "Awp0TemplateEditNotificationHandlerInfoCmdPlacement": {
      "id": "Awp0TemplateEditNotificationHandlerInfo",
      "uiAnchor": "aw_workflowNotificationsAnchor",
      "priority": 1
    },
    "Awp0TemplateRemoveNotificationCmdPlacement": {
      "id": "Awp0TemplateRemoveNotificationHandler",
      "uiAnchor": "aw_workflowNotificationsAnchor",
      "priority": 2
    },
    "Awp0TemplateAddArgumentCmdPlacement": {
      "id": "Awp0TemplateAddArgument",
      "uiAnchor": "aw_workflowKeyRoleCellCommand",
      "priority": 300,
      "cellDisplay": {
        "position": "TOP_RIGHT"
      },
      "displayOption": "ALWAYS"
    },
    "Awp0TemplateRemoveArgumentCmdPlacement": {
      "id": "Awp0TemplateRemoveArgument",
      "uiAnchor": "aw_workflowKeyRoleCellCommand",
      "priority": 301,
      "cellDisplay": {
        "position": "TOP_RIGHT"
      },
      "displayOption": "ALWAYS"
    },
    "Awp0AddArgumentCmdPlacement": {
      "id": "Awp0AddArgument",
      "uiAnchor": "aw_taskTemplatePropertiesRight",
      "priority": 1
    },
    "Awp0RemoveArgumentCmdPlacement": {
      "id": "Awp0RemoveArgument",
      "uiAnchor": "aw_HandlerArgumentPanelSectionCommands",
      "priority": 1
    },
    "Awp0TemplateAddAssignmentCmdPlacement": {
      "id": "Awp0TemplateAddAssignmentHandler",
      "uiAnchor": "aw_workflowAssignmentsAnchor",
      "priority": 1
    },
    "Awp0TemplateAssignmentAssigneeCmdPlacement": {
      "id": "Awp0TemplateAssignmentAssignee",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "Awp0TemplateAddAssignmentHandler"
    },
    "Awp0TemplateAssignmentAssignerCmdPlacement": {
      "id": "Awp0TemplateAssignmentAssigner",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "Awp0TemplateAddAssignmentHandler"
    },
    "Awp0TemplateAssignmentReviewersCmdPlacement": {
      "id": "Awp0TemplateAssignmentReviewers",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "Awp0TemplateAddAssignmentHandler"
    },
    "Awp0TemplateAssignmentAcknowledgersCmdPlacement": {
      "id": "Awp0TemplateAssignmentAcknowledgers",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "Awp0TemplateAddAssignmentHandler"
    },
    "Awp0TemplateAssignmentNotifyeesCmdPlacement": {
      "id": "Awp0TemplateAssignmentNotifyees",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "Awp0TemplateAddAssignmentHandler"
    },
    "Awp0AddAssignmentUserCmdPlacement": {
      "id": "Awp0AddAssignmentUser",
      "uiAnchor": "awp0_addAssignmentPanelAnchor",
      "priority": 1
    },
    "Awp0TemplateReplaceProfileCmdPlacement": {
      "id": "Awp0TemplateReplaceProfile",
      "uiAnchor": "awp0_addAssignmentPanelAnchor",
      "priority": 1
    },
    "Awp0TemplateShowAssignmentHandlerInfoCmdPlacement": {
      "id": "Awp0TemplateShowAssignmentHandlerInfo",
      "uiAnchor": "aw_workflowAssignmentsAnchor",
      "priority": 1
    },
    "Awp0TemplateEditAssignmentHandlerInfoCmdPlacement": {
      "id": "Awp0TemplateEditAssignmentHandlerInfo",
      "uiAnchor": "aw_workflowAssignmentsAnchor",
      "priority": 1
    },
    "Awp0TemplateShowProfileInfoCmdPlacement": {
      "id": "Awp0TemplateShowProfileInfo",
      "uiAnchor": "aw_workflowAssignmentsAnchor",
      "priority": 1
    },
    "Awp0TemplateEditProfileInfoCmdPlacement": {
      "id": "Awp0TemplateEditProfileInfo",
      "uiAnchor": "aw_workflowAssignmentsAnchor",
      "priority": 1
    },
    "Awp0TemplateRemoveSignoffProfileCmdPlacement": {
      "id": "Awp0TemplateRemoveSignoffProfile",
      "uiAnchor": "aw_workflowAssignmentsAnchor",
      "priority": 2
    },
    "Awp0TemplateRemoveAssignmentHandlerCmdPlacement": {
      "id": "Awp0TemplateRemoveAssignmentHandler",
      "uiAnchor": "aw_workflowAssignmentsAnchor",
      "priority": 2
    },
    "Awp0TemplateAddFormCmdPlacement": {
      "id": "Awp0TemplateAddFormHandler",
      "uiAnchor": "aw_workflowFormsAnchor",
      "priority": 1
    },
    "Awp0TemplateShowFormHandlerInfoCmdPlacement": {
      "id": "Awp0TemplateShowFormHandlerInfo",
      "uiAnchor": "aw_workflowFormsAnchor",
      "priority": 1
    },
    "Awp0TemplateEditFormHandlerInfoCmdPlacement": {
      "id": "Awp0TemplateEditFormHandlerInfo",
      "uiAnchor": "aw_workflowFormsAnchor",
      "priority": 1
    },
    "Awp0TemplateRemoveFormCmdPlacement": {
      "id": "Awp0TemplateRemoveFormHandler",
      "uiAnchor": "aw_workflowFormsAnchor",
      "priority": 2
    },
    "Awp0WorkflowGraphLegendPanelCmdPlacement": {
      "id": "Awp0WorkflowGraphLegendPanel",
      "uiAnchor": "aw_workflowDesigner",
      "priority": 5
    },
    "Awp0SaveGraphPositionsCmdPlacement": {
      "id": "Awp0SaveGraphPositions",
      "uiAnchor": "aw_workflowDesigner",
      "priority": 6
    },
    "Awp0ShowFixedLayoutCmdPlacement": {
      "id": "Awp0ShowFixedLayout",
      "uiAnchor": "aw_workflowDesigner",
      "priority": 7
    },
    "Awp0ShowAutoLayoutCmdPlacement": {
      "id": "Awp0ShowAutoLayout",
      "uiAnchor": "aw_workflowDesigner",
      "priority": 8
    },
    "Awp0WorkflowDesignerAutoLayoutTopToBottomOneStep": {
      "id": "Awp0WorkflowAutoLayoutTopToBottom",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "Awp0WorkflowDesignerAutoLayoutRightToLeftOneStep": {
      "id": "Awp0WorkflowAutoLayoutRightToLeft",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "Awp0WorkflowDesignerAutoLayoutLeftToRightOneStep": {
      "id": "Awp0WorkflowAutoLayoutLeftToRight",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "Awp0WorkflowDesignerFixedLayoutOneStep": {
      "id": "Awp0WorkflowFixedLayout",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "Awp0HandlerHelpCmdPlacement": {
      "id": "Awp0HandlerHelp",
      "uiAnchor": "aw_HandlerHelpCommandAnchor",
      "priority": 1
    },
    "Awp0ImportPALCmdPlacement": {
      "id": "Awp0ImportPAL",
      "uiAnchor": "aw_rightWall",
      "priority": 2,
      "parentGroupId": "Awp0NewGroup"
    },
    "Awp0ExportPALCmdPlacement": {
      "id": "Awp0ExportPAL",
      "uiAnchor": "aw_rightWall",
      "priority": 1,
      "parentGroupId": "Awp0ShareGroup"
    },
    "Awp0TemplateAssignmentProfileCellCommandPlacement": {
      "id": "Awp0TemplateAssignmentProfileCellCommand",
      "uiAnchor": "aw_templateProfileCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Awp0PasteTemplateUserAssignmentCmdPlacement": {
      "id": "Awp0PasteUserAssignmentCmd",
      "uiAnchor": "awp0_templateAssignmentPanelAnchor",
      "priority": 0
    },
    "Awp0PasteTemplateProfileUserAssignmentCmdPlacement": {
      "id": "Awp0PasteProfileUserAssignmentCmd",
      "uiAnchor": "awp0_templateAssignmentPanelAnchor",
      "priority": 0
    },
    "Awp0AddTemplateUserAssignmentCmdPlacement": {
      "id": "Awp0AddTemplateUserAssignmentCmd",
      "uiAnchor": "awp0_templateAssignmentPanelAnchor",
      "priority": 1
    },
    "Awp0RemoveTemplateUsersAssignmentCmdPlacement": {
      "id": "Awp0RemoveTemplateUsersAssignmentCmd",
      "uiAnchor": "awp0_templateAssignmentPanelAnchor",
      "priority": 2
    },
    "Awp0StartEditTemplateAssignmentCmdPlacement": {
      "id": "Awp0StartEditTemplateAssignment",
      "uiAnchor": "aw_rightWall",
      "priority": 1,
      "parentGroupId": "Awp0EditGroup"
    },
    "Awp0SaveTemplateAssignmentCmdPlacement": {
      "id": "Awp0SaveTemplateAssignment",
      "uiAnchor": "aw_rightWall",
      "priority": 2,
      "parentGroupId": "Awp0EditGroup"
    },
    "Awp0CancelTemplateAssignmentCmdPlacement": {
      "id": "Awp0CancelTemplateAssignment",
      "uiAnchor": "aw_rightWall",
      "priority": 3,
      "parentGroupId": "Awp0EditGroup"
    },
    "Awp0CreateProcessAssignmentListCmdPlacement": {
      "id": "Awp0CreateProcessAssignmentList",
      "uiAnchor": "aw_rightWall",
      "priority": 1,
      "parentGroupId": "Awp0NewGroup"
    },
    "Awp0RemovePALCmdPlacement": {
      "id": "Awp0RemovePAL",
      "uiAnchor": "aw_rightWall",
      "priority": 4,
      "parentGroupId": "Awp0EditGroup"
    }
  },
  "actions": {
    "workflowShowDelegatedObject": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.vmo.uid}}"
      },
      "events": {
        "success": [
          {
            "name": "inbox.markAsRead"
          }
        ]
      }
    },
    "markAsReadAction": {
      "actionType": "JSFunction",
      "method": "setViewedByMeIfNeeded",
      "deps": "js/aw.inbox.service",
      "inputData": {
        "mo": "{{commandContext.vmo}}"
      }
    },
    "awp0PromoteTaskCommandAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0PromoteTask",
        "location": "aw_toolsAndInfo"
      }
    },
    "awp0OutOfOfficeCommandAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0OutOfOffice",
        "location": "aw_toolsAndInfo"
      }
    },
    "awp0OpenInboxLocationCommandAction": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-AWS2-2019-06-Finder",
      "method": "performSearchViewModel4",
      "inputData": {
        "searchInput": {
          "maxToLoad": 50,
          "maxToReturn": 50,
          "providerName": "Awp0InboxProvider",
          "searchCriteria": {
            "searchString": "",
            "searchInboxContentType": "myTasks",
            "userId": "{{commandContext.openedObject.props.user_id.dbValue}}"
          },
          "searchFilterFieldSortType": "Priority",
          "searchFilterMap6": {},
          "searchSortCriteria": [],
          "startIndex": 0
        }
      },
      "outputData": {
        "searchResults": "searchResultsJSON",
        "totalFound": "totalFound"
      },
      "events": {
        "success": [
          {
            "name": "navigateToInboxEvent"
          }
        ]
      }
    },
    "navigateToInboxAction": {
      "actionType": "JSFunction",
      "method": "navigate",
      "inputData": {
        "userOject": "{{commandContext.openedObject}}"
      },
      "deps": "js/aw.inbox.service"
    },
    "awp0InboxFiltersCommandAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0SearchFilter",
        "location": "aw_navigation"
      }
    },
    "awp0InboxUserTabSubPanelAction": {
      "actionType": "JSFunction",
      "method": "updateAtomicDataValue",
      "inputData": {
        "AtomicObj": "{{commandContext}}",
        "value": {
          "activeView": "AwPeoplePicker"
        }
      },
      "deps": "js/addObjectUtils"
    },
    "openAddSurrogateUserPanel": {
      "actionType": "JSFunction",
      "method": "updateAtomicDataValue",
      "inputData": {
        "AtomicObj": "{{commandContext}}",
        "value": {
          "activeView": "AwPeoplePicker"
        }
      },
      "deps": "js/addObjectUtils"
    },
    "Awp0UserAssignmentShowDelegatedObject": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{props.subPanelContext.selectionData.value.selected[0]}}",
          "path": "dbValue"
        }
      }
    },
    "addReviewProfileSignoffCellCommand": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Awp0AddSignoff.addSignoffData",
            "eventData": {
              "selectedProfile": "{{commandContext.vmo}}",
              "signoffAction": "SOA_EPM_Review",
              "originType": "SOA_EPM_SIGNOFF_ORIGIN_PROFILE"
            }
          }
        ]
      }
    },
    "addReviewAdhocSignoffCommand": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Awp0AddSignoff.addSignoffData",
            "eventData": {
              "selectedProfile": null,
              "signoffAction": "SOA_EPM_Review",
              "originType": "SOA_EPM_ORIGIN_UNDEFINED"
            }
          }
        ]
      }
    },
    "removeReviewProfileSignoffCommand": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Awp0ReviewProfileSignoff.removeSignoffData"
          }
        ]
      }
    },
    "removeReviewAdhocSignoffCommand": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Awp0ReviewAdhocSignoff.removeSignoffData"
          }
        ]
      }
    },
    "createPresenterForAddSurrogate": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0AddSurrogate",
        "location": "aw_toolsAndInfo"
      }
    },
    "AddResourcePoolCommand": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0AddResourcePool",
        "location": "aw_toolsAndInfo"
      }
    },
    "getUserSubscribeResourcePoolProps": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "objects": [
          "{{commandContext.userObject}}"
        ],
        "attributes": [
          "subscribed_inboxes",
          "userinbox"
        ]
      },
      "policy": {
        "types": [
          {
            "name": "User",
            "properties": [
              {
                "name": "subscribed_inboxes",
                "modifiers": [
                  {
                    "name": "withProperties",
                    "Value": "true"
                  }
                ]
              },
              {
                "name": "userinbox",
                "modifiers": [
                  {
                    "name": "withProperties",
                    "Value": "true"
                  }
                ]
              }
            ]
          },
          {
            "name": "User_Inbox",
            "properties": [
              {
                "name": "owning_user"
              }
            ]
          },
          {
            "name": "TaskInbox",
            "properties": [
              {
                "name": "owner",
                "modifiers": [
                  {
                    "name": "withProperties",
                    "Value": "true"
                  }
                ]
              }
            ]
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "removeSubscribedResourcePools"
          }
        ]
      }
    },
    "deleteRelationInboxes": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteRelations",
      "inputData": {
        "input": "{{function:getDeleteSelectedResourcePoolInput}}"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{commandContext.userObject}}"
              ]
            }
          }
        ]
      },
      "deps": "js/Awp0AddResourcePool",
      "actionMessages": {
        "failure": [
          {
            "message": "inboxServerError"
          }
        ]
      }
    },
    "openUserAssignmentCellAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "loadAwp0UserProperty"
        },
        {
          "action": "openUserAssignemntNavigateAction"
        }
      ]
    },
    "loadAwp0UserProperty": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "objects": [
          {
            "uid": "{{commandContext.vmo.props.awp0Secondary.dbValues[0]}}"
          }
        ],
        "attributes": [
          "awp0User"
        ]
      },
      "outputData": {
        "awp0UserUid": "{{function:getAwp0UserObject}}"
      },
      "deps": "js/Awp0InboxUtils"
    },
    "openUserAssignemntNavigateAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{data.awp0UserUid}}"
      }
    },
    "addAcknowledgeAdhocSignoffCommand": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Awp0AddSignoff.addSignoffData",
            "eventData": {
              "selectedProfile": null,
              "signoffAction": "SOA_EPM_Acknowledge",
              "originType": "SOA_EPM_ORIGIN_UNDEFINED"
            }
          }
        ]
      }
    },
    "removeAcknowledgeAdhocSignoffCommand": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Awp0AcknowledgeAdhocSignoff.removeSignoffData"
          }
        ]
      }
    },
    "addNotifyAdhocSignoffCommand": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Awp0AddSignoff.addSignoffData",
            "eventData": {
              "selectedProfile": null,
              "signoffAction": "SOA_EPM_Notify",
              "originType": "SOA_EPM_ORIGIN_UNDEFINED"
            }
          }
        ]
      }
    },
    "removeNotifyAdhocSignoffCommand": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Awp0NotifyAdhocSignoff.removeSignoffData"
          }
        ]
      }
    },
    "reassignTaskAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "reassignTask.OpenReassignPanel",
            "condition": "commandContext.selectionData.value.selected.length > 1 || commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('Signoff') <= -1 || commandContext.vmo || commandContext.vmo.modelType.typeHierarchyArray.indexOf('Signoff') <= -1"
          },
          {
            "name": "reassignTask.loadSignoffProperties",
            "condition": "commandContext.selectionData.value.selected.length === 1 && commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('Signoff') > -1 "
          }
        ]
      }
    },
    "openReassignTaskPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0ReassignTask",
        "location": "aw_toolsAndInfo"
      },
      "events": {
        "success": [
          {
            "name": "reassignTask.launchComponentsPanel",
            "condition": "conditions.IsWorkFlowHostingEnabled"
          }
        ]
      }
    },
    "loadSignoffProperties": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "objects": [
          "{{commandContext.selectionData.value.selected[0]}}"
        ],
        "attributes": [
          "origin",
          "fnd0ParentTask"
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMSignoffProfile",
            "properties": [
              {
                "name": "number_of_signoffs"
              },
              {
                "name": "allow_subgroups"
              },
              {
                "name": "group",
                "modifiers": [
                  {
                    "name": "withProperties",
                    "Value": "true"
                  }
                ]
              },
              {
                "name": "role",
                "modifiers": [
                  {
                    "name": "withProperties",
                    "Value": "true"
                  }
                ]
              }
            ]
          },
          {
            "name": "Role",
            "properties": [
              {
                "name": "role_name"
              }
            ]
          },
          {
            "name": "Group",
            "properties": [
              {
                "name": "object_full_name"
              }
            ]
          },
          {
            "name": "Signoff",
            "properties": [
              {
                "name": "origin",
                "modifiers": [
                  {
                    "name": "withProperties",
                    "Value": "true"
                  }
                ]
              },
              {
                "name": "fnd0ParentTask"
              }
            ]
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "reassignTask.OpenReassignPanel"
          }
        ]
      }
    },
    "releaseCommandAction": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2014-06-Workflow",
      "method": "setActiveSurrogate",
      "inputData": {
        "input": [
          {
            "taskOrSignoffTag": "{{commandContext.selectionData.value.selected[0]}}",
            "releaseStandIn": true,
            "transferCheckouts": true
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMTask",
            "properties": [
              {
                "name": "awp0PerformableByMeBehavior"
              }
            ]
          },
          {
            "name": "Signoff",
            "properties": [
              {
                "name": "awp0PerformableByMeBehavior"
              }
            ]
          }
        ]
      },
      "events": {
        "success": [
          {
            "condition": "commandContext.openedObject",
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{commandContext.openedObject}}"
              ]
            }
          },
          {
            "condition": "!commandContext.selectionData.value.pselected && commandContext.selectionData.value.selected[0] && ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && ( commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Workflow')",
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{commandContext.selectionData.value.selected[0]}}"
              ]
            }
          },
          {
            "condition": "commandContext.selectionData.value.pselected && commandContext.selectionData.value.selected[0] && ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && ( commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Workflow')",
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{commandContext.selectionData.value.pselected}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "inboxServerError"
          }
        ]
      }
    },
    "copyUserAssignment": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/Awp0CopyUserAssignment",
      "inputData": {
        "objectToCopy": "{{commandContext.selectionData.value.selected}}"
      },
      "actionMessages": {
        "success": [
          {
            "condition": "(commandContext.selectionData.value.selected && commandContext.selectionData.value.selected.length === 1)",
            "message": "copyUserSingleSuccessful"
          },
          {
            "condition": "(commandContext.selectionData.value.selected && commandContext.selectionData.value.selected.length > 1)",
            "message": "copyUserMultipleSuccessful"
          }
        ]
      }
    },
    "performStandInAction": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2014-06-Workflow",
      "method": "setActiveSurrogate",
      "inputData": {
        "input": [
          {
            "taskOrSignoffTag": "{{commandContext.selectionData.value.selected[0]}}",
            "releaseStandIn": false,
            "transferCheckouts": true
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMTask",
            "properties": [
              {
                "name": "awp0PerformableByMeBehavior"
              }
            ]
          },
          {
            "name": "Signoff",
            "properties": [
              {
                "name": "awp0PerformableByMeBehavior"
              }
            ]
          }
        ]
      },
      "events": {
        "success": [
          {
            "condition": "commandContext.openedObject",
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{commandContext.openedObject}}"
              ]
            }
          },
          {
            "condition": "!commandContext.selectionData.value.pselected && commandContext.selectionData.value.selected[0] && ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && ( commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Workflow')",
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{commandContext.selectionData.value.selected[0]}}"
              ]
            }
          },
          {
            "condition": "subPanelContext.selectionData.value.pselected && commandContext.selectionData.value.selected[0] && ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && ( commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Workflow')",
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{commandContext.selectionData.value.pselected}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "inboxServerError"
          }
        ]
      }
    },
    "setContextVariableForAddReviewer": {
      "actionType": "JSFunction",
      "method": "setContextVariableForAddReviewer",
      "deps": "js/Awp0AddReviewer",
      "inputData": {
        "parentSelection": "{{commandContext.vmo}}"
      }
    },
    "removeSurrogateAction": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2014-06-Workflow",
      "method": "setSurrogate",
      "inputData": {
        "requests": [
          {
            "unset": true,
            "fromResource": "{{commandContext.openedObject}}",
            "toResource": {
              "type": "User",
              "uid": "{{commandContext.selectionData.value.selected[0].props.awp0User.dbValues[0]}}"
            },
            "startDate": "",
            "endDate": ""
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{commandContext.openedObject}}"
              ],
              "createdObjects": [
                "{{commandContext.selectionData.value.selected[0]}}"
              ]
            }
          }
        ]
      }
    },
    "getAwp0UserProperty": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "objects": [
          "{{commandContext.selectionData.value.selected[0]}}"
        ],
        "attributes": [
          "awp0User"
        ]
      },
      "events": {
        "success": [
          {
            "name": "inbox.removeSurrogateEvent"
          }
        ]
      }
    },
    "isPerformTaskCommandClicked": {
      "actionType": "JSFunction",
      "method": "validationAndActivatePerformTaskPanel",
      "deps": "js/Awp0PerformTaskCommandHandler",
      "inputData": {
        "data": "{{data}}"
      }
    },
    "ClaimTask": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2014-06-Workflow",
      "method": "performAction3",
      "inputData": {
        "input": [
          {
            "actionableObject": "{{function:getActionableObject}}",
            "action": "SOA_EPM_claim_action",
            "password": "",
            "supportingValue": "",
            "supportingObject": "{{function:getClaimSupportingObject}}",
            "propertyNameValues": {}
          }
        ]
      },
      "deps": "js/Awp0ClaimTask",
      "events": {
        "success": [
          {
            "name": "primaryWorkarea.reset",
            "condition": "!commandContext.openedObject"
          },
          {
            "condition": "commandContext.openedObject",
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{commandContext.openedObject}}"
              ]
            }
          }
        ],
        "failure": [
          {
            "name": "primaryWorkarea.reset",
            "condition": "!commandContext.openedObject"
          },
          {
            "condition": "commandContext.openedObject",
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{commandContext.openedObject}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "inboxServerError"
          }
        ]
      }
    },
    "claimSignoffObject": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "objects": [
          "{{commandContext.selectionData.value.selected[0]}}"
        ],
        "attributes": [
          "fnd0ParentTask"
        ]
      },
      "events": {
        "success": [
          {
            "name": "claimSignoffObject.propertiesLoaded"
          }
        ]
      }
    },
    "openEPMTaskOrSignoffCommandAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.vmo.uid}}"
      },
      "events": {
        "success": [
          {
            "name": "inbox.openTaskMarkAsRead"
          }
        ]
      }
    },
    "openTaskMarkAsReadAction": {
      "actionType": "JSFunction",
      "method": "setViewedByMeIfNeeded",
      "deps": "js/aw.inbox.service",
      "inputData": {
        "mo": "{{commandContext.vmo}}"
      }
    },
    "Awp0AbortTaskActivatePanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0AbortTask",
        "location": "aw_toolsAndInfo"
      }
    },
    "showInbox": {
      "actionType": "Navigate",
      "navigateTo": "myTasks",
      "navigationParams": {}
    },
    "awp0DemoteTaskCommandAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0DemoteTask",
        "location": "aw_toolsAndInfo"
      }
    },
    "awp0SuspendTaskCommandAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0SuspendTask",
        "location": "aw_toolsAndInfo"
      }
    },
    "awp0ResumeTaskCommandAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0ResumeTask",
        "location": "aw_toolsAndInfo"
      }
    },
    "submitToHostAction": {
      "actionType": "JSFunction",
      "method": "sendEventToHost",
      "inputData": {
        "data": "{{data}}"
      },
      "deps": "js/Awp0hostInboxUtils"
    },
    "deleteTaskAction": {
      "actionType": "JSFunctionAsync",
      "method": "getTaskObjectsToDelete",
      "deps": "js/Awp0InboxUtils",
      "inputData": {
        "selectedObjects": {
          "$adapt": "{{commandContext.selectionData.value.selected}}"
        }
      },
      "outputData": {
        "deletedTaskObjects": ""
      },
      "events": {
        "success": [
          {
            "name": "workflow.initiateTaskDeleteAction",
            "condition": "data.deletedTaskObjects && data.deletedTaskObjects.length > 0"
          }
        ]
      }
    },
    "initiateTaskDeleteAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "confirmTaskDeleteEvent",
            "condition": "( data.deletedTaskObjects && data.deletedTaskObjects.length === 1 && data.deletedTaskObjects[0] )"
          },
          {
            "name": "confirmMultipleTaskDeleteEvent",
            "condition": "(data.deletedTaskObjects && data.deletedTaskObjects.length > 1)"
          }
        ]
      }
    },
    "performTaskDelete": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteObjects",
      "deps": "js/Awp0InboxUtils",
      "inputData": {
        "objects": {
          "$adapt": "{{data.deletedTaskObjects}}"
        }
      },
      "outputData": {
        "deleteObjectsPartialErrors": "partialErrors",
        "objectsFailedToDelete": "partialErrors.length"
      },
      "events": {
        "success": [
          {
            "name": "primaryWorkarea.reset"
          },
          {
            "condition": "!commandContext.selectionData.value.pselected && commandContext.selectionData.value.selected[0] && ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.client.inbox.tasksLocation' && ( commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Workflow')",
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{commandContext.selectionData.value.selected[0]}}"
              ]
            }
          },
          {
            "condition": "commandContext.selectionData.value.pselected && commandContext.selectionData.value.selected[0] && ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.client.inbox.tasksLocation' && ( commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Workflow')",
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{commandContext.selectionData.value.pselected}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "(data.deletedTaskObjects && data.deletedTaskObjects.length === 1)",
            "message": "deleteTaskObjectsSingleFailureMessage"
          },
          {
            "condition": "(data.deletedTaskObjects && data.deletedTaskObjects.length > 1)",
            "message": "deleteTaskObjectsMultipleFailureMessage"
          }
        ]
      }
    },
    "openAddRemoteInboxPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0AddRemoteInbox",
        "location": "aw_toolsAndInfo",
        "context": "{{commandContext.dataProvider.vmCollectionObj.vmCollection.loadedVMObjects}}",
        "push": false,
        "closeWhenCommandHidden": true,
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "removeRemoteInboxSubscription": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "objects": [
          "{{commandContext.openedObject}}"
        ],
        "attributes": [
          "remote_inboxes"
        ]
      },
      "policy": {
        "types": [
          {
            "name": "User",
            "properties": [
              {
                "name": "remote_inboxes",
                "modifiers": [
                  {
                    "name": "withProperties",
                    "Value": "true"
                  }
                ]
              }
            ]
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "remoteInbox.removeSubscribedInboxes"
          }
        ]
      }
    },
    "removeSubscribedInboxesInternal": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2010-09-DataManagement",
      "method": "setProperties",
      "inputData": {
        "info": "{{function:getSubscribeInboxPropertyInput}}"
      },
      "outputData": {
        "serviceData": ""
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": false,
              "relatedModified": [
                "{{commandContext.openedObject}}"
              ]
            }
          },
          {
            "name": "cutToAwClipboard"
          }
        ]
      },
      "deps": "js/Awp0RemoteInboxService"
    },
    "actionMessages": {
      "failure": [
        {
          "message": "inboxServerError"
        }
      ]
    },
    "openContextRemoteInboxObject": {
      "actionType": "JSFunction",
      "method": "openRemoteInboxObject",
      "deps": "js/Awp0RemoteInboxService",
      "inputData": {
        "commandContext": "{{commandContext.vmo}}"
      }
    },
    "openSelectedRemoteInboxObject": {
      "actionType": "JSFunction",
      "method": "openRemoteInboxObject",
      "deps": "js/Awp0RemoteInboxService",
      "inputData": {
        "commandContext": "{{ctx.selected}}"
      }
    },
    "awp0ReplaceMultipleParticipantsCommandAction": {
      "actionType": "JSFunction",
      "method": "validateAndActivateCommandPanel",
      "deps": "js/Awp0ReplaceMultipleParticipantCommandHandler",
      "inputData": {
        "data": "{{data}}",
        "ctx": "{{ctx}}",
        "selections": "{{commandContext.selectionData.value.selected}}"
      }
    },
    "expandChildren": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "workflowViewer.expandChildren",
            "eventData": {
              "node": "{{ctx.graph.commandContextItem}}"
            }
          }
        ]
      }
    },
    "expandSubProcess": {
      "actionType": "JSFunction",
      "method": "expandSubProcess",
      "deps": "js/Awp0WorkflowViewerGraphService",
      "inputData": {
        "node": "{{ctx.graph.commandContextItem}}"
      }
    },
    "openProcessInViewerCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "workflowViewer.openProcess",
            "eventData": {
              "nodeObject": "{{ctx.graph.commandContextItem.appData.nodeObject}}"
            }
          }
        ]
      }
    },
    "Awp0FromSectionAddCmdAction": {
      "actionType": "JSFunction",
      "method": "updateAtomicDataValue",
      "inputData": {
        "AtomicObj": "{{commandContext}}",
        "value": {
          "activeView": "AwPeoplePicker",
          "context": "fromUser"
        }
      },
      "deps": "js/addObjectUtils"
    },
    "Awp0ToSectionAddCmdAction": {
      "actionType": "JSFunction",
      "method": "updateAtomicDataValue",
      "inputData": {
        "AtomicObj": "{{commandContext}}",
        "value": {
          "activeView": "AwPeoplePicker",
          "context": "toUser"
        }
      },
      "deps": "js/addObjectUtils"
    },
    "getSubmitToWorkflowInputs": {
      "actionType": "JSFunctionAsync",
      "method": "getAdaptedObjects",
      "inputData": {
        "sourceObjects": "{{ctx.mselected}}"
      },
      "outputData": {
        "submitWorkflowInput": ""
      },
      "events": {
        "success": [
          {
            "name": "submitWorkflow.adaptedInputs"
          },
          {
            "name": "workflow.collapseFutureTaskTable"
          }
        ]
      },
      "deps": "js/adapterService"
    },
    "getPropsForSubmitToWorkflow": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "objects": "{{data.submitWorkflowInput}}",
        "attributes": [
          "owning_site",
          "checked_out_user"
        ]
      },
      "events": {
        "success": [
          {
            "name": "workflow.getSelectedBOTypeName"
          }
        ]
      }
    },
    "getSelectedBOTypeName": {
      "actionType": "JSFunction",
      "method": "getTheBOType",
      "deps": "js/Awp0NewWorkflowProcessCommandHandler",
      "inputData": {
        "selections": "{{ctx.mselected}}"
      },
      "outputData": {
        "inputForGetTypeConstantValues": []
      },
      "events": {
        "success": [
          {
            "name": "workflow.getTypesFromBO"
          }
        ]
      }
    },
    "getTypeFromBOConstant": {
      "actionType": "TcSoaService",
      "serviceName": "BusinessModeler-2007-06-Constants",
      "method": "getTypeConstantValues",
      "inputData": {
        "keys": "{{data.inputForGetTypeConstantValues}}"
      },
      "outputData": {
        "applicableTypes": "constantValues"
      },
      "events": {
        "success": [
          {
            "name": "workflow.validateForCreatingWorkflowPresenterEvent"
          }
        ]
      }
    },
    "validateForCreatingWorkflowPresenterAction": {
      "actionType": "JSFunction",
      "method": "populateErrorMessage",
      "deps": "js/Awp0NewWorkflowProcessCommandHandler",
      "inputData": {
        "selections": "{{ctx.mselected}}",
        "data": {
          "applicableTypes": "{{data.applicableTypes}}",
          "i18n": "{{data.i18n}}"
        },
        "ctx": "{{ctx}}"
      }
    },
    "addParticipantBatchAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getAdaptedObjectsParticipantAction"
        },
        {
          "action": "addParticipants"
        }
      ]
    },
    "getAdaptedObjectsParticipantAction": {
      "actionType": "JSFunctionAsync",
      "method": "getAdaptedObjects",
      "inputData": {
        "sourceObjects": [
          "{{commandContext.vmo}}"
        ]
      },
      "outputData": {
        "selectedItemRevisions": ""
      },
      "deps": "js/adapterService"
    },
    "addParticipants": {
      "actionType": "JSFunction",
      "method": "addParticipants",
      "deps": "js/Awp0ParticipantService",
      "inputData": {
        "selectedItemRevision": "{{data.selectedItemRevisions[0]}}",
        "commandContext": "{{commandContext}}",
        "ctx": "{{ctx}}"
      }
    },
    "replaceParticipantBatchAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getAdaptedObjectsParticipantAction"
        },
        {
          "action": "replaceParticipantsInternal",
          "condition": "!commandContext.isParticipantTable"
        },
        {
          "action": "openReplaceParticipantPanel",
          "condition": "!commandContext.isParticipantTable"
        },
        {
          "action": "replaceParticipantsTableInternal",
          "condition": "commandContext.isParticipantTable"
        },
        {
          "action": "openReplaceParticipantPanelTableCase",
          "condition": "commandContext.isParticipantTable"
        }
      ]
    },
    "replaceParticipantsInternal": {
      "actionType": "JSFunctionAsync",
      "method": "canRemoveOrReplaceParticipant",
      "inputData": {
        "selectedItemRevision": "{{data.selectedItemRevisions[0]}}",
        "selectedParticipants": [
          "{{commandContext.selectionModel.selectionData.selected[0]}}"
        ],
        "isReplaceCase": true
      },
      "deps": "js/Awp0ParticipantService",
      "actionMessages": {
        "failure": [
          {
            "message": "serverError"
          }
        ]
      }
    },
    "replaceParticipantsTableInternal": {
      "actionType": "JSFunctionAsync",
      "method": "canRemoveOrReplaceParticipant",
      "inputData": {
        "selectedItemRevision": "{{data.selectedItemRevisions[0]}}",
        "selectedParticipants": [
          "{{commandContext.selectedObjects[0]}}"
        ],
        "isReplaceCase": true
      },
      "deps": "js/Awp0ParticipantService",
      "actionMessages": {
        "failure": [
          {
            "message": "serverError"
          }
        ]
      }
    },
    "openReplaceParticipantPanel": {
      "actionType": "JSFunction",
      "method": "replaceParticipants",
      "deps": "js/Awp0ParticipantService",
      "inputData": {
        "selectedItemRevision": "{{data.selectedItemRevisions[0]}}",
        "commandContext": "{{commandContext}}",
        "selParticipantObject": "{{commandContext.selectionModel.selectionData.selected[0]}}"
      }
    },
    "openReplaceParticipantPanelTableCase": {
      "actionType": "JSFunction",
      "method": "replaceParticipants",
      "deps": "js/Awp0ParticipantService",
      "inputData": {
        "selectedItemRevision": "{{data.selectedItemRevisions[0]}}",
        "commandContext": "{{commandContext}}",
        "selParticipantObject": "{{commandContext.selectedObjects[0]}}"
      }
    },
    "removeParticipantBatchAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getRemoveParticipantObjects"
        },
        {
          "action": "isOktoRemoveItemRevisionParticipant",
          "condition": "data.selectedObject && data.selectedParticipants"
        },
        {
          "action": "removeParticipants",
          "condition": "data.selectedObject && data.selectedParticipants"
        }
      ]
    },
    "getRemoveParticipantObjects": {
      "actionType": "JSFunction",
      "method": "getRemoveParticipantObjects",
      "inputData": {
        "commandContext": "{{commandContext}}"
      },
      "outputData": {
        "selectedObject": "selectedObject",
        "selectedParticipants": "selectedParticipants"
      },
      "deps": "js/Awp0ParticipantService"
    },
    "isOktoRemoveItemRevisionParticipant": {
      "actionType": "JSFunction",
      "method": "canRemoveOrReplaceParticipant",
      "inputData": {
        "selectedItemRevision": "{{data.selectedObject[0]}}",
        "selectedParticipants": "{{data.selectedParticipants}}"
      },
      "deps": "js/Awp0ParticipantService",
      "actionMessages": {
        "failure": [
          {
            "message": "serverError"
          }
        ]
      }
    },
    "removeParticipants": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2008-06-DataManagement",
      "method": "removeParticipants",
      "inputData": {
        "participants": [
          {
            "itemRev": "{{data.selectedObject[0]}}",
            "participant": "{{data.selectedParticipants}}"
          }
        ]
      },
      "outputData": {
        "response": "",
        "isParticipantPageRefresh": "{{function:getRemoveParticipantPageRefreshNeeded}}"
      },
      "deps": "js/Awp0ParticipantService",
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "condition": "!commandContext.isParticipantTable || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Participants' || commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Participants'",
            "eventData": {
              "refreshLocationFlag": "{{data.isParticipantPageRefresh}}",
              "relatedModified": [
                "{{data.selectedObject[0]}}"
              ],
              "createdObjects": [
                "{{commandContext.selectionData.value.relationInfo[0].secondaryObject}}"
              ]
            }
          },
          {
            "name": "cdm.relatedModified",
            "condition": "commandContext.isParticipantTable",
            "eventData": {
              "relatedModified": [
                "{{data.selectedObject[0]}}"
              ],
              "createdObjects": "{{data.response.modelObjects}}"
            }
          },
          {
            "name": "workflow.resetParticipantTable",
            "excludeLocalDataCtx": true,
            "condition": "commandContext.pageContext.secondaryActiveTabId !== 'tc_xrt_Participants' && commandContext.pageContext.primaryActiveTabId !== 'tc_xrt_Participants'"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "ItemRevision",
            "properties": [
              {
                "name": "awp0RequiredParticipants"
              }
            ]
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "serverError"
          }
        ]
      }
    },
    "awp0ProcessAssignmentAction": {
      "actionType": "JSFunction",
      "method": "openUserPanel",
      "inputData": {
        "value": "{{commandContext}}",
        "data": "{{data}}",
        "ctx": "{{ctx}}"
      },
      "events": {
        "success": [
          {
            "name": "awPanel.navigate",
            "eventData": {
              "destPanelId": "Users",
              "title": "{{i18n.Add_Title}} {{commandContext.typeDisplayName}}",
              "supportGoBack": true,
              "recreatePanel": true
            }
          }
        ]
      },
      "deps": "js/Awp0WorkflowAssignmentPanelService"
    },
    "removeParticipantAssignments": {
      "actionType": "JSFunction",
      "method": "removeParticipantAssignments",
      "inputData": {
        "data": "{{data}}",
        "commandContext": "{{commandContext}}"
      },
      "deps": "js/Awp0ProcessAssignment"
    },
    "awp0AddTasksAssignmentAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "workflow.openUserPickerPanel",
            "eventData": {
              "selectedProfile": "{{commandContext.vmo}}",
              "commandContext": "{{commandContext}}"
            }
          }
        ]
      }
    },
    "awp0RemoveTaskAssignmentAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "workflow.removeTaskAssignment",
            "eventData": {
              "commandContext": "{{commandContext}}",
              "selected": "{{commandContext.selectedObjects}}"
            }
          }
        ]
      }
    },
    "setWorkflowViewerActiveLayoutAsTopToBottom": {
      "actionType": "JSFunction",
      "method": "enableAutoLayout",
      "deps": "js/Awp0WorkflowViewerAutoLayoutHandler",
      "inputData": {
        "graphModel": "{{commandContext.graphModel}}",
        "workflowViewwerContext": "{{commandContext.workflowViewerContext}}",
        "layoutOption": "GcTopToBottomLayout"
      }
    },
    "setWorkflowViewerActiveLayoutAsRightToLeft": {
      "actionType": "JSFunction",
      "method": "enableAutoLayout",
      "deps": "js/Awp0WorkflowViewerAutoLayoutHandler",
      "inputData": {
        "graphModel": "{{commandContext.graphModel}}",
        "workflowViewwerContext": "{{commandContext.workflowViewerContext}}",
        "layoutOption": "GcRightToLeftLayout"
      }
    },
    "setWorkflowViewerActiveLayoutAsLeftToRight": {
      "actionType": "JSFunction",
      "method": "enableAutoLayout",
      "deps": "js/Awp0WorkflowViewerAutoLayoutHandler",
      "inputData": {
        "graphModel": "{{commandContext.graphModel}}",
        "workflowViewwerContext": "{{commandContext.workflowViewerContext}}",
        "layoutOption": "GcLeftToRightLayout"
      }
    },
    "setWorkflowViewerActiveLayoutAsFixed": {
      "actionType": "JSFunction",
      "method": "disableAutoLayout",
      "deps": "js/Awp0WorkflowViewerAutoLayoutHandler",
      "inputData": {
        "graphModel": "{{commandContext.graphModel}}",
        "workflowViewwerContext": "{{commandContext.workflowViewerContext}}",
        "layoutOption": "FixedLayout"
      }
    },
    "saveEditsInboxPWA": {
      "actionType": "JSFunctionAsync",
      "method": "saveEdits",
      "deps": "js/editHandlerService",
      "inputData": {
        "editContext": "TABLE_CONTEXT"
      },
      "events": {
        "success": [
          {
            "name": "updateURLParam"
          }
        ]
      }
    },
    "isDirtyInboxOnCancelEditsPWA": {
      "actionType": "JSFunction",
      "method": "setActiveEditHandlerContext",
      "deps": "js/editHandlerService",
      "inputData": {
        "editContext": "TABLE_CONTEXT"
      },
      "events": {
        "success": [
          {
            "name": "inboxPWA.cancelEdits"
          }
        ]
      }
    },
    "inboxPWACancelEdits": {
      "actionType": "JSFunctionAsync",
      "method": "isDirty",
      "outputData": {
        "dirty": "isDirty"
      },
      "events": {
        "success": [
          {
            "condition": "!data.dirty",
            "name": "cancelEdits"
          },
          {
            "condition": "data.dirty",
            "name": "cancelEditsPreferenceCheck"
          }
        ]
      },
      "deps": "js/editHandlerService"
    },
    "inboxPWASaveEditsAndReset": {
      "actionType": "JSFunctionAsync",
      "method": "saveEdits",
      "deps": "js/editHandlerService",
      "inputData": {
        "editContext": "TABLE_CONTEXT"
      },
      "events": {
        "success": [
          {
            "name": "updateURLParam"
          },
          {
            "name": "primaryWorkarea.reset"
          }
        ]
      }
    },
    "createWorkflowSubProcess": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "objects": [
          "{{ctx.selected}}"
        ],
        "attributes": [
          "parent_process",
          "fnd0StoreParticipantsOnJob",
          "root_target_attachments",
          "fnd0ParentTask"
        ]
      },
      "events": {
        "success": [
          {
            "name": "workflow.collapseFutureTaskTable"
          },
          {
            "name": "workflow.openSubProcessPanel"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMTask",
            "properties": [
              {
                "name": "parent_process"
              },
              {
                "name": "root_target_attachments"
              },
              {
                "name": "fnd0StoreParticipantsOnJob"
              }
            ]
          },
          {
            "name": "Signoff",
            "properties": [
              {
                "name": "fnd0ParentTask",
                "modifiers": [
                  {
                    "name": "withProperties",
                    "Value": "true"
                  }
                ]
              },
              {
                "name": "fnd0StoreParticipantsOnJob"
              },
              {
                "name": "root_target_attachments"
              }
            ]
          }
        ]
      }
    },
    "createWorkflowSubProcessInternal": {
      "actionType": "JSFunction",
      "method": "openCreateSubProcessCommandPanel",
      "deps": "js/Awp0NewWorkflowProcessCommandHandler",
      "inputData": {
        "selection": "{{ctx.selected}}",
        "data": "{{data}}",
        "ctx": "{{ctx}}"
      }
    },
    "removeWorkflowProcessTarget": {
      "actionType": "JSFunction",
      "method": "removeWorkflowProcessTargets",
      "inputData": {
        "subPanelContext": "{{commandContext.submitPanelState}}",
        "selectedObjects": "{{commandContext.selectedObjects}}",
        "commandContextKey": "{{commandContext.attachmentContextKey}}"
      },
      "deps": "js/Awp0WorkflowAttachmentTargetReferenceService"
    },
    "addWorkflowProcessTargets": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "loadSubmittableObjectTypes",
          "condition": "!data.submittableObjectTypes || data.submittableObjectTypes === ''"
        },
        {
          "action": "openProcessAttachmentPanel",
          "condition": "data.submittableObjectTypes && data.submittableObjectTypes !== ''"
        }
      ]
    },
    "loadSubmittableObjectTypes": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-AWS2-2019-06-Finder",
      "method": "performSearchViewModel4",
      "inputData": {
        "searchInput": {
          "maxToLoad": 1,
          "maxToReturn": 1,
          "providerName": "Awp0ResourceProvider",
          "searchCriteria": {
            "searchString": "",
            "resourceProviderContentType": "SubmittableWSOTypes"
          },
          "cursor": {
            "startIndex": 0
          },
          "attributesToInflate": [
            "fnd0InternalName"
          ],
          "searchFilterFieldSortType": "Alphabetical",
          "searchFilterMap6": {},
          "searchSortCriteria": []
        }
      },
      "policy": {
        "types": [
          {
            "name": "ImanType",
            "properties": [
              {
                "name": "fnd0InternalName"
              },
              {
                "name": "object_string"
              }
            ]
          }
        ]
      },
      "outputData": {
        "submittableObjectTypes": "searchFilterCategories[0].internalName"
      },
      "deps": "js/Awp0NewWorkflowProcess"
    },
    "openProcessAttachmentPanel": {
      "actionType": "JSFunction",
      "method": "updateAtomicDataValue",
      "inputData": {
        "AtomicObj": "{{commandContext.submitPanelState}}",
        "value": {
          "activeView": "Awp0AddWorkflowProcessAttachmentSub",
          "attachmentContextKey": "{{commandContext.attachmentContextKey}}",
          "submittableObjectTypes": "{{data.submittableObjectTypes}}"
        }
      },
      "deps": "js/addObjectUtils"
    },
    "selectAllWorkflowTargetAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "workflow.selectAllObjects",
            "eventData": {
              "attachmentContextKey": "{{commandContext.attachmentContextKey}}"
            }
          }
        ]
      }
    },
    "selectNoneWorkflowAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "workflow.selectNoneObjects",
            "eventData": {
              "attachmentContextKey": "{{commandContext.attachmentContextKey}}"
            }
          }
        ]
      }
    },
    "addUsersTaskAssignmentAction": {
      "actionType": "JSFunction",
      "method": "openUserPanel",
      "inputData": {
        "value": "{{commandContext}}",
        "data": "{{data}}",
        "ctx": "{{ctx}}"
      },
      "events": {
        "success": [
          {
            "name": "awPanel.navigate",
            "eventData": {
              "destPanelId": "Users",
              "title": "{{i18n.Add_Title}}",
              "supportGoBack": true,
              "recreatePanel": true
            }
          }
        ]
      },
      "deps": "js/Awp0WorkflowAssignmentPanelService"
    },
    "addTaskParticipantAssignmentAfterSubmit": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "workflow.openUserPickerPanel",
            "eventData": {
              "selectedProfile": "{{commandContext.vmo}}",
              "commandContext": "{{commandContext}}"
            }
          }
        ]
      }
    },
    "removeTaskParticipantAssignemntAfterSubmit": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "workflow.removeTaskAssignment",
            "eventData": {
              "commandContext": "{{commandContext}}",
              "selected": "{{commandContext.selectedObjects}}"
            }
          }
        ]
      }
    },
    "removeTaskAssignemntAfterSubmit": {
      "actionType": "JSFunction",
      "method": "removeUsersTaskAssignment",
      "inputData": {
        "commandContext": "{{commandContext}}",
        "selected": "{{commandContext.selectedObjects}}"
      },
      "deps": "js/Awp0WorkflowAssignmentPanelService"
    },
    "startEditTaskAssignmentBatchAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "startEditTaskAssignmentAction"
        },
        {
          "action": "registerTaskAssignemntEditHandlerContext"
        }
      ]
    },
    "startEditTaskAssignmentAction": {
      "actionType": "JSFunction",
      "method": "updateAtomicDataValue",
      "inputData": {
        "AtomicObj": "{{commandContext.assignmentState}}",
        "value": {
          "isStartEditEnabled": true
        }
      },
      "deps": "js/addObjectUtils"
    },
    "registerTaskAssignemntEditHandlerContext": {
      "actionType": "JSFunction",
      "method": "registerEditHandlerContext",
      "inputData": {
        "assignmentState": "{{commandContext.assignmentState}}"
      },
      "deps": "js/Awp0WorkflowAssignmentService"
    },
    "removeTaskAssignment": {
      "actionType": "JSFunction",
      "method": "removeTaskAssignment",
      "inputData": {
        "context": "{{commandContext.selected[0]}}",
        "assignmentState": "{{commandContext.assignmentState}}"
      },
      "deps": "js/Awp0WorkflowAssignmentService"
    },
    "replaceTaskAssignments": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0ReplaceTaskAssignment",
        "location": "aw_toolsAndInfo",
        "context": {
          "selectedAssignemnt": "{{commandContext.selected[0]}}",
          "assignmentState": "{{commandContext.assignmentState}}"
        }
      }
    },
    "saveTaskAssignmentBatchAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "saveTaskAssignmentAction"
        },
        {
          "action": "saveTaskAssignmentPrimaryWorkAreaResetAction",
          "condition": "ctx.ViewModeContext.ViewModeContext !== 'TableSummaryView' && conditions.IsTaskAssignmentTabActive"
        },
        {
          "action": "inboxPWASaveEditsAndReset",
          "condition": "ctx.ViewModeContext.ViewModeContext === 'TableSummaryView' && ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && conditions.IsTaskAssignmentTabActive"
        }
      ]
    },
    "saveTaskAssignmentAction": {
      "actionType": "JSFunctionAsync",
      "method": "saveEdits",
      "inputData": {
        "assignmentState": "{{commandContext.assignmentState}}"
      },
      "deps": "js/Awp0WorkflowAssignmentService",
      "events": {
        "success": [
          {
            "condition": "ctx.taskAssignmentCtx.isNarrowViewMode",
            "name": "narrowSummaryLocationTitleClickEvent"
          }
        ]
      }
    },
    "saveTaskAssignmentPrimaryWorkAreaResetAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "primaryWorkarea.reset"
          }
        ]
      }
    },
    "cancelTaskAssignmentAction": {
      "actionType": "JSFunction",
      "method": "cancelEdits",
      "inputData": {},
      "deps": "js/Awp0WorkflowAssignmentEditService"
    },
    "workflowPopupPanelCloseAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "workflow.closePopupPanel"
          }
        ]
      }
    },
    "awp0PasteUsersAssignmentAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "workflow.addTaskAssignment",
            "eventData": {
              "commandContext": "{{commandContext}}",
              "selected": "{{commandContext.selectedUsers}}"
            }
          }
        ]
      }
    },
    "assignTaskAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0TaskAssignmentCommandPanel",
        "location": "aw_toolsAndInfo",
        "panelContext": "{{ctx.taskAssignmentCtx.panelContext}}"
      }
    },
    "closePopupPanel": {
      "actionType": "JSFunction",
      "method": "hidePopupPanel",
      "inputData": {},
      "events": {
        "success": [
          {
            "name": "submitToWorkflow.resetCtxValuesForUserPickerAndCategoriesPanel"
          }
        ]
      },
      "deps": "js/Awp0WorkflowPopupService"
    },
    "removeUsersFromReassignParticipants": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "reassignMultiParticipants.removeUser",
            "eventData": {
              "vmo": "{{commandContext.vmo}}"
            }
          }
        ]
      }
    },
    "addWorkflowProcessReferences": {
      "actionType": "JSFunction",
      "method": "updateAtomicDataValue",
      "inputData": {
        "AtomicObj": "{{commandContext.submitPanelState}}",
        "value": {
          "activeView": "Awp0AddWorkflowProcessAttachmentSub",
          "attachmentContextKey": "{{commandContext.attachmentContextKey}}",
          "submittableObjectTypes": null
        }
      },
      "deps": "js/addObjectUtils"
    },
    "showAm0ManageACLForWD": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Am0ManageACL",
        "location": "aw_toolsAndInfo",
        "context": {
          "aclType": "WORKFLOW"
        }
      }
    },
    "moveUpTask": {
      "actionType": "JSFunction",
      "method": "moveTask",
      "deps": "js/Awp0TaskTable",
      "inputData": {
        "context": "{{commandContext}}",
        "order": -1
      }
    },
    "moveDownTask": {
      "actionType": "JSFunction",
      "method": "moveTask",
      "deps": "js/Awp0TaskTable",
      "inputData": {
        "context": "{{commandContext}}",
        "order": 1
      }
    },
    "moveUpHandler": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateHandler",
      "inputData": {
        "input": [
          {
            "clientID": "moveUpHandler",
            "handlerToUpdate": "{{commandContext.data.dataProviders.handlersDataProvider.selectedObjects[0].uid}}",
            "changeExecutionOrder": -1
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "refreshTreeTable"
          }
        ]
      }
    },
    "moveDownHandler": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateHandler",
      "inputData": {
        "input": [
          {
            "clientID": "moveDownHandler",
            "handlerToUpdate": "{{commandContext.data.dataProviders.handlersDataProvider.selectedObjects[0].uid}}",
            "changeExecutionOrder": 1
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "refreshTreeTable"
          }
        ]
      }
    },
    "copyHandler": {
      "actionType": "JSFunction",
      "method": "registerCtx",
      "inputData": {
        "name": "handlerToPaste",
        "value": "{{commandContext.data.dataProviders.handlersDataProvider.selectedObjects[0]}}"
      },
      "deps": "js/appCtxService",
      "actionMessages": {
        "success": [
          {
            "message": "copyHandlerSuccessfulMsg"
          }
        ]
      }
    },
    "refreshTreeTable": {
      "actionType": "JSFunction",
      "method": "updateHandlerTreeTable",
      "inputData": {
        "ctx": "{{ctx}}",
        "operation": "move",
        "handlerToUpdate": "{{commandContext.data.dataProviders.handlersDataProvider.selectedObjects[0].uid}}"
      },
      "deps": "js/Awp0TemplateHandlersTab",
      "events": {
        "success": [
          {
            "name": "getIndexOfSelectedHandler"
          }
        ]
      }
    },
    "awp0NewWorkflowProcessTemplateOpenPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0NewWorkflowProcessTemplate",
        "location": "aw_toolsAndInfo"
      }
    },
    "removeProcessTemplateAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "confirmTemplateDeleteSummaryVisibleEvent",
            "condition": "ctx.xrtSummaryContextObject"
          },
          {
            "name": "confirmTemplateDeleteSummaryHiddenEvent",
            "condition": "!ctx.xrtSummaryContextObject && ctx.selected"
          }
        ]
      }
    },
    "startEditTemplateAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "confirmTemplateStartEditSummaryVisibleEvent",
            "condition": "ctx.xrtSummaryContextObject && ctx.xrtSummaryContextObject.props.stage.dbValues[0] === '2'"
          },
          {
            "name": "createTemplateSummaryVisibleEvent",
            "condition": "ctx.xrtSummaryContextObject && ctx.xrtSummaryContextObject.props.stage.dbValues[0] === '1'"
          },
          {
            "name": "confirmTemplateStartEditSummaryHiddenEvent",
            "condition": "!ctx.xrtSummaryContextObject && ctx.selected.props.stage.dbValues[0] === '2'"
          },
          {
            "name": "createTemplateSummaryHiddenEvent",
            "condition": "!ctx.xrtSummaryContextObject && ctx.selected.props.stage.dbValues[0] === '1'"
          }
        ]
      }
    },
    "deleteTemplateSummaryVisibleAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteObjects",
      "inputData": {
        "objects": [
          "{{ctx.xrtSummaryContextObject}}"
        ]
      },
      "events": {
        "success": [
          {
            "name": "primaryWorkarea.reset"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "deleteTemplateSummaryVisibleActionFailure"
          }
        ]
      }
    },
    "deleteTemplateSummaryHiddenAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteObjects",
      "inputData": {
        "objects": [
          "{{ctx.selected}}"
        ]
      },
      "events": {
        "success": [
          {
            "name": "primaryWorkarea.reset"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "deleteTemplateSummaryVisibleActionFailure"
          }
        ]
      }
    },
    "importWorkflowTemplate": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0ImportWorkflowTemplate",
        "location": "aw_toolsAndInfo"
      }
    },
    "exportWorkflowTemplate": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0ExportWorkflowTemplate",
        "location": "aw_toolsAndInfo"
      }
    },
    "expandTemplateChildren": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "workflowDesigner.expandChildren",
            "eventData": {
              "node": "{{ctx.graph.commandContextItem}}"
            }
          }
        ]
      }
    },
    "activateWorkflowDesignerGridSettingsPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0WorkflowGraphGridSettings",
        "location": "aw_toolsAndInfo"
      }
    },
    "awp0TemplateFiltersCommandAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0SearchFilter",
        "location": "aw_navigation"
      }
    },
    "obsoleteAndCreateTemplateSummaryVisibleAction": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateTemplate",
      "inputData": {
        "input": [
          {
            "clientID": "startEditTemplate",
            "templateToUpdate": "{{ctx.xrtSummaryContextObject.uid}}",
            "additionalData": {
              "modify_task_template": [
                "false",
                "false",
                "false"
              ]
            }
          }
        ]
      },
      "outputData": {
        "editObject": "createdorUpdatedObjects['0'].templateObject"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.startEdit"
          },
          {
            "name": "workflowDesigner.selectEditContext",
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
          },
          {
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'",
            "name": "openNewlyCreatedTemplateEvent"
          }
        ]
      }
    },
    "obsoleteAndCreateTemplateSummaryHiddenAction": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateTemplate",
      "inputData": {
        "input": [
          {
            "clientID": "startEditTemplate",
            "templateToUpdate": "{{ctx.selected.uid}}",
            "additionalData": {
              "modify_task_template": [
                "false",
                "false",
                "false"
              ]
            }
          }
        ]
      },
      "outputData": {
        "editObject": "createdorUpdatedObjects['0'].templateObject"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.startEdit"
          },
          {
            "name": "workflowDesigner.selectEditContext",
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
          },
          {
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'",
            "name": "openNewlyCreatedTemplateEvent"
          }
        ]
      }
    },
    "createTemplateSummaryVisibleAction": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateTemplate",
      "inputData": {
        "input": [
          {
            "clientID": "startEditTemplate",
            "templateToUpdate": "{{ctx.xrtSummaryContextObject.uid}}",
            "additionalData": {
              "modify_task_template": [
                "true",
                "false",
                "false"
              ]
            }
          }
        ]
      },
      "outputData": {
        "editObject": "createdorUpdatedObjects['0'].templateObject"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.startEdit"
          },
          {
            "name": "workflowDesigner.selectEditContext",
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
          },
          {
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'",
            "name": "openNewlyCreatedTemplateEvent"
          }
        ]
      }
    },
    "createTemplateSummaryHiddenAction": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateTemplate",
      "inputData": {
        "input": [
          {
            "clientID": "startEditTemplate",
            "templateToUpdate": "{{ctx.selected.uid}}",
            "additionalData": {
              "modify_task_template": [
                "true",
                "false",
                "false"
              ]
            }
          }
        ]
      },
      "outputData": {
        "editObject": "createdorUpdatedObjects['0'].templateObject"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.startEdit"
          },
          {
            "name": "workflowDesigner.selectEditContext",
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
          },
          {
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'",
            "name": "openNewlyCreatedTemplateEvent"
          }
        ]
      }
    },
    "RemoveHandler": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteObjects",
      "inputData": {
        "objects": [
          "{{commandContext.data.dataProviders.handlersDataProvider.selectedObjects[0]}}"
        ]
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.updateHandlerTree"
          },
          {
            "name": "unregisterPasteHandlerContext",
            "condition": "commandContext.data.dataProviders.handlersDataProvider.selectedObjects[0].uid === ctx.handlerToPaste.uid"
          }
        ]
      }
    },
    "cutHandlerOpertaion": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateHandler",
      "inputData": {
        "input": [
          {
            "clientID": "cutHandler",
            "taskTemplate": "{{commandContext.selectedObject.uid}}",
            "additionalData": {
              "handlerToCut": [
                "{{commandContext.data.dataProviders.handlersDataProvider.selectedObjects[0].uid}}"
              ]
            }
          }
        ]
      },
      "outputData": {
        "actionObject": "createdorUpdatedObjects['0'].handlerObject",
        "ctx.handlerToPaste": "createdorUpdatedObjects['0'].handlerObject"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.updateHandlerTree"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMHandler",
            "properties": [
              {
                "name": "parent_action_type"
              }
            ]
          }
        ]
      }
    },
    "pasteHandlerForActionType": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateHandler",
      "inputData": {
        "input": [
          {
            "clientID": "pasteHandler",
            "taskTemplate": "{{commandContext.data.selectedObject.uid}}",
            "action": "{{commandContext.data.selectedHandler.actionType}}",
            "additionalData": {
              "handlerToPaste": [
                "{{ctx.handlerToPaste.uid}}"
              ]
            }
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.updateHandlerTree"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMHandler",
            "properties": [
              {
                "name": "parent_action_type"
              },
              {
                "name": "arguments"
              }
            ]
          },
          {
            "name": "EPMBRHandler",
            "properties": [
              {
                "name": "arguments"
              }
            ]
          }
        ]
      }
    },
    "pasteHandlerForRuleQuorum": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateHandler",
      "inputData": {
        "input": [
          {
            "clientID": "pasteHandler",
            "taskTemplate": "{{commandContext.data.selectedObject.uid}}",
            "action": "{{commandContext.data.selectedHandler.actionType}}",
            "businessRule": "{{commandContext.data.selectedHandler.uid}}",
            "additionalData": {
              "handlerToPaste": [
                "{{ctx.handlerToPaste.uid}}"
              ]
            }
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.updateHandlerTree"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMHandler",
            "properties": [
              {
                "name": "parent_action_type"
              },
              {
                "name": "arguments"
              }
            ]
          },
          {
            "name": "EPMBRHandler",
            "properties": [
              {
                "name": "arguments"
              }
            ]
          }
        ]
      }
    },
    "pasteHandlerToStarted": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateHandler",
      "inputData": {
        "input": [
          {
            "clientID": "pasteHandler",
            "taskTemplate": "{{ctx.selected.uid}}",
            "action": 2,
            "additionalData": {
              "handlerToPaste": [
                "{{ctx.handlerToPaste.uid}}"
              ]
            }
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "refreshActionTable",
            "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
          },
          {
            "name": "refreshRuleTable",
            "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMHandler",
            "properties": [
              {
                "name": "parent_action_type"
              },
              {
                "name": "arguments"
              }
            ]
          },
          {
            "name": "EPMBRHandler",
            "properties": [
              {
                "name": "arguments"
              }
            ]
          }
        ]
      }
    },
    "pasteHandlerToAssigned": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateHandler",
      "inputData": {
        "input": [
          {
            "clientID": "pasteHandler",
            "taskTemplate": "{{ctx.selected.uid}}",
            "action": 1,
            "additionalData": {
              "handlerToPaste": [
                "{{ctx.handlerToPaste.uid}}"
              ]
            }
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "refreshActionTable",
            "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
          },
          {
            "name": "refreshRuleTable",
            "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMHandler",
            "properties": [
              {
                "name": "parent_action_type"
              },
              {
                "name": "arguments"
              }
            ]
          },
          {
            "name": "EPMBRHandler",
            "properties": [
              {
                "name": "arguments"
              }
            ]
          }
        ]
      }
    },
    "pasteHandlerToPerformed": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateHandler",
      "inputData": {
        "input": [
          {
            "clientID": "pasteHandler",
            "taskTemplate": "{{ctx.selected.uid}}",
            "action": 100,
            "additionalData": {
              "handlerToPaste": [
                "{{ctx.handlerToPaste.uid}}"
              ]
            }
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "refreshActionTable",
            "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
          },
          {
            "name": "refreshRuleTable",
            "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMHandler",
            "properties": [
              {
                "name": "parent_action_type"
              },
              {
                "name": "arguments"
              }
            ]
          },
          {
            "name": "EPMBRHandler",
            "properties": [
              {
                "name": "arguments"
              }
            ]
          }
        ]
      }
    },
    "pasteHandlerToCompleted": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateHandler",
      "inputData": {
        "input": [
          {
            "clientID": "pasteHandler",
            "taskTemplate": "{{ctx.selected.uid}}",
            "action": 4,
            "additionalData": {
              "handlerToPaste": [
                "{{ctx.handlerToPaste.uid}}"
              ]
            }
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "refreshActionTable",
            "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
          },
          {
            "name": "refreshRuleTable",
            "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMHandler",
            "properties": [
              {
                "name": "parent_action_type"
              },
              {
                "name": "arguments"
              }
            ]
          },
          {
            "name": "EPMBRHandler",
            "properties": [
              {
                "name": "arguments"
              }
            ]
          }
        ]
      }
    },
    "pasteHandlerToSkipped": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateHandler",
      "inputData": {
        "input": [
          {
            "clientID": "pasteHandler",
            "taskTemplate": "{{ctx.selected.uid}}",
            "action": 5,
            "additionalData": {
              "handlerToPaste": [
                "{{ctx.handlerToPaste.uid}}"
              ]
            }
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "refreshActionTable",
            "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
          },
          {
            "name": "refreshRuleTable",
            "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMHandler",
            "properties": [
              {
                "name": "parent_action_type"
              },
              {
                "name": "arguments"
              }
            ]
          },
          {
            "name": "EPMBRHandler",
            "properties": [
              {
                "name": "arguments"
              }
            ]
          }
        ]
      }
    },
    "pasteHandlerToSuspended": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateHandler",
      "inputData": {
        "input": [
          {
            "clientID": "pasteHandler",
            "taskTemplate": "{{ctx.selected.uid}}",
            "action": 6,
            "additionalData": {
              "handlerToPaste": [
                "{{ctx.handlerToPaste.uid}}"
              ]
            }
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "refreshActionTable",
            "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
          },
          {
            "name": "refreshRuleTable",
            "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMHandler",
            "properties": [
              {
                "name": "parent_action_type"
              },
              {
                "name": "arguments"
              }
            ]
          },
          {
            "name": "EPMBRHandler",
            "properties": [
              {
                "name": "arguments"
              }
            ]
          }
        ]
      }
    },
    "pasteHandlerToResumed": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateHandler",
      "inputData": {
        "input": [
          {
            "clientID": "pasteHandler",
            "taskTemplate": "{{ctx.selected.uid}}",
            "action": 7,
            "additionalData": {
              "handlerToPaste": [
                "{{ctx.handlerToPaste.uid}}"
              ]
            }
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "refreshActionTable",
            "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
          },
          {
            "name": "refreshRuleTable",
            "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMHandler",
            "properties": [
              {
                "name": "parent_action_type"
              },
              {
                "name": "arguments"
              }
            ]
          },
          {
            "name": "EPMBRHandler",
            "properties": [
              {
                "name": "arguments"
              }
            ]
          }
        ]
      }
    },
    "pasteHandlerToAborted": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateHandler",
      "inputData": {
        "input": [
          {
            "clientID": "pasteHandler",
            "taskTemplate": "{{ctx.selected.uid}}",
            "action": 9,
            "additionalData": {
              "handlerToPaste": [
                "{{ctx.handlerToPaste.uid}}"
              ]
            }
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "refreshActionTable",
            "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
          },
          {
            "name": "refreshRuleTable",
            "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMHandler",
            "properties": [
              {
                "name": "parent_action_type"
              },
              {
                "name": "arguments"
              }
            ]
          },
          {
            "name": "EPMBRHandler",
            "properties": [
              {
                "name": "arguments"
              }
            ]
          }
        ]
      }
    },
    "pasteHandlerToUndo": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateHandler",
      "inputData": {
        "input": [
          {
            "clientID": "pasteHandler",
            "taskTemplate": "{{ctx.selected.uid}}",
            "action": 8,
            "additionalData": {
              "handlerToPaste": [
                "{{ctx.handlerToPaste.uid}}"
              ]
            }
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "refreshActionTable",
            "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
          },
          {
            "name": "refreshRuleTable",
            "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "EPMHandler",
            "properties": [
              {
                "name": "parent_action_type"
              },
              {
                "name": "arguments"
              }
            ]
          },
          {
            "name": "EPMBRHandler",
            "properties": [
              {
                "name": "arguments"
              }
            ]
          }
        ]
      }
    },
    "openNewlyCreatedTemplateAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{data.editObject.uid}}"
      }
    },
    "registerEditObjectContext": {
      "actionType": "JSFunction",
      "method": "registerCtx",
      "deps": "js/appCtxService",
      "inputData": {
        "name": "newlyCreatedTemplateObjUid",
        "value": "{{data.editObject.uid}}"
      },
      "events": {
        "success": [
          {
            "name": "primaryWorkarea.reset"
          }
        ]
      }
    },
    "updateContextEditInfoBatchJob": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "updateCtxEditInfo"
        },
        {
          "action": "updateCtxLayoutInfo",
          "condition": "commandContext.subPanelContext.selected && commandContext.workflowDgmState && commandContext.workflowDgmState.diagram && commandContext.workflowDgmState.diagram.layoutOption"
        }
      ]
    },
    "updateCtxEditInfo": {
      "actionType": "JSFunction",
      "method": "updateWorkflowEditCtx",
      "deps": "js/Awp0WorkflowDesignerUtils",
      "inputData": {
        "name": "workflowDgmEditCtx",
        "editObjectUid": "{{data.editObject.uid}}",
        "isEditMode": true
      }
    },
    "updateCtxLayoutInfo": {
      "actionType": "JSFunction",
      "method": "registerCtx",
      "deps": "js/appCtxService",
      "inputData": {
        "name": "startEditGraphLayout",
        "editObjectUid": "{{commandContext.workflowDgmState.diagram.layoutOption}}"
      }
    },
    "resetCtxEditInfo": {
      "actionType": "JSFunction",
      "method": "updateWorkflowEditCtx",
      "deps": "js/Awp0WorkflowDesignerUtils",
      "inputData": {
        "name": "workflowDgmEditCtx",
        "editObjectUid": "{{data.editObject.uid}}",
        "isEditMode": false
      }
    },
    "saveTemplateAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "saveTemplateSummaryVisibleEvent",
            "condition": "(ctx.xrtSummaryContextObject && ctx.preferences && ctx.preferences.EPM_enable_apply_template_changes[0] === 'NONE') || (ctx.preferences && ctx.preferences.EPM_enable_apply_template_changes[0] !== 'NONE' && ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion === 3)"
          },
          {
            "name": "saveTemplateSummaryHiddenEvent",
            "condition": "(!ctx.xrtSummaryContextObject && ctx.selected && ctx.preferences && ctx.preferences.EPM_enable_apply_template_changes[0] === 'NONE') || (ctx.preferences.EPM_enable_apply_template_changes[0] !== 'NONE' && ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion === 3)"
          },
          {
            "name": "saveTemplateAndApplyToProcessSummaryVisibleEvent",
            "condition": "ctx.xrtSummaryContextObject && ctx.preferences && ctx.preferences.EPM_enable_apply_template_changes[0] === 'AUTOMATIC' && (ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion > 3 ) )"
          },
          {
            "name": "saveTemplateAndApplyToProcessInBackgroundHiddenEvent",
            "condition": "!ctx.xrtSummaryContextObject && ctx.selected && ctx.preferences && ctx.preferences.EPM_enable_apply_template_changes[0] === 'AUTOMATIC' && (ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion > 3 ) )"
          },
          {
            "name": "applyTemplateToProcessesOptionVisibleEvent",
            "condition": "ctx.xrtSummaryContextObject && ctx.preferences && ctx.preferences.EPM_enable_apply_template_changes[0] === 'OPTIONAL' && ctx.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'true' && (ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion > 3 ) )"
          },
          {
            "name": "applyTemplateToProcessesOptionHiddenEvent",
            "condition": "!ctx.xrtSummaryContextObject && ctx.selected && ctx.preferences && ctx.preferences.EPM_enable_apply_template_changes[0] === 'OPTIONAL' && ctx.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'true' && (ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion > 3 ) )"
          },
          {
            "name": "applyTemplateToProcessesOptionInForegroundVisibleEvent",
            "condition": "ctx.xrtSummaryContextObject && ctx.preferences && ctx.preferences.EPM_enable_apply_template_changes[0] === 'OPTIONAL' && ctx.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'false' && (ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion > 3 ) )"
          },
          {
            "name": "applyTemplateToProcessesOptionInForegroundHiddenEvent",
            "condition": "!ctx.xrtSummaryContextObject && ctx.selected && ctx.preferences && ctx.preferences.EPM_enable_apply_template_changes[0] === 'OPTIONAL' && ctx.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'false' && (ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion > 3 ) )"
          }
        ]
      }
    },
    "saveTemplateSummaryVisibleAction": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateTemplate",
      "inputData": {
        "input": [
          {
            "clientID": "saveEditTemplate",
            "templateToUpdate": "{{ctx.xrtSummaryContextObject.uid}}",
            "additionalData": {
              "template_stage": [
                "2"
              ]
            }
          }
        ]
      },
      "outputData": {
        "editObject": "createdorUpdatedObjects['0'].templateObject"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.endEdit"
          },
          {
            "name": "workflowDesigner.saveEdit"
          },
          {
            "name": "workflowDesigner.selectEditContext",
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
          },
          {
            "name": "primaryWorkarea.reset",
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
          }
        ]
      }
    },
    "saveTemplateSummaryHiddenAction": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateTemplate",
      "inputData": {
        "input": [
          {
            "clientID": "saveEditTemplate",
            "templateToUpdate": "{{commandContext.subPanelContext.selected.uid}}",
            "additionalData": {
              "template_stage": [
                "2"
              ]
            }
          }
        ]
      },
      "outputData": {
        "editObject": "createdorUpdatedObjects['0'].templateObject"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.endEdit"
          },
          {
            "name": "workflowDesigner.saveEdit"
          },
          {
            "name": "workflowDesigner.selectEditContext",
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
          },
          {
            "name": "primaryWorkarea.reset",
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
          }
        ]
      }
    },
    "saveTemplateAndApplyToProcessSummaryVisibleAction": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateTemplate",
      "inputData": {
        "input": [
          {
            "clientID": "saveEditTemplate",
            "templateToUpdate": "{{ctx.xrtSummaryContextObject.uid}}",
            "additionalData": {
              "template_stage": [
                "2"
              ]
            }
          }
        ]
      },
      "outputData": {
        "editObject": "createdorUpdatedObjects['0'].templateObject"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.endEdit"
          },
          {
            "name": "workflowDesigner.saveEdit"
          },
          {
            "name": "workflowDesigner.selectEditContext",
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
          },
          {
            "name": "automaticApplyTemplateToProcessesInBackgroundVisibleEvent",
            "condition": "ctx.preferences && ctx.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'true'"
          },
          {
            "name": "automaticApplyTemplateToProcessesInForegroundVisibleEvent",
            "condition": "ctx.preferences && ctx.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'false'"
          }
        ]
      }
    },
    "saveTemplateAndApplyToProcessSummaryHiddenAction": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateTemplate",
      "inputData": {
        "input": [
          {
            "clientID": "saveEditTemplate",
            "templateToUpdate": "{{ctx.selected.uid}}",
            "additionalData": {
              "template_stage": [
                "2"
              ]
            }
          }
        ]
      },
      "outputData": {
        "editObject": "createdorUpdatedObjects['0'].templateObject"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.endEdit"
          },
          {
            "name": "workflowDesigner.saveEdit"
          },
          {
            "name": "workflowDesigner.selectEditContext",
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
          },
          {
            "name": "automaticApplyTemplateToProcessesInBackgroundHiddenEvent",
            "condition": "ctx.preferences && ctx.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'true'"
          },
          {
            "name": "automaticApplyTemplateToProcessesInForegroundHiddenEvent",
            "condition": "ctx.preferences && ctx.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'false'"
          }
        ]
      }
    },
    "toggleShowTaskRelatedInfo": {
      "actionType": "JSFunction",
      "method": "showTaskRelatedInfoPanel",
      "inputData": {
        "tabIdToShow": "{{ctx.state.params.ttab_name}}",
        "toggleCase": true
      },
      "deps": "js/Awp0WorkflowDesignerGraphService"
    },
    "removeTaskTemplateAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "workflowDesigner.removeTaskTemplateNode",
            "condition": "commandContext.workflowDgmState.selectedNodes && commandContext.workflowDgmState.selectedNodes.length > 0 &&  commandContext.workflowDgmState.selectedEdges && commandContext.workflowDgmState.selectedEdges.length <= 0"
          },
          {
            "name": "workflowDesigner.removeTaskTemplateEdge",
            "condition": "commandContext.workflowDgmState.selectedNodes && commandContext.workflowDgmState.selectedNodes.length <= 0 && commandContext.workflowDgmState.selectedEdges && commandContext.workflowDgmState.selectedEdges.length > 0"
          },
          {
            "name": "workflowDesigner.removeTaskTemplateNodeAndEdges",
            "condition": "commandContext.workflowDgmState.selectedNodes && commandContext.workflowDgmState.selectedNodes.length > 0 && commandContext.workflowDgmState.selectedEdges && commandContext.workflowDgmState.selectedEdges.length > 0"
          }
        ]
      }
    },
    "removeTaskTemplateNodeAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteObjects",
      "inputData": {
        "objects": "{{function:getRemoveNodeInput}}"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.removeGraphNode"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "deleteTemplateSummaryVisibleActionFailure"
          }
        ]
      },
      "deps": "js/Awp0WorkflowRemoveTemplateService"
    },
    "removeGraphNode": {
      "actionType": "JSFunction",
      "method": "removeGraphElements",
      "deps": "js/Awp0WorkflowRemoveTemplateService",
      "inputData": {
        "removeObjects": "{{function:getNodesToBeRemoved}}",
        "data": "{{commandContext.data}}",
        "state": "{{commandContext.workflowDgmState}}"
      }
    },
    "removeTaskTemplateEdgeAction": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2019-06-Workflow",
      "method": "createOrUpdateTemplate",
      "inputData": {
        "input": "{{function:getRemoveEdgeInput}}"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.removeGraphEdge"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "deleteTemplateSummaryVisibleActionFailure"
          }
        ]
      },
      "deps": "js/Awp0WorkflowRemoveTemplateService"
    },
    "removeGraphEdge": {
      "actionType": "JSFunction",
      "method": "removeGraphElements",
      "deps": "js/Awp0WorkflowRemoveTemplateService",
      "inputData": {
        "removeObjects": "{{function:getEdgesToBeRemoved}}",
        "data": "{{commandContext.data}}",
        "state": "{{commandContext.workflowDgmState}}"
      }
    },
    "removeTaskTemplateNodeEdgeAction": {
      "actionType": "JSFunction",
      "method": "removeGraphNodeEdges",
      "deps": "js/Awp0WorkflowRemoveTemplateService",
      "inputData": {}
    },
    "convertToParentTemplateAction": {
      "actionType": "JSFunction",
      "method": "convertToParent",
      "inputData": {
        "state": "{{commandContext.workflowDgmState}}"
      },
      "deps": "js/Awp0WorkflowDesignerGraphService"
    },
    "addNotificationHandlerAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0WorkflowAddNotificationHandler",
        "location": "aw_toolsAndInfo",
        "context": {
          "notificationHandlerContext": "{{commandContext.notificationHandlerContext}}",
          "workflowDgmEditCtx": "{{commandContext.workflowDgmEditCtx}}"
        }
      }
    },
    "showNotificationHandlerInfoAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0WorkflowShowNotificationHandler",
        "location": "aw_toolsAndInfo",
        "context": {
          "notificationHandlerContext": "{{commandContext.notificationHandlerContext}}",
          "workflowDgmEditCtx": "{{commandContext.workflowDgmEditCtx}}"
        }
      }
    },
    "editNotificationHandlerInfoAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0WorkflowEditNotificationHandler",
        "location": "aw_toolsAndInfo",
        "context": {
          "notificationHandlerContext": "{{commandContext.notificationHandlerContext}}",
          "workflowDgmEditCtx": "{{commandContext.workflowDgmEditCtx}}"
        }
      }
    },
    "removeNotificationHandlerAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteObjects",
      "inputData": {
        "objects": [
          "{{commandContext.notificationHandlerContext.selectedObjects[0].handlerObject}}"
        ]
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.tabReload"
          }
        ]
      }
    },
    "addKeyRoleArguments": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "addKeyRoleArgumentsEvent"
          }
        ]
      }
    },
    "removeKeyRoleArguments": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "removeKeyRoleArgumentsEvent"
          }
        ]
      }
    },
    "Awp0AddHandlerArgument": {
      "actionType": "JSFunction",
      "method": "addHandlerArgumentRow",
      "deps": "js/Awp0CreateOrUpdateTaskHandlers",
      "inputData": {
        "selectedHandlerArguments": "{{commandContext.selectedHandlerArguments}}",
        "data": "{{commandContext.data}}"
      }
    },
    "Awp0EditArgument": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "awPanel.navigate",
            "eventData": {
              "destPanelId": "Awp0ArgumentsValue",
              "title": "{{i18n.editArguments}}",
              "supportGoBack": true,
              "recreatePanel": true
            }
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "populateArgumentNameAndValues",
            "condition": "ctx.argumentsPanelData.readOnlyArgumentName"
          }
        ]
      }
    },
    "Awp0RemoveArgumentAction": {
      "actionType": "JSFunction",
      "method": "awp0RemoveHandlerArgumentPanelSection",
      "deps": "js/Awp0CreateOrUpdateTaskHandlers",
      "inputData": {
        "context": "{{commandContext}}"
      }
    },
    "addAssignmentHandlerAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0WorkflowAddAssignmentHandler",
        "location": "aw_toolsAndInfo",
        "context": "{{commandContext}}"
      }
    },
    "addAssigneeAssignmentHandler": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0WorkflowAddAssignmentHandler",
        "location": "aw_toolsAndInfo",
        "context": {
          "assignmentHandlerContext": "{{commandContext.assignmentHandlerContext}}",
          "workflowDgmEditCtx": "{{commandContext.workflowDgmEditCtx}}",
          "subPanelContext": "{{commandContext.subPanelContext}}",
          "assignmentType": "assignee",
          "assignmentTypeDispName": "{{i18n.RESPONSIBLE_PARTY}}"
        }
      }
    },
    "addAssignerAssignmentHandler": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0WorkflowAddAssignmentHandler",
        "location": "aw_toolsAndInfo",
        "context": {
          "assignmentHandlerContext": "{{commandContext.assignmentHandlerContext}}",
          "workflowDgmEditCtx": "{{commandContext.workflowDgmEditCtx}}",
          "subPanelContext": "{{commandContext.subPanelContext}}",
          "assignmentType": "assigner",
          "assignmentTypeDispName": "{{i18n.Assigner}}"
        }
      }
    },
    "addReviewersAssignmentHandler": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0WorkflowAddAssignmentHandler",
        "location": "aw_toolsAndInfo",
        "context": {
          "assignmentHandlerContext": "{{commandContext.assignmentHandlerContext}}",
          "workflowDgmEditCtx": "{{commandContext.workflowDgmEditCtx}}",
          "subPanelContext": "{{commandContext.subPanelContext}}",
          "assignmentType": "reviewers",
          "assignmentTypeDispName": "{{i18n.addReviewerLabelText}}"
        }
      }
    },
    "addAcknowledgersAssignmentHandler": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0WorkflowAddAssignmentHandler",
        "location": "aw_toolsAndInfo",
        "context": {
          "assignmentHandlerContext": "{{commandContext.assignmentHandlerContext}}",
          "workflowDgmEditCtx": "{{commandContext.workflowDgmEditCtx}}",
          "subPanelContext": "{{commandContext.subPanelContext}}",
          "assignmentType": "acknowledgers",
          "assignmentTypeDispName": "{{i18n.Acknowledgers}}"
        }
      }
    },
    "addNotifyeesAssignmentHandler": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0WorkflowAddAssignmentHandler",
        "location": "aw_toolsAndInfo",
        "context": {
          "assignmentHandlerContext": "{{commandContext.assignmentHandlerContext}}",
          "workflowDgmEditCtx": "{{commandContext.workflowDgmEditCtx}}",
          "subPanelContext": "{{commandContext.subPanelContext}}",
          "assignmentType": "notifyees",
          "assignmentTypeDispName": "{{i18n.Notifyees}}"
        }
      }
    },
    "addAssignmentUsers": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "updateAssignmentTypeUserPanelState"
        },
        {
          "action": "navigateToPeoplePickerPanel"
        }
      ]
    },
    "updateAssignmentTypeUserPanelState": {
      "actionType": "JSFunction",
      "method": "updateUserPanelState",
      "inputData": {
        "addUserPanelState": "{{commandContext.addUserPanelState}}",
        "assignemntType": "{{commandContext.assignmentType}}",
        "workflowKeyMembers": "{{commandContext.workflowKeyRoleMembers}}",
        "selectedUserOption": "{{commandContext.selectedUserOption}}"
      },
      "deps": "js/Awp0WorkflowDesignerUtils"
    },
    "navigateToPeoplePickerPanel": {
      "actionType": "JSFunction",
      "method": "updateAtomicDataValue",
      "inputData": {
        "AtomicObj": "{{commandContext.activeState}}",
        "value": {
          "activeView": "Awp0WorkflowUsers"
        }
      },
      "deps": "js/addObjectUtils"
    },
    "replaceTemplateProfile": {
      "actionType": "JSFunction",
      "method": "updateAtomicDataValue",
      "inputData": {
        "AtomicObj": "{{commandContext.activeState}}",
        "value": {
          "activeView": "AwPeoplePicker"
        }
      },
      "deps": "js/addObjectUtils"
    },
    "showProfileInfoAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getSelectedAssignmentTypeInfo"
        },
        {
          "action": "openProfileActionPanel",
          "condition": "data.assignmentType && data.assignmentTypeDispName"
        }
      ]
    },
    "openProfileActionPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0TemplateEditProfileInfo",
        "location": "aw_toolsAndInfo",
        "context": {
          "assignmentHandlerContext": "{{commandContext.assignmentHandlerContext}}",
          "workflowDgmEditCtx": "{{commandContext.workflowDgmEditCtx}}",
          "profileObject": "{{commandContext.selectedObjects[0]}}",
          "subPanelContext": "{{commandContext.subPanelContext}}",
          "assignmentType": "{{data.assignmentType}}",
          "assignmentTypeDispName": "{{data.assignmentTypeDispName}}"
        }
      }
    },
    "showAssignmentHandlerInfoAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getSelectedAssignmentTypeInfo"
        },
        {
          "action": "openAssignmentHandlerInfoPanel",
          "condition": "data.assignmentType && data.assignmentTypeDispName"
        }
      ]
    },
    "openAssignmentHandlerInfoPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0WorkflowShowAssignmentHandler",
        "location": "aw_toolsAndInfo",
        "context": {
          "assignmentHandlerContext": "{{commandContext.assignmentHandlerContext}}",
          "workflowDgmEditCtx": "{{commandContext.workflowDgmEditCtx}}",
          "handlerContextObject": "{{commandContext.selectedObjects[0]}}",
          "subPanelContext": "{{commandContext.subPanelContext}}",
          "assignmentType": "{{data.assignmentType}}",
          "assignmentTypeDispName": "{{data.assignmentTypeDispName}}"
        }
      }
    },
    "editAssignmentHandlerInfoAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getSelectedAssignmentTypeInfo"
        },
        {
          "action": "openEditAssignmentHandlerInfoPanel",
          "condition": "data.assignmentType && data.assignmentTypeDispName"
        }
      ]
    },
    "getSelectedAssignmentTypeInfo": {
      "actionType": "JSFunction",
      "method": "getAssignmentTypeInfoBasedOnSelection",
      "inputData": {
        "handlerObject": "{{commandContext.selectedObjects[0]}}"
      },
      "outputData": {
        "assignmentType": "assignmentType",
        "assignmentTypeDispName": "assignmentTypeDispName"
      },
      "deps": "js/Awp0WorkflowTemplateAssignmentService"
    },
    "openEditAssignmentHandlerInfoPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0WorkflowEditAssignmentHandler",
        "location": "aw_toolsAndInfo",
        "context": {
          "assignmentHandlerContext": "{{commandContext.assignmentHandlerContext}}",
          "workflowDgmEditCtx": "{{commandContext.workflowDgmEditCtx}}",
          "handlerContextObject": "{{commandContext.selectedObjects[0]}}",
          "subPanelContext": "{{commandContext.subPanelContext}}",
          "assignmentType": "{{data.assignmentType}}",
          "assignmentTypeDispName": "{{data.assignmentTypeDispName}}"
        }
      }
    },
    "removeSignoffProfileAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteObjects",
      "inputData": {
        "objects": [
          "{{commandContext.selectedObjects[0]}}"
        ]
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.tabReload"
          }
        ]
      }
    },
    "removeAssignmentHandlerAction": {
      "actionType": "JSFunction",
      "method": "removeAssignmentHandlerAction",
      "inputData": {
        "handlerObject": "{{commandContext.selectedObjects[0]}}"
      },
      "deps": "js/Awp0WorkflowTemplateAssignmentService"
    },
    "addFormHandlerAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0WorkflowAddFormHandler",
        "location": "aw_toolsAndInfo",
        "context": "{{commandContext}}"
      }
    },
    "removeFormHandlerAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteObjects",
      "inputData": {
        "objects": "{{function:getRemoveFormHandlerObjects}}"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.tabReload"
          }
        ]
      },
      "deps": "js/Awp0WorkflowTemplateFormService"
    },
    "showFormHandlerInfoAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0WorkflowShowFormHandler",
        "location": "aw_toolsAndInfo",
        "context": "{{commandContext}}"
      }
    },
    "editFormHandlerInfoAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0WorkflowEditFormHandler",
        "location": "aw_toolsAndInfo",
        "context": "{{commandContext}}"
      }
    },
    "endEditsTemplateAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "endEditSummaryVisibleEvent",
            "condition": "ctx.xrtSummaryContextObject"
          },
          {
            "name": "endEditSummaryHiddenEvent",
            "condition": "!ctx.xrtSummaryContextObject && ctx.selected"
          }
        ]
      }
    },
    "endEditSummaryVisibleAction": {
      "actionType": "JSFunction",
      "method": "updateWorkflowEditCtx",
      "deps": "js/Awp0WorkflowDesignerUtils",
      "inputData": {
        "name": "workflowDgmEditCtx",
        "editObjectUid": "{{commandContext.subPanelContext.selected.uid}}",
        "isEditMode": false,
        "context": "{{commandContext}}"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.saveEdit"
          }
        ]
      }
    },
    "endEditSummaryHiddenAction": {
      "actionType": "JSFunction",
      "method": "updateWorkflowEditCtx",
      "deps": "js/Awp0WorkflowDesignerUtils",
      "inputData": {
        "name": "workflowDgmEditCtx",
        "editObjectUid": "{{commandContext.subPanelContext.selected.uid}}",
        "isEditMode": false,
        "context": "{{commandContext}}"
      }
    },
    "showWorkflowGraphLegendPanel": {
      "actionType": "JSFunction",
      "method": "showTaskLegendPalettePanel",
      "deps": "js/Awp0WorkflowDesignerGraphService",
      "inputData": {
        "data": "{{commandContext}}",
        "graphModel": "{{ctx.graph.graphModel}}",
        "legendState": "{{ctx.graph.legendState}}"
      }
    },
    "saveGraphPositions": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "confirmSaveTemplatePositionEvent"
          }
        ]
      }
    },
    "saveGraphPositionsAction": {
      "actionType": "JSFunction",
      "method": "saveGraphPositions",
      "deps": "js/Awp0WorkflowDesignerGraphSaveService",
      "inputData": {}
    },
    "showFixedLayout": {
      "actionType": "JSFunction",
      "method": "disableAutoLayout",
      "deps": "js/Awp0WorkflowDesignerAutoLayoutHandler",
      "inputData": {
        "ctx": "{{ctx}}",
        "state": "{{commandContext.workflowDgmState}}"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.AutoLayoutToggled"
          }
        ]
      }
    },
    "showAutoLayout": {
      "actionType": "JSFunction",
      "method": "enableAutoLayout",
      "deps": "js/Awp0WorkflowDesignerAutoLayoutHandler",
      "inputData": {
        "ctx": "{{ctx}}",
        "layoutOption": "{{commandContext.workflowDgmState.diagram.layoutOption}}",
        "state": "{{commandContext.workflowDgmState}}"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.AutoLayoutToggled"
          }
        ]
      }
    },
    "unregisterPasteHandlerContext": {
      "actionType": "JSFunction",
      "method": "unRegisterCtx",
      "deps": "js/appCtxService",
      "inputData": {
        "name": "handlerToPaste"
      }
    },
    "automaticApplyTemplateToProcessesInBackground": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2010-09-Workflow",
      "method": "applyTemplateToProcesses",
      "inputData": {
        "applyTemplateInput": [
          {
            "clientId": "applyTemplateToProcesses",
            "processTemplate": "{{ctx.xrtSummaryContextObject}}"
          }
        ],
        "processingMode": 1
      },
      "outputData": {
        "ctx.updatedProcesses": "applyTemplateOutput['0'].updatedProcesses",
        "ctx.failedProcesses": "applyTemplateOutput['0'].failedProcesses"
      },
      "events": {
        "success": [
          {
            "name": "primaryWorkarea.reset",
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
          },
          {
            "name": "applyTemplateToProcessPartialSuccessfulMsgEvent",
            "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && ctx.failedProcesses && ctx.failedProcesses.length > 0"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "applyTemplateToProcessSuccessfulMsg",
            "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && !ctx.failedProcesses"
          }
        ]
      }
    },
    "automaticApplyTemplateToProcessesInBackgroundHidden": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2010-09-Workflow",
      "method": "applyTemplateToProcesses",
      "inputData": {
        "applyTemplateInput": [
          {
            "clientID": "applyTemplateToProcesses",
            "processTemplate": "{{ctx.selected}}"
          }
        ],
        "processingMode": 1
      },
      "outputData": {
        "ctx.updatedProcesses": "applyTemplateOutput['0'].updatedProcesses",
        "ctx.failedProcesses": "applyTemplateOutput['0'].failedProcesses"
      },
      "events": {
        "success": [
          {
            "name": "primaryWorkarea.reset",
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
          },
          {
            "name": "applyTemplateToProcessPartialSuccessfulMsgEvent",
            "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && ctx.failedProcesses && ctx.failedProcesses.length > 0"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "applyTemplateToProcessSuccessfulMsg",
            "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && !ctx.failedProcesses"
          }
        ]
      }
    },
    "automaticApplyTemplateToProcessesInForeground": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2010-09-Workflow",
      "method": "applyTemplateToProcesses",
      "inputData": {
        "applyTemplateInput": [
          {
            "clientId": "applyTemplateToProcesses",
            "processTemplate": "{{ctx.xrtSummaryContextObject}}"
          }
        ],
        "processingMode": 0
      },
      "outputData": {
        "ctx.updatedProcesses": "applyTemplateOutput['0'].updatedProcesses",
        "ctx.failedProcesses": "applyTemplateOutput['0'].failedProcesses"
      },
      "events": {
        "success": [
          {
            "name": "primaryWorkarea.reset",
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
          },
          {
            "name": "applyTemplateToProcessPartialSuccessfulMsgEvent",
            "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && ctx.failedProcesses && ctx.failedProcesses.length > 0"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "applyTemplateToProcessSuccessfulMsg",
            "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && !ctx.failedProcesses"
          }
        ]
      }
    },
    "automaticApplyTemplateToProcessesInForegroundHidden": {
      "actionType": "TcSoaService",
      "serviceName": "Workflow-2010-09-Workflow",
      "method": "applyTemplateToProcesses",
      "inputData": {
        "applyTemplateInput": [
          {
            "clientID": "applyTemplateToProcesses",
            "processTemplate": "{{ctx.selected}}"
          }
        ],
        "processingMode": 0
      },
      "outputData": {
        "ctx.updatedProcesses": "applyTemplateOutput['0'].updatedProcesses",
        "ctx.failedProcesses": "applyTemplateOutput['0'].failedProcesses"
      },
      "events": {
        "success": [
          {
            "name": "primaryWorkarea.reset",
            "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
          },
          {
            "name": "applyTemplateToProcessPartialSuccessfulMsgEvent",
            "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && ctx.failedProcesses && ctx.failedProcesses.length > 0"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "applyTemplateToProcessSuccessfulMsg",
            "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && !ctx.failedProcesses"
          }
        ]
      }
    },
    "resetCtxEditInfoAfterApplyTemplateToProcess": {
      "actionType": "JSFunction",
      "method": "updateWorkflowEditCtx",
      "deps": "js/Awp0WorkflowDesignerUtils",
      "inputData": {
        "name": "workflowDgmEditCtx",
        "editObjectUid": "{{ctx.xrtSummaryContextObject.uid}}",
        "isEditMode": false
      }
    },
    "applyTemplateToProcessPartialSuccessfulMsgAction": {
      "actionType": "JSFunction",
      "method": "applyTemplateToProcessPartialSuccessfulMsgAction",
      "deps": "js/Awp0WorkflowDesignerUtils",
      "inputData": {
        "data": "{{data}}",
        "updatedProcesses": "{{ctx.updatedProcesses}}",
        "failedProcesses": "{{ctx.failedProcesses}}"
      }
    },
    "setWorkflowDesignerActiveLayoutAsTopToBottom": {
      "actionType": "JSFunction",
      "method": "enableAutoLayout",
      "deps": "js/Awp0WorkflowDesignerAutoLayoutHandler",
      "inputData": {
        "ctx": "{{ctx}}",
        "layoutOption": "GcTopToBottomLayout",
        "state": "{{commandContext.workflowDgmState}}"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.AutoLayoutToggled",
            "condition": "!commandContext.workflowDgmState.diagram.isSwitchingBetweenAutoLayout"
          },
          {
            "name": "workflowDesigner.AutoLayoutAlreadyToggled",
            "condition": "commandContext.workflowDgmState.diagram.isSwitchingBetweenAutoLayout"
          },
          {
            "name": "workflowDesigner.resetConnectionMode",
            "condition": "!commandContext.workflowDgmState.diagram.isSwitchingBetweenAutoLayout"
          }
        ]
      }
    },
    "setWorkflowDesignerActiveLayoutAsRightToLeft": {
      "actionType": "JSFunction",
      "method": "enableAutoLayout",
      "deps": "js/Awp0WorkflowDesignerAutoLayoutHandler",
      "inputData": {
        "ctx": "{{ctx}}",
        "layoutOption": "GcRightToLeftLayout",
        "state": "{{commandContext.workflowDgmState}}"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.AutoLayoutToggled",
            "condition": "!commandContext.workflowDgmState.diagram.isSwitchingBetweenAutoLayout"
          },
          {
            "name": "workflowDesigner.AutoLayoutAlreadyToggled",
            "condition": "commandContext.workflowDgmState.diagram.isSwitchingBetweenAutoLayout"
          },
          {
            "name": "workflowDesigner.resetConnectionMode",
            "condition": "!commandContext.workflowDgmState.diagram.isSwitchingBetweenAutoLayout"
          }
        ]
      }
    },
    "setWorkflowDesignerActiveLayoutAsLeftToRight": {
      "actionType": "JSFunction",
      "method": "enableAutoLayout",
      "deps": "js/Awp0WorkflowDesignerAutoLayoutHandler",
      "inputData": {
        "ctx": "{{ctx}}",
        "layoutOption": "GcLeftToRightLayout",
        "state": "{{commandContext.workflowDgmState}}"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.AutoLayoutToggled",
            "condition": "!commandContext.workflowDgmState.diagram.isSwitchingBetweenAutoLayout"
          },
          {
            "name": "workflowDesigner.AutoLayoutAlreadyToggled",
            "condition": "commandContext.workflowDgmState.diagram.isSwitchingBetweenAutoLayout"
          },
          {
            "name": "workflowDesigner.resetConnectionMode",
            "condition": "!commandContext.workflowDgmState.diagram.isSwitchingBetweenAutoLayout"
          }
        ]
      }
    },
    "setWorkflowDesignerActiveLayoutAsFixed": {
      "actionType": "JSFunction",
      "method": "disableAutoLayout",
      "deps": "js/Awp0WorkflowDesignerAutoLayoutHandler",
      "inputData": {
        "ctx": "{{ctx}}",
        "layoutOption": "FixedLayout",
        "state": "{{commandContext.workflowDgmState}}"
      },
      "events": {
        "success": [
          {
            "name": "workflowDesigner.AutoLayoutToggled",
            "condition": "!commandContext.workflowDgmState.diagram.isSwitchingBetweenAutoLayout"
          },
          {
            "name": "workflowDesigner.AutoLayoutAlreadyToggled",
            "condition": "commandContext.workflowDgmState.diagram.isSwitchingBetweenAutoLayout"
          },
          {
            "name": "workflowDesigner.resetConnectionMode",
            "condition": "!commandContext.workflowDgmState.diagram.isSwitchingBetweenAutoLayout"
          }
        ]
      }
    },
    "applySelectedAutoLayoutOnDesigner": {
      "actionType": "JSFunction",
      "method": "setActiveLayout",
      "deps": "js/awGraphService",
      "inputData": {
        "graphModel": "{{ctx.graph.graphModel}}",
        "layoutOption": "{{commandContext.workflowDgmState.diagram.layoutOption}}"
      }
    },
    "Awp0HandlerHelpCommandAction": {
      "actionType": "JSFunction",
      "method": "navigateToHelpLink",
      "deps": "js/Awp0WorkflowDesignerUtils",
      "inputData": {
        "data": "{{commandContext.selectedHandler}}"
      }
    },
    "actionImportPAL": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0PALImport",
        "location": "aw_toolsAndInfo"
      }
    },
    "actionExportPAL": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0PALExport",
        "location": "aw_toolsAndInfo"
      }
    },
    "addUsersTemplateAssignmentAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "populateUserPanelCriteriaInPALCase",
          "condition": "commandContext.sidenavMode === 'mobile' && !commandContext.vmo"
        },
        {
          "action": "navigateToUserPanelInPALCase",
          "condition": "commandContext.sidenavMode === 'mobile' && !commandContext.vmo"
        },
        {
          "action": "populateProfileUserPanelCriteriaInPALCase",
          "condition": "commandContext.context.sidenavMode === 'mobile' && commandContext.vmo"
        },
        {
          "action": "navigateToUserPanelProfileCaseInPALCase",
          "condition": "commandContext.context.sidenavMode === 'mobile' && commandContext.vmo"
        }
      ]
    },
    "populateUserPanelCriteriaInPALCase": {
      "actionType": "JSFunction",
      "method": "openUserPanel",
      "inputData": {
        "commandContext": "{{commandContext}}",
        "subPanelContext": "{{commandContext.addUserPanelState}}",
        "criteria": "{{commandContext.addUserPanelState.defaultCriteria}}"
      },
      "deps": "js/Awp0WorkflowAssignmentPanelService"
    },
    "navigateToUserPanelInPALCase": {
      "actionType": "JSFunction",
      "method": "setActiveView",
      "deps": "js/addObjectUtils",
      "inputData": {
        "activeViewState": "{{commandContext.activeState}}",
        "destPanelId": "AwPeoplePicker"
      }
    },
    "populateProfileUserPanelCriteriaInPALCase": {
      "actionType": "JSFunction",
      "method": "openUserPanel",
      "inputData": {
        "commandContext": "{{commandContext}}",
        "subPanelContext": "{{commandContext.context.addUserPanelState}}",
        "criteria": "{{commandContext.context.addUserPanelState.defaultCriteria}}"
      },
      "deps": "js/Awp0WorkflowAssignmentPanelService"
    },
    "navigateToUserPanelProfileCaseInPALCase": {
      "actionType": "JSFunction",
      "method": "setActiveView",
      "deps": "js/addObjectUtils",
      "inputData": {
        "activeViewState": "{{commandContext.context.activeState}}",
        "destPanelId": "AwPeoplePicker"
      }
    },
    "awp0PasteTemplateUsersAssignmentAction": {
      "actionType": "JSFunction",
      "method": "updateAtomicDataValue",
      "inputData": {
        "AtomicObj": "{{commandContext.taskInfoObject}}",
        "value": {
          "addPropContextObject": {
            "propName": "{{commandContext.propName}}",
            "selectedObjects": "{{commandContext.selectedObjects}}",
            "selectedUsers": "{{commandContext.selectedUsers}}"
          }
        }
      },
      "deps": "js/addObjectUtils"
    },
    "removeUsersTemplateAssignmentAction": {
      "actionType": "JSFunction",
      "method": "updateAtomicDataValue",
      "inputData": {
        "AtomicObj": "{{commandContext.taskInfoObject}}",
        "value": {
          "removePropContextObject": {
            "propName": "{{commandContext.propName}}",
            "selected": "{{commandContext.selectedObjects}}"
          }
        }
      },
      "deps": "js/addObjectUtils"
    },
    "cancelTemplateAssignmentAction": {
      "actionType": "JSFunction",
      "method": "cancelTemplateAssignments",
      "inputData": {},
      "deps": "js/Awp0TemplateAssignment"
    },
    "createProcessAssignmentListAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0CreateAssignmentList",
        "location": "aw_toolsAndInfo"
      }
    },
    "startEditTemplateAssignment": {
      "actionType": "JSFunction",
      "method": "startEdits",
      "inputData": {},
      "deps": "js/Awp0WorkflowAssignmentEditService"
    },
    "saveTemplateAssignmentAction": {
      "actionType": "JSFunction",
      "method": "saveEdits",
      "inputData": {},
      "deps": "js/Awp0WorkflowAssignmentEditService"
    },
    "deletePALAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "resetTemplateAssignments"
        },
        {
          "action": "deletePALObject"
        }
      ]
    },
    "resetTemplateAssignments": {
      "actionType": "JSFunction",
      "method": "resetTemplateAssignments",
      "inputData": {},
      "deps": "js/Awp0TemplateAssignment"
    },
    "deletePALObject": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteObjects",
      "inputData": {
        "objects": [
          "{{data.palObject}}"
        ]
      },
      "events": {
        "success": [
          {
            "name": "primaryWorkarea.reset"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "soaFailureMessage"
          }
        ]
      },
      "deps": "js/Awp0PalMgmtService"
    },
    "removePALAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "confirmPALDeleteEvent"
          }
        ]
      }
    },
    "removePALBatchJob": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getValidPALObject"
        },
        {
          "action": "removePALAction"
        }
      ]
    },
    "getValidPALObject": {
      "actionType": "JSFunction",
      "method": "getValidPALObject",
      "inputData": {
        "pSelected": "{{commandContext.selectionData.pselected}}",
        "openedObject": "{{commandContext.openedObject}}",
        "selectedObject": "{{commandContext.selectionData.selected[0]}}"
      },
      "outputData": {
        "palObject": ""
      },
      "deps": "js/Awp0PalMgmtService"
    }
  },
  "functions": {
    "getActionableObject": {
      "functionName": "getActionableObject",
      "parameters": [
        "{{commandContext.selectionData.value.selected[0]}}"
      ]
    },
    "getClaimSupportingObject": {
      "functionName": "getClaimSupportingObject",
      "parameters": [
        "{{commandContext.selectionData.value.selected[0]}}"
      ]
    },
    "getSubscribeInboxPropertyInput": {
      "functionName": "getSubscribeInboxPropertyInput",
      "parameters": [
        "{{commandContext.openedObject}}",
        "{{ctx.mselected}}"
      ]
    },
    "getDeleteSelectedResourcePoolInput": {
      "functionName": "removeSubscribedResourcePools",
      "parameters": [
        "{{commandContext.userObject}}",
        "{{commandContext.selectedObjects}}"
      ]
    },
    "getAwp0UserObject": {
      "functionName": "getAwp0UserObject",
      "parameters": [
        "{{commandContext.vmo}}"
      ]
    },
    "getTaskParticipantsToremove": {
      "functionName": "getTaskParticipantsToremove",
      "parameters": [
        "{{ctx.mselected}}"
      ]
    },
    "getWsoList": {
      "functionName": "getWsoList",
      "parameters": [
        "{{ctx.pselected}}"
      ]
    },
    "getRemoveParticipantPageRefreshNeeded": {
      "functionName": "getRemoveParticipantPageRefreshNeeded",
      "parameters": [
        "{{data.selectedObject[0]}}",
        "{{ctx.mselected}}"
      ]
    },
    "getRemoveEdgeInput": {
      "functionName": "getRemoveEdgeInput",
      "parameters": [
        "{{commandContext.workflowDgmState.selectedEdges}}",
        "{{ctx.xrtSummaryContextObject}}"
      ]
    },
    "getRemoveNodeInput": {
      "functionName": "getRemoveNodeInput",
      "parameters": []
    },
    "getTemplateUpdateUid": {
      "functionName": "getValidTemplateObjectUid",
      "parameters": [
        "{{ctx.selected}}",
        "EPMSelectSignoffTaskTemplate"
      ]
    },
    "getRemoveFormHandlerObjects": {
      "functionName": "getRemoveFormHandlerObjects",
      "parameters": [
        "{{commandContext.formHandlerContext.selectedObjects[0]}}"
      ]
    },
    "getNodesToBeRemoved": {
      "functionName": "getNodesToBeRemoved",
      "parameters": []
    },
    "getEdgesToBeRemoved": {
      "functionName": "getEdgesToBeRemoved",
      "parameters": []
    }
  },
  "onEvent": [
    {
      "eventId": "navigateToInboxEvent",
      "action": "navigateToInboxAction"
    },
    {
      "eventId": "inbox.markAsRead",
      "action": "markAsReadAction"
    },
    {
      "eventId": "inbox.removeSurrogateEvent",
      "action": "removeSurrogateAction"
    },
    {
      "eventId": "inbox.openTaskMarkAsRead",
      "action": "openTaskMarkAsReadAction"
    },
    {
      "eventId": "reassignTask.OpenReassignPanel",
      "action": "openReassignTaskPanel"
    },
    {
      "eventId": "removeSubscribedResourcePools",
      "action": "deleteRelationInboxes"
    },
    {
      "eventId": "reassignTask.loadSignoffProperties",
      "action": "loadSignoffProperties"
    },
    {
      "eventId": "claimSignoffObject.propertiesLoaded",
      "action": "ClaimTask"
    },
    {
      "eventId": "reassignTask.launchComponentsPanel",
      "action": "submitToHostAction"
    },
    {
      "eventId": "confirmTaskDeleteEvent",
      "message": "singleTaskDeleteConfirmationMessage"
    },
    {
      "eventId": "confirmMultipleTaskDeleteEvent",
      "message": "multipleTaskDeleteConfirmationMessage"
    },
    {
      "eventId": "workflow.initiateTaskDeleteAction",
      "action": "initiateTaskDeleteAction"
    },
    {
      "eventId": "remoteInbox.removeSubscribedInboxes",
      "action": "removeSubscribedInboxesInternal"
    },
    {
      "eventId": "workflow.closePopupPanel",
      "action": "closePopupPanel"
    },
    {
      "eventId": "submitWorkflow.adaptedInputs",
      "action": "getPropsForSubmitToWorkflow"
    },
    {
      "eventId": "workflow.validateForCreatingWorkflowPresenterEvent",
      "action": "validateForCreatingWorkflowPresenterAction"
    },
    {
      "eventId": "workflow.getTypesFromBO",
      "action": "getTypeFromBOConstant"
    },
    {
      "eventId": "workflow.getSelectedBOTypeName",
      "action": "getSelectedBOTypeName"
    },
    {
      "eventId": "inboxPWA.cancelEdits",
      "action": "inboxPWACancelEdits"
    },
    {
      "eventId": "inboxPWA.savelEditsAndReset",
      "action": "inboxPWASaveEditsAndReset"
    },
    {
      "eventId": "workflow.openSubProcessPanel",
      "action": "createWorkflowSubProcessInternal"
    },
    {
      "eventId": "confirmTemplateDeleteSummaryVisibleEvent",
      "message": "deleteTemplateConfirmationSummaryVisibleMessage"
    },
    {
      "eventId": "confirmTemplateDeleteSummaryHiddenEvent",
      "message": "deleteTemplateConfirmationSummaryHiddenMessage"
    },
    {
      "eventId": "confirmTemplateStartEditSummaryVisibleEvent",
      "message": "startEditTemplateSummaryVisibleConfirmationMessage"
    },
    {
      "eventId": "confirmSaveTemplatePositionEvent",
      "message": "saveTemplatePositionConfirmationMessage"
    },
    {
      "eventId": "confirmTemplateStartEditSummaryHiddenEvent",
      "message": "startEditTemplateSummaryHiddenConfirmationMessage"
    },
    {
      "eventId": "createTemplateSummaryVisibleEvent",
      "action": "createTemplateSummaryVisibleAction"
    },
    {
      "eventId": "createTemplateSummaryHiddenEvent",
      "action": "createTemplateSummaryHiddenAction"
    },
    {
      "eventId": "saveTemplateSummaryVisibleEvent",
      "action": "saveTemplateSummaryVisibleAction"
    },
    {
      "eventId": "saveTemplateSummaryHiddenEvent",
      "action": "saveTemplateSummaryHiddenAction"
    },
    {
      "eventId": "workflowDesigner.selectEditContext",
      "action": "registerEditObjectContext"
    },
    {
      "eventId": "workflowDesigner.startEdit",
      "action": "updateContextEditInfoBatchJob"
    },
    {
      "eventId": "workflowDesigner.endEdit",
      "action": "resetCtxEditInfo"
    },
    {
      "eventId": "workflowDesigner.removeTaskTemplateNode",
      "action": "removeTaskTemplateNodeAction"
    },
    {
      "eventId": "workflowDesigner.removeGraphNode",
      "action": "removeGraphNode"
    },
    {
      "eventId": "workflowDesigner.removeTaskTemplateEdge",
      "action": "removeTaskTemplateEdgeAction"
    },
    {
      "eventId": "workflowDesigner.removeGraphEdge",
      "action": "removeGraphEdge"
    },
    {
      "eventId": "workflowDesigner.removeTaskTemplateNodeAndEdges",
      "action": "removeTaskTemplateNodeEdgeAction"
    },
    {
      "eventId": "openNewlyCreatedTemplateEvent",
      "action": "openNewlyCreatedTemplateAction"
    },
    {
      "eventId": "populateArgumentNameslist",
      "action": "populateArgumentNameslist"
    },
    {
      "eventId": "populateArgumentNameAndValues",
      "action": "populateArgumentNameAndValues"
    },
    {
      "eventId": "refreshTreeTable",
      "action": "refreshTreeTable"
    },
    {
      "eventId": "workflowDesigner.templateOnline",
      "action": "saveTemplateAction"
    },
    {
      "eventId": "endEditSummaryVisibleEvent",
      "action": "endEditSummaryVisibleAction"
    },
    {
      "eventId": "endEditSummaryHiddenEvent",
      "action": "endEditSummaryHiddenAction"
    },
    {
      "eventId": "emptyValueTextBox",
      "action": "emptyValueTextBox"
    },
    {
      "eventId": "unregisterPasteHandlerContext",
      "action": "unregisterPasteHandlerContext"
    },
    {
      "eventId": "automaticApplyTemplateToProcessesInBackgroundVisibleEvent",
      "action": "automaticApplyTemplateToProcessesInBackground"
    },
    {
      "eventId": "automaticApplyTemplateToProcessesInBackgroundHiddenEvent",
      "action": "automaticApplyTemplateToProcessesInBackgroundHidden"
    },
    {
      "eventId": "applyTemplateToProcessesOptionHiddenEvent",
      "message": "applyTemplateToProcessesOptionMessageForHidden"
    },
    {
      "eventId": "applyTemplateToProcessesOptionVisibleEvent",
      "message": "applyTemplateToProcessesOptionMessageForVisible"
    },
    {
      "eventId": "workflowDesigner.endEditAfterApplyTemplateToProcess",
      "action": "resetCtxEditInfoAfterApplyTemplateToProcess"
    },
    {
      "eventId": "saveTemplateAndApplyToProcessSummaryVisibleEvent",
      "action": "saveTemplateAndApplyToProcessSummaryVisibleAction"
    },
    {
      "eventId": "saveTemplateAndApplyToProcessInBackgroundHiddenEvent",
      "action": "saveTemplateAndApplyToProcessSummaryHiddenAction"
    },
    {
      "eventId": "applyTemplateToProcessPartialSuccessfulMsgEvent",
      "action": "applyTemplateToProcessPartialSuccessfulMsgAction"
    },
    {
      "eventId": "workflowDesigner.AutoLayoutAlreadyToggled",
      "action": "applySelectedAutoLayoutOnDesigner"
    },
    {
      "eventId": "applyTemplateToProcessesOptionInForegroundHiddenEvent",
      "message": "applyTemplateToProcessesOptionInForegroundHidden"
    },
    {
      "eventId": "applyTemplateToProcessesOptionInForegroundVisibleEvent",
      "message": "applyTemplateToProcessesOptionInForegroundVisible"
    },
    {
      "eventId": "automaticApplyTemplateToProcessesInForegroundVisibleEvent",
      "action": "automaticApplyTemplateToProcessesInForeground"
    },
    {
      "eventId": "automaticApplyTemplateToProcessesInForegroundHiddenEvent",
      "action": "automaticApplyTemplateToProcessesInForegroundHidden"
    },
    {
      "eventId": "confirmPALDeleteEvent",
      "condition": "data.palObject",
      "message": "deletePALConfirmationMessage"
    }
  ],
  "messages": {
    "copyUserSingleSuccessful": {
      "messageType": "INFO",
      "messageText": "{{i18n.copySuccessful}}",
      "messageTextParams": [
        "{{commandContext.selectionData.value.selected[0].props.awp0User.uiValue}}"
      ]
    },
    "copyUserMultipleSuccessful": {
      "messageType": "INFO",
      "messageText": "{{i18n.copyMultipleSuccessful}}",
      "messageTextParams": [
        "{{commandContext.selectionData.value.selected.length}}"
      ]
    },
    "singleTaskDeleteConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.singleWorkflowDeleteConfirmationMessage}}",
      "messageTextParams": [
        "{{data.deletedTaskObjects[0].props.object_string.uiValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Delete",
          "text": "{{i18n.delete}}",
          "action": "performTaskDelete"
        }
      ]
    },
    "multipleTaskDeleteConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.multiWorkflowDeleteConfirmationMessage}}",
      "messageTextParams": [
        "{{data.deletedTaskObjects.length}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Delete",
          "text": "{{i18n.delete}}",
          "action": "performTaskDelete"
        }
      ]
    },
    "deleteTaskObjectsSingleFailureMessage": {
      "messageType": "ERROR",
      "messageText": "{{i18n.deleteSingleFailureMessage}}",
      "messageTextParams": [
        "{{data.deletedTaskObjects[0].props.object_string.uiValues[0]}}",
        "{{data.deleteObjectsPartialErrors[0].errorValues[0].message}}"
      ]
    },
    "deleteTaskObjectsMultipleFailureMessage": {
      "expression": {
        "failureCount": "objectsFailedToDelete"
      },
      "messageType": "ERROR",
      "messageKey": "deleteObjectsNotyError",
      "messageTextParams": [
        "{{expression.failureCount}}",
        "{{ctx.mselected.length}}"
      ],
      "messageData": {
        "partialErrors": "{{data.deleteObjectsPartialErrors}}"
      }
    },
    "inboxServerError": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "serverError": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "deleteTemplateSummaryVisibleActionFailure": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "deleteTemplateConfirmationSummaryVisibleMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deletePALConfirmationMessage}}",
      "messageTextParams": [
        "{{ctx.xrtSummaryContextObject}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Delete",
          "text": "{{i18n.delete}}",
          "action": "deleteTemplateSummaryVisibleAction"
        }
      ]
    },
    "deleteTemplateConfirmationSummaryHiddenMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deletePALConfirmationMessage}}",
      "messageTextParams": [
        "{{ctx.selected}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Delete",
          "text": "{{i18n.delete}}",
          "action": "deleteTemplateSummaryHiddenAction"
        }
      ]
    },
    "startEditTemplateSummaryVisibleConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.processTemplateOfflineConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Offline",
          "text": "{{i18n.offlineOption}}",
          "action": "obsoleteAndCreateTemplateSummaryVisibleAction"
        },
        {
          "option": "Online",
          "text": "{{i18n.onlineOption}}",
          "action": "createTemplateSummaryVisibleAction"
        }
      ]
    },
    "startEditTemplateSummaryHiddenConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.processTemplateOfflineConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Offline",
          "text": "{{i18n.offlineOption}}",
          "action": "obsoleteAndCreateTemplateSummaryHiddenAction"
        },
        {
          "option": "Online",
          "text": "{{i18n.onlineOption}}",
          "action": "createTemplateSummaryHiddenAction"
        }
      ]
    },
    "saveTemplatePositionConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.saveTemplatePositionConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Save",
          "text": "{{i18n.save}}",
          "action": "saveGraphPositionsAction"
        }
      ]
    },
    "applyTemplateToProcessesOptionMessageForVisible": {
      "messageType": "WARNING",
      "messageText": "{{i18n.applyTemplateToProcessesConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "No",
          "text": "{{i18n.no}}",
          "action": "saveTemplateSummaryVisibleAction"
        },
        {
          "option": "Yes",
          "text": "{{i18n.yes}}",
          "action": "saveTemplateAndApplyToProcessSummaryVisibleAction"
        }
      ]
    },
    "applyTemplateToProcessesOptionMessageForHidden": {
      "messageType": "WARNING",
      "messageText": "{{i18n.applyTemplateToProcessesConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "No",
          "text": "{{i18n.no}}",
          "action": "saveTemplateSummaryHiddenAction"
        },
        {
          "option": "Yes",
          "text": "{{i18n.yes}}",
          "action": "saveTemplateAndApplyToProcessSummaryHiddenAction"
        }
      ]
    },
    "copyHandlerSuccessfulMsg": {
      "messageType": "INFO",
      "messageText": "{{i18n.classificationCopySuccess}}",
      "messageTextParams": [
        "{{commandContext.data.dataProviders.handlersDataProvider.selectedObjects[0]}}"
      ]
    },
    "applyTemplateToProcessSuccessfulMsg": {
      "messageType": "INFO",
      "messageText": "{{i18n.applyTemplateToProcessSuccessfulMsg}}",
      "messageTextParams": [
        "{{ctx.updatedProcesses.length}}"
      ]
    },
    "noProcessFoundToApplyTemplateChanges": {
      "messageType": "INFO",
      "messageText": "{{i18n.noProcessFoundToApplyTemplateChanges}}"
    },
    "applyTemplateToProcessesOptionInForegroundVisible": {
      "messageType": "WARNING",
      "messageText": "{{i18n.applyTemplateToProcessesForegroundConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "No",
          "text": "{{i18n.no}}",
          "action": "saveTemplateSummaryVisibleAction"
        },
        {
          "option": "Yes",
          "text": "{{i18n.yes}}",
          "action": "saveTemplateAndApplyToProcessSummaryVisibleAction"
        }
      ]
    },
    "applyTemplateToProcessesOptionInForegroundHidden": {
      "messageType": "WARNING",
      "messageText": "{{i18n.applyTemplateToProcessesForegroundConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "No",
          "text": "{{i18n.no}}",
          "action": "saveTemplateSummaryHiddenAction"
        },
        {
          "option": "Yes",
          "text": "{{i18n.yes}}",
          "action": "saveTemplateAndApplyToProcessSummaryHiddenAction"
        }
      ]
    },
    "deletePALConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deletePALConfirmationMessage}}",
      "messageTextParams": [
        "{{data.palObject}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Delete",
          "text": "{{i18n.removePAL}}",
          "action": "deletePALAction"
        }
      ]
    },
    "soaFailureMessage": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    }
  },
  "conditions": {
    "workflowOpenConditionActive": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.vmo",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Signoff",
                  "EPMTask"
                ]
              }
            }
          }
        ]
      }
    },
    "awp0PromoteTaskCommandCondition": {
      "expression": "ctx.visibleServerCommands.Awp0PromoteTask"
    },
    "awp0OutOfOfficeCommandCondition": {
      "expression": "ctx.visibleServerCommands.Awp0OutOfOffice"
    },
    "awp0OpenInboxLocationCommandCondition": {
      "expression": "ctx.visibleServerCommands.Awp0OpenInboxLocation"
    },
    "awp0InboxFiltersCommandCondition": {
      "expression": "(ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation') && !conditions.isRemoteInboxSubLocation && (!ctx.editInProgress || ctx.editInProgress === false) && ( commandContext.searchState.totalFound > 0 || commandContext.searchState.criteria.searchString !== '')"
    },
    "isRemoteInboxSubLocation": {
      "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'remoteInboxes'"
    },
    "Awp0UserAssignmentOpenConditionActive": {
      "expression": "( ctx.selected.type === 'Awp0UserAssignment' || ctx.selected.modelType.typeHierarchyArray.indexOf('Awp0UserAssignment') > -1  )"
    },
    "isAddReviewProfileSignoffCommandVisible": {
      "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1 && commandContext.vmo.props.number_of_signoffs.dbValues[0] > 0"
    },
    "isRemoveProfileSignoffCommandVisible": {
      "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) <= -1"
    },
    "isReviewAdhocSignoffObjectsSelected": {
      "expression": "(commandContext.isReviewAdhocRemoveVisible)"
    },
    "isReviewProfileSignoffObjectsSelected": {
      "expression": "(commandContext.isProfileRemoveVisible)"
    },
    "addSurrogateCmdCond": {
      "expression": "ctx.visibleServerCommands.Awp0AddSurrogate"
    },
    "addResPoolSubCmdCond": {
      "expression": "!commandContext.selectedObjects || commandContext.selectedObjects.length <=0 || commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'ResourcePool' ) <= -1"
    },
    "removeSubResPool": {
      "expression": "commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'ResourcePool' ) > -1"
    },
    "Awp0UserAssignmentShowObjectCellCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.cmdAwp0ShowObjectCellBaseVisibleCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "commandContext.vmo.props.awp0User.dbValues.length",
                "$query": {
                  "$eq": 1
                }
              },
              {
                "$source": "commandContext.vmo.props.relation.dbValues.0",
                "$query": {
                  "$eq": "awp0MySurrogates"
                }
              },
              {
                "$source": "commandContext.vmo.props.relation.dbValues.0",
                "$query": {
                  "$eq": "awp0SurrogateFor"
                }
              }
            ]
          }
        ]
      }
    },
    "isAcknowledgeAdhocSignoffObjectsSelected": {
      "expression": "(commandContext.isAcknowledgeAdhocRemoveVisible)"
    },
    "isNotifyAdhocSignoffObjectsSelected": {
      "expression": "(commandContext.isNotifyAdhocRemoveVisible)"
    },
    "Awp0ReassignTaskCommandCondition": {
      "expression": "ctx.visibleServerCommands.Awp0ReassignTask && !((ctx.selected.props.parent_task.dbValues[0]==='' && ctx.pselected) && (ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Workflow' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Workflow'))"
    },
    "releaseCmdCond": {
      "expression": "ctx.visibleServerCommands.Awp0Release"
    },
    "isSurrogate": {
      "expression": "ctx.mselected && ctx.mselected.length > 0 && ctx.mselected[0].type == 'Awp0UserAssignment'"
    },
    "standInCmdCond": {
      "expression": "ctx.visibleServerCommands.Awp0StandIn"
    },
    "awp0AddReviewerCmdCond": {
      "expression": "ctx.visibleServerCommands.Awp0AddReviewer && (commandContext.pageContext.primaryActiveTabId ==='tc_xrt_Reviewers' || commandContext.pageContext.secondaryActiveTabId ==='tc_xrt_Reviewers')"
    },
    "removeSurrogate": {
      "expression": "ctx.visibleServerCommands.Awp0RemoveSurrogate && ( commandContext.openedObject && commandContext.openedObject.props.fnd0HasManageSurrPrivilege.dbValues[0] === '1')"
    },
    "isTcVersion115OrLaterWorkflow": {
      "expression": "(ctx.tcSessionData.tcMajorVersion > 11 || (ctx.tcSessionData.tcMajorVersion === 11 && (ctx.tcSessionData.tcMinorVersion > 2 || (ctx.tcSessionData.tcMinorVersion === 2 && ctx.tcSessionData.tcQRMNumber >= 6))))"
    },
    "isEPMTaskOrSignoffOpened": {
      "expression": "commandContext.openedObject.modelType.typeHierarchyArray.indexOf('EPMTask') > -1 || commandContext.openedObject.modelType.typeHierarchyArray.indexOf('Signoff') > -1"
    },
    "isEPMTaskOpenedAndWorkflowTab": {
      "expression": "(ctx.preferences.WRKFLW_Hide_Perform_Task_Command_ToolAndInfo[0] === 'false' || (commandContext.showObjectContext.provider.nameToken ==='com.siemens.splm.clientfx.tcui.xrt.showObjectSubLocation' && ( commandContext.openedObject && conditions.isEPMTaskOrSignoffOpened && conditions.isEPMTaskOpenedCases ))) && ctx.visibleServerCommands.Awp0PerformTask"
    },
    "isEPMTaskOpenedCases": {
      "expression": "( commandContext.pageContext.primaryActiveTabId !=='tc_xrt_Overview' && commandContext.pageContext.primaryActiveTabId !=='tc_xrt_Workflow' )|| (commandContext.selectionData && commandContext.selectionData.value.selected && commandContext.selectionData && commandContext.selectionData.value.selected && (commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('EPMTask') === -1 && commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('Signoff') === -1 && commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('WorkspaceObject') > -1 ) && commandContext.pageContext.primaryActiveTabId ==='tc_xrt_Overview') || (commandContext.selectionData && conditions.isSelectedEPMTaskOrSignoff && commandContext.pageContext.primaryActiveTabId ==='tc_xrt_Workflow')"
    },
    "isNonWorkflowObjectSelectedInPrimaryWorkArea": {
      "expression": "( (commandContext.selectionData.pselected && (commandContext.selectionData.pselected.modelType.typeHierarchyArray.indexOf('WorkspaceObject') > -1 && commandContext.selectionData.pselected.modelType.typeHierarchyArray.indexOf('Folder') === -1) && commandContext.selectionData.pselected.props.fnd0MyWorkflowTasks.dbValues.length > 0 )||(commandContext.selectionData.selected && (commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('EPMTask') === -1 && commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Signoff') === -1 ) && (commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('WorkspaceObject') > -1 && commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Folder') === -1) && commandContext.selectionData.selected[0].props.fnd0MyWorkflowTasks.dbValues.length > 0)) && commandContext.pageContext.secondaryActiveTabId !=='tc_xrt_Workflow'"
    },
    "isNonWorkflowObjectOpened": {
      "expression": "commandContext.showObjectContext.provider.nameToken ==='com.siemens.splm.clientfx.tcui.xrt.showObjectSubLocation' &&( commandContext.openedObject && !conditions.isEPMTaskOrSignoffOpened && (( !conditions.isTcVersion115OrLaterWorkflow && (commandContext.openedObject.modelType.typeHierarchyArray.indexOf('WorkspaceObject') > -1 && commandContext.openedObject.modelType.typeHierarchyArray.indexOf('Folder') === -1) && commandContext.openedObject.props.fnd0MyWorkflowTasks.dbValues.length > 0) || ( conditions.isNonWorkflowObjectSelectedInPrimaryWorkArea))) && ctx.visibleServerCommands.Awp0PerformTask && commandContext.pageContext.primaryActiveTabId !== 'tc_xrt_Workflow'"
    },
    "isOtherThanShowObjectOrInboxLocation": {
      "expression": "commandContext.provider.viewBase !== 'inbox' && !commandContext.openedObject &&  ( (commandContext.selectionData.value.pselected && commandContext.selectionData.value.pselected.props.fnd0MyWorkflowTasks.dbValues.length > 0) || commandContext.selectionData.value.selected && commandContext.selectionData.value.selected[0].props.fnd0MyWorkflowTasks.dbValues.length > 0) && ctx.visibleServerCommands.Awp0PerformTask && commandContext.pageContext.secondaryActiveTabId !=='tc_xrt_Workflow'"
    },
    "inInboxLocationAndOtherThanSummaryView": {
      "expression": "commandContext.provider.viewBase === 'inbox' &&(ctx.preferences.WRKFLW_Hide_Perform_Task_Command_ToolAndInfo[0] === 'false' || !(ctx.ViewModeContext.ViewModeContext === 'TableSummaryView' || ctx.ViewModeContext.ViewModeContext === 'SummaryView')) && ctx.visibleServerCommands.Awp0PerformTask"
    },
    "inInboxLocationAndSummaryView": {
      "expression": "commandContext.provider.viewBase === 'inbox' && (ctx.preferences.WRKFLW_Hide_Perform_Task_Command_ToolAndInfo[0] === 'false'|| ((ctx.ViewModeContext.ViewModeContext === 'TableSummaryView' || ctx.ViewModeContext.ViewModeContext === 'SummaryView') && ( ( (commandContext.selectionData.value.pselected && commandContext.pageContext.secondaryActiveTabId ==='tc_xrt_Workflow') || ( conditions.isParentEPMTaskOrSignoff && conditions.isSelectedEPMTaskOrSignoff))))) && ctx.visibleServerCommands.Awp0PerformTask"
    },
    "isParentEPMTaskOrSignoff": {
      "expression": "commandContext.selectionData && commandContext.selectionData.value.pselected && (commandContext.selectionData.value.pselected.modelType.typeHierarchyArray.indexOf('EPMTask') > -1 || commandContext.selectionData.value.pselected.modelType.typeHierarchyArray.indexOf('Signoff') > -1 )"
    },
    "isSelectedEPMTaskOrSignoff": {
      "expression": "commandContext.selectionData && commandContext.selectionData.value.selected && (commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('EPMTask') > -1 || commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('Signoff') > -1 )"
    },
    "isContentTabOpened": {
      "expression": "commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Content' && ctx.visibleServerCommands.Awp0PerformTask && commandContext.pageContext.secondaryActiveTabId !=='tc_xrt_Workflow' "
    },
    "isChangeObjectSelectedAndOveviewTabSelected": {
      "expression": "( commandContext.selectionData && (commandContext.selectionData.value.pselected && (commandContext.selectionData.value.pselected.modelType.typeHierarchyArray.indexOf('ChangeItemRevision') > -1 && commandContext.selectionData.value.pselected.modelType.typeHierarchyArray.indexOf('Folder') === -1) ) || (commandContext.selectionData.value.selected && (commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('ChangeItemRevision') > -1 && commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('Folder') === -1)) ) && commandContext.pageContext.secondaryActiveTabId ==='tc_xrt_Overview'"
    },
    "isChangeObjectOpenedAndOveviewTabSelected": {
      "expression": "commandContext.showObjectContext.provider.nameToken === 'com.siemens.splm.clientfx.tcui.xrt.showObjectSubLocation' &&( commandContext.openedObject && commandContext.openedObject.modelType.typeHierarchyArray.indexOf('ChangeItemRevision') > -1) && ctx.visibleServerCommands.Awp0PerformTask && commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview'"
    },
    "Awp0PerformTaskCommandCondition": {
      "expression": "( conditions.isEPMTaskOpenedAndWorkflowTab ||  conditions.isNonWorkflowObjectOpened || conditions.isOtherThanShowObjectOrInboxLocation || conditions.inInboxLocationAndOtherThanSummaryView || conditions.inInboxLocationAndSummaryView || conditions.isContentTabOpened )  && ( !conditions.isChangeObjectSelectedAndOveviewTabSelected && !conditions.isChangeObjectOpenedAndOveviewTabSelected)"
    },
    "claimTaskCmdCond": {
      "expression": "ctx.visibleServerCommands.Awp0ClaimTask && commandContext.selectionData.value.selected[0] && commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('EPMTask') > -1"
    },
    "claimSignoffCmdCond": {
      "expression": "ctx.visibleServerCommands.Awp0ClaimTask && commandContext.selectionData.value.selected[0] && commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('Signoff') > -1"
    },
    "openEPMTaskOrSignoffCommandVisibleCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.cmdAwp0ShowObjectCellForObjectNavigationBaseVisibleCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.vmo",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "EPMTask",
                  "Signoff"
                ]
              }
            }
          }
        ]
      }
    },
    "Awp0AbortTaskCommandVisibility": {
      "expression": "ctx.visibleServerCommands.Awp0AbortTask"
    },
    "Awp0UserAssignmentCutConditionActive": {
      "expression": "ctx.visibleServerCommands.Awp0Cut === true && ctx.relationContext.relationInfo.length > 0 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1 && ( ctx.relationContext.relationInfo[0].relationType == 'awp0MySurrogates' || ctx.relationContext.relationInfo[0].relationType == 'awp0SurrogateFor' )"
    },
    "Awp0SignoffReviewersCutConditionActive": {
      "expression": "ctx.visibleServerCommands.Awp0Cut === true && ((commandContext.selectionData.relationInfo.length > 0 && commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1 && commandContext.selectionData.relationInfo[0].relationType == 'signoff_attachments') || ( commandContext.selected[0].props.relation.dbValues.length > 0 && commandContext.selected[0].modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1 && commandContext.selected[0].props.relation.dbValues[0] == 'signoff_attachments') || (commandContext.selected[0].modelType.typeHierarchyArray.indexOf( 'Signoff' ) > -1 && ctx.relationContext.relationInfo[0].relationType === 'signoff_attachments'))"
    },
    "awp0DemoteTaskCommandCondition": {
      "expression": "ctx.visibleServerCommands.Awp0DemoteTask"
    },
    "awp0SuspendTaskCommandCondition": {
      "expression": "ctx.visibleServerCommands.Awp0SuspendTask"
    },
    "awp0ResumeTaskCommandCondition": {
      "expression": "ctx.visibleServerCommands.Awp0ResumeTask"
    },
    "enableInboxWithoutBubbleCommand": {
      "expression": "ctx.unviewedWFTaskCount <=0 "
    },
    "enableInboxWihBubbleCommand": {
      "expression": "ctx.unviewedWFTaskCount > 0 "
    },
    "IsWorkFlowHostingEnabled": {
      "expression": "ctx.aw_hosting_enabled"
    },
    "isDeleteTaskCommandActive": {
      "expression": "conditions.Awp0DeleteCommandConditionVisible && ( conditions.isSingleSignoffDeleteCondition || conditions.isMultiSignoffDeleteCondition)"
    },
    "isDeleteTaskCommandVisible": {
      "expression": "conditions.Awp0DeleteCommandConditionVisible && ( conditions.isSingleSignoffDeleteCondition || conditions.isMultiSignoffDeleteCondition) "
    },
    "isSingleSignoffDeleteCondition": {
      "expression": "commandContext.selectionData.value.selected.length === 1 && ( commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('Signoff') > -1 || commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('EPMTask') > -1) "
    },
    "isMultiSignoffDeleteCondition": {
      "expression": "commandContext.selectionData.value.selected.length > 1 && ( commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('Signoff') > -1 || commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('EPMTask') > -1) "
    },
    "isValidLoggedInUserCondition": {
      "expression": "commandContext.openedObject.type ==='User' && commandContext.openedObject.uid === ctx.userSession.props.user.dbValues[0]"
    },
    "isAddRemoteInboxCommandVisible": {
      "expression": "commandContext.objectSetSource ==='Fnd0RemoteInboxProvider.TaskInbox' && ctx.preferences.AWC_Enable_Multisite[0] === 'true' && conditions.isValidLoggedInUserCondition"
    },
    "isRemoveRemoteInboxCommandVisible": {
      "expression": "ctx.preferences.AWC_Enable_Multisite[0] === 'true' && commandContext.objectSetSource ==='Fnd0RemoteInboxProvider.TaskInbox' && commandContext.dataProvider.selectedObjects && commandContext.dataProvider.selectedObjects.length > 0 && conditions.isValidLoggedInUserCondition"
    },
    "isCutRemoteInboxCommandVisible": {
      "expression": "ctx.preferences.AWC_Enable_Multisite[0] === 'true' && ctx.mselected && ctx.mselected.length >0 && ctx.mselected[0].type=='TaskInbox' && conditions.isValidLoggedInUserCondition"
    },
    "openRemoteInboxCellContextCommandVisibleCondition": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.vmo",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Awp0XRTObjectSetRow",
                  "TaskInbox"
                ]
              }
            }
          },
          {
            "$source": {
              "$adapt": "commandContext.vmo"
            },
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "TaskInbox"
                ]
              }
            }
          },
          {
            "$source": {
              "$adapt": "commandContext.vmo"
            },
            "$query": {
              "$source": "props.owning_site.dbValues.length",
              "$query": {
                "$gt": 0
              }
            }
          }
        ]
      }
    },
    "openRemoteInboxCommandVisibleCondition": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.selected",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "TaskInbox"
                ]
              }
            }
          },
          {
            "$source": {
              "$adapt": "ctx.selected"
            },
            "$query": {
              "$source": "props.owning_site.dbValues.length",
              "$query": {
                "$gt": 0
              }
            }
          }
        ]
      }
    },
    "isRemoteInboxTracelinkCommandCondition": {
      "expression": "ctx.visibleServerCommands.Arm0CreateTraceLink && ctx.mselected && ctx.mselected.length >0 && ctx.mselected[0].type=='TaskInbox' "
    },
    "awp0ReplaceMultipleParticipantsCommandCondition": {
      "expression": "ctx.visibleServerCommands.Awp0ReplaceMultipleParticipants && ctx.mselected.length > 1"
    },
    "awp0NewWorkflowProcessCommandCondition": {
      "expression": "ctx.visibleServerCommands.Awp0NewWorkflowProcess"
    },
    "Awp0AddParticipantCmd": {
      "expression": "true"
    },
    "isSelectedChangeObjectModifiable": {
      "expression": "ctx.xrtSummaryContextObject && ctx.xrtSummaryContextObject.props.is_modifiable.dbValues[0] === '1'"
    },
    "isParticipantPlatformVisible": {
      "expression": "ctx.tcSessionData.tcMajorVersion >= 14 && ctx.tcSessionData.tcMinorVersion >= 1"
    },
    "Awp0AddParticipantTableComamndVisiblity": {
      "expression": "commandContext && commandContext.isParticipantTable && (conditions.isSelectedChangeObjectModifiable || conditions.isParticipantPlatformVisible)"
    },
    "Awp0AddParticipantCommandVisibility": {
      "expression": "(((commandContext.objectSetSource.indexOf('HasParticipant.') === 0) || (commandContext.objectSetSource.indexOf('fnd0FirstTargetParticipants.') === 0)) && (!commandContext.selectionModel.selectionData.value.selected || commandContext.selectionModel.selectionData.value.selected.length === 0) && ( ctx.pselected === null || ctx.selected.modelType.parentTypeName !== 'Participant') && (conditions.isSelectedChangeObjectModifiable || conditions.isParticipantPlatformVisible)) || conditions.Awp0AddParticipantTableComamndVisiblity"
    },
    "Awp0ReplaceParticipantTableComamndVisiblity": {
      "expression": "commandContext && commandContext.isParticipantTable && commandContext.selectedObjects && commandContext.selectedObjects.length === 1 && commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'Participant' ) > -1 && (conditions.isSelectedChangeObjectModifiable  || conditions.isParticipantPlatformVisible)"
    },
    "Awp0ReplaceParticipantCommandVisibility": {
      "expression": "(((commandContext.objectSetSource.indexOf('HasParticipant.') == 0) || (commandContext.objectSetSource.indexOf('fnd0FirstTargetParticipants.') == 0)) && commandContext.selectionModel.selectionData.value.selected.length > 0 && ( ctx.pselected == null || ctx.selected.modelType.typeHierarchyArray.indexOf('Participant') > -1) && (conditions.isSelectedChangeObjectModifiable || conditions.isParticipantPlatformVisible)) || conditions.Awp0ReplaceParticipantTableComamndVisiblity"
    },
    "Awp0RemoveParticipantTableComamndVisiblity": {
      "expression": "commandContext && commandContext.isParticipantTable && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && commandContext.isRemoveCmdVisible && (conditions.isSelectedChangeObjectModifiable || conditions.isParticipantPlatformVisible)"
    },
    "Awp0RemoveParticipantCommandVisibility": {
      "expression": "( commandContext.selectionData.value.selected.length > 0 && commandContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf('Participant') > -1 && (conditions.isSelectedChangeObjectModifiable || conditions.isParticipantPlatformVisible)) || conditions.Awp0RemoveParticipantTableComamndVisiblity"
    },
    "Awp0ProcessAssignmentCommandVisibility": {
      "expression": "( commandContext.selectionMode==='multiple' || commandContext.dataProvider.viewModelCollection.totalFound <= 0) && conditions.isTaskAssignmentNarrowViewMode"
    },
    "Awp0IsTaskNotCompleted": {
      "expression": "commandContext.taskObject.props.state.dbValues[0] !== '8'"
    },
    "Awp0IsProfileExistAndReviewersSectionSelected": {
      "expression": "commandContext.isProfileExist && commandContext.propName === 'reviewers'"
    },
    "Awp0AddUserAfterSubmitCommandVisibility": {
      "expression": "(commandContext.selectionModel.mode==='multiple' || commandContext.viewModelCollection.totalFound <= 0) && !conditions.Awp0IsProfileExistAndReviewersSectionSelected && ctx.assignAllTasks.isPrivilegedToAssign == 'true' && conditions.isTcVersion122OrLater && conditions.Awp0IsTaskNotCompleted"
    },
    "Awp0RemoveProcessAssignmentCommandVisibility": {
      "expression": "commandContext.dataProvider.selectedObjects && commandContext.dataProvider.selectedObjects.length > 0"
    },
    "Awp0RemoveUsersAfterSubmitCommandVisibility": {
      "expression": "conditions.Awp0IsTaskNotCompleted && ctx.assignAllTasks.isRemoveVisible && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && commandContext.selectedObjects[0].type && !(commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf('EPMSignoffProfile')>-1) && ctx.assignAllTasks.isPrivilegedToAssign == 'true' && conditions.isTcVersion122OrLater"
    },
    "WorkflowShowLegendHandlerConditionActive": {
      "expression": "!conditions.isEPMTaskTemplateSelected && (commandContext.pageContext.secondaryActiveTabId ==='tc_xrt_Workflow' || commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Workflow')"
    },
    "Awp0RemoveTaskAssignmentCommandVisibility": {
      "expression": "conditions.isTaskNotCompleted && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && commandContext.selectedObjects[0].type && commandContext.selectedObjects[0].type !== 'KeyRole' && !(commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf('EPMSignoffProfile')>-1) && !conditions.isRequiredReviewerPanelCondition && !conditions.isRemoveReviewerPanelCondition"
    },
    "isRequiredReviewerPanelCondition": {
      "expression": "commandContext.selectedObjects[0] && commandContext.selectedObjects[0].assignmentObject && commandContext.selectedObjects[0].assignmentObject.isRequired"
    },
    "isRemoveReviewerPanelCondition": {
      "expression": "commandContext.selectedObjects[0] && commandContext.selectedObjects[0].assignmentObject && commandContext.selectedObjects[0].assignmentObject.isRemoveAllowed === 'false'"
    },
    "Awp0RemoveTaskAssignmentCategoriesCommandVisibility": {
      "expression": "ctx.taskAssignmentCtx.isRemoveVisible && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && commandContext.selectedObjects[0].type && commandContext.selectedObjects[0].type !== 'KeyRole' && !(commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf('EPMSignoffProfile')>-1)"
    },
    "Awp0AddTaskAssignmentCommandVisible": {
      "expression": "conditions.Awp0AddTaskAssignmentCommandVisibility && conditions.isTaskAssignmentNarrowViewMode"
    },
    "Awp0AddTaskAssignmentCommandVisibility": {
      "expression": "(commandContext.selectionModelMode==='multiple' || commandContext.modelObjects.length <= 0) && !conditions.isProfileExistAndReviewersSectionSelected"
    },
    "isProfileSubmitWithTemplateCellCommandActive": {
      "expression": "commandContext.vmo.sidenavMode === 'mobile'"
    },
    "isProfileSubmitWithTemplateCommandVisible": {
      "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1 && commandContext.vmo.props.number_of_signoffs.dbValues[0] > 0 "
    },
    "isProfileSignoffCommandVisible": {
      "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1 && commandContext.vmo.props.number_of_signoffs.dbValues[0] > 0 && ctx.assignAllTasks.isPrivilegedToAssign == 'true' && conditions.isTcVersion122OrLater && conditions.Awp0IsTaskNotCompleted"
    },
    "IsTaskAssignmentTabActive": {
      "expression": "(commandContext.activeTab.pageId ==='tc_xrt_Assignments' || commandContext.pageContext.secondaryActiveTabId ==='tc_xrt_Assignments' || commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Assignments')"
    },
    "IsWorkflowTabActive": {
      "expression": "(commandContext.activeTab.pageId ==='tc_xrt_Workflow' || commandContext.pageContext.secondaryActiveTabId ==='tc_xrt_Workflow' || commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Workflow')"
    },
    "Awp0StartEditConditionActive": {
      "expression": "conditions.isStartEditAllowed && conditions.IsTaskAssignmentTabActive"
    },
    "isTcVersion122OrLater": {
      "expression": "((ctx.tcSessionData.tcMajorVersion > 11 && ctx.tcSessionData.tcMinorVersion > 1 ) || ( ctx.tcSessionData.tcMajorVersion > 12 ))"
    },
    "isEPMTaskTemplateSelected": {
      "expression": "commandContext.vmo && commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1"
    },
    "cmdWorkflowViewerLayoutOptionsActive": {
      "expression": "conditions.WorkflowShowLegendHandlerConditionActive"
    },
    "cmdWorkflowViewerRightToLeftLayoutActive": {
      "expression": " conditions.WorkflowShowLegendHandlerConditionActive"
    },
    "cmdWorkflowViewerLeftToRightLayoutActive": {
      "expression": "conditions.WorkflowShowLegendHandlerConditionActive"
    },
    "cmdWorkflowViewerFixedLayoutActive": {
      "expression": "conditions.WorkflowShowLegendHandlerConditionActive"
    },
    "cmdWorkflowViewerTopToBottomLayoutSelected": {
      "expression": "commandContext.workflowViewerContext.diagram.isAutoLayoutOn && commandContext.workflowViewerContext.diagram.layoutOption === 'GcTopToBottomLayout'"
    },
    "cmdWorkflowViewerRightToLeftLayoutSelected": {
      "expression": "commandContext.workflowViewerContext.diagram.isAutoLayoutOn && commandContext.workflowViewerContext.diagram.layoutOption === 'GcRightToLeftLayout'"
    },
    "cmdWorkflowViewerLeftToRightLayoutSelected": {
      "expression": "commandContext.workflowViewerContext.diagram.isAutoLayoutOn && commandContext.workflowViewerContext.diagram.layoutOption === 'GcLeftToRightLayout'"
    },
    "cmdWorkflowViewerFixedLayoutSelected": {
      "expression": "!commandContext.workflowViewerContext.diagram.isAutoLayoutOn && commandContext.workflowViewerContext.diagram.layoutOption === 'FixedLayout'"
    },
    "isInboxEditInProgress": {
      "expression": "conditions.saveEditsPWACommandActive && ctx.ViewModeContext.ViewModeContext === 'TableSummaryView' &&  ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && (ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Assignments' || ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Workflow')"
    },
    "isCreateSubProcessCommandVisible": {
      "expression": "conditions.isTCServerVersion131OrLater && ctx.selected && (ctx.selected.modelType.typeHierarchyArray.indexOf('EPMTask') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Signoff') > -1 ) && conditions.isValidWorkflowViewerGraphSelection && !conditions.IsTaskAssignmentTabActive"
    },
    "isValidWorkflowViewerGraphSelection": {
      "expression": "( !commandContext.workflowViewerContext || !commandContext.workflowViewerContext.selectedNodes || ( commandContext.workflowViewerContext.selectedNodes.length === 1  && ( !commandContext.workflowViewerContext.selectedNodes[0].appData.isStartFinishNode  || commandContext.workflowViewerContext.selectedNodes[0].appData.isStartFinishNode === 'start')))"
    },
    "isTCServerVersion131OrLater": {
      "expression": "(ctx.tcSessionData.tcMajorVersion > 13 || (ctx.tcSessionData.tcMajorVersion === 13 && ctx.tcSessionData.tcMinorVersion > 0 ) )"
    },
    "isRemoveSelectedProcessTargetCommandVisible": {
      "expression": "commandContext.selectedObjects.length > 0 && !conditions.isHostedMode"
    },
    "isAddProcessTargetCommandVisible": {
      "expression": "!conditions.isHostedMode"
    },
    "isHostedMode": {
      "expression": "ctx.workflow_process_candidates && ctx.workflow_process_candidates.IsEmbeddedComponent"
    },
    "awp0SelectAllWorkflowTargetCondition": {
      "expression": "!conditions.isHostedMode && commandContext.modelObjects && commandContext.modelObjects.length > 0 && commandContext.modelObjects.length >  commandContext.selectedObjects.length"
    },
    "isValidTaskObjectAssignmentCondition": {
      "expression": "commandContext.selected[0] && commandContext.selected[0]._childObj && (( commandContext.selected[0]._childObj.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1 )|| ( commandContext.selected[0]._childObj.props.state.dbValues[0] !== '8' && commandContext.assignmentState.isPrivilegedToAssign === 'true' && commandContext.selected[0]._childObj.modelType.typeHierarchyArray.indexOf( 'EPMTask' ) > -1))"
    },
    "isValidTaskSelfObjectAssignmentCondition": {
      "expression": "commandContext.selected[0] && commandContext.selected[0]. && (( commandContext.selected[0].modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1 )|| ( commandContext.selected[0].modelType.typeHierarchyArray.indexOf( 'EPMTask' ) > -1))"
    },
    "isRemoveTaskAssignmentCtxCommandVisible": {
      "expression": "conditions.isValidTaskObjectAssignmentCondition && conditions.isRemoveAllowedCondition && commandContext.selected[0] && ( commandContext.selected[0].uid !== 'unstaffedUID' && commandContext.selected[0].uniqueUid !== 'unstaffedUID') && ( ( commandContext.selected[0].assignmentType !== 'assignee' ) || (commandContext.selected[0].assignmentType === 'assignee' && commandContext.selected[0].assignmentObject.internalName && commandContext.selected[0].assignmentObject.taskAssignment.uid !== 'unstaffedUID' ) ) && !conditions.isRequiredReviewer"
    },
    "isRequiredReviewer": {
      "expression": "commandContext.selected[0] && commandContext.selected[0].assignmentObject && commandContext.selected[0].assignmentObject.isRequired"
    },
    "isRemoveAllowedCondition": {
      "expression": "commandContext.selected[0] && commandContext.selected[0].assignmentObject && ( commandContext.selected[0].assignmentObject.isRemoveAllowed === 'true' || commandContext.selected[0].assignmentObject.isRemoveAllowed === undefined)"
    },
    "isReplaceTaskAssignmentCtxCommandVisible": {
      "expression": "conditions.isValidTaskObjectAssignmentCondition && !conditions.isValidTaskSelfObjectAssignmentCondition && !conditions.isRequiredReviewer && commandContext.selected[0] && commandContext.selected[0].modelType.typeHierarchyArray.indexOf( 'EPMTask' ) <= -1 && !commandContext.isPanelMode"
    },
    "Awp0SaveTaskAssignmentCondition": {
      "expression": "commandContext.assignmentState.isStartEditEnabled && commandContext.assignmentState.isPrivilegedToAssign == 'true' && commandContext.assignmentState.isModified"
    },
    "Awp0SaveTaskAssignmentCommandVisibility": {
      "expression": "conditions.Awp0SaveTaskAssignmentCondition"
    },
    "Awp0CancelTaskAssignmentCommandVisibility": {
      "expression": "commandContext.assignmentState.isStartEditEnabled && commandContext.assignmentState.isPrivilegedToAssign == 'true'"
    },
    "Awp0AddUserAfterSubmitCommandVisible": {
      "expression": "conditions.isAddUserAfterSubmitCommandVisibility && conditions.isTaskAssignmentNarrowViewMode"
    },
    "isAddUserAfterSubmitCommandVisibility": {
      "expression": "(commandContext.selectionModel.mode==='multiple' || commandContext.viewModelCollection.totalFound <= 0) && !conditions.isProfileExistAndReviewersSectionSelected && ctx.taskAssignmentCtx.isPrivilegedToAssign == 'true' && conditions.isTaskNotCompleted"
    },
    "isTaskAssignmentNarrowViewMode": {
      "expression": "commandContext.sidenavMode === 'mobile'|| commandContext.vmo.sidenavMode==='mobile'"
    },
    "isTaskNotCompleted": {
      "expression": "commandContext.taskObject.props.state.dbValues[0] !== '8'"
    },
    "isProfileExistAndReviewersSectionSelected": {
      "expression": "commandContext.isProfileExist && commandContext.modelObjects[0].modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1"
    },
    "Awp0RemoveUserAfterSubmitCommandVisible": {
      "expression": "conditions.isTaskNotCompleted && ctx.taskAssignmentCtx.isRemoveVisible && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && commandContext.selectedObjects[0].type && commandContext.selectedObjects[0].type !== 'KeyRole' && !(commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf('EPMSignoffProfile')>-1) && ctx.taskAssignmentCtx.isPrivilegedToAssign == 'true' "
    },
    "Awp0StartEditTaskAssignmentCommandActive": {
      "expression": "conditions.IsTaskAssignmentTabActive"
    },
    "Awp0StartEditTaskAssignmentCommandVisibility": {
      "expression": "conditions.IsTaskAssignmentTabActive && commandContext && !commandContext.assignmentState.isStartEditEnabled && commandContext.assignmentState.isPrivilegedToAssign == 'true'"
    },
    "Awp0TasksAferSubmitProfileCellCommandActive": {
      "expression": "true|| conditions.isTaskAssignmentNarrowViewMode"
    },
    "isProfileSignoffTaskAssignmentCommandVisible": {
      "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1"
    },
    "Awp0TasksAferSubmitProfileCellCommandVisible": {
      "expression": "conditions.IsTaskAssignmentTabActive && conditions.isProfileSignoffTaskAssignmentCommandVisible && conditions.isTaskAssignmentNarrowViewMode"
    },
    "isAddTaskParticipantAssignmentCommandVisible": {
      "expression": "( commandContext.selectionModelMode==='multiple' || commandContext.modelObjects.length <= 0 ) && conditions.isTaskAssignmentNarrowViewMode"
    },
    "isRemoveTaskParticipantAssignmentCommandVisible": {
      "expression": "commandContext.selectedObjects && commandContext.selectedObjects.length > 0"
    },
    "isSubmitWorkflowPopupPanelActive": {
      "expression": "ctx.submitWorkflowPopupCtx || ctx.activeToolsAndInfoCommand.commandId === 'Awp0CreateWorkflowSubProcess' || ctx.activeToolsAndInfoCommand.commandId === 'Awp0NewWorkflowProcess'"
    },
    "Awp0PasteUsersAssignmentCommandVisible": {
      "expression": "conditions.Awp0PasteUsersAssignmentCommandVisibility && !conditions.isTaskAssignmentNarrowViewMode"
    },
    "Awp0PasteUsersAssignmentCommandVisibility": {
      "expression": "!conditions.isProfileExistAndReviewersSectionSelected && commandContext.selectedUsers.length> 0 && ( conditions.isTaskAssignmentCondition || conditions.isTaskTemplateAssignmentCondition ) && !conditions.IsPasteHiddenForDPBasedTemplate"
    },
    "Awp0PasteUsersAssignmentCommandVisibility1": {
      "expression": "!conditions.isProfileExistAndReviewersSectionSelected && commandContext.selectedUsers.length> 0 && ( conditions.isTaskAssignmentCondition || conditions.isTaskTemplateAssignmentCondition || ctx.isDynamicParticipantAssignmentPresent) && !conditions.IsPasteHiddenForDPBasedTemplate"
    },
    "Awp0PasteProfileUsersAssignmentCommandVisible": {
      "expression": "conditions.Awp0PasteProfileUsersAssignmentCommandVisibility && !conditions.isTaskAssignmentNarrowViewMode"
    },
    "Awp0PasteProfileUsersAssignmentCommandVisibility": {
      "expression": "commandContext.isProfileExist && commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1 && conditions.isProfileExistAndReviewersSectionSelected && commandContext.selectedUsers.length> 0 && ( conditions.isTaskAssignmentCondition || conditions.isTaskTemplateAssignmentCondition)"
    },
    "isTaskAssignmentCondition": {
      "expression": "conditions.isTaskNotCompleted && commandContext.isPrivilegedToAssign == 'true' && commandContext.taskObject.modelType.typeHierarchyArray.indexOf( 'EPMTask' ) > -1 "
    },
    "isTaskTemplateAssignmentCondition": {
      "expression": "commandContext.taskObject.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1"
    },
    "IsPasteHiddenForDPBasedTemplate": {
      "expression": "commandContext.propName === 'assignee' && commandContext.modelObjects.length > 0 && commandContext.modelObjects[0].type === 'KeyRole'"
    },
    "Awp0AssignTaskCommandCondition": {
      "expression": "ctx.taskAssignmentCtx.isNarrowViewMode && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0] && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'EPMTask' ) > -1"
    },
    "isAddMultiParticipantPanel": {
      "expression": "commandContext.multiParticipantDataMap"
    },
    "isAddParticipantTaskPanel": {
      "expression": "data.selectedItemRevisions && (data.selectedItemRevisions[0].modelType.typeHierarchyArray.indexOf( 'EPMTask' ) > -1 || data.selectedItemRevisions[0].modelType.typeHierarchyArray.indexOf( 'Signoff' ) > -1)"
    },
    "displayCreateWorkflow": {
      "expression": "commandContext.provider.viewBase === 'inbox' && ( !commandContext.selectionData.value.pselected && ( !commandContext.selectionData.value.selected || commandContext.selectionData.value.selected.length <= 0))"
    },
    "awp0NewWorkflowProcessTemplateCommandCondition": {
      "expression": "ctx.visibleServerCommands.Awp0CreateWorkflowTemplate && ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation'"
    },
    "isImportWorkflowTemplateCmdVisible": {
      "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation' && ctx.visibleServerCommands.Awp0ImportWorkflowTemplate"
    },
    "isExportWorkflowTemplateCmdVisible": {
      "expression": "ctx.selected && ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation' && ctx.visibleServerCommands.Awp0ExportWorkflowTemplate"
    },
    "isAvailableProcessTemplate": {
      "expression": "ctx.xrtSummaryContextObject.props.stage.dbValues[0] === '2' && conditions.isProcessTemplateSelected"
    },
    "isDBAPriviledgeUser": {
      "expression": "ctx.userSession.props.group_name.dbValue === 'dba'"
    },
    "isTCServerVersion122OrLater": {
      "expression": "(ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion >= 2 ) )"
    },
    "isTCServerVersion123OrLater": {
      "expression": "(ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion > 2 ) )"
    },
    "isShowObjectLocationRemoveProcessTemplateCommandVisibility": {
      "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'showObject' && ctx.visibleServerCommands.Awp0DeleteWorkflowTemplate && conditions.isValidTemplateObjectCondition"
    },
    "isWorkflowDesignerLocationRemoveProcessTemplateCommandVisibility": {
      "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation' && ctx.visibleServerCommands.Awp0DeleteWorkflowTemplate"
    },
    "removeProcessTemplateCondition": {
      "expression": "conditions.isWorkflowDesignerLocationRemoveProcessTemplateCommandVisibility || conditions.isShowObjectLocationRemoveProcessTemplateCommandVisibility"
    },
    "isProcessTemplateSelected": {
      "expression": "ctx.selected && ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1 && ctx.selected.props.template_classification.dbValues && ctx.selected.props.template_classification.dbValues[0] === '0'"
    },
    "awp0TemplateFiltersCommandCondition": {
      "expression": "(ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation') && (!ctx.editInProgress || ctx.editInProgress === false) && ( commandContext.searchState && (commandContext.searchState.totalFound > 0 || commandContext.searchState.criteria.searchString !== ''))"
    },
    "isTemplateStartEditCommandVisibility": {
      "expression": "ctx.visibleServerCommands.Awp0EditWorkflowTemplate && !conditions.isNotificationTabEditMode && conditions.isTemplateType"
    },
    "isValidTemplateObjectCondition": {
      "expression": "ctx.xrtSummaryContextObject && ctx.xrtSummaryContextObject.props.parent_task_template.dbValues[0] === '' || ctx.xrtSummaryContextObject.props.parent_task_template.dbValues.length === 0"
    },
    "isShowObjectLocationStartEditCommandVisibility": {
      "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'showObject' && ctx.xrtSummaryContextObject && ( !commandContext.workflowDgmEditCtx || commandContext.workflowDgmEditCtx.editObjectUids.indexOf( ctx.xrtSummaryContextObject.uid ) === -1 ) && conditions.isValidTemplateObjectCondition"
    },
    "isWorkflowDesignerLocationStartEditCommandVisibility": {
      "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation' && ctx.xrtSummaryContextObject && ( !commandContext.workflowDgmEditCtx || commandContext.workflowDgmEditCtx.editObjectUids.indexOf( ctx.xrtSummaryContextObject.uid ) === -1 )"
    },
    "isValidLocationForWorkflowGraph": {
      "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation' || ctx.locationContext['ActiveWorkspace:SubLocation'] === 'showObject'"
    },
    "isTemplateStartEditSummaryViewCommandVisibility": {
      "expression": "ctx.xrtSummaryContextObject && ( conditions.isWorkflowDesignerLocationStartEditCommandVisibility || conditions.isShowObjectLocationStartEditCommandVisibility )"
    },
    "isTemplateStartEditNonSummaryViewCommandVisibility": {
      "expression": "!ctx.xrtSummaryContextObject && ctx.selected && conditions.isValidLocationForWorkflowGraph && ( !commandContext.workflowDgmEditCtx || commandContext.workflowDgmEditCtx.editObjectUids.indexOf( ctx.selected.uid ) === -1 )"
    },
    "isShowObjectLocationEditCommandVisibility": {
      "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'showObject' && ctx.visibleServerCommands.Awp0MakeWorkflowTemplateOnline && conditions.isValidTemplateObjectCondition"
    },
    "isWorkflowDesignerLocationEditCommandVisibility": {
      "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation' && ctx.visibleServerCommands.Awp0MakeWorkflowTemplateOnline"
    },
    "isTemplateEditCommandVisibility": {
      "expression": "conditions.isTemplateEditMode || ctx.visibleServerCommands.Awp0MakeWorkflowTemplateOnline && conditions.isValidTemplateObjectCondition && commandContext.subPanelContext.selected.props.stage.dbValues[0] !== '2'"
    },
    "isTemplateEndEditCommandVisibility": {
      "expression": "conditions.isTemplateEditMode"
    },
    "manageACLCommandVisibility": {
      "expression": "commandContext.workflowDgmEditCtx && commandContext.workflowDgmEditCtx.editObjectUids.length > 0 && commandContext.workflowDgmEditCtx.editObjectUids.indexOf( commandContext.selected.uid ) > -1 && commandContext.aclType.dbValue === 'WORKFLOW' && ctx.state.params.ttab_name ==='Awp0TaskAccessibilityTab'"
    },
    "isValidWDLocationWithEditCriteria": {
      "expression": "commandContext.acl.dbValue !== '' && commandContext.aclType.dbValue === 'WORKFLOW' && ctx.state.params.ttab_name ==='Awp0TaskAccessibilityTab' && commandContext.workflowDgmEditCtx.editObjectUids && commandContext.workflowDgmEditCtx.editObjectUids.length > 0 && commandContext.workflowDgmEditCtx.editObjectUids.indexOf( commandContext.selected.uid ) > -1"
    },
    "Awp0ToggleShowTaskRelatedInfoCmdCond": {
      "expression": "conditions.isWorkflowDesignerPage && conditions.isTemplateType"
    },
    "Awp0ToggleShowTaskRelatedInfoActive": {
      "expression": "ctx.state.params.ttab_name"
    },
    "isTemplateType": {
      "expression": "( commandContext.subPanelContext.context.viewBase === 'workflowTemplates' && commandContext.subPanelContext.selected && commandContext.subPanelContext.selected.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1) || ( commandContext.provider.viewBase === 'workflowTemplates' && commandContext.searchState.pwaSelection && commandContext.searchState.pwaSelection[0].modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1) || (commandContext.subPanelContext.openedObject && commandContext.subPanelContext.openedObject.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1) || (commandContext.openedObject && commandContext.openedObject.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1)"
    },
    "isWorkflowDesignerPage": {
      "expression": "commandContext.subPanelContext.pageContext.primaryActiveTabId === 'tc_xrt_Workflow' || commandContext.subPanelContext.pageContext.secondaryActiveTabId === 'tc_xrt_Workflow' || commandContext.subPanelContext.activeTab.pageId === 'tc_xrt_Workflow'"
    },
    "isTaskTemplateRemoveCommandVisibility": {
      "expression": "conditions.isWorkflowDesignerPage && conditions.isTemplateEditMode && commandContext.workflowDgmState.isRemoveTaskTemplateCommandVisible"
    },
    "convertToParentTemplateVisibilityCond": {
      "expression": "conditions.isGcExitEditCommandVisible && conditions.isWorkflowDesignerPage && !commandContext.workflowDgmState.isGroupSelectedNode && !conditions.isOOTBTaskTemplateSelected && ctx.selected.uid !== ctx.xrtSummaryContextObject.uid && commandContext.workflowDgmState.selectedNodes.length > 0 "
    },
    "isOOTBTaskTemplateSelected": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMReviewTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMAcknowledgeTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMAddStatusTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMConditionTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMDoTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMOrTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMRouteTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMValidateTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMSelectSignoffTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMPerformSignoffTaskTemplate' ) > -1"
    },
    "isTemplateEditMode": {
      "expression": "conditions.isTemplateType && conditions.isTaskTemplateInEditMode"
    },
    "isHandlerTabActive": {
      "expression": "ctx.state.params.ttab_name ==='Awp0HandlersTab'"
    },
    "isNotificationTabEditMode": {
      "expression": "conditions.isTaskTemplateInEditMode"
    },
    "isAddNotificationHandler": {
      "expression": "conditions.isNotificationTabEditMode && ( !commandContext.notificationHandlerContext.selectedObjects || commandContext.notificationHandlerContext.selectedObjects.length <= 0)"
    },
    "isShowNotificationHandler": {
      "expression": "!conditions.isNotificationTabEditMode && commandContext.notificationHandlerContext.selectedObjects && commandContext.notificationHandlerContext.selectedObjects.length > 0"
    },
    "isEditNotificationHandler": {
      "expression": "conditions.isNotificationTabEditMode && commandContext.notificationHandlerContext.selectedObjects && commandContext.notificationHandlerContext.selectedObjects.length > 0"
    },
    "isAddTemplateArgumentCommandVisible": {
      "expression": "commandContext.vmo.type === 'KeyRole' && commandContext.vmo.isPlaceHolder"
    },
    "isRemoveTemplateArgumentCommandVisible": {
      "expression": "(commandContext.vmo.type === 'KeyRole' || commandContext.vmo.type === 'User' || commandContext.vmo.type === 'ResourcePool' || commandContext.vmo.type === 'EPMSignoffProfile') && commandContext.vmo.canRemove"
    },
    "isRemoveNotificationHandler": {
      "expression": "conditions.isNotificationTabEditMode && commandContext.notificationHandlerContext.selectedObjects && commandContext.notificationHandlerContext.selectedObjects.length > 0"
    },
    "isRemoveArgumentCommandVisible": {
      "expression": "commandContext.isPanelEditable && !commandContext.selectedArgument.isMandatoryArgument"
    },
    "isAssignmentTabEditMode": {
      "expression": "conditions.isTaskTemplateInEditMode"
    },
    "isAddAssignmentHandler": {
      "expression": "conditions.isAssignmentTabEditMode && ( !commandContext.selectedObjects || commandContext.selectedObjects.length <= 0)"
    },
    "isSingleUserTemplateSelected": {
      "expression": "commandContext.subPanelContext.selectionData.value.selected && commandContext.subPanelContext.selectionData.value.selected[0] && commandContext.subPanelContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1 && !conditions.isMultiUserTemplateSelected"
    },
    "isMultiUserTemplateSelected": {
      "expression": "commandContext.subPanelContext.selectionData.value.selected && commandContext.subPanelContext.selectionData.value.selected[0] && ( commandContext.subPanelContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf( 'EPMReviewTaskTemplate' ) > -1 || commandContext.subPanelContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf( 'EPMAcknowledgeTaskTemplate' ) > -1 || commandContext.subPanelContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf( 'EPMRouteTaskTemplate' ) > -1)"
    },
    "isMultiUserReviewTemplateSelected": {
      "expression": "commandContext.subPanelContext.selectionData.value.selected && commandContext.subPanelContext.selectionData.value.selected[0] && commandContext.subPanelContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf( 'EPMReviewTaskTemplate' ) > -1"
    },
    "isMultiUserRouteTemplateSelected": {
      "expression": "commandContext.subPanelContext.selectionData.value.selected && commandContext.subPanelContext.selectionData.value.selected[0] && commandContext.subPanelContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf( 'EPMRouteTaskTemplate' ) > -1"
    },
    "isMultiUserAcknowledgeTemplateSelected": {
      "expression": "commandContext.subPanelContext.selectionData.value.selected && commandContext.subPanelContext.selectionData.value.selected[0] && commandContext.subPanelContext.selectionData.value.selected[0].modelType.typeHierarchyArray.indexOf( 'EPMAcknowledgeTaskTemplate' ) > -1"
    },
    "isAddAssigneeAssignmentHandler": {
      "expression": "conditions.isAddAssignmentHandler && ( conditions.isSingleUserTemplateSelected || ( (!commandContext.subPanelContext.selectionData.value.selected || !commandContext.subPanelContext.selectionData.value.selected[0] ) && commandContext.subPanelContext.selected.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1))"
    },
    "isAddAssignerAssignmentHandler": {
      "expression": "conditions.isAddAssignmentHandler && conditions.isMultiUserTemplateSelected"
    },
    "isAddReviewersAssignmentHandler": {
      "expression": "conditions.isAddAssignmentHandler && ( conditions.isMultiUserReviewTemplateSelected || conditions.isMultiUserRouteTemplateSelected)"
    },
    "isAddAcknowledgersAssignmentHandler": {
      "expression": "conditions.isAddAssignmentHandler && ( conditions.isMultiUserAcknowledgeTemplateSelected || conditions.isMultiUserRouteTemplateSelected)"
    },
    "isAddNotifyeesAssignmentHandler": {
      "expression": "conditions.isAddAssignmentHandler && conditions.isMultiUserRouteTemplateSelected"
    },
    "isAssignmentTabActive": {
      "expression": "ctx.state.params.ttab_name ==='Awp0TaskAssignmentTab'"
    },
    "isNotificationTabActive": {
      "expression": "ctx.state.params.ttab_name ==='Awp0TaskNotificationsTab'"
    },
    "isAddAssignmentUserVisible": {
      "expression": "conditions.isAssignmentTabAddAssignmentUserCondition || conditions.isNotificationTabAddAssignmentUserCondition"
    },
    "isAssignmentTabAddAssignmentUserCondition": {
      "expression": "conditions.isAssignmentTabActive && commandContext.panelType !== 'INFO' && !commandContext.profileObject && ( commandContext.assignmentType !== 'assigner' && commandContext.assignmentType !== 'assignee' ) || ( (commandContext.assignmentType === 'assigner' || commandContext.assignmentType === 'assignee') && commandContext.modelObjects.length <= 0 )"
    },
    "isNotificationTabAddAssignmentUserCondition": {
      "expression": "conditions.isNotificationTabActive && commandContext.panelType !== 'INFO'"
    },
    "isReplaceProfileCommandVisible": {
      "expression": "conditions.isAssignmentTabActive && commandContext.profileObject && commandContext.isTemplateInEditMode && commandContext.selectedProfile"
    },
    "isShowAssignemntHandler": {
      "expression": "!conditions.isAssignmentTabEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && !conditions.isProfileObjectSelected"
    },
    "isEditAssignemntHandler": {
      "expression": "conditions.isAssignmentTabEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && !conditions.isProfileObjectSelected"
    },
    "isShowProfileInfo": {
      "expression": "!conditions.isAssignmentTabEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && conditions.isProfileObjectSelected"
    },
    "isEditProfileInfo": {
      "expression": "conditions.isAssignmentTabEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && conditions.isProfileObjectSelected"
    },
    "isProfileObjectSelected": {
      "expression": "commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1"
    },
    "isRemoveSignoffProfile": {
      "expression": "conditions.isAssignmentTabEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1"
    },
    "isRemoveAssignmentHandler": {
      "expression": "conditions.isAssignmentTabEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && !conditions.isRemoveSignoffProfile"
    },
    "isTaskTemplateInEditModeFromCtx": {
      "expression": "ctx.workflowDgmEditCtx && ctx.workflowDgmEditCtx.editObjectUids && ctx.workflowDgmEditCtx.editObjectUids.length > 0 && (ctx.workflowDgmEditCtx.editObjectUids.indexOf( ctx.selected.uid ) > -1 || ctx.workflowDgmEditCtx.editObjectUids.indexOf( ctx.pselected.uid ) > -1)"
    },
    "isTaskTemplateInEditMode": {
      "expression": "commandContext.workflowDgmEditCtx && commandContext.workflowDgmEditCtx.editObjectUids && commandContext.workflowDgmEditCtx.editObjectUids.length > 0 && commandContext.workflowDgmEditCtx.editObjectUids.indexOf( commandContext.subPanelContext.selected.uid ) > -1 || conditions.isTaskTemplateInEditModeFromCtx"
    },
    "isAddFormHandler": {
      "expression": "conditions.isTaskTemplateInEditMode && commandContext.formHandlerContext.loadedVMOObjects.length <= 0"
    },
    "isRemoveFormHandler": {
      "expression": "conditions.isTaskTemplateInEditMode && commandContext.formHandlerContext.selectedObjects && commandContext.formHandlerContext.selectedObjects.length > 0"
    },
    "isShowFormHandler": {
      "expression": "!conditions.isTaskTemplateInEditMode && commandContext.formHandlerContext.selectedObjects && commandContext.formHandlerContext.selectedObjects.length > 0"
    },
    "isEditFormHandler": {
      "expression": "conditions.isTaskTemplateInEditMode && commandContext.formHandlerContext.selectedObjects && commandContext.formHandlerContext.selectedObjects.length > 0"
    },
    "isTaskPaletteSelected": {
      "expression": "conditions.isTaskTemplateInEditMode && commandContext.workflowDgmState.taskLegendPaletteMode"
    },
    "isTaskPaletteVisible": {
      "expression": "conditions.isTaskTemplateInEditMode && commandContext.legend.createTaskTemplateCategories && commandContext.legend.createPathCategories"
    },
    "isShowFixedLayout": {
      "expression": "ctx.preferences.WRKFLW_use_fixed_position[0] === 'true' && commandContext.workflowDgmState.diagram.isAutoLayoutOn"
    },
    "isSaveNodePositions": {
      "expression": "conditions.isTCServerVersion123OrLater &&  ctx.preferences.WRKFLW_save_node_positions[0] && ctx.preferences.WRKFLW_save_node_positions[0] === 'true' && commandContext.workflowDgmState && commandContext.workflowDgmState.diagram.isAutoLayoutOn"
    },
    "isFixedCtx": {
      "expression": "!commandContext.workflowDgmState.diagram.isAutoLayoutOn"
    },
    "isShowAutoLayout": {
      "expression": "ctx.preferences.WRKFLW_use_fixed_position[0] === 'true' && !commandContext.workflowDgmState.diagram.isAutoLayoutOn"
    },
    "WorkflowDesigenrShowLegendHandlerConditionActive": {
      "expression": "( ctx.xrtSummaryContextObject && ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1 ) && (commandContext.subPanelContext.pageContext.primaryActiveTabId === 'tc_xrt_Workflow' || commandContext.subPanelContext.pageContext.secondaryActiveTabId === 'tc_xrt_Workflow' || commandContext.subPanelContext.activeTab.pageId === 'tc_xrt_Workflow')"
    },
    "cmdWorkflowDesignerLayoutOptionsActive": {
      "expression": "conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
    },
    "cmdWorkflowDesignerRightToLeftLayoutActive": {
      "expression": " conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
    },
    "cmdWorkflowDesignerLeftToRightLayoutActive": {
      "expression": "conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
    },
    "cmdWorkflowDesignerFixedLayoutActive": {
      "expression": "conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
    },
    "cmdWorkflowDesignerTopToBottomLayoutSelected": {
      "expression": "commandContext.workflowDgmState.diagram.isAutoLayoutOn && commandContext.workflowDgmState.diagram.layoutOption === 'GcTopToBottomLayout'"
    },
    "cmdWorkflowDesignerRightToLeftLayoutSelected": {
      "expression": "commandContext.workflowDgmState.diagram.isAutoLayoutOn && commandContext.workflowDgmState.diagram.layoutOption === 'GcRightToLeftLayout'"
    },
    "cmdWorkflowDesignerLeftToRightLayoutSelected": {
      "expression": "commandContext.workflowDgmState.diagram.isAutoLayoutOn && commandContext.workflowDgmState.diagram.layoutOption === 'GcLeftToRightLayout'"
    },
    "cmdWorkflowDesignerFixedLayoutSelected": {
      "expression": "!commandContext.workflowDgmState.diagram.isAutoLayoutOn && commandContext.workflowDgmState.diagram.layoutOption === 'FixedLayout'"
    },
    "isAwp0HandlerMoveUpCommandVisible": {
      "expression": "commandContext.data.dataProviders.handlersDataProvider.selectedObjects.length > 0 && commandContext.data.enableHandlerMoveUp && conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
    },
    "isAwp0HandlerMoveDownCommandVisible": {
      "expression": "commandContext.data.dataProviders.handlersDataProvider.selectedObjects.length > 0 && commandContext.data.enableHandlerMoveDown && conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
    },
    "isAwp0TaskMoveUpCommandVisible": {
      "expression": "commandContext.selectionData.selected.length > 0 && conditions.isTaskTemplateInEditMode"
    },
    "isAwp0TaskMoveDownCommandVisible": {
      "expression": "commandContext.selectionData.selected.length > 0 && conditions.isTaskTemplateInEditMode"
    },
    "isAwp0CutHandlerCommandVisible": {
      "expression": "commandContext.data.dataProviders.handlersDataProvider.selectedObjects.length > 0 && commandContext.data.dataProviders.handlersDataProvider.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'EPMHandler' ) > -1 && conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
    },
    "isAwp0HandlerPasteForActionTypeCommandVisible": {
      "expression": "ctx.handlerToPaste && commandContext.data.dataProviders.handlersDataProvider.selectedObjects.length > 0 && commandContext.data.dataProviders.handlersDataProvider.selectedObjects[0].type ==='Action' && conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
    },
    "isAwp0HandlerPasteForRuleQuorumCommandVisible": {
      "expression": "ctx.handlerToPaste && ctx.handlerToPaste.type === 'EPMBRHandler' && commandContext.data.dataProviders.handlersDataProvider.selectedObjects.length > 0 && commandContext.data.dataProviders.handlersDataProvider.selectedObjects[0].type ==='EPMBusinessRule' && conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
    },
    "isAwp0RemoveHandlerCommandVisible": {
      "expression": "commandContext.data.dataProviders.handlersDataProvider.selectedObjects.length > 0 && commandContext.data.dataProviders.handlersDataProvider.selectedObjects[0].type !=='Action' && conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
    },
    "isAwp0ActionTypeOrBRSelected": {
      "expression": "commandContext.data.dataProviders.handlersDataProvider.selectedObjects[0].type ==='Action' || commandContext.data.dataProviders.handlersDataProvider.selectedObjects[0].type ==='EPMBusinessRule'"
    },
    "isAddHandlerArgumentCommandVisible": {
      "expression": "commandContext.data.isPanelEditable && commandContext.data.isAddHandlerArgumentPanelVisible && !commandContext.data.no_arguments && (commandContext.data.ruleHandlersLOV.dbValue !== '' ||  commandContext.data.actionHandlersLOV.dbValue !== '' || commandContext.data.actionHandler.dbValue !== '')"
    },
    "isAwp0CopyHandlerCommandVisible": {
      "expression": "commandContext.data.dataProviders.handlersDataProvider.selectedObjects.length > 0 && commandContext.data.dataProviders.handlersDataProvider.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'EPMHandler' ) > -1 && conditions.isHandlerTabActive"
    },
    "isImportPALCmdVisible": {
      "expression": "commandContext.provider.viewBase === 'processAssignments'"
    },
    "isExportPALCmdVisible": {
      "expression": "commandContext.searchState.pwaSelection && commandContext.searchState.pwaSelection.length > 0 && commandContext.provider.viewBase === 'processAssignments'"
    },
    "isTemplateAssignmentNarrowViewMode": {
      "expression": "commandContext.sidenavMode === 'mobile'|| commandContext.vmo.sidenavMode==='mobile'"
    },
    "Awp0PasteTemplateUsersAssignmentCommandVisible": {
      "expression": "conditions.Awp0PasteTemplateUsersAssignmentCommandVisibility && !conditions.isTemplateAssignmentNarrowViewMode"
    },
    "Awp0PasteTemplateUsersAssignmentCommandVisibility": {
      "expression": "!conditions.isProfileExistAndReviewersSectionSelectedPAL && commandContext.selectedUsers.length> 0 && conditions.isPriviledgeToModify && conditions.isInPALEditMode"
    },
    "Awp0PastePALProfileUsersAssignmentCommandVisible": {
      "expression": "conditions.Awp0PastePALProfileUsersAssignmentCommandVisibility && !conditions.isTaskAssignmentNarrowViewMode"
    },
    "Awp0PastePALProfileUsersAssignmentCommandVisibility": {
      "expression": "commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1 && conditions.isProfileExistAndReviewersSectionSelectedPAL && commandContext.selectedUsers.length> 0 && conditions.isPriviledgeToModify && conditions.isInPALEditMode"
    },
    "isProfileCommandVisible": {
      "expression": "commandContext.context.sidenavMode === 'mobile' &&  (commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1 && commandContext.vmo.props.number_of_signoffs.dbValues[0] > 0) && commandContext.context.isPriviledgeToModify && conditions.isInPALEditMode"
    },
    "isRemoveTemplateAssignmentCommandVisible": {
      "expression": "(commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) <= -1) && commandContext.isPriviledgeToModify && conditions.isInPALEditMode"
    },
    "isAddTemplateUserAssignmentCommandVisible": {
      "expression": "conditions.isTemplateAssignmentNarrowViewMode && ((commandContext.selectionModelMode === 'multiple' || ( commandContext.modelObjects && commandContext.modelObjects.length <= 0)) && !conditions.isProfileExistAndReviewersSectionSelectedPAL) && conditions.isPriviledgeToModify && conditions.isInPALEditMode"
    },
    "isProfileExistAndReviewersSectionSelectedPAL": {
      "expression": "commandContext.reviewProfiles && commandContext.propName === 'reviewers'"
    },
    "isTemplateAssignmentEditCommandVisibility": {
      "expression": "conditions.isPALObjectSelected && conditions.isInPALEditMode"
    },
    "isTemplateAssignmentStartEditCommandVisibility": {
      "expression": "conditions.isPALObjectSelected && ctx.workflowPalData && !ctx.workflowPalData.isInEditMode && ctx.workflowPalData.isPriviledgeToModify && (conditions.isSummaryView || conditions.isNoneView || conditions.isTableSummaryView )"
    },
    "isPALObjectSelected": {
      "expression": "conditions.isPALObjectSelectedAssignmentListLocation || conditions.isPALObjectSelectedShowObjectLocation"
    },
    "isPALObjectSelectedAssignmentListLocation": {
      "expression": "((commandContext.provider.viewBase === 'processAssignments' && !commandContext.openedObject) && ( (commandContext.selectionData.pselected && commandContext.selectionData.pselected.modelType.typeHierarchyArray.indexOf( 'EPMAssignmentList' ) > -1) || ( !commandContext.selectionData.pselected && commandContext.selectionData.selected && commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf( 'EPMAssignmentList' ) > -1)))"
    },
    "isPALObjectSelectedShowObjectLocation": {
      "expression": "commandContext.openedObject && commandContext.openedObject.modelType.typeHierarchyArray.indexOf( 'EPMAssignmentList' ) > -1"
    },
    "isCreateAssignmentListCommandVisibility": {
      "expression": "( !commandContext.searchState.pwaSelection || commandContext.searchState.pwaSelection.length <= 0 ) && commandContext.provider.viewBase === 'processAssignments'"
    },
    "isPriviledgeToModify": {
      "expression": "commandContext.isPriviledgeToModify"
    },
    "isPalMgmtTCServerVersion122OrLater": {
      "expression": "(ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion >= 2 ) )"
    },
    "removePALCommandVisibility": {
      "expression": "conditions.isPALObjectSelected && ctx.visibleServerCommands.Awp0DeletePAL"
    },
    "isPriviledgeToDelete": {
      "expression": "ctx.visibleServerCommands.Awp0DeletePAL"
    },
    "isInPALEditMode": {
      "expression": "ctx.workflowPalData && ctx.workflowPalData.isInEditMode"
    },
    "isPALContextCondition": {
      "expression": "conditions.isPALObjectSelected"
    }
  },
  "i18n": {
    "createWorkflow": [
      "InboxMessages",
      "WorkflowCommandPanelsMessages"
    ],
    "promote": [
      "InboxMessages"
    ],
    "outOfOfficeCommandTitle": [
      "InboxMessages"
    ],
    "openInboxLocationCommand": [
      "InboxMessages"
    ],
    "inboxFiltersCommandTitle": [
      "InboxMessages",
      "InboxMessages"
    ],
    "surrogateAdd": [
      "InboxMessages"
    ],
    "removeCommandTitle": [
      "InboxMessages",
      "InboxMessages",
      "InboxMessages",
      "InboxMessages"
    ],
    "addSurrogateTitle": [
      "InboxMessages"
    ],
    "reassign": [
      "InboxMessages"
    ],
    "releaseCommand": [
      "InboxMessages"
    ],
    "copySuccessful": [
      "InboxMessages"
    ],
    "copyMultipleSuccessful": [
      "ZeroCompileCommandMessages"
    ],
    "standInCommand": [
      "InboxMessages"
    ],
    "removeSurrogateCommand": [
      "InboxMessages"
    ],
    "performTask": [
      "InboxMessages"
    ],
    "claimTask": [
      "InboxMessages"
    ],
    "taskCompletedInBackgroundMsg": [
      "InboxMessages"
    ],
    "taskCannotCompletedErrorMsg": [
      "InboxMessages"
    ],
    "abort": [
      "InboxMessages"
    ],
    "inboxTitle": [
      "InboxMessages"
    ],
    "demote": [
      "InboxMessages"
    ],
    "suspend": [
      "InboxMessages"
    ],
    "resume": [
      "InboxMessages"
    ],
    "awp0_sectionCommands": [
      "InboxMessages"
    ],
    "awp0_addSurrogateSectionCommands": [
      "InboxMessages"
    ],
    "aw_taskProfileCellCommand": [
      "InboxMessages"
    ],
    "aw_taskProfileSignoffCommand": [
      "InboxMessages"
    ],
    "aw_taskAdhocSignoffCommand": [
      "InboxMessages"
    ],
    "aw_ackTaskAdhocSignoffCommand": [
      "InboxMessages"
    ],
    "aw_notifyTaskAdhocSignoffCommand": [
      "InboxMessages"
    ],
    "Awp0PromoteTaskDesc": [
      "InboxMessages"
    ],
    "Awp0OutOfOfficeDesc": [
      "InboxMessages"
    ],
    "Awp0OpenInboxLocationDesc": [
      "InboxMessages"
    ],
    "Awp0InboxFiltersDesc": [
      "InboxMessages"
    ],
    "Awp0SurrogateAddCmdDesc": [
      "InboxMessages"
    ],
    "Awp0AddReviewProfileSignoffCellCommandDesc": [
      "InboxMessages"
    ],
    "Awp0AddReviewAdhocSignoffCommandDesc": [
      "InboxMessages"
    ],
    "Awp0RemoveReviewAdhocSignoffCommandDesc": [
      "InboxMessages"
    ],
    "Awp0AddSurrogateDesc": [
      "InboxMessages"
    ],
    "Awp0AddResourcePoolDesc": [
      "InboxMessages"
    ],
    "Awp0RemoveResourcePoolDesc": [
      "InboxMessages"
    ],
    "Awp0ReassignTaskDesc": [
      "InboxMessages"
    ],
    "Awp0ReleaseDesc": [
      "InboxMessages"
    ],
    "Awp0StandInDesc": [
      "InboxMessages"
    ],
    "Awp0RemoveSurrogateDesc": [
      "InboxMessages"
    ],
    "Awp0PerformTaskPanelDesc": [
      "InboxMessages"
    ],
    "Awp0ClaimTaskDesc": [
      "InboxMessages"
    ],
    "Awp0AbortTaskDesc": [
      "InboxMessages"
    ],
    "Awp0GoInboxDesc": [
      "InboxMessages"
    ],
    "Awp0GoInboxWithoutBubbleDesc": [
      "InboxMessages"
    ],
    "Awp0AddReviewerDesc": [
      "InboxMessages"
    ],
    "Awp0DemoteTaskDesc": [
      "InboxMessages"
    ],
    "Awp0SuspendTaskDesc": [
      "InboxMessages"
    ],
    "Awp0ResumeTaskDesc": [
      "InboxMessages"
    ],
    "Awp0AddAcknowledgeAdhocSignoffCommandDesc": [
      "InboxMessages"
    ],
    "singleWorkflowDeleteConfirmationMessage": [
      "InboxMessages"
    ],
    "delete": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "cancel": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "deleteSingleFailureMessage": [
      "ZeroCompileCommandMessages"
    ],
    "singleDeleteConfirmationMessage": [
      "ZeroCompileCommandMessages"
    ],
    "deleteWorkflow": [
      "InboxMessages"
    ],
    "Awp0DeleteWorkflowDesc": [
      "InboxMessages"
    ],
    "multiWorkflowDeleteConfirmationMessage": [
      "InboxMessages"
    ],
    "Awp0ShowAddObjectDesc": [
      "ZeroCompileCommandMessages"
    ],
    "replaceMultipleParticipantsCommandTitle": [
      "WorkflowCommandPanelsMessages"
    ],
    "assignFrom": [
      "WorkflowCommandPanelsMessages"
    ],
    "assignTo": [
      "WorkflowCommandPanelsMessages"
    ],
    "backTo": [
      "WorkflowCommandPanelsMessages"
    ],
    "showChildren": [
      "WorkflowCommandPanelsMessages",
      "WorkflowCommandPanelsMessages"
    ],
    "hideChildren": [
      "WorkflowCommandPanelsMessages",
      "WorkflowCommandPanelsMessages"
    ],
    "showSubProcess": [
      "WorkflowCommandPanelsMessages"
    ],
    "hideSubProcess": [
      "WorkflowCommandPanelsMessages"
    ],
    "Workflow_Title": [
      "WorkflowCommandPanelsMessages"
    ],
    "someSubmittableObjects": [
      "WorkflowCommandPanelsMessages"
    ],
    "checkedOutError": [
      "WorkflowCommandPanelsMessages"
    ],
    "replicaObject": [
      "WorkflowCommandPanelsMessages"
    ],
    "Proceed": [
      "WorkflowCommandPanelsMessages"
    ],
    "CancelText": [
      "WorkflowCommandPanelsMessages"
    ],
    "objNotItemRevision": [
      "WorkflowCommandPanelsMessages"
    ],
    "someReassignable": [
      "WorkflowCommandPanelsMessages"
    ],
    "oneReassignable": [
      "WorkflowCommandPanelsMessages"
    ],
    "oneNonReassignable": [
      "WorkflowCommandPanelsMessages"
    ],
    "allowableParticipantErrorMessages": [
      "WorkflowCommandPanelsMessages"
    ],
    "removeParticipantErrorMessages": [
      "WorkflowCommandPanelsMessages"
    ],
    "ParticipantNotAllowMultipleUserErrorMessages": [
      "WorkflowCommandPanelsMessages"
    ],
    "RemoveParticipant": [
      "WorkflowCommandPanelsMessages"
    ],
    "objNotItemRevision1": [
      "WorkflowCommandPanelsMessages"
    ],
    "Add_Title": [
      "WorkflowCommandPanelsMessages",
      "WorkflowCommandPanelsMessages"
    ],
    "addReviewerLabelText": [
      "InboxMessages",
      "InboxMessages"
    ],
    "required": [
      "InboxMessages"
    ],
    "assignee": [
      "WorkflowCommandPanelsMessages"
    ],
    "saveEdit": [
      "WorkflowCommandPanelsMessages",
      "WorkflowCommandPanelsMessages",
      "WorkflowCommandPanelsMessages"
    ],
    "cancelEdit": [
      "WorkflowCommandPanelsMessages",
      "WorkflowCommandPanelsMessages",
      "WorkflowCommandPanelsMessages"
    ],
    "aw_profileCellCommand": [
      "WorkflowCommandPanelsMessages"
    ],
    "aw_tasksAferSubmitProfileCellCommand": [
      "WorkflowCommandPanelsMessages"
    ],
    "awp0_fromSectionCommands": [
      "WorkflowCommandPanelsMessages"
    ],
    "awp0_toSectionCommands": [
      "WorkflowCommandPanelsMessages"
    ],
    "awp0_addParticipantEPMJobSectionCommands": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0AddTaskAssignmentCmdDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "awp0_addUsersOnPanelAnchor": [
      "WorkflowCommandPanelsMessages"
    ],
    "newWorkflowProcess.taskAssigneeSection": [
      "WorkflowCommandPanelsMessages"
    ],
    "aw_workflowViewer": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0EditCommands_Right": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0StartEditTitle": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "topToBottomLayout": [
      "GraphMessages"
    ],
    "rightToLeftLayout": [
      "GraphMessages"
    ],
    "leftToRightLayout": [
      "GraphMessages"
    ],
    "topToBottomLayoutDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "rightToLeftLayoutDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "leftToRightLayoutDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "fixedLayout": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0ReplaceMultipleParticipantsDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0FromSectionAddCmdDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0ToSectionAddCmdDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0RemoveParticipantDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0RemoveProcessAssignmentCmdDesc": [
      "InboxMessages",
      "InboxMessages"
    ],
    "Awp0RemoveTaskAssignmentCmdDesc": [
      "InboxMessages"
    ],
    "Awp0AddUsersAssignmentCmdDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0ProfileSignoffCellCommandDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0SaveAssignmentDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0CancelAssignmentDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0StartEditAssignmentDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0NewWorkflowProcessDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0AddParticipantDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Replace_Title": [
      "WorkflowCommandPanelsMessages",
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0ReplaceParticipantDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0WorkflowFixedLayoutDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "createWorkflowSubProcess": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0NewWorkflowSubProcessDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "addProcessTargets": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0AddWorkflowProcessTargetDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0RemoveWorkflowProcessTargetDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0RemoveTaskAssignmentDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0ReplaceTaskAssignmentDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0AddTaskParticipantAssignmentCmdDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0RemoveTaskParticipantAssignmentCmdDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "closeText": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CloseCommandPanelDesc": [
      "ZeroCompileCommandMessages"
    ],
    "assignCmdTitle": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0PasteUserAssignmentCmdDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "assignTask": [
      "WorkflowCommandPanelsMessages"
    ],
    "clearSelections": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0DeselectAllDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Am0ManageACLTitle": [
      "AccessmgmtConstants"
    ],
    "Am0ManageACLDesc": [
      "AccessmgmtConstants"
    ],
    "newWorkflowProcessTemplate": [
      "WorkflowDesignerMessages"
    ],
    "deletePALConfirmationMessage": [
      "WorkflowPalMgmtMessages",
      "WorkflowPalMgmtMessages"
    ],
    "import": [
      "WorkflowDesignerMessages",
      "WorkflowPalMgmtMessages"
    ],
    "export": [
      "WorkflowDesignerMessages",
      "WorkflowPalMgmtMessages"
    ],
    "convertToParentCmdTitle": [
      "WorkflowDesignerMessages"
    ],
    "gridSetting": [
      "WorkflowDesignerMessages"
    ],
    "processTemplateOfflineConfirmation": [
      "WorkflowDesignerMessages"
    ],
    "onlineOption": [
      "WorkflowDesignerMessages"
    ],
    "offlineOption": [
      "WorkflowDesignerMessages"
    ],
    "showTaskInfo": [
      "WorkflowDesignerMessages"
    ],
    "save": [
      "TCUICommandPanelsMessages"
    ],
    "Awp0NameValueRemoveTitle": [
      "ZeroCompileCommandMessages"
    ],
    "addCommandTitle": [
      "InboxMessages"
    ],
    "Awp0ObjectInfoTitle": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0StartEditTableTitle": [
      "ZeroCompileCommandMessages"
    ],
    "addArguments": [
      "WorkflowDesignerMessages"
    ],
    "Awp0CopyTitle": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CutTitle": [
      "ZeroCompileCommandMessages"
    ],
    "handlerCutDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0PasteTitle": [
      "ZeroCompileCommandMessages"
    ],
    "exportMoveUpCommandTitle": [
      "ZeroCompileCommandMessages"
    ],
    "exportMoveDownCommandTitle": [
      "ZeroCompileCommandMessages"
    ],
    "assign_action": [
      "WorkflowDesignerMessages"
    ],
    "handlerMoveupDesc": [
      "ZeroCompileCommandMessages"
    ],
    "handlerMoveDownDesc": [
      "ZeroCompileCommandMessages"
    ],
    "start_action": [
      "WorkflowDesignerMessages"
    ],
    "perform_action": [
      "WorkflowDesignerMessages"
    ],
    "complete_action": [
      "WorkflowDesignerMessages"
    ],
    "skip_action": [
      "WorkflowDesignerMessages"
    ],
    "suspend_action": [
      "WorkflowDesignerMessages"
    ],
    "resume_action": [
      "WorkflowDesignerMessages"
    ],
    "abort_action": [
      "WorkflowDesignerMessages"
    ],
    "undo_action": [
      "WorkflowDesignerMessages"
    ],
    "classificationCopySuccess": [
      "ClassificationPanelMessages"
    ],
    "pasteHandlerDesc": [
      "ZeroCompileCommandMessages"
    ],
    "endTemplateEdit": [
      "WorkflowDesignerMessages"
    ],
    "taskPalette": [
      "WorkflowDesignerMessages"
    ],
    "saveTemplatePositionConfirmation": [
      "WorkflowDesignerMessages"
    ],
    "saveGraphPosition": [
      "WorkflowDesignerMessages"
    ],
    "showFixedLayout": [
      "WorkflowDesignerMessages"
    ],
    "showAutoLayout": [
      "WorkflowDesignerMessages"
    ],
    "yes": [
      "WorkflowDesignerMessages"
    ],
    "no": [
      "WorkflowDesignerMessages"
    ],
    "applyTemplateToProcessesConfirmation": [
      "WorkflowDesignerMessages"
    ],
    "applyTemplateToProcessSuccessfulMsg": [
      "WorkflowDesignerMessages"
    ],
    "noProcessFoundToApplyTemplateChanges": [
      "WorkflowDesignerMessages"
    ],
    "helpTitle": [
      "ZeroCompileCommandBaseMessages"
    ],
    "helpDesc": [
      "ZeroCompileCommandBaseMessages"
    ],
    "applyTemplateToProcessPartialSuccessfulMsg": [
      "WorkflowDesignerMessages"
    ],
    "applyTemplateToProcessesForegroundConfirmation": [
      "WorkflowDesignerMessages"
    ],
    "Awp0NewWorkflowProcessTemplateDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0RemoveProcessTemplateDesc": [
      "InboxMessages"
    ],
    "Awp0ImportWorkflowTemplateDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0ExportWorkflowTemplateDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0ToggleTemplateChildrenDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0WorkflowGraphGridSettingsDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0TemplateFiltersDesc": [
      "InboxMessages"
    ],
    "Awp0TemplateStartEditDesc": [
      "InboxMessages"
    ],
    "Awp0TemplateSaveEditDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0ToggleShowTaskRelatedInfoDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0TemplateConvertToParentDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0AddHandlerArgumentPanelDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0TemplateAddNotificationHandlerDesc": [
      "InboxMessages"
    ],
    "Awp0TemplateShowNotificationHandlerInfoDesc1": [
      "WorkflowDesignerMessages"
    ],
    "Awp0TemplateRemoveNotificationHandlerDesc1": [
      "WorkflowDesignerMessages"
    ],
    "Awp0TemplateAddArgumentDesc": [
      "InboxMessages"
    ],
    "Awp0TemplateRemoveArgumentDesc": [
      "InboxMessages"
    ],
    "handlerCopyDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0RemoveHandlerArgumentPanelDesc": [
      "InboxMessages"
    ],
    "Awp0StartArgumentEditDesc": [
      "InboxMessages"
    ],
    "Awp0TemplateEndEditDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0SaveGraphPositionsDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0ShowFixedLayoutDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0ShowAutoLayoutDesc": [
      "WorkflowDesignerMessages"
    ],
    "editArguments": [
      "WorkflowDesignerMessages"
    ],
    "addTitle": [
      "WorkflowDesignerMessages"
    ],
    "Awp0TemplateEditNotificationHandlerInfoDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0TemplateAddAssignmentHandlerDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0TemplateRemoveAssignmentHandlerDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0TemplateShowAssignmentHandlerInfoDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0TemplateEditAssignmentHandlerInfoDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0RemoveHandlerDesc": [
      "WorkflowDesignerMessages"
    ],
    "RESPONSIBLE_PARTY": [
      "WorkflowDesignerMessages"
    ],
    "Assigner": [
      "WorkflowCommandPanelsMessages"
    ],
    "Acknowledgers": [
      "WorkflowCommandPanelsMessages"
    ],
    "Notifyees": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0TemplateAssignmentAssigneeDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0TemplateAssignmentAssignerDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0TemplateAssignmentReviewersDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0TemplateAssignmentAcknowledgersDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0TemplateAssignmentNotifyeesDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0AddAssignmentUserDesc": [
      "WorkflowDesignerMessages"
    ],
    "Awp0TemplateReplaceProfileDesc": [
      "WorkflowDesignerMessages"
    ],
    "moveUp": [
      "WorkflowDesignerMessages"
    ],
    "moveDown": [
      "WorkflowDesignerMessages"
    ],
    "createProcessAssignmentList": [
      "WorkflowPalMgmtMessages"
    ],
    "removePAL": [
      "WorkflowPalMgmtMessages"
    ],
    "aw_templateProfileCellCommand": [
      "WorkflowPalMgmtMessages"
    ],
    "awp0_templateAssignmentPanelAnchor": [
      "WorkflowPalMgmtMessages"
    ],
    "aw_templateAssignmentRight": [
      "WorkflowPalMgmtMessages"
    ],
    "Awp0TemplateAssignmentProfileCellCommandDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0AddTemplateUserAssignmentCmdDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0StartEditTemplateAssignmentDesc": [
      "WorkflowPalMgmtMessages"
    ],
    "Awp0SaveTemplateAssignmentDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0CancelTemplateAssignmentDesc": [
      "WorkflowCommandPanelsMessages"
    ],
    "Awp0CreateProcessAssignmentListDesc": [
      "WorkflowPalMgmtMessages"
    ],
    "Awp0RemovePALDesc": [
      "WorkflowPalMgmtMessages"
    ],
    "importPALDesc": [
      "WorkflowPalMgmtMessages"
    ],
    "exportPALDesc": [
      "WorkflowPalMgmtMessages"
    ]
  }
}
