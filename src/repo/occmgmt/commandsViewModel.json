{
  "commands": {
    "Awb0AddGroup": {
      "iconId": "cmdAdd",
      "title": "{{i18n.addElementBtn}}",
      "isRibbon": true,
      "description": "{{i18n.Awb0AddGroupDescription}}"
    },
    "Awb0DebugGroup": {
      "iconId": "cmdExpandBelow",
      "title": "{{i18n.debugMenu}}",
      "isRibbon": true,
      "description": "{{i18n.Awb0DebugGrpDesc}}"
    },
    "Awb0RestructureGroup": {
      "iconId": "cmdRestructureGroup",
      "title": "{{i18n.restructure}}",
      "isRibbon": true,
      "description": "{{i18n.Awb0RestructureGrpDesc}}"
    },
    "Awb0Separate": {
      "title": "{{i18n.separateElementToDistinctElements}}",
      "description": "{{i18n.Awb0SeparateDesc}}"
    },
    "Awb0Pack": {
      "isGroup": false,
      "title": "{{i18n.acePackElement}}",
      "description": "{{i18n.Awb0PackDesc}}"
    },
    "Awb0PackCtxMenu": {
      "isGroup": false,
      "title": "{{i18n.acePackElement}}",
      "description": "{{i18n.Awb0PackDesc}}"
    },
    "Awb0Unpack": {
      "isGroup": false,
      "title": "{{i18n.aceUnpackElement}}",
      "description": "{{i18n.Awb0UnpackDesc}}"
    },
    "Awb0UnpackCtxMenu": {
      "isGroup": false,
      "title": "{{i18n.aceUnpackElement}}",
      "description": "{{i18n.Awb0UnpackDesc}}"
    },
    "Awb0PackAll": {
      "isGroup": false,
      "title": "{{i18n.acePackAllElements}}",
      "description": "{{i18n.Awb0PackAllDesc}}"
    },
    "Awb0UnpackAll": {
      "isGroup": false,
      "title": "{{i18n.aceUnpackAllElements}}",
      "description": "{{i18n.Awb0UnpackAllDesc}}"
    },
    "Awb0SelectAllCommand": {
      "iconId": "cmdCheckmark",
      "isGroup": false,
      "title": "{{i18n.selectAll}}",
      "selected": {
        "iconId": "cmdCheckmark",
        "title": "{{i18n.clearAll}}"
      },
      "description": "{{i18n.Awb0SelectAllCommandDesc}}"
    },
    "Awb0GetLiveSearchResultCommand": {
      "iconId": "cmdSearchLatestData",
      "isGroup": false,
      "title": "{{i18n.liveSearchResultCommandTitle}}",
      "description": "{{i18n.Awb0GetLiveSearchResultCommandDesc}}"
    },
    "Awb0MoveUpCommand": {
      "iconId": "cmdUp",
      "isGroup": false,
      "title": "{{i18n.moveUpTitle}}",
      "description": "{{i18n.Awb0MoveUpCommand}}"
    },
    "Awb0MoveDownCommand": {
      "iconId": "cmdDown",
      "isGroup": false,
      "title": "{{i18n.moveDownTitle}}",
      "description": "{{i18n.Awb0MoveDownCommandDesc}}"
    },
    "Awb0AddChildProductToSWC": {
      "title": "{{i18n.occMgmtTitle}}",
      "description": "{{i18n.Awb0AddChildElementDeclarativeDesc}}"
    },
    "Awb0AddElementGroupDeclarative": {
      "iconId": "cmdAdd",
      "title": "{{i18n.addElementBtn}}",
      "isGroup": true
    },
    "Awb0AddChildElementDeclarative": {
      "title": "{{i18n.addChild}}",
      "description": "{{i18n.Awb0AddChildElementDeclarativeDesc}}"
    },
    "Awb0AddSiblingElementDeclarative": {
      "title": "{{i18n.addSibling}}",
      "description": "{{i18n.Awb0AddSiblingElementDeclarativeDesc}}"
    },
    "Awb0AddSiblingProductToSWC": {
      "title": "{{i18n.occMgmtTitle}}",
      "description": "{{i18n.Awb0AddSiblingElementDeclarativeDesc}}"
    },
    "Awb0RemoveElement": {
      "iconId": "cmdRemove",
      "title": "{{i18n.Awb0RemoveForPtn}}",
      "description": "{{i18n.Awb0RemoveElementDescForPtn}}"
    },
    "Awb0RemoveLevel": {
      "iconId": "cmdRemoveLevel",
      "title": "{{i18n.aceRemoveLevel}}",
      "description": "{{i18n.Awb0RemoveLevelDesc}}"
    },
    "Awb0RemoveElementCtxMenu": {
      "iconId": "cmdRemove",
      "title": "{{i18n.aceRemove}}",
      "description": "{{i18n.Awb0RemoveElementDesc}}"
    },
    "Awb0RemoveLevelCtxMenu": {
      "iconId": "cmdRemoveLevel",
      "title": "{{i18n.aceRemoveLevel}}",
      "description": "{{i18n.Awb0RemoveLevelDesc}}"
    },
    "Awb0ReplaceElementDeclarative": {
      "iconId": "cmdReplace",
      "title": "{{i18n.replaceElementBtn}}",
      "description": "{{i18n.Awb0ReplaceElementDeclarativeDesc}}"
    },
    "Awb0ReplaceElementCtxMenu": {
      "iconId": "cmdReplace",
      "title": "{{i18n.replaceElementBtn}}",
      "description": "{{i18n.Awb0ReplaceElementDeclarativeDesc}}"
    },
    "Awb0ReplaceGroupCommand": {
      "iconId": "cmdReplace",
      "title": "{{i18n.replaceElementBtn}}",
      "isGroup": true
    },
    "Awb0SaveAsAndReplaceElement": {
      "iconId": "cmdReplace",
      "title": "{{i18n.saveAsAndReplace}}",
      "description": "{{i18n.Awb0SaveAsAndReplaceElementDesc}}"
    },
    "AceEffectivityGroup": {
      "iconId": "cmdOpenSharedEffectivity",
      "title": "{{i18n.effectivity}}",
      "isGroup": true
    },
    "Awb0ReleaseStatusEffectivity": {
      "iconId": "cmdReleaseEffectivity",
      "title": "{{i18n.effectivityTitle}}",
      "description": "{{i18n.Awb0ReleaseStatusEffectivityDesc}}"
    },
    "Awp0ReleaseStatusEffectivity": {
      "iconId": "cmdOpenSharedEffectivity",
      "title": "{{i18n.effectivityTitle}}",
      "description": "{{i18n.Awp0ReleaseStatusEffectivityDesc}}"
    },
    "Awb0OccurrenceEffectivity": {
      "iconId": "cmdOpenSharedEffectivity",
      "title": "{{i18n.elementEffectivityTitle}}",
      "description": "{{i18n.Awb0OccurrenceEffectivityDesc}}"
    },
    "Awb0GroupEffectivity": {
      "iconId": "cmdOpenSharedEffectivity",
      "title": "{{i18n.groupEffectivityTitle}}",
      "description": "{{i18n.Awb0GroupEffectivityDesc}}"
    },
    "Awb0AddGroupEffectivityCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addGroupEffectivity}}",
      "description": "{{i18n.Awb0AddGroupEffectivityCmdDesc}}"
    },
    "Awb0RemoveGroupEffectivityCmd": {
      "iconId": "cmdDelete",
      "isGroup": false,
      "title": "{{i18n.removeGroupEffectivityTooltip}}",
      "description": "{{i18n.Awb0RemoveGroupEffectivityCmdDesc}}"
    },
    "Awb0StructureFilterCommand": {
      "iconId": "cmdfilter",
      "title": "{{i18n.filter}}",
      "template": {
        "text": "{{commandContext.occContext.productContextInfo.props.awb0FilterCount.dbValues[0]}}",
        "visibleWhen": {
          "condition": "conditions.Awb0StructureFilterCommandTemplateCondition"
        }
      },
      "description": "{{i18n.Awb0StructureFilterCommandDesc}}"
    },
    "Awb0SaveWorkingContext": {
      "iconId": "cmdSaveWorkingContext",
      "title": "{{i18n.workingContextTitle}}",
      "description": "{{i18n.Awb0SaveWorkingContextDesc}}"
    },
    "Awb0SaveAsWorkingContext": {
      "iconId": "cmdSaveWorkingContext",
      "title": "{{i18n.workingContextTitle}}",
      "description": "{{i18n.Awb0SaveAsWorkingContextDesc}}"
    },
    "Awb0UpdateWorkingContext": {
      "iconId": "cmdSaveWorkingContext",
      "title": "{{i18n.saveWorkingContextTitle}}",
      "description": "{{i18n.Awb0UpdateWorkingContextDesc}}"
    },
    "Awb0SaveWorkingContextGroup": {
      "iconId": "cmdSaveWorkingContext",
      "title": "{{i18n.saveWorkingContextTitle}}",
      "isGroup": true
    },
    "Awb0ConfigurationFilter": {
      "iconId": "cmdConfiguration",
      "title": "{{i18n.occmgmtConfigurationFilterTitle}}",
      "description": "{{i18n.Awb0ConfigurationFilterDesc}}"
    },
    "Awb0ResetStructure": {
      "iconId": "cmdReset",
      "title": "{{i18n.resetCmdTitle}}",
      "description": "{{i18n.Awb0ResetStructureDesc}}"
    },
    "Awb0AceUnifiedInContextSearch": {
      "iconId": "cmdSearch",
      "title": "{{i18n.find}}",
      "description": "{{i18n.Awb0AceUnifiedInContextSearchDesc}}"
    },
    "Awb0ShowChildOccurrences": {
      "iconId": "miscCollapse",
      "title": "{{i18n.occurrenceManagementShowChildOccurrencesTitle}}",
      "description": "{{i18n.Awb0ShowChildOccurrencesDesc}}"
    },
    "Awb0ShowChildOccurrencesFromBreadcrumb": {
      "iconId": "miscCollapse",
      "title": "{{i18n.occurrenceManagementShowChildOccurrencesTitle}}",
      "description": "{{i18n.Awb0ShowChildOccurrencesDesc}}"
    },
    "Awb0AddEffectivityForRelnStatusCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addEffectivities}}",
      "description": "{{i18n.Awb0AddEffectivityForRelnStatusCmdDesc}}"
    },
    "Awb0RemoveEffectivityForRelnStatusCmd": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.aceRemove}}",
      "description": "{{i18n.Awb0RemoveEffectivityForRelnStatusCmdDesc}}"
    },
    "Awb0AddEffectivitiesCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addEffectivities}}",
      "description": "{{i18n.Awb0AddEffectivitiesCmdDesc}}"
    },
    "Awb0ClearAllEffectivitiesCmd": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.clearEff}}",
      "description": "{{i18n.Awb0ClearEffCommandDesc}}"
    },
    "Awb0RemoveEffectivitiesCmd": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.aceRemove}}",
      "description": "{{i18n.Awb0RemoveEffectivitiesCmdDesc}}"
    },
    "Awb0AddNewVariantRuleCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addElementBtn}}",
      "description": "{{i18n.Awb0AddNewVariantRuleCmdDesc}}"
    },
    "Awb0AddSubstitutes": {
      "iconId": "cmdAdd",
      "title": "{{i18n.addSubstitute}}",
      "description": "{{i18n.Awb0AddSubstitutesDesc}}"
    },
    "Awb0AddSubstitutesPWA": {
      "iconId": "cmdSubstitute",
      "title": "{{i18n.addSubstitutePWA}}",
      "description": "{{i18n.Awb0AddSubstitutesDesc}}"
    },
    "Awb0InsertParentElement": {
      "iconId": "cmdInsertLevel",
      "title": "{{i18n.insertLevel}}",
      "description": "{{i18n.Awb0InsertParentElementDesc}}"
    },
    "Awb0InsertParentElementCtxMenu": {
      "iconId": "cmdInsertLevel",
      "title": "{{i18n.insertLevel}}",
      "description": "{{i18n.Awb0InsertParentElementDesc}}"
    },
    "Awb0RemoveSubstitutes": {
      "iconId": "cmdRemove",
      "title": "{{i18n.cutSubstitute}}",
      "description": "{{i18n.Awb0RemoveSubstitutesDesc}}"
    },
    "Awb0UseSubstitute": {
      "iconId": "cmdReplace",
      "title": "{{i18n.useSubstitute}}",
      "description": "{{i18n.Awb0UseSubstituteDesc}}"
    },
    "Awb0ShowMarkup": {
      "iconId": "cmdNewMarkUp",
      "title": "{{i18n.markup}}",
      "isGroup": false,
      "selected": {
        "title": "{{i18n.markup}}"
      },
      "description": "{{i18n.Awb0ShowMarkupDesc}}"
    },
    "Awb0ShowUnconfiguredByOccEffectivity": {
      "title": "{{i18n.showExcluded}}",
      "isGroup": false,
      "selected": {
        "title": "{{i18n.showExcluded}}"
      },
      "description": "{{i18n.Awb0ShowUnconfiguredByOccEffectivityDesc}}"
    },
    "Awb0ShowUnconfiguredByVariants": {
      "title": "{{i18n.showExcludedByVariants}}",
      "isGroup": false,
      "selected": {
        "title": "{{i18n.showExcludedByVariants}}"
      },
      "description": "{{i18n.Awb0ShowUnconfiguredByVariantsDesc}}"
    },
    "Awb0ShowSuppressed": {
      "title": "{{i18n.showSuppressed}}",
      "isGroup": false,
      "selected": {
        "title": "{{i18n.showSuppressed}}"
      },
      "description": "{{i18n.Awb0ShowSuppressedDesc}}"
    },
    "Awb0Expand": {
      "iconId": "cmdExpandBelow",
      "title": "{{i18n.expand}}",
      "description": "{{i18n.Awb0ExpandGroupDesc}}",
      "isRibbon": true
    },
    "Awb0ExpandBelow": {
      "iconId": "cmdExpandBelow",
      "title": "{{i18n.expandBelow}}",
      "description": "{{i18n.Awb0ExpandBelowDesc}}"
    },
    "Awb0ExpandBelowFetchAll": {
      "iconId": "cmdExpandBelow",
      "title": "{{i18n.expandBelowFetchAll}}",
      "description": "{{i18n.Awb0ExpandBelowDesc}}"
    },
    "Awb0ExpandBelowDebug": {
      "title": "{{i18n.newExpandBelow}}",
      "isGroup": false,
      "selected": {
        "title": "{{i18n.newExpandBelow}}"
      },
      "description": "{{i18n.Awb0ExpandBelowDesc}}"
    },
    "Awb0ExpandOneDebug": {
      "title": "{{i18n.newExpandOne}}",
      "isGroup": false,
      "selected": {
        "title": "{{i18n.newExpandOne}}"
      },
      "description": "{{i18n.Awb0ExpandBelowDesc}}"
    },
    "Awb0ReconfigureDebug": {
      "title": "{{i18n.newReconfigure}}",
      "isGroup": false,
      "selected": {
        "title": "{{i18n.newReconfigure}}"
      },
      "description": "{{i18n.Awb0ReconfigureDesc}}"
    },
    "Awb0LoadTreePropsDebug": {
      "title": "{{i18n.loadTreeProps}}",
      "isGroup": false,
      "selected": {
        "title": "{{i18n.loadTreeProps}}"
      },
      "description": "{{i18n.Awb0LoadTreePropsDesc}}"
    },
    "Awb0LoadTreePropsTimerDebug": {
      "title": "{{i18n.loadTreePropsTimer}}",
      "isGroup": false,
      "selected": {
        "title": "{{i18n.loadTreePropsTimer}}"
      },
      "description": "{{i18n.Awb0LoadTreePropsDesc}}"
    },
    "Awb0StopExpandBelowDebug": {
      "title": "{{i18n.stopExpandBelow}}",
      "isGroup": false,
      "selected": {
        "title": "{{i18n.stopExpandBelow}}"
      },
      "description": "{{i18n.Awb0StopExpandBelowDesc}}"
    },
    "Awb0BackGroundSoaDebug": {
      "title": "{{i18n.backGroundSoa}}",
      "isGroup": false,
      "selected": {
        "title": "{{i18n.backGroundSoa}}"
      },
      "description": "{{i18n.Awb0BackGroundSoaDesc}}"
    },
    "Awb0ExpandBelowCtxMenu": {
      "iconId": "cmdExpandBelow",
      "title": "{{i18n.expandBelow}}",
      "description": "{{i18n.Awb0ExpandBelowDesc}}"
    },
    "Awb0CollapseBelow": {
      "iconId": "cmdCollapseBelow",
      "title": "{{i18n.collapseBelow}}",
      "description": "{{i18n.Awb0CollapseBelowDesc}}"
    },
    "Awb0CollapseBelowCtxMenu": {
      "iconId": "cmdCollapseBelow",
      "title": "{{i18n.collapseBelow}}",
      "description": "{{i18n.Awb0CollapseBelowDesc}}"
    },
    "Awb0CancelMarkupLevel": {
      "iconId": "cmdDelete",
      "title": "{{i18n.cancelMarkup}}",
      "description": "{{i18n.Awb0CancelMarkupLevelDesc}}"
    },
    "Awb0CancelMarkupElement": {
      "iconId": "cmdDelete",
      "title": "{{i18n.cancelMarkup}}",
      "description": "{{i18n.Awb0CancelMarkupLevelDesc}}"
    },
    "Awb0ApplyMarkup": {
      "iconId": "cmdApplyMarkup",
      "title": "{{i18n.applyMarkup}}",
      "description": "{{i18n.Awb0ApplyMarkupDesc}}"
    },
    "fakeCommandToForceServerVisibilityAwb0ViewElementEffectivity": {
      "iconId": "",
      "title": ""
    },
    "Awb0ViewGroup": {
      "iconId": "cmdShow",
      "isRibbon": true,
      "title": "{{i18n.Awb0ViewGroup}}",
      "description": "{{i18n.Awb0ViewGroupDesc}}"
    },
    "Awb0ConfigurationGroup": {
      "iconId": "cmdConfigure",
      "isRibbon": true,
      "title": "{{i18n.configure}}",
      "description": "{{i18n.Awb0ConfigurationGroupDesc}}"
    },
    "Awb0SetInContext": {
      "iconId": "cmdOverridden",
      "isGroup": false,
      "title": "{{i18n.aceSetInContext}}",
      "description": "{{i18n.Awb0SetInContextDesc}}"
    },
    "Awb0SetInContextCtxMenu": {
      "iconId": "cmdOverridden",
      "isGroup": false,
      "title": "{{i18n.aceSetInContext}}",
      "description": "{{i18n.Awb0SetInContextDesc}}"
    },
    "Awb0CBOSCmd": {
      "iconId": "cmdConfigureBasedOnSelection",
      "isGroup": false,
      "title": "{{i18n.configureBySelection}}",
      "description": "{{i18n.Awb0CBOSCmdDesc}}"
    },
    "Awb0ConfigByProximityCmd": {
      "isGroup": false,
      "title": "{{i18n.configureByProximity}}",
      "description": "{{i18n.configureByProximityTooltip}}"
    },
    "Awb0RemoveOverride": {
      "iconId": "cmdDelete",
      "title": "{{i18n.RemoveOverride}}",
      "description": "{{i18n.Awb0RemoveOverrideDesc}}"
    },
    "Awb0SaveVariantRule": {
      "iconId": "cmdSave",
      "isGroup": false,
      "title": "{{i18n.saveButtonText}}",
      "description": "{{i18n.Awb0SaveVariantRuleDesc}}"
    },
    "Awb0SaveAsVariantRule": {
      "iconId": "cmdSaveAs",
      "isGroup": false,
      "title": "{{i18n.saveAsButtonText}}"
    },
    "Awb0EditEffectivity": {
      "iconId": "cmdEdit",
      "title": "{{i18n.edit}}"
    },
    "Awb0ExpressionEffectivity": {
      "iconId": "cmdOpenSharedEffectivity",
      "isGroup": false,
      "title": "{{i18n.elementEffectivityTitle}}",
      "description": "{{i18n.Awb0OccurrenceEffectivityDesc}}"
    },
    "psEditEffectivityGroupCmd": {
      "iconId": "cmdEdit",
      "title": "{{i18n.edit}}"
    },
    "Awb0ShowDuplicate": {
      "iconId": "cmdDuplicate",
      "title": "{{i18n.occMgmtDuplicateTitle}}",
      "description": "{{i18n.occMgmtDuplicateCmdDesc}}"
    },
    "OccMgmtDuplicateRemove": {
      "iconId": "cmdRemove",
      "title": "{{i18n.occMgmtDuplicateRemove}}",
      "description": "{{i18n.occMgmtDuplicateRemoveDesc}}"
    },
    "OccMgmtDuplicateReplace": {
      "iconId": "cmdReplace",
      "title": "{{i18n.occMgmtDuplicateReplace}}",
      "description": "{{i18n.occMgmtDuplicateReplaceDesc}}"
    },
    "OccMgmtDuplicateClone": {
      "iconId": "cmdSaveAs",
      "title": "{{i18n.occMgmtDuplicateClone}}",
      "description": "{{i18n.occMgmtDuplicateCloneDesc}}"
    },
    "OccMgmtDuplicateCloneBelow": {
      "iconId": "cmdDuplicate",
      "title": "{{i18n.occMgmtDuplicateCloneBelow}}",
      "description": "{{i18n.occMgmtDuplicateCloneBelowDesc}}"
    },
    "OccMgmtDuplicateUndo": {
      "iconId": "cmdReset",
      "title": "{{i18n.OccMgmtDuplicateUndo}}",
      "description": "{{i18n.OccMgmtDuplicateUndoDesc}}"
    },
    "OccMgmtDuplicateSettingsCmd": {
      "iconId": "cmdSettings",
      "title": "{{i18n.OccMgmtDuplicateSettings}}",
      "description": "{{i18n.OccMgmtDuplicateSettingsDesc}}"
    },
    "Awb0AddRevision": {
      "iconId": "cmdAdd",
      "title": "{{i18n.addElementBtn}}",
      "description": "{{i18n.Awb0AddRevisionDesc}}"
    },
    "Awb0RemoveRevision": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeRevision}}",
      "description": "{{i18n.Awb0RemoveRevisionDesc}}"
    },
    "Awb0ImportFromExcel": {
      "iconId": "cmdImport",
      "isGroup": false,
      "title": "{{i18n.importTitle}}",
      "description": "{{i18n.Awb0ImportFromExcelDesc}}"
    },
    "Awb0ImportPreviewAceOverwriteContextMenu": {
      "title": "{{i18n.aceImportPreviewOverwriteContentMenu}}",
      "description": "{{i18n.Awb0AceImportPreviewOverwriteContextMenuDesc}}"
    },
    "Awb0AceImportPreviewReferenceContextMenu": {
      "title": "{{i18n.aceImportPreviewReferenceContentMenu}}",
      "description": "{{i18n.Awb0AceImportPreviewReferenceContextMenuDesc}}"
    },
    "Awb0AceImportPreviewReviseContextMenu": {
      "title": "{{i18n.aceImportPreviewReviseContentMenu}}",
      "description": "{{i18n.Awb0AceImportPreviewReviseContextMenuDesc}}"
    },
    "Awb0AddChildRow": {
      "iconId": "cmdAdd",
      "title": "{{i18n.addChildRow}}",
      "description": "{{i18n.Awb0AddChildElementDeclarativeDesc}}"
    },
    "Awb0AddSiblingRow": {
      "iconId": "cmdAdd",
      "title": "{{i18n.addSiblingRow}}",
      "description": "{{i18n.Awb0AddSiblingElementDeclarativeDesc}}"
    },
    "Awb0RemoveAllRows": {
      "iconId": "cmdRemove",
      "title": "{{i18n.cancelEditsTitle}}",
      "description": "{{i18n.Awp0CancelEditsPWADesc}}"
    },
    "Awb0SaveRow": {
      "iconId": "cmdSave",
      "title": "{{i18n.saveEditsTitle}}",
      "description": "{{i18n.Awb0AddChildElementDeclarativeDesc}}"
    },
    "Awb0AddRef": {
      "iconId": "cmdAdd",
      "title": "{{i18n.add}}",
      "description": "{{i18n.Awb0AddRevisionDesc}}"
    },
    "Awb0RemoveRow": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeInlineRow}}",
      "description": "{{i18n.Awp0CancelEditsPWADesc}}"
    },
    "awb0OpenInViewCommand": {
      "iconId": "cmdOpenInView",
      "title": "{{i18n.openInView}}",
      "description": "{{i18n.awb0OpenInViewCommandDesc}}"
    },
    "awb0SplitRootCmd": {
      "iconId": "cmdSplitView",
      "isGroup": false,
      "title": "{{i18n.awb0SplitToolTip}}",
      "description": "{{i18n.awb0SplitRootCmdDesc}}"
    },
    "Awb0SaveSession": {
      "iconId": "cmdSaveWorkingContext",
      "title": "{{i18n.SaveSessionCmd}}",
      "description": "{{i18n.saveSessionTooltip}}"
    },
    "Awb0CreateSessionCommand": {
      "iconId": "cmdContextSession",
      "title": "{{i18n.CreateSessionCmd}}",
      "description": "{{i18n.createSessionTooltip}}"
    },
    "awb0SaveAsSession": {
      "iconId": "cmdSaveAs",
      "title": "{{i18n.SaveAsSessionCmd}}",
      "description": "{{i18n.saveAsSessionTooltip}}"
    },
    "Awb0SessionGroup": {
      "iconId": "cmdContextSession",
      "isRibbon": true,
      "title": "{{i18n.Session}}",
      "description": "{{i18n.sessionCmdGroupTooltip}}"
    },
    "Awb0ReplaySession": {
      "iconId": "cmdSynchronize",
      "title": "{{i18n.replayTitle}}",
      "extendedTooltip": {
        "view": "Awb0ReplayExtendedTooltip"
      }
    },
    "Awb0ReplaySessionWithWorkset": {
      "iconId": "cmdSynchronize",
      "title": "{{i18n.replayTitle}}",
      "description": "{{i18n.replayWorksetTooltip}}"
    },
    "Awb0ResetSession": {
      "iconId": "cmdReset",
      "title": "{{i18n.ResetSessionCmd}}",
      "description": "{{i18n.resetSessionTooltip}}"
    },
    "Awb0CreateWorksetCommand": {
      "iconId": "cmdDiscoveryWorkset",
      "title": "{{i18n.CreateWorksetCmd}}",
      "description": "{{i18n.createWorksetTooltip}}"
    },
    "Awb0IncludeCtxMenu": {
      "title": "{{i18n.include}}",
      "description": "{{i18n.includeDesc}}"
    },
    "Awb0IncludeWithoutChildrenCtxMenu": {
      "title": "{{i18n.includeWithoutChildren}}",
      "description": "{{i18n.includeWithoutChildrenDesc}}"
    },
    "Awb0ExcludeCtxMenu": {
      "title": "{{i18n.exclude}}",
      "description": "{{i18n.excludeDesc}}"
    },
    "Awb0FilterSettings": {
      "iconId": "cmdSettings",
      "title": "{{i18n.settings}}",
      "description": "{{i18n.filterSettingsDesc}}"
    },
    "applyProductSnapshotCommand": {
      "iconId": "cmdApply",
      "title": "{{i18n.applyButtonTitle}}",
      "description": "{{i18n.applyProductSnapshotCommandDesc}}"
    },
    "Awb0SaveWorkset": {
      "iconId": "cmdSaveWorkingContext",
      "title": "{{i18n.SaveWorksetCmd}}",
      "description": "{{i18n.saveWorksetTooltip}}"
    },
    "Awb0ReplayWorkset": {
      "title": "{{i18n.replayTitle}}",
      "extendedTooltip": {
        "view": "Awb0ReplayWorksetExtendedTooltip"
      }
    },
    "Awb0ReplayAutoSaveWorkset": {
      "iconId": "cmdSynchronize",
      "title": "{{i18n.replayTitle}}",
      "description": "{{i18n.replayWorksetTooltip}}"
    },
    "Awb0ReplayStaleAutoSaveWorkset": {
      "iconId": "indicatorWarning",
      "title": "{{i18n.replayTitle}}",
      "description": "{{i18n.replayWorksetTooltip}}"
    },
    "Ac0ShowObjectCommand": {
      "iconId": "cmdOpen",
      "title": "{{i18n.showObjectCommandTitle}}",
      "description": "{{i18n.Awp0ShowObjectDesc}}"
    },
    "Awp0AlignDesign": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Awp0AlignDesignTooltip}}",
      "description": "{{i18n.Awp0AlignDesignDesc}}"
    },
    "Awp0UnAlignDesign": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.Awp0UnAlignDesignTooltip}}",
      "description": "{{i18n.Awp0UnAlignDesignDesc}}"
    },
    "Awp0AlignPart": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Awp0AlignTooltip}}",
      "description": "{{i18n.Awp0AlignPartDesc}}"
    },
    "Awp0UnAlignPart": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.Awp0UnAlignTooltip}}",
      "description": "{{i18n.Awp0UnAlignPartDesc}}"
    },
    "Awp0SetPrimaryDesign": {
      "iconId": "cmdSetPrimary",
      "isGroup": false,
      "title": "{{i18n.Awp0SetPrimaryDesignTooltip}}",
      "description": "{{i18n.Awp0SetPrimaryDesignDesc}}"
    },
    "Awb0EntCBALaunchAlignTask": {
      "iconId": "cmdValidate",
      "isGroup": false,
      "title": "{{i18n.Awb0EntCBALaunchAlignTaskToolTip}}",
      "description": "{{i18n.Awb0EntCBALaunchAlignTaskDesc}}"
    },
    "Awb0EntCBAAlignCommand": {
      "iconId": "cmdValidate",
      "isGroup": false,
      "title": "{{i18n.Awb0EntCBAAlignToolTip}}",
      "description": "{{i18n.Awb0EntCBAAlignDesc}}"
    },
    "Awb0EntCBAUnAlignCommand": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
      "description": "{{i18n.Awb0EntCBAUnAlignDesc}}"
    },
    "Awb0EntCBAAlignmentCheck": {
      "iconId": "cmdCheckAlignment",
      "isGroup": false,
      "title": "{{i18n.Awb0EntCBAAlignmentCheck}}",
      "description": "{{i18n.Awb0EntCBAAlignmentCheckDesc}}"
    },
    "Awb0EntCBAOpenGroup": {
      "iconId": "cmdOpen",
      "isRibbon": true,
      "title": "{{i18n.Awb0EntCBAOpenGroupTitle}}",
      "description": "{{i18n.Awb0EntCBAOpenGroupDesc}}"
    },
    "Awb0EntCBAOpenObject": {
      "iconId": "cmdOpen",
      "title": "{{i18n.Awb0EntCBAOpenObjectTitle}}",
      "description": "{{i18n.Awb0EntCBAOpenObjectDesc}}"
    },
    "Awb0EntCBAOpenInNewWindow": {
      "iconId": "cmdOpen",
      "title": "{{i18n.Awb0EntCBAOpenInNewWindowTitle}}",
      "description": "{{i18n.Awb0EntCBAOpenInNewWindowDesc}}"
    },
    "Awb0EntCBAOpenInNewTab": {
      "iconId": "cmdOpenInNewTab",
      "title": "{{i18n.Awb0EntCBAOpenInNewTabTitle}}",
      "description": "{{i18n.Awb0EntCBAOpenInNewTabDesc}}"
    },
    "Awb0EntCBAAlignGroup": {
      "iconId": "cmdValidate",
      "isRibbon": true,
      "title": "{{i18n.Awb0EntCBAAlignGroupTitle}}",
      "description": "{{i18n.Awb0EntCBAAlignGroupDesc}}"
    },
    "Awb0EntCBAOpenAlignmentView": {
      "iconId": "cmdOpen",
      "title": "{{i18n.Awb0EntCBAOpenAlignmentViewTitle}}",
      "description": "{{i18n.Awb0EntCBAOpenAlignmentViewDesc}}"
    },
    "Awb0EntCBADeselectAll": {
      "iconId": "cmdCheckmark",
      "title": "{{i18n.clearSelections}}",
      "description": "{{i18n.Awp0DeselectAllDesc}}"
    },
    "Awb0FindAligned": {
      "iconId": "cmdShowAlignment",
      "isGroup": false,
      "title": "{{i18n.Awb0FindAlignedTitle}}",
      "description": "{{i18n.Awb0FindAlignedDesc}}"
    },
    "RevisionRuleClauseUp": {
      "iconId": "cmdMoveUp",
      "isGroup": false,
      "title": "{{i18n.clauseUp}}",
      "description": "{{i18n.RevisionRuleClauseUpDesc}}"
    },
    "RevisionRuleClauseDown": {
      "iconId": "cmdMoveDown",
      "isGroup": false,
      "title": "{{i18n.clauseDown}}",
      "description": "{{i18n.RevisionRuleClauseDownDesc}}"
    },
    "RevisionRuleClauseAdd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.clauseAdd}}",
      "description": "{{i18n.RevisionRuleClauseAddDesc}}"
    },
    "RevisionRuleClauseDelete": {
      "iconId": "cmdDelete",
      "isGroup": false,
      "title": "{{i18n.clauseDelete}}",
      "description": "{{i18n.RevisionRuleClauseDeleteDesc}}"
    },
    "RevisionRuleAdminAdd": {
      "iconId": "cmdAdd",
      "title": "{{i18n.addRevisionRule}}"
    },
    "RevisionRuleAdminDelete": {
      "iconId": "cmdDelete",
      "title": "{{i18n.deleteRevisionRule}}"
    },
    "RevisionRuleAdmin": {
      "iconId": "cmdShowInfoPanel",
      "title": "{{i18n.RevisionRuleAdminTitle}}",
      "description": "{{i18n.RevisionRuleAdminDesc}}"
    },
    "ClausePropertyAdd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.add}}",
      "description": "{{i18n.ClausePropertyAddDesc}}"
    },
    "ClausePropertyRemove": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeProp}}",
      "description": "{{i18n.ClausePropertyRemoveDesc}}"
    },
    "ClausePropertyReplace": {
      "iconId": "cmdReplace",
      "isGroup": false,
      "title": "{{i18n.replace}}",
      "description": "{{i18n.ClausePropertyReplaceDesc}}"
    },
    "AddClauseProperty": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.add}}"
    },
    "RemoveClauseProperty": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeProp}}"
    },
    "ReplaceClauseProperty": {
      "iconId": "cmdReplace",
      "isGroup": false,
      "title": "{{i18n.replace}}"
    },
    "Awb0Unassigned": {
      "isGroup": false,
      "iconId": "cmdSearch",
      "title": "{{i18n.Unassigned}}",
      "description": "{{i18n.Awb0UnassignedDesc}}"
    },
    "Awb0MoveTo": {
      "isGroup": false,
      "iconId": "cmdPaste",
      "title": "{{i18n.MoveTo}}",
      "description": "{{i18n.MoveToDesc}}"
    },
    "Awb0MoveToContextMenu": {
      "iconId": "cmdPaste",
      "title": "{{i18n.MoveTo}}",
      "description": "{{i18n.MoveToDesc}}"
    },
    "Awb0Partition": {
      "isRibbon": true,
      "iconId": "typePartition",
      "title": "{{i18n.Partition}}",
      "description": "{{i18n.Awb0PartitionDesc}}"
    },
    "Awb0AddPartition": {
      "iconId": "cmdAdd",
      "title": "{{i18n.addElementBtn}}",
      "description": "{{i18n.addPartitionTooltip}}"
    },
    "Awb0DeletePartition": {
      "iconId": "cmdDelete",
      "title": "{{i18n.deletePtnBtn}}",
      "description": "{{i18n.deletePtnBtnTooltip}}"
    },
    "Fgf0CreatePartitionScheme": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.PartitionScheme}}",
      "description": "{{i18n.Fgf0CreatePartitionSchemeDesc}}"
    },
    "Awb0UnassignMem": {
      "iconId": "cmdRemove",
      "title": "{{i18n.Awb0UnassignMemBtn}}",
      "description": "{{i18n.Awb0UnassignMemTooltip}}"
    }
  },
  "commandHandlers": {
    "SaveEditVCA2TableACECommandHandler": {
      "id": "SaveEditVCA2Table",
      "action": "SaveEditVCA2TableACE",
      "activeWhen": {
        "condition": "conditions.editVariantTableInAceSubUnderECN"
      },
      "visibleWhen": {
        "condition": "conditions.editVariantTableInAceSubUnderECN"
      }
    },
    "Awp0ShowSaveAsForAce": {
      "id": "Awp0ShowSaveAs",
      "action": "aceSaveAsorReviseContext",
      "activeWhen": {
        "condition": "conditions.aceSaveAsorRevise"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.aceSaveAsorRevise"
      }
    },
    "Awp0DeleteCommandHandlerForAce": {
      "id": "Awp0Delete",
      "action": "Awp0DeleteCommandAction",
      "activeWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      },
      "visibleWhen": {
        "condition": "conditions.disableDeleteCmdVisibility"
      }
    },
    "AceDoesNotShowSummaryViewHandler": {
      "id": "Awp0ShowSummaryView",
      "action": "switchToSummaryView",
      "activeWhen": {
        "condition": "conditions.aceDoesNotSupportsSummaryView"
      },
      "visibleWhen": false
    },
    "AceDoesNotShowListViewHandler": {
      "id": "Awp0ShowSummaryView",
      "activeWhen": {
        "condition": "conditions.aceDoesNotSupportsListView"
      },
      "visibleWhen": false
    },
    "AceDoesNotShowTableViewHandler": {
      "id": "Awp0ShowSummaryView",
      "activeWhen": {
        "condition": "conditions.aceDoesNotSupportsTableView"
      },
      "visibleWhen": false
    },
    "AceDoesNotShowTableSummaryViewHandler": {
      "id": "Awp0ShowSummaryView",
      "activeWhen": {
        "condition": "conditions.aceDoesNotSupportsTableSummaryView"
      },
      "visibleWhen": false
    },
    "AceDoesNotShowImageViewHandler": {
      "id": "Awp0ShowSummaryView",
      "activeWhen": {
        "condition": "conditions.aceDoesNotSupportsImageView"
      },
      "visibleWhen": false
    },
    "Awb0SeparateCommandHandler": {
      "id": "Awb0Separate",
      "action": "separateElementToDistinctElements",
      "visibleWhen": true,
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.isSeparatePossible"
      }
    },
    "Awb0PackHandler": {
      "id": "Awb0Pack",
      "action": "checkForEditsAndPackElements",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.isPackCmdVisible"
      },
      "visibleWhen": true
    },
    "Awb0PackCtxMenuHandler": {
      "id": "Awb0PackCtxMenu",
      "action": "checkForEditsAndPackElements",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isPackCmdVisibleInCtxMenu"
      }
    },
    "Awb0UnpackHandler": {
      "id": "Awb0Unpack",
      "action": "checkForEditsAndUnpackElements",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.isUnpackCmdVisible"
      },
      "visibleWhen": true
    },
    "Awb0UnpackCtxMenuHandler": {
      "id": "Awb0UnpackCtxMenu",
      "action": "checkForEditsAndUnpackElements",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isUnpackCmdVisibleInCtxMenu"
      }
    },
    "Awb0PackAllHandler": {
      "id": "Awb0PackAll",
      "action": "performPackAllAction",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.isPackAllCmdVisible"
      },
      "visibleWhen": true
    },
    "Awb0UnpackAllHandler": {
      "id": "Awb0UnpackAll",
      "action": "performUnpackAllAction",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.isUnpackAllCmdVisible"
      },
      "visibleWhen": true
    },
    "arrangeShowAllCommandHandlerForUsedInStructures": {
      "id": "arrangeShowAll",
      "activeWhen": {
        "condition": "conditions.isUsedInStructuresView"
      },
      "enableWhen": {
        "condition": "conditions.isUsedInStructuresView"
      },
      "visibleWhen": false
    },
    "awb0CutCommandHandler": {
      "id": "Awp0Cut",
      "action": "aceCutContentsToClipboard",
      "activeWhen": {
        "condition": "conditions.awb0CutCommandActive"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.aceCutEnableCondition"
      }
    },
    "awb0CutCtxMenuCommandHandler": {
      "id": "Awp0CutContextMenu",
      "action": "aceCutContentsToClipboard",
      "activeWhen": {
        "condition": "conditions.awb0CutCommandActive"
      },
      "visibleWhen": {
        "condition": "conditions.aceCutEnableCondition"
      }
    },
    "Awb0SelectAllCommandHandler": {
      "id": "Awb0SelectAllCommand",
      "action": "selectAllNavigateResults",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isSelectAllVisible"
      },
      "selectWhen": {
        "condition": "conditions.cmdSelectAllEnabled"
      }
    },
    "Awb0MoveDownCommandHandler": {
      "id": "Awb0MoveDownCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isMoveUpDownVisible"
      },
      "enableWhen": {
        "condition": "conditions.isMoveDownEnabled"
      },
      "action": "moveDownInList"
    },
    "Awb0GetLiveSearchResultCommandHandler": {
      "id": "Awb0GetLiveSearchResultCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isLiveSearchResultCommandVisible"
      },
      "enableWhen": {
        "condition": "conditions.isLiveSearchResultCommandEnabled"
      },
      "action": "getLiveSearchResult"
    },
    "Awb0MoveUpCommandHandler": {
      "id": "Awb0MoveUpCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isMoveUpDownVisible"
      },
      "enableWhen": {
        "condition": "conditions.isMoveUpEnabled"
      },
      "action": "moveUpInList"
    },
    "addChildProductCommandHandler": {
      "id": "Awb0AddChildProductToSWC",
      "action": "launchAddChildProductToSWCPanel",
      "activeWhen": {
        "condition": "conditions.isAddChildProductToSWCVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isAddChildProductToSWCVisible"
      }
    },
    "addChildElementCommandHandler": {
      "id": "Awb0AddChildElementDeclarative",
      "action": "checkForEditsAndLaunchAddPanel",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isAddChildCommandSupported"
      }
    },
    "addElementGroupCommandHandler": {
      "id": "Awb0AddElementGroupDeclarative",
      "activeWhen": true
    },
    "addSiblingElementCommandHandler": {
      "id": "Awb0AddSiblingElementDeclarative",
      "action": "checkForEditsAndLaunchSiblingPanel",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isAddSiblingCommandSupported"
      }
    },
    "addSiblingProductToSWCCommandHandler": {
      "id": "Awb0AddSiblingProductToSWC",
      "action": "launchAddSiblingProductToSWCPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddSiblingProductToSWCCommandSupported"
      }
    },
    "replaceElementCommandHandler": {
      "id": "Awb0ReplaceElementDeclarative",
      "action": "checkForEditsAndLaunchReplaceElementPanel",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isReplaceCommandSupported"
      }
    },
    "Awb0ReplaceElementCtxMenuCmdHandler": {
      "id": "Awb0ReplaceElementCtxMenu",
      "action": "checkForEditsAndLaunchReplaceElementPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isReplaceCommandSupported"
      }
    },
    "saveAsAndReplaceElementCommandHandler": {
      "id": "Awb0SaveAsAndReplaceElement",
      "action": "launchSaveAsAndReplace",
      "activeWhen": {
        "condition": "conditions.isSaveAsAndReplaceCommandSupported"
      },
      "visibleWhen": {
        "condition": "conditions.isSaveAsAndReplaceCommandSupported"
      }
    },
    "removeElementCommandHandler": {
      "id": "Awb0RemoveElement",
      "action": "checkForEditsAndShowConfirmationMessageForRemove",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      },
      "enableWhen": {
        "condition": "conditions.isRemoveCommandSupported"
      }
    },
    "removeLevelCommandHandler": {
      "id": "Awb0RemoveLevel",
      "action": "checkForEditsAndShowConfirmationMessageForRemoveLevel",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isRemoveLevelCommandSupported"
      }
    },
    "removeElementCtxMenuCmdHandler": {
      "id": "Awb0RemoveElementCtxMenu",
      "action": "checkForEditsAndShowConfirmationMessageForRemove",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveCommandSupported"
      }
    },
    "removeLevelCtxMenuCommandHandler": {
      "id": "Awb0RemoveLevelCtxMenu",
      "action": "checkForEditsAndShowConfirmationMessageForRemoveLevel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveLevelCtxCommandSupported"
      }
    },
    "aceEffectivityGroupCmmandHandler": {
      "id": "AceEffectivityGroup",
      "activeWhen": true
    },
    "revisionEffectivityCommandHandler": {
      "id": "Awb0ReleaseStatusEffectivity",
      "action": "launchRevisionEffectivityPanel",
      "activeWhen": {
        "condition": "conditions.isRevisionEffectivityCommandVisibile"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isRevisionEffectivityCommandVisibile"
      }
    },
    "revisionEffectivityInHomeCommandHandler": {
      "id": "Awp0ReleaseStatusEffectivity",
      "action": "launchRevisionEffectivityInHomePanel",
      "activeWhen": {
        "condition": "conditions.isRevisionEffectivityCommandInHomeVisibile"
      },
      "visibleWhen": {
        "condition": "conditions.isRevisionEffectivityCommandInHomeVisibile"
      }
    },
    "occEffectivityCommandHandler": {
      "id": "Awb0OccurrenceEffectivity",
      "action": "launchOccEffectivityPanel",
      "activeWhen": {
        "condition": "conditions.isAwb0ExpressionEffectivityNotVisible"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isOccEffectivityCommandVisibile"
      }
    },
    "ViewoccEffectivityCommandHandler": {
      "id": "Awb0OccurrenceEffectivity",
      "action": "launchViewOccEffectivityPanel",
      "activeWhen": {
        "condition": "conditions.isViewOccEffectivityCommandVisibile"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isViewOccEffectivityCommandVisibile"
      }
    },
    "aceStructureFilterCommandHandler": {
      "id": "Awb0StructureFilterCommand",
      "action": "launchStructureFilterPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      },
      "enableWhen": {
        "condition": "conditions.isStructureFilterSupported"
      }
    },
    "aceSaveWorkingContextCommandHandler": {
      "id": "Awb0SaveWorkingContext",
      "action": "launchSaveSWCPanel",
      "activeWhen": {
        "condition": "conditions.isCreateSWCCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isCreateSWCCommandVisible"
      }
    },
    "aceSaveAsWorkingContextCommandHandler": {
      "id": "Awb0SaveAsWorkingContext",
      "action": "launchSaveAsSWCPanel",
      "activeWhen": {
        "condition": "conditions.isSaveAsSWCCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isSaveAsSWCCommandVisible"
      }
    },
    "aceUpdateWorkingContextCommandHandler": {
      "id": "Awb0UpdateWorkingContext",
      "action": "launchUpdateSWCPanel",
      "activeWhen": {
        "condition": "conditions.isUpdateSWCCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isUpdateSWCCommandVisible"
      }
    },
    "aceSaveWorkingContextGroupCommandHandler": {
      "id": "Awb0SaveWorkingContextGroup",
      "activeWhen": true
    },
    "aceConfigurationFilterCommandHandler": {
      "id": "Awb0ConfigurationFilter",
      "action": "launchConfigurationPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isConfigurationFilterSupported"
      }
    },
    "aceResetStructureCommandHandler": {
      "id": "Awb0ResetStructure",
      "action": "showConfirmationMessageForReset",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isResetApplicable"
      }
    },
    "aceUnifiedInContextSearchCommandHandler": {
      "id": "Awb0AceUnifiedInContextSearch",
      "action": "launchUnifiedNavigationPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      },
      "enableWhen": {
        "condition": "conditions.isNavigationSupported"
      }
    },
    "aceShowChildrenCommandHandler": {
      "id": "Awb0ShowChildOccurrences",
      "action": "showChildrenFromPwaAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isShowChildrenCommandVisible"
      }
    },
    "aceShowChildrenFromBreadcrumbCommandHandler": {
      "id": "Awb0ShowChildOccurrencesFromBreadcrumb",
      "action": "showChildrenFromBreadcrumbAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isShowChildrenCommandVisible"
      }
    },
    "Awb0AddEffectivityForRelnStatusCmdHandler": {
      "id": "Awb0AddEffectivityForRelnStatusCmd",
      "action": "awb0ReleaseStatusPanelAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awb0RemoveEffectivityForRelnStatusCmdHandler": {
      "id": "Awb0RemoveEffectivityForRelnStatusCmd",
      "action": "awb0RemoveEffectivityForRelnAction",
      "activeWhen": {
        "condition": "conditions.isRemoveEffectivityForRelnStatusVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isRemoveEffectivityForRelnStatusVisible"
      }
    },
    "Awb0AddEffectivitiesCmdHandler": {
      "id": "Awb0AddEffectivitiesCmd",
      "action": "awb0AddEffectivitiesPanelAction",
      "activeWhen": {
        "condition": "conditions.isAddEffectivitiesVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isAddEffectivitiesVisible"
      }
    },
    "Awb0RemoveEffectivitiesCmdHandler": {
      "id": "Awb0RemoveEffectivitiesCmd",
      "action": "awb0RemoveEffectivitiesAction",
      "activeWhen": {
        "condition": "conditions.isRemoveEffectivitiesVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isRemoveEffectivitiesVisible"
      }
    },
    "Awb0ClearAllEffectivitiesCmdHandler": {
      "id": "Awb0ClearAllEffectivitiesCmd",
      "action": "showConfirmationMessageForClearAll",
      "activeWhen": {
        "condition": "conditions.isClearAllVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isClearAllVisible"
      }
    },
    "Awb0AddNewVariantRuleCmdHandler": {
      "id": "Awb0AddNewVariantRuleCmd",
      "action": "awb0AddNewVariantRuleCmdAction",
      "activeWhen": {
        "condition": "conditions.isAwb0AddNewVariantRuleCmdVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isAwb0AddNewVariantRuleCmdVisible"
      }
    },
    "Awb0AddGroupEffectivityCmdHandler": {
      "id": "Awb0AddGroupEffectivityCmd",
      "action": "launchAddGroupEffectivityPanelAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awb0RemoveGroupEffectivityCmdHandler": {
      "id": "Awb0RemoveGroupEffectivityCmd",
      "action": "removeGroupEffectivityAction",
      "activeWhen": {
        "condition": "conditions.isRemoveGroupEffectivitiesVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isRemoveGroupEffectivitiesVisible"
      }
    },
    "addSubstitutesCmdHandler": {
      "id": "Awb0AddSubstitutes",
      "action": "checkForEditsAndLaunchAddSubstitutesPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddSubstitutesSupported"
      }
    },
    "addSubstitutesPWACmdHandler": {
      "id": "Awb0AddSubstitutesPWA",
      "action": "checkForEditsAndLaunchAddSubstitutesPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isNotOpenedFor4GStructure"
      },
      "enableWhen": {
        "condition": "conditions.isAddSubstitutesSupportedForPWA"
      }
    },
    "insertLevelCmdHandler": {
      "id": "Awb0InsertParentElement",
      "action": "CheckForEditsAndLaunchInsertLevelPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      },
      "enableWhen": {
        "condition": "conditions.isInsertLevelSupported"
      }
    },
    "insertLevelCtxMenuCmdHandler": {
      "id": "Awb0InsertParentElementCtxMenu",
      "action": "CheckForEditsAndLaunchInsertLevelPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isInsertLevelSupported"
      }
    },
    "removeSubstitutesCmdHandler": {
      "id": "Awb0RemoveSubstitutes",
      "action": "removeSubstitutes",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveSubstitutesSupported"
      }
    },
    "aceShowObjectDelegateCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "aceShowObjectDelegateAction",
      "activeWhen": {
        "condition": "conditions.isACEShowObjectDelegateActive"
      },
      "visibleWhen": {
        "condition": "conditions.isACEShowObjectDelegateVisible"
      }
    },
    "aceShowObjectCellDelegateCommandHandler": {
      "id": "Awp0ShowObjectCell",
      "action": "aceShowObjectDelegateCellAction",
      "activeWhen": {
        "condition": "conditions.isACEShowObjectCellDelegateActive"
      },
      "visibleWhen": {
        "condition": "conditions.isACEShowObjectCellDelegateActive"
      }
    },
    "aceShowObjectCellDelegateForIRCommandHandler": {
      "id": "Awp0ShowObjectCell",
      "action": "aceShowObjectDelegateCellAction",
      "activeWhen": {
        "condition": "conditions.isACEShowObjectCellDelegateForBookmarkActive"
      },
      "visibleWhen": {
        "condition": "conditions.isACEShowObjectCellDelegateForBookmarkActive"
      }
    },
    "aceReviseObjectDelegateCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "aceReviseObjectDelegateAction",
      "activeWhen": {
        "condition": "conditions.isACEReviseObjectDelegateActive"
      },
      "visibleWhen": {
        "condition": "conditions.isACEReviseObjectDelegateActive"
      }
    },
    "aceJitterFreeReviseDelegateCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "aceJitterFreeReviseDelegateAction",
      "activeWhen": {
        "condition": "conditions.isACEJitterFreeReviseDelegateActive"
      },
      "visibleWhen": {
        "condition": "conditions.isACEJitterFreeReviseDelegateActive"
      }
    },
    "aceOpenGroupCommandHandler": {
      "id": "Awp0OpenGroup",
      "activeWhen": {
        "condition": "conditions.isAdaptedObjectPresent"
      },
      "visibleWhen": false
    },
    "aceOpenInTabDelegateCommandHandler": {
      "id": "Awp0OpenInNewTab",
      "action": "aceOpenInTabDelegateAction",
      "activeWhen": {
        "condition": "conditions.isACEOpenInTabDelegateActive"
      },
      "visibleWhen": {
        "condition": "conditions.isACEOpenInTabDelegateActive"
      }
    },
    "aceOpenInWindowCommandHandler": {
      "id": "Awp0OpenInNewWindow",
      "action": "aceOpenInWindowDelegateAction",
      "activeWhen": {
        "condition": "conditions.isACEOpenInWindowDelegateActive"
      },
      "visibleWhen": {
        "condition": "conditions.isACEOpenInWindowDelegateActive"
      }
    },
    "useSubstituteCmdHandler": {
      "id": "Awb0UseSubstitute",
      "action": "useSubstitute",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isUseSubstituteSupported"
      }
    },
    "aceOpenInRACCommndHandler": {
      "id": "Awp0OpenInRAC",
      "action": "aceOpenInRACDelegateAction",
      "activeWhen": {
        "condition": "conditions.isACEOpenInRACDelegateActive"
      },
      "visibleWhen": {
        "condition": "conditions.isACEOpenInRACDelegateActive"
      }
    },
    "acePasteHandler": {
      "id": "Awp0Paste",
      "action": "checkForEditsAndAcePasteContentsFromClipboard",
      "activeWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.acePasteVisibleCondition"
      }
    },
    "Awp0PasteObjectSetInWhereUsedHandler": {
      "id": "Awp0Paste",
      "activeWhen": {
        "condition": "conditions.awp0PasteInWhereUsedTab"
      },
      "visibleWhen": false
    },
    "acePasteContextMenuHandler": {
      "id": "Awp0PasteContextMenu",
      "action": "checkForEditsAndAcePasteContentsFromClipboard",
      "activeWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      },
      "visibleWhen": {
        "condition": "conditions.acePasteVisibleCondition"
      }
    },
    "aceMarkUpCopyHandler": {
      "id": "Awp0Copy",
      "action": "copyInMarkupMode",
      "activeWhen": {
        "condition": "conditions.isMarkupEnabled"
      },
      "enableWhen": {
        "condition": "conditions.isMarkupEnabled"
      }
    },
    "aceMarkUpCopyContextMenuHandler": {
      "id": "Awp0CopyContextMenu",
      "action": "copyInMarkupMode",
      "activeWhen": {
        "condition": "conditions.isMarkupEnabled"
      },
      "visibleWhen": {
        "condition": "conditions.isMarkupEnabled"
      }
    },
    "showMarkupHandler": {
      "id": "Awb0ShowMarkup",
      "action": "toggleMarkup",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.showMarkupCondition"
      },
      "visibleWhen": {
        "condition": "conditions.hideMarkupForSessionandSplit"
      },
      "selectWhen": {
        "condition": "conditions.isMarkupEnabled"
      }
    },
    "showUnconfiguredByOccEffectivityHandler": {
      "id": "Awb0ShowUnconfiguredByOccEffectivity",
      "action": "toggleIneffectiveAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.showIneffectiveCondition"
      },
      "selectWhen": {
        "condition": "conditions.showUnconfigured"
      }
    },
    "showExpandBelowDebugHandler": {
      "id": "Awb0ExpandBelowDebug",
      "action": "toggleExpandBelowDebug",
      "activeWhen": true,
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.showAwb0ExpandBelowDebug"
      }
    },
    "showExpandOneDebugHandler": {
      "id": "Awb0ExpandOneDebug",
      "action": "toggleExpandOneDebug",
      "activeWhen": true,
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.showAwb0ExpandOneDebug"
      }
    },
    "showReconfigureDebugHandler": {
      "id": "Awb0ReconfigureDebug",
      "action": "toggleReconfigureDebug",
      "activeWhen": true,
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.showAwb0ReconfigureDebug"
      }
    },
    "showLoadTreePropsDebugHandler": {
      "id": "Awb0LoadTreePropsDebug",
      "action": "toggleLoadTreePropsDebug",
      "activeWhen": true,
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.showAwb0LoadTreePropsDebug"
      }
    },
    "showLoadTreePropsTimerDebugHandler": {
      "id": "Awb0LoadTreePropsTimerDebug",
      "action": "toggleLoadTreePropsTimerDebug",
      "activeWhen": true,
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.showAwb0LoadTreePropsTimerDebug"
      }
    },
    "stopExpandBelowDebugHandler": {
      "id": "Awb0StopExpandBelowDebug",
      "action": "toggleStopExpandBelowDebug",
      "activeWhen": true,
      "visibleWhen": true
    },
    "useBackGroundSoaDebugHandler": {
      "id": "Awb0BackGroundSoaDebug",
      "action": "toggleUseBackGroundSoaDDebug",
      "activeWhen": true,
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.showAwb0BackGroundSoaDebug"
      }
    },
    "showUnconfiguredByVariantsHandler": {
      "id": "Awb0ShowUnconfiguredByVariants",
      "action": "toggleVariantsInAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.showVariantsInCondition"
      },
      "selectWhen": {
        "condition": "conditions.showUnconfiguredVariants"
      }
    },
    "showSuppressedHandler": {
      "id": "Awb0ShowSuppressed",
      "action": "toggleSuppressedInAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.showSuppressedInCondition"
      },
      "selectWhen": {
        "condition": "conditions.showSuppressed"
      }
    },
    "Awb0ExpandCommandHandler": {
      "action": "showExpandOptions",
      "id": "Awb0Expand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      },
      "enableWhen": true
    },
    "expandBelowCommandHandler": {
      "id": "Awb0ExpandBelow",
      "action": "aceExpandBelowAction",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isExpandOptionsEnabled"
      }
    },
    "expandBelowFetchAllCommandHandler": {
      "id": "Awb0ExpandBelowFetchAll",
      "action": "aceExpandBelowActionFetchAll",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isExpandOptionsFetchAllEnabled"
      }
    },
    "expandBelowCtxMenuCommandHandler": {
      "id": "Awb0ExpandBelowCtxMenu",
      "action": "aceExpandBelowAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isExpandOptionsEnabledInCtxMenu"
      }
    },
    "collapseBelowCommandHandler": {
      "id": "Awb0CollapseBelow",
      "action": "aceCollapseBelow",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isExpandOptionsEnabled"
      }
    },
    "collapseBelowCtxMenuCommandHandler": {
      "id": "Awb0CollapseBelowCtxMenu",
      "action": "aceCollapseBelow",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isExpandOptionsEnabledInCtxMenu"
      }
    },
    "Awb0CancelMarkupLevelCommandHandler": {
      "id": "Awb0CancelMarkupLevel",
      "action": "cancelMarkupLevel",
      "activeWhen": {
        "condition": "conditions.isCancelMarkupAtLevelSupported"
      },
      "visibleWhen": {
        "condition": "conditions.isCancelMarkupAtLevelSupported"
      }
    },
    "Awb0CancelMarkupElementCommandHandler": {
      "id": "Awb0CancelMarkupElement",
      "action": "cancelMarkupElement",
      "activeWhen": {
        "condition": "conditions.isCancelMarkupAtElementSupported"
      },
      "visibleWhen": {
        "condition": "conditions.isCancelMarkupAtElementSupported"
      }
    },
    "Awb0ApplyMarkupCommandHandler": {
      "id": "Awb0ApplyMarkup",
      "action": "applyMarkup",
      "activeWhen": {
        "condition": "conditions.isApplyMarkupSupported"
      },
      "visibleWhen": {
        "condition": "conditions.isApplyMarkupSupported"
      },
      "enableWhen": {
        "condition": "conditions.NotReleasedAssembly"
      }
    },
    "fakeCommandToForceServerVisibilityAwb0ViewElementEffectivityHandler": {
      "id": "fakeCommandToForceServerVisibilityAwb0ViewElementEffectivity",
      "action": "",
      "activeWhen": {
        "condition": "conditions.Awb0ViewElementEffectivity"
      },
      "visibleWhen": false
    },
    "Awb0AddGroupHandler": {
      "id": "Awb0AddGroup",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      },
      "enableWhen": true
    },
    "Awb0RestructureGroupHandler": {
      "id": "Awb0RestructureGroup",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      },
      "enableWhen": true
    },
    "Awb0DebugGroupHandler": {
      "id": "Awb0DebugGroup",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isDegugEnabled"
      },
      "enableWhen": true
    },
    "Awb0ViewGroupHandler": {
      "id": "Awb0ViewGroup",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.showViewGroupCondition"
      },
      "enableWhen": true
    },
    "Awb0ConfigurationGroupHandler": {
      "id": "Awb0ConfigurationGroup",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      },
      "enableWhen": true
    },
    "Awb0SetInContextHandler": {
      "id": "Awb0SetInContext",
      "action": "aceSetInContext",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      },
      "enableWhen": {
        "condition": "conditions.isSetInContextCmdVisible"
      }
    },
    "Awb0SetInContextCtxMenuCmdHandler": {
      "id": "Awb0SetInContextCtxMenu",
      "action": "aceSetInContext",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isSetInContextCmdVisible"
      }
    },
    "Awb0CBOSCmdHandler": {
      "id": "Awb0CBOSCmd",
      "action": "configureBySelection",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isCBOSCmdVisible"
      }
    },
    "Awb0ConfigByProximityCmdHandler": {
      "id": "Awb0ConfigByProximityCmd",
      "action": "configByProximityTarget",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isConfigByProximityCmdVisible"
      }
    },
    "Awb0RemoveOverrideCommandHandler": {
      "id": "Awb0RemoveOverride",
      "action": "removePropertyOverride",
      "activeWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      },
      "visibleWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      }
    },
    "Awb0SaveVariantRuleCommandHandler": {
      "id": "Awb0SaveVariantRule",
      "action": "Awb0SaveVariantRule",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.isClassicVariantRuleModifiable"
      },
      "visibleWhen": {
        "condition": "conditions.isClassicVariantRulePanelDirty"
      }
    },
    "Awb0SaveAsVariantRuleCommandHandler": {
      "id": "Awb0SaveAsVariantRule",
      "action": "navigateToSaveAsVariantRulePanel",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.checkUserAccessForSaveAsVariantRule"
      },
      "visibleWhen": {
        "condition": "conditions.isClassicVariantRulePanelDirty"
      }
    },
    "Awp0RemoveAttachmentCommandHandler": {
      "id": "Awp0Cut",
      "action": "removeAttachment",
      "activeWhen": {
        "condition": "conditions.removeAttachmentVisibility"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.removeAttachmentVisibility"
      }
    },
    "Awp0RemoveAttachmentCtxMenuCommandHandler": {
      "id": "Awp0CutContextMenu",
      "action": "removeAttachment",
      "activeWhen": {
        "condition": "conditions.removeAttachmentVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.removeAttachmentVisibility"
      }
    },
    "Awb0EditEffectivityCommandHandler": {
      "id": "Awb0EditEffectivity",
      "action": "getEffectivityPropertiesForEditAction",
      "activeWhen": {
        "condition": "conditions.isAwb0EditEffectivityVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isAwb0EditEffectivityVisible"
      }
    },
    "Awb0EditUnitGrouEffectivityCommandHandler": {
      "id": "Awb0EditEffectivity",
      "action": "navigateToEditGroupEffectivity",
      "activeWhen": {
        "condition": "conditions.isEffectivityGroupEditable"
      },
      "visibleWhen": {
        "condition": "conditions.isEffectivityGroupEditable"
      }
    },
    "Awb0ExpressionEffectivityCommandHandler": {
      "id": "Awb0ExpressionEffectivity",
      "action": "launchExpressionEffectivityPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAwb0ExpressionEffectivityVisible"
      }
    },
    "awb0SignOutCommandHandler": {
      "id": "cmdSignOut",
      "action": "saveUserWorkingContextStateAndSignOut",
      "activeWhen": {
        "condition": "conditions.isSignOutVisibleForACE"
      },
      "visibleWhen": {
        "condition": "conditions.isSignOutVisibleForACE"
      }
    },
    "psEditEffectivityGroupHandler": {
      "id": "psEditEffectivityGroupCmd",
      "action": "navigateToEditDateRangeGroupEffectivity",
      "activeWhen": {
        "condition": "conditions.isEffectivityGroupEditable"
      },
      "visibleWhen": {
        "condition": "conditions.isEffectivityGroupEditable"
      }
    },
    "awp0ExportToExcelCommandHandler": {
      "id": "Awp0ExportToExcel",
      "activeWhen": {
        "condition": "conditions.isAwp0ExportToExcelVisibleInSWA"
      },
      "visibleWhen": false
    },
    "OccMgmtDuplicateCmdHandler": {
      "id": "Awb0ShowDuplicate",
      "action": "occMgmtDuplicateCmdAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      },
      "enableWhen": {
        "condition": "conditions.isAwb0DuplicateVisible"
      }
    },
    "OccMgmtDuplicateRemoveCommandHandler": {
      "id": "OccMgmtDuplicateRemove",
      "action": "occMgmtDuplicateRemoveActionOnLine",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "enableWhen": {
        "condition": "conditions.isOccMgmtDuplicateRemoveApplicable"
      }
    },
    "OccMgmtDuplicateReplaceCommandHandler": {
      "id": "OccMgmtDuplicateReplace",
      "action": "occMgmtDuplicateLaunchReplacePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "enableWhen": {
        "condition": "conditions.isOccMgmtDuplicateReplaceApplicable"
      }
    },
    "OccMgmtDuplicateCloneCommandHandler": {
      "id": "OccMgmtDuplicateClone",
      "action": "occMgmtDuplicateCloneActionOnLine",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "enableWhen": {
        "condition": "conditions.isOccMgmtDuplicateCloneApplicable"
      }
    },
    "OccMgmtDuplicateCloneBelowCommandHandler": {
      "id": "OccMgmtDuplicateCloneBelow",
      "action": "occMgmtDuplicateCloneBelowActionOnLine",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "enableWhen": {
        "condition": "conditions.isOccMgmtDuplicateCloneBelowApplicable"
      }
    },
    "OccMgmtDuplicateReferenceCommandHandler": {
      "id": "OccMgmtDuplicateUndo",
      "action": "occMgmtDuplicateReferenceActionOnLine",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "enableWhen": {
        "condition": "conditions.isOccMgmtDuplicateUndoApplicable"
      }
    },
    "OccMgmtDuplicateSettingsCmdHandler": {
      "id": "OccMgmtDuplicateSettingsCmd",
      "action": "OccMgmtDuplicateSettingsCmdAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "enableWhen": true
    },
    "OccMgmtDuplicateCreateTraceLinkHideCommandHandler": {
      "id": "Arm0CreateTraceLinkCtx",
      "activeWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "visibleWhen": false
    },
    "OccMgmtDuplicateExistingTraceLinkHideCommandHandler": {
      "id": "Arm0ExistingTraceLink",
      "activeWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "visibleWhen": false
    },
    "OccMgmtDuplicateRemoveElementCtxMenuHideCommandHandler": {
      "id": "Awb0RemoveElementCtxMenu",
      "activeWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "visibleWhen": false
    },
    "OccMgmtDuplicateRemoveLevelCtxMenuHideCommandHandler": {
      "id": "Awb0RemoveLevelCtxMenu",
      "activeWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "visibleWhen": false
    },
    "OccMgmtDuplicateInsertParentElementCtxMenuHideCommandHandler": {
      "id": "Awb0InsertParentElementCtxMenu",
      "activeWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "visibleWhen": false
    },
    "OccMgmtDuplicateReplaceElementCtxMenuHideCommandHandler": {
      "id": "Awb0ReplaceElementCtxMenu",
      "activeWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "visibleWhen": false
    },
    "OccMgmtDuplicatePackCtxMenuHideCommandHandler": {
      "id": "Awb0PackCtxMenu",
      "activeWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "visibleWhen": false
    },
    "OccMgmtDuplicatePackHideHandler": {
      "id": "Awb0Pack",
      "activeWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "visibleWhen": false
    },
    "OccMgmtDuplicateUnpackHideHandler": {
      "id": "Awb0Unpack",
      "activeWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "visibleWhen": false
    },
    "OccMgmtDuplicatePackAllHideHandler": {
      "id": "Awb0PackAll",
      "activeWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "visibleWhen": false
    },
    "OccMgmtDuplicateUnpackAllHideHandler": {
      "id": "Awb0UnpackAll",
      "activeWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "visibleWhen": false
    },
    "OccMgmtDuplicateAwb0ExpandCommandHandler": {
      "action": "showExpandOptions",
      "id": "Awb0Expand",
      "activeWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "visibleWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      }
    },
    "OccMgmtDuplicateAwp0OpenLineItemCommandHandler": {
      "id": "Awp0OpenLineItem",
      "action": "occMgmtDuplicateOpenNotification",
      "activeWhen": {
        "condition": "conditions.isOccMgmtDuplicateNotificationCommandCond"
      },
      "visibleWhen": {
        "condition": "conditions.isOccMgmtDuplicateNotificationCommandCond"
      }
    },
    "OccMgmtDuplicateAwp0CopyCtxMenuCommandHandler": {
      "id": "Awp0CopyContextMenu",
      "activeWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "visibleWhen": false
    },
    "OccMgmtDuplicateAwp0PasteCtxMenuCommandHandler": {
      "id": "Awp0PasteContextMenu",
      "activeWhen": {
        "condition": "conditions.isOccmgmtDuplicateSubLocation"
      },
      "visibleWhen": false
    },
    "awb0AddRevisionCommandHandler": {
      "id": "Awb0AddRevision",
      "action": "awb0AddRevisionCommandAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awb0RemoveRevisionCommandHandler": {
      "id": "Awb0RemoveRevision",
      "action": "awb0RemoveRevisionCommandAction",
      "activeWhen": {
        "condition": "conditions.isRemoveRevisionCmdSupported"
      },
      "visibleWhen": {
        "condition": "conditions.isRemoveRevisionCmdSupported"
      }
    },
    "revoccOverriddenSaveAsAndReplaceElementCommandHandler": {
      "id": "Awb0SaveAsAndReplaceElement",
      "action": "updateCtxAndLaunchSaveAsAndReplacePanel",
      "activeWhen": {
        "condition": "conditions.isSaveAsAndReplaceCmdSupported"
      },
      "visibleWhen": {
        "condition": "conditions.isSaveAsAndReplaceCmdSupported"
      }
    },
    "revoccOverriddenAwb0ShowSaveAsCommandHandler": {
      "id": "Awp0ShowSaveAs",
      "action": "revOccSaveAsorReviseInContext",
      "activeWhen": {
        "condition": "conditions.isSaveAsAndReviseActive"
      },
      "visibleWhen": {
        "condition": "conditions.isSaveAsAndReviseVisible"
      }
    },
    "revoccOverriddenRemoveAlternateCommandHandler": {
      "id": "ps0RemoveAlternate",
      "action": "revOccRemoveAlternates",
      "activeWhen": {
        "condition": "conditions.revOccRemoveAlternateCommandCondition"
      },
      "visibleWhen": {
        "condition": "conditions.revOccRemoveAlternateCommandCondition"
      }
    },
    "revoccOverriddenAssignFinishHandler": {
      "id": "Fsh1AssignFinish",
      "activeWhen": {
        "condition": "conditions.isRevisableOccurrenceStructure"
      },
      "visibleWhen": false
    },
    "revoccOverriddenImportFromOfficeCommandHandler": {
      "id": "Arm0ImportFromOffice",
      "activeWhen": {
        "condition": "conditions.isRevisableOccurrenceStructure"
      },
      "visibleWhen": false
    },
    "revoccOverriddenShareURLCommandHandler": {
      "id": "Awp0ShareURL",
      "activeWhen": {
        "condition": "conditions.isRevOccStructureOrRevOccInContextOfChange"
      },
      "visibleWhen": false
    },
    "revoccOverriddenSubscribeCommandHandler": {
      "id": "Sub0Subscribe",
      "activeWhen": {
        "condition": "conditions.isSub0SubscribeSupported"
      },
      "visibleWhen": false
    },
    "revoccOverriddenPrintCommandHandler": {
      "id": "Awp0Print",
      "activeWhen": {
        "condition": "conditions.isRevOccStructureOrRevOccInContextOfChange"
      },
      "visibleWhen": false
    },
    "revoccOverriddenCreateARCommandHandler": {
      "id": "Crt1CreateValidationContract",
      "activeWhen": {
        "condition": "conditions.isRevisableOccurrenceStructure"
      },
      "visibleWhen": false
    },
    "revoccOverriddenOpenInIllustratorHandler": {
      "id": "openInIllustrator",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isRevOccStructureOrRevOccInContextOfChange"
      },
      "visibleWhen": false
    },
    "revoccOverriddenSaveWorkingContextCommandHandler": {
      "id": "Awb0SaveWorkingContext",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isRevOccSaveWorkingContextVisible"
      },
      "visibleWhen": false
    },
    "revoccOverriddenAddCharRepresentationHandler": {
      "id": "Aqc0AddCharRepresentation",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isRevOccInspectionDefVisible"
      },
      "visibleWhen": false
    },
    "revoccOverriddenOpenInRACCommndHandler": {
      "id": "Awp0OpenInRAC",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isRevOccOpenInRichClientVisible"
      },
      "visibleWhen": false
    },
    "revoccOverriddenCreateRecipeHandler": {
      "id": "Evm1CreateRecipe",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isRevOccCreateRecipeVisible"
      },
      "visibleWhen": false
    },
    "revoccOverriddenExecuteRecipeHandler": {
      "id": "Evm1ExecuteRecipe",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isRevOccCreateRecipeVisible"
      },
      "visibleWhen": false
    },
    "revoccOverriddenGenTraceMatrixCommandHandler": {
      "id": "Arm0GenerateTraceabilityMatrix",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isRevOccGenTraceMatVisible"
      },
      "visibleWhen": false
    },
    "revoccOverriddenRevisionEffectivityCommandHandler": {
      "id": "Awb0ReleaseStatusEffectivity",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isRevOccRevisionEffectivityCmdVisibile"
      },
      "visibleWhen": false
    },
    "revoccOverriddenAwp0ViewGroupHandler": {
      "id": "Awp0ViewGroup",
      "activeWhen": {
        "condition": "conditions.isRevOccInContextOfChange"
      },
      "visibleWhen": false
    },
    "revoccOverriddenAwb0ViewGroupHandler": {
      "id": "Awb0ViewGroup",
      "activeWhen": {
        "condition": "conditions.isRevisableOccurrenceStructure"
      },
      "visibleWhen": false
    },
    "revoccOverriddenAwp0OpenInSEECStandAloneNonAceModeCommandHandler": {
      "id": "Awp0OpenInSEEC",
      "activeWhen": {
        "condition": "conditions.revOccDuplicatedAwp0OpenInSEECStandAloneNonAceModeCommandCondition"
      },
      "visibleWhen": false
    },
    "revoccOverriddenCreateChangeCommandHandler": {
      "id": "Cm1ShowCreateChangeInContext",
      "action": "revOccCreateChangeInContext",
      "activeWhen": {
        "condition": "conditions.isRevOccOverriddenCm1ShowCreateChangeInContextCmdActive"
      },
      "visibleWhen": true
    },
    "revoccOverriddenCreateLineItemCommandHandler": {
      "id": "Sc1CreateLineItem",
      "activeWhen": {
        "condition": "conditions.revOccOverriddenSc1CreateCmdCond"
      },
      "visibleWhen": false
    },
    "revoccOverriddenCreateNewExchangeCommandHandler": {
      "id": "Sc1CreateExchange",
      "activeWhen": {
        "condition": "conditions.revOccOverriddenSc1CreateCmdCond"
      },
      "visibleWhen": false
    },
    "revoccOverriddenAwb0SeparateCommandHandler": {
      "id": "Awb0Separate",
      "activeWhen": {
        "condition": "conditions.revOccOverriddenAwb0SeparateCmdCond"
      },
      "visibleWhen": false
    },
    "revoccOverriddenAwb0ShowDuplicateCmdHandler": {
      "id": "Awb0ShowDuplicate",
      "activeWhen": {
        "condition": "conditions.isAwb0ShowDuplicateCmdSupportedForProductUsage"
      },
      "visibleWhen": false
    },
    "revoccOverriddenAwp0NewWorkflowProcessCommandHandler": {
      "id": "Awp0NewWorkflowProcess",
      "action": "revOccSubmitToWorkflow",
      "activeWhen": {
        "condition": "conditions.isRevisableOccurrenceStructure"
      },
      "visibleWhen": {
        "condition": "conditions.awp0NewWorkflowProcessCommandCondition"
      },
      "selectWhen": {
        "condition": "conditions.isSubmitWorkflowPopupPanelActive"
      }
    },
    "revOccJitterFreeReviseDelegateCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "revOccJitterFreeReviseDelegateAction",
      "activeWhen": {
        "condition": "conditions.isRevOccJitterFreeReviseDelegateActive"
      },
      "visibleWhen": {
        "condition": "conditions.isRevOccJitterFreeReviseDelegateActive"
      }
    },
    "revoccOverriddenShowMarkupHandler": {
      "id": "Awb0ShowMarkup",
      "activeWhen": {
        "condition": "conditions.isRevisableOccurrenceStructure"
      },
      "visibleWhen": false
    },
    "revoccOverriddenAddChildHandler": {
      "id": "Awb0AddChildElementDeclarative",
      "action": "addChildPanelSelection",
      "activeWhen": {
        "condition": "conditions.isAwb0AddPartChildCommandActive"
      },
      "visibleWhen": {
        "condition": "conditions.isAwb0AddPartChildCommandActive"
      },
      "enableWhen": {
        "condition": "conditions.isAwb0AddPartChildCommandActive"
      }
    },
    "revoccOverriddenAddSiblingHandler": {
      "id": "Awb0AddSiblingElementDeclarative",
      "action": "addSiblingPanelSelection",
      "activeWhen": {
        "condition": "conditions.isAwb0AddPartSiblingCommandActive"
      },
      "visibleWhen": {
        "condition": "conditions.isAwb0AddPartSiblingCommandActive"
      },
      "enableWhen": {
        "condition": "conditions.isAwb0AddPartSiblingCommandActive"
      }
    },
    "revoccOverriddenAwb0UseSubstituteCommandHandler": {
      "id": "Awb0UseSubstitute",
      "activeWhen": {
        "condition": "conditions.isAwb0UseSubstituteCommandSupported"
      },
      "visibleWhen": false
    },
    "aceImportBOMTraceLinkHideHandler": {
      "id": "Arm0CreateTraceLinkCtx",
      "activeWhen": {
        "condition": "conditions.isImportPreviewSublocation"
      },
      "visibleWhen": false
    },
    "aceImportBOMExistingTraceLinkHideHandler": {
      "id": "Arm0ExistingTraceLink",
      "activeWhen": {
        "condition": "conditions.isImportPreviewSublocation"
      },
      "visibleWhen": false
    },
    "aceImportBOMExportCommandHideExportWithFolderSelectionHandler": {
      "id": "Arm0Export",
      "activeWhen": {
        "condition": "conditions.disableExcelRoundTripInImportPreviewSublocation"
      },
      "visibleWhen": false
    },
    "aceImportBOMExportCommandHideExportWithAssemblySelectionHandler": {
      "id": "Arm0Export",
      "activeWhen": {
        "condition": "conditions.disableArm0Export"
      },
      "visibleWhen": false
    },
    "aceImportBOMExportImportCommandHideHandler": {
      "id": "Arm0ExportImport",
      "activeWhen": {
        "condition": "conditions.disableExcelRoundTripInImportPreviewSublocation"
      },
      "visibleWhen": false
    },
    "aceImportBOMImportNewCommandHideHandler": {
      "id": "Att1ImportNew",
      "activeWhen": {
        "condition": "conditions.isImportPreviewSublocation"
      },
      "visibleWhen": false
    },
    "aceInteractiveCopyCommandHandler": {
      "id": "Awp0CopyContextMenu",
      "activeWhen": {
        "condition": "conditions.isImportPreviewSublocation"
      },
      "visibleWhen": false
    },
    "Awb0ImportFromExcelCommandHandler": {
      "id": "Awb0ImportFromExcel",
      "action": "launchImportFromExcelPanel",
      "activeWhen": {
        "condition": "conditions.enableImportBOMCommand"
      },
      "enableWhen": {
        "condition": "conditions.enableImportBOMCommand"
      },
      "visibleWhen": {
        "condition": "conditions.enableImportBOMCommand"
      }
    },
    "Awb0HideArm0ImportExcelCommandHandler": {
      "id": "Arm0ImportExcel",
      "activeWhen": {
        "condition": "conditions.isImportPreviewSublocation"
      },
      "visibleWhen": false
    },
    "Awb0CloseCommandPanelHandler": {
      "id": "Awp0CloseCommandPanel",
      "action": "closeImportPreview",
      "activeWhen": {
        "condition": "conditions.isImportPreviewSublocation"
      },
      "visibleWhen": true
    },
    "Awb0AceImportPreviewOverwriteContextMenuCommandHandler": {
      "id": "Awb0ImportPreviewAceOverwriteContextMenu",
      "activeWhen": true,
      "action": "setOverwriteActionOnLine",
      "visibleWhen": {
        "condition": "conditions.isOverwriteActionMenuApplicableOnContextInImportPreview"
      }
    },
    "Awb0AceImportPreviewReviseContextMenuCommandHandler": {
      "id": "Awb0AceImportPreviewReviseContextMenu",
      "activeWhen": true,
      "action": "setReviseActionOnLine",
      "visibleWhen": {
        "condition": "conditions.isReviseActionMenuApplicableOnContextInImportPreview"
      }
    },
    "Awb0AceImportPreviewReferenceContextMenuCommandHandler": {
      "id": "Awb0AceImportPreviewReferenceContextMenu",
      "action": "setReferenceActionOnLine",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isReferenceActionApplicableOnContextInImportPreview"
      }
    },
    "addChildRowInTreeCommandHandler": {
      "id": "Awb0AddChildRow",
      "action": "addChildRowCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddChildRowCommandSupported"
      },
      "enableWhen": {
        "condition": "conditions.addChildRowCommandEnableCondition"
      }
    },
    "addSiblingRowCommandHandler": {
      "id": "Awb0AddSiblingRow",
      "action": "addSiblingRowCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAddSiblingRowCommandSupported"
      },
      "enableWhen": {
        "condition": "conditions.addSiblingRowCommandEnableCondition"
      }
    },
    "removeAllInlineRowsCommandHandler": {
      "id": "Awb0RemoveAllRows",
      "action": "removeAllInlineRowAction",
      "activeWhen": {
        "condition": "conditions.isRemoveRowCommandSupported"
      },
      "visibleWhen": {
        "condition": "conditions.isRemoveRowCommandSupported"
      }
    },
    "saveRowInTableCommandHandler": {
      "id": "Awb0SaveRow",
      "action": "saveRowAction",
      "activeWhen": {
        "condition": "conditions.isSaveRowCommandSupported"
      },
      "visibleWhen": {
        "condition": "conditions.isSaveRowCommandSupported"
      }
    },
    "addRefInlineCommandHandler": {
      "id": "Awb0AddRef",
      "action": "launchAddPanel",
      "activeWhen": true,
      "visibleWhen": true
    },
    "inlineAuthOverriddenStartEditTableHideCmdHandlerForInlineAuthoring": {
      "id": "Awp0StartEditTable",
      "activeWhen": {
        "condition": "conditions.isStartEditAllowedInInlineAuthoringMode"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenStartEditSummaryHideCmdHandlerForInlineAuthoring": {
      "id": "Awp0StartEditSummary",
      "activeWhen": {
        "condition": "conditions.isStartEditAllowedInInlineAuthoringMode"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenObjectInfoHideCmndHandlerForInlineAuthoring": {
      "id": "Awp0ObjectInfo",
      "activeWhen": {
        "condition": "conditions.isObjectInfoCmdAllowedInInlineAuthoringMode"
      },
      "visibleWhen": false
    },
    "removeInlineRowCommandHandler": {
      "id": "Awb0RemoveRow",
      "action": "removeRowAction",
      "activeWhen": {
        "condition": "conditions.isInlineRemoveRowCellCommandSupported"
      },
      "visibleWhen": {
        "condition": "conditions.isInlineRemoveRowCellCommandSupported"
      }
    },
    "inlineAuthOverriddenHideRemoveElementCmndHandlerForInlineAuthoring": {
      "id": "Awb0RemoveElement",
      "activeWhen": {
        "condition": "conditions.isInlineRemoveElementCommandSupported"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenHideReplaceRevOccElementCmndHandlerForInlineAuthoring": {
      "id": "Awb0ReplaceElementDeclarative",
      "activeWhen": {
        "condition": "conditions.isInlineReplaceRevOccElementCommandSupported"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenAwb0ShowSaveAsCommandHandler": {
      "id": "Awp0ShowSaveAs",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isSaveAsOrReviseSupportedInInlineAuthoring"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenAwb0AddChildElementDeclarativeCommandHandler": {
      "id": "Awb0AddChildElementDeclarative",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isAddChildOrSiblingSupportedInInlineAuthoring"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenAwb0AddSiblingElementDeclarativeCommandHandler": {
      "id": "Awb0AddSiblingElementDeclarative",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isAddChildOrSiblingSupportedInInlineAuthoring"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenAwb0ShowDuplicateCommandHandler": {
      "id": "Awb0ShowDuplicate",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isShowDuplicateSupportedInInlineAuthoring"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenAwb0ExpandCommandHandler": {
      "id": "Awb0Expand",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isExpandSupportedInInlineAuthoring"
      },
      "enableWhen": false
    },
    "inlineAuthOverriddenAwp0ShowMarkupsCommandHandler": {
      "id": "Awb0ShowMarkup",
      "activeWhen": {
        "condition": "conditions.isMarkupSupportedInInlineAuthoring"
      },
      "selectWhen": {
        "condition": "conditions.isMarkupEnabled"
      },
      "enableWhen": false
    },
    "inlineAuthOverriddenAwb0ExpandBelowCtxMenuCommandHandler": {
      "id": "Awb0ExpandBelowCtxMenu",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isExpandSupportedInInlineAuthoring"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenAwp0ColumnConfigCommandHandler": {
      "id": "openArrangePanel",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isInlineAuthoringMode"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenAwb0CollapseBelowCtxMenuCommandHandler": {
      "id": "Awb0CollapseBelowCtxMenu",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isExpandSupportedInInlineAuthoring"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddencreateTracelinkCommandHandler": {
      "id": "Arm0ExistingTraceLink",
      "activeWhen": {
        "condition": "conditions.isInlineAuthoringMode"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenAwb0PackCtxMenuCommandHandler": {
      "id": "Awb0PackCtxMenu",
      "activeWhen": {
        "condition": "conditions.isInlineAuthoringMode"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenAwb0ReplaceElementCtxMenuCommandHandler": {
      "id": "Awb0ReplaceElementCtxMenu",
      "activeWhen": {
        "condition": "conditions.isInlineAuthoringMode"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenAwb0InsertParentElementCtxMenuCommandHandler": {
      "id": "Awb0InsertParentElementCtxMenu",
      "activeWhen": {
        "condition": "conditions.isInlineAuthoringMode"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenAwb0RemoveElementCtxMenuCommandHandler": {
      "id": "Awb0RemoveElementCtxMenu",
      "activeWhen": {
        "condition": "conditions.isInlineAuthoringMode"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenArm0CreateTraceLinkCtxCommandHandler": {
      "id": "Arm0CreateTraceLinkCtx",
      "activeWhen": {
        "condition": "conditions.isInlineAuthoringMode"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenAwp0CutContextMenuCommandHandler": {
      "id": "Awp0CutContextMenu",
      "activeWhen": {
        "condition": "conditions.isAwp0CutContextMenuCommandSupportedInInlineAuthMode"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenAwp0PasteContextMenuCommandHandler": {
      "id": "Awp0PasteContextMenu",
      "activeWhen": {
        "condition": "conditions.isInlineAuthoringMode"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenAwb0RemoveLevelCtxMenuCommandHandler": {
      "id": "Awb0RemoveLevelCtxMenu",
      "activeWhen": {
        "condition": "conditions.isInlineAuthoringMode"
      },
      "visibleWhen": false
    },
    "inlineAuthOverriddenAwb0SetInContextCtxMenuCommandHandler": {
      "id": "Awb0SetInContextCtxMenu",
      "activeWhen": {
        "condition": "conditions.isInlineAuthoringMode"
      },
      "visibleWhen": false
    },
    "awb0OpenInViewCommandHandler": {
      "id": "awb0OpenInViewCommand",
      "action": "awb0launchOpenInViewCommandPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isInSplitMode"
      }
    },
    "awb0OpenInSplitViewCmdHandler": {
      "id": "Awp0ShowObject",
      "action": "awb0OpenInSplitView",
      "activeWhen": {
        "condition": "conditions.areSelectionsValidForSplitting"
      },
      "visibleWhen": {
        "condition": "conditions.areSelectionsValidForSplitting"
      }
    },
    "awb0SplitRootCmdHandler": {
      "id": "awb0SplitRootCmd",
      "action": "toggleSplitMode",
      "activeWhen": {
        "condition": "conditions.isSplitCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isSplitCommandVisible"
      },
      "selectWhen": {
        "condition": "conditions.isInSplitMode"
      }
    },
    "awb0StartTreeEditCommandHandler": {
      "id": "Awp0StartEditTable",
      "action": "awb0StartTreeEditPre",
      "activeWhen": {
        "condition": "conditions.isAwb0StartTreeEditApplicable"
      },
      "visibleWhen": {
        "condition": "conditions.isAwb0StartTreeEditApplicable"
      }
    },
    "awb0StartSummaryEditCommandHandler": {
      "id": "Awp0StartEditSummary",
      "action": "awb0SplitStartEditSummary",
      "activeWhen": {
        "condition": "conditions.isAwb0StartSummaryEditApplicable"
      },
      "visibleWhen": {
        "condition": "conditions.isAwb0StartSummaryEditVisible"
      }
    },
    "awb0SaveEditsCommandHandler": {
      "id": "Awp0SaveEdits",
      "action": "saveEdits",
      "activeWhen": {
        "condition": "conditions.isAwb0SummaryEditIsInProgress"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isAwb0SummaryEditIsInProgress"
      }
    },
    "awb0CancelEditCommandHandler": {
      "id": "Awp0CancelEdits",
      "action": "isDirtyOnCancelEdits",
      "activeWhen": {
        "condition": "conditions.isAwb0SummaryEditIsInProgress"
      },
      "visibleWhen": {
        "condition": "conditions.isAwb0SummaryEditIsInProgress"
      }
    },
    "awb0SaveEditsPWACommandHandler": {
      "id": "Awp0SaveEditsPWA",
      "action": "saveEdits",
      "activeWhen": {
        "condition": "conditions.isAwb0TreeEditInProgress"
      },
      "visibleWhen": {
        "condition": "conditions.isAwb0TreeEditInProgress"
      }
    },
    "awb0CancelEditPWACommandHandler": {
      "id": "Awp0CancelEditsPWA",
      "action": "isDirtyOnCancelEdits",
      "activeWhen": {
        "condition": "conditions.isAwb0TreeEditInProgress"
      },
      "visibleWhen": {
        "condition": "conditions.isAwb0TreeEditInProgress"
      }
    },
    "Awb0SelectAllHandler": {
      "id": "Awp0SelectAll",
      "action": "Awb0SelectAllCommandAction",
      "activeWhen": {
        "condition": "conditions.awb0SelectAllCondition"
      },
      "visibleWhen": {
        "condition": "conditions.awb0SelectAllCondition"
      }
    },
    "Awb0DeselectAllHandler": {
      "id": "Awp0DeselectAll",
      "action": "Awb0DeselectAllCommandAction",
      "activeWhen": {
        "condition": "conditions.awb0DeselectAllCondition"
      },
      "visibleWhen": {
        "condition": "conditions.awb0DeselectAllCondition"
      }
    },
    "Awb0EnableMultiSelectHandler": {
      "id": "Awp0EnableMultiSelect",
      "action": "Awb0EnableMultiSelectCommandAction",
      "activeWhen": {
        "condition": "conditions.awb0MultiSelectEnableCondition"
      },
      "visibleWhen": {
        "condition": "conditions.awb0MultiSelectEnableCondition"
      }
    },
    "Awb0DisableMultiSelectHandler": {
      "id": "Awp0DisableMultiSelect",
      "action": "Awb0DisableMultiSelectCommandAction",
      "activeWhen": {
        "condition": "conditions.awb0DisableMultiSelectCondition"
      },
      "visibleWhen": {
        "condition": "conditions.awb0DisableMultiSelectCondition"
      },
      "selectWhen": true
    },
    "discoveryOpenSnapshotQuickAccessHandler": {
      "id": "Awp0ShowObjectCell",
      "action": "openSnapshotAction",
      "activeWhen": {
        "condition": "conditions.isSnapshotSelectedInQuickAccess"
      },
      "visibleWhen": {
        "condition": "conditions.isSnapshotSelectedInQuickAccess"
      }
    },
    "discoveryOpenSnapshotGlobalSearchHandler": {
      "id": "Awp0ShowObjectCell",
      "action": "openSnapshotAction",
      "activeWhen": {
        "condition": "conditions.isSnapshotInGlobalSearch"
      },
      "visibleWhen": {
        "condition": "conditions.isSnapshotInGlobalSearch"
      }
    },
    "discoverySnapshotShowObjectNavigationHandler": {
      "id": "Awp0ShowObjectCellForObjectNavigation",
      "action": "openSnapshotAction",
      "activeWhen": {
        "condition": "conditions.isHandlerActiveForSnapshot"
      },
      "visibleWhen": {
        "condition": "conditions.isHandlerActiveForSnapshot"
      }
    },
    "Awb0CreateWorksetHandler": {
      "id": "Awb0CreateWorksetCommand",
      "action": "Awb0CreateWorksetCommandPanelAction",
      "activeWhen": {
        "condition": "conditions.isAwb0CreateWorksetAllowed"
      },
      "visibleWhen": {
        "condition": "conditions.isAwb0CreateWorksetAllowed"
      }
    },
    "discoveryHideCreateWorksetInMarkupMode": {
      "id": "Awb0CreateWorksetCommand",
      "activeWhen": {
        "condition": "conditions.hideCreateWorksetInMarkupMode"
      },
      "visibleWhen": false
    },
    "Awb0SaveSessionCommandHandler": {
      "id": "Awb0SaveSession",
      "action": "performSaveSession",
      "visibleWhen": true,
      "activeWhen": {
        "condition": "conditions.isSaveSessionActive"
      },
      "enableWhen": {
        "condition": "conditions.isSaveSessionApplicable"
      }
    },
    "Awb0ResetGroupHandler": {
      "id": "Awb0SessionGroup",
      "activeWhen": {
        "condition": "conditions.isResetGroupCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isResetGroupCommandVisible"
      }
    },
    "Awb0ReplayHandler": {
      "id": "Awb0ReplaySession",
      "action": "performReplayOfSession",
      "activeWhen": {
        "condition": "conditions.isReplaySessionWithProductVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isReplaySessionWithProductVisible"
      },
      "enableWhen": true
    },
    "Awb0ReplaySessionWithWorksetHandler": {
      "id": "Awb0ReplaySessionWithWorkset",
      "action": "performReplayOfWorkset",
      "activeWhen": {
        "condition": "conditions.isReplaySessionWithWorksetVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isReplaySessionWithWorksetVisible"
      },
      "enableWhen": {
        "condition": "conditions.isReplaySessionWithWorksetEnabled"
      }
    },
    "Awb0ResetSessionHandler": {
      "id": "Awb0ResetSession",
      "action": "discoveryShowConfirmationMessageForReset",
      "visibleWhen": {
        "condition": "conditions.isResetForSessionWithProductApplicable"
      },
      "activeWhen": {
        "condition": "conditions.isResetForSessionWithProductApplicable"
      }
    },
    "Awb0ResetSessionWithWorksetHandler": {
      "id": "Awb0ResetSession",
      "action": "discoveryShowConfirmationMessageForReset",
      "visibleWhen": {
        "condition": "conditions.isSessionWithWorksetOpen"
      },
      "activeWhen": {
        "condition": "conditions.isSessionWithWorksetOpen"
      },
      "enableWhen": true
    },
    "Awb0HideResetStructureCommandDelegate": {
      "id": "Awb0ResetStructure",
      "activeWhen": {
        "condition": "conditions.isTypeFnd0AppSession"
      },
      "visibleWhen": false
    },
    "Awb0HideEditWorkingContextCommandHandler": {
      "id": "Awb0UpdateWorkingContext",
      "activeWhen": {
        "condition": "conditions.isEditWorkingContextVisible"
      },
      "visibleWhen": false
    },
    "Awb0SaveAsSessionHandler": {
      "id": "awb0SaveAsSession",
      "action": "launchSaveAsSessionCommandPanel",
      "activeWhen": {
        "condition": "conditions.isAwb0SaveAsSessionAllowed"
      },
      "visibleWhen": {
        "condition": "conditions.isAwb0SaveAsSessionAllowed"
      }
    },
    "Awb0CreateSessionHandler": {
      "id": "Awb0CreateSessionCommand",
      "action": "Awb0CreateSessionCommandPanelAction",
      "activeWhen": {
        "condition": "conditions.isAwb0CreateSessionAllowed"
      },
      "visibleWhen": {
        "condition": "conditions.isAwb0CreateSessionAllowed"
      }
    },
    "discoveryHideReplaceForSubsetAndWorksetAtNonAce": {
      "id": "Awb0ReplaceElementDeclarative",
      "activeWhen": {
        "condition": "conditions.hideReplaceForSubsetAndWorksetAtNonAce"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryHideReplaceCtxMenuForSubset": {
      "id": "Awb0ReplaceElementCtxMenu",
      "activeWhen": {
        "condition": "conditions.hideReplaceForSubsetAndWorksetAtNonAce"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetDuplicateHandler": {
      "id": "Awb0ShowDuplicate",
      "activeWhen": {
        "condition": "conditions.isWorksetSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetCompareGroupHandler": {
      "id": "Awb0CompareGroup",
      "activeWhen": {
        "condition": "conditions.isWorksetOpenCondition"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetSubstituteHandler": {
      "id": "Awb0AddSubstitutes",
      "activeWhen": {
        "condition": "conditions.isSubstituteCmdVisibleForSubset"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "discoveryWorksetSubstituteHandlerPWA": {
      "id": "Awb0AddSubstitutesPWA",
      "activeWhen": {
        "condition": "conditions.isSubstituteCmdVisibleForSubsetPWA"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetSeparateCommandHandler": {
      "id": "Awb0Separate",
      "visibleWhen": true,
      "activeWhen": {
        "condition": "conditions.isSeparateCmdVisibleForSubset"
      },
      "enableWhen": false
    },
    "discoveyWorksetAddAlternatePWACommandHandler": {
      "id": "ps0AddAlternatePWA",
      "activeWhen": {
        "condition": "conditions.isAlternateCmdVisibleForWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetResetStructureHandler": {
      "id": "Awb0ResetStructure",
      "action": "discoveryShowConfirmationMessageForReset",
      "activeWhen": {
        "condition": "conditions.isTypeFnd0Workset"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isResetApplicableForWorkset"
      }
    },
    "discoveryWorksetSplitRootCmdHandler": {
      "id": "awb0SplitRootCmd",
      "activeWhen": {
        "condition": "conditions.isSplitCommandVisibleForSubset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetawb0CutCommandHandler": {
      "id": "Awp0Cut",
      "activeWhen": {
        "condition": "conditions.awb0CutCommandActiveForWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryHideCutCmdForProductSelectedInSWAInWorkset": {
      "id": "Awp0Cut",
      "activeWhen": {
        "condition": "conditions.isProductSelectedInSWAForWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetCutCtxMenuCommandHandler": {
      "id": "Awp0CutContextMenu",
      "activeWhen": {
        "condition": "conditions.awb0CutCommandActiveForWorkset"
      },
      "visibleWhen": false
    },
    "discoveryWorksetCopyCommandHandler": {
      "id": "Awp0Copy",
      "activeWhen": {
        "condition": "conditions.awp0CopyCommandActiveForWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetCopyCtxMenuCommandHandler": {
      "id": "Awp0CopyContextMenu",
      "activeWhen": {
        "condition": "conditions.awp0CopyCommandActiveForWorkset"
      },
      "visibleWhen": false
    },
    "discoveryWorksetMarkandSuspectHandler": {
      "id": "Arm0MarkAndSuspect",
      "activeWhen": {
        "condition": "conditions.isMarkAsSuspectCommandEnabledForWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetInitiateSubstCompCheckCommandHandler": {
      "id": "Scw0InitiateSubstanceComplianceCheck",
      "activeWhen": {
        "condition": "conditions.initiateComplianceCheckCommandVisibleForWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetExecuteRecipeHandler": {
      "id": "Evm1ExecuteRecipe",
      "activeWhen": {
        "condition": "conditions.executeRecipeCommandConditionForWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetBranchUploadCommandHandler": {
      "id": "Bhv1BranchUpload",
      "activeWhen": {
        "condition": "conditions.isBranchUploadEnabledForWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetAddCharRepresentationHandler": {
      "id": "Aqc0AddCharRepresentation",
      "activeWhen": {
        "condition": "conditions.isBOMWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetFreezePointCommandHandler": {
      "id": "Att1SetFreezePoint",
      "activeWhen": {
        "condition": "conditions.setFreezePointCmdEnabledForWorkset"
      },
      "visibleWhen": false
    },
    "discoveryWorksetCreateRecipeHandler": {
      "id": "Evm1CreateRecipe",
      "activeWhen": {
        "condition": "conditions.createRecipeEnabledForWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetopenInIllustratorHandler": {
      "id": "openInIllustrator",
      "activeWhen": {
        "condition": "conditions.isBOMWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetSc1CreateLineItemCmdHandler": {
      "id": "Sc1CreateLineItem",
      "activeWhen": {
        "condition": "conditions.isSubsetOrWorksetSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetSc1CreateExchangeCmdHandler": {
      "id": "Sc1CreateExchange",
      "activeWhen": {
        "condition": "conditions.isSubsetOrWorksetSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetArm0CreateTraceLinkCmdHandler": {
      "id": "Arm0CreateTraceLink",
      "activeWhen": {
        "condition": "conditions.isSubsetOrWorksetSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetArm0GenerateTraceabilityMatrixCmdHandler": {
      "id": "Arm0GenerateTraceabilityMatrix",
      "activeWhen": {
        "condition": "conditions.isSubsetOrWorksetSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetAwb0ImportFromExcelCmdHandler": {
      "id": "Awb0ImportFromExcel",
      "activeWhen": {
        "condition": "conditions.isSubsetOrWorksetSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetimportFromBriefcaseCommandCmdHandler": {
      "id": "importFromBriefcaseCommand",
      "activeWhen": {
        "condition": "conditions.isSubsetOrWorksetSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetArm0ImportFromOfficeCmdHandler": {
      "id": "Arm0ImportFromOffice",
      "activeWhen": {
        "condition": "conditions.isSubsetOrWorksetSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetCae1GenerateCAEStructureCmdHandler": {
      "id": "Cae1GenerateCAEStructure",
      "activeWhen": {
        "condition": "conditions.isSubsetOrWorksetSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetAwp0InContextReportsCmdHandler": {
      "id": "Awp0InContextReports",
      "activeWhen": {
        "condition": "conditions.isSubsetOrWorksetSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetEda1NewCollaborationCmdHandler": {
      "id": "Eda1NewCollaboration",
      "activeWhen": {
        "condition": "conditions.isSubsetOrWorksetSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetSaveWorkingContextCmdHandler": {
      "id": "Awb0SaveWorkingContext",
      "activeWhen": {
        "condition": "conditions.isBOMWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetAwp0MarkOwnershipTransferCmdHandler": {
      "id": "Awp0MarkOwnershipTransfer",
      "activeWhen": {
        "condition": "conditions.isBOMWorksetOrWorksetInAppSessionCondition"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetScw0CmplCategoriesCmdHandler": {
      "id": "Scw0CmplCategories",
      "activeWhen": {
        "condition": "conditions.isSubsetOrWorksetSelectedCondition"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetArm0ExistingTraceLinkCmdHandler": {
      "id": "Arm0ExistingTraceLink",
      "activeWhen": {
        "condition": "conditions.isSubsetOrWorksetSelectedCondition"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryHideRMBCutCmdForProductSelectedInSWAInWorkset": {
      "id": "Awp0CutContextMenu",
      "activeWhen": {
        "condition": "conditions.isProductSelectedInSWAForWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetAwp0ViewOwnershipTransferCmdHandler": {
      "id": "Awp0ViewOwnershipTransfer",
      "activeWhen": {
        "condition": "conditions.isBOMWorksetOrWorksetInAppSessionCondition"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetBhv1BranchExportCmdHandler": {
      "id": "Bhv1BranchExport",
      "activeWhen": {
        "condition": "conditions.isBOMWorksetOrWorksetInAppSessionCondition"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "Awb0HideSaveWorkingContextCommandHandlerForSession": {
      "id": "Awb0SaveAsWorkingContext",
      "action": "launchSaveSWCPanel",
      "activeWhen": {
        "condition": "conditions.hideSWCCommandForSession"
      },
      "visibleWhen": false
    },
    "Awb0HideOpenInRichClientCommandHandlerForSession": {
      "id": "Awp0OpenInRAC",
      "activeWhen": {
        "condition": "conditions.isOpenInRichClientVisibleForSession"
      },
      "visibleWhen": false
    },
    "Awb0HideOpenInIllustratorCommandHandlerForSession": {
      "id": "openInIllustrator",
      "activeWhen": {
        "condition": "conditions.isTypeFnd0AppSession"
      },
      "visibleWhen": false
    },
    "Awb0HideOpenInNXCommandHandlerForSessionOfWorkset": {
      "id": "Awn0OpenNxTcXml",
      "activeWhen": {
        "condition": "conditions.isSessionWithWorksetOpen"
      },
      "visibleWhen": false
    },
    "includeCtxMenuCommandHandler": {
      "id": "Awb0IncludeCtxMenu",
      "action": "launchStructureFilterPanelActionForIncludeBatch",
      "activeWhen": {
        "condition": "conditions.isIncludeExcludeVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isIncludeExcludeEnable"
      }
    },
    "includeWithoutChildrenCtxMenuCommandHandler": {
      "id": "Awb0IncludeWithoutChildrenCtxMenu",
      "action": "launchStructureFilterPanelActionForIncludeWithoutChildrenBatch",
      "activeWhen": {
        "condition": "conditions.isIncludeWithoutChildrenVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isIncludeWithoutChildrenEnabled"
      }
    },
    "excludeCtxMenuCommandHandler": {
      "id": "Awb0ExcludeCtxMenu",
      "action": "launchStructureFilterPanelActionForExcludeBatch",
      "activeWhen": {
        "condition": "conditions.isIncludeExcludeVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isIncludeExcludeEnable"
      }
    },
    "Awb0FilterSettingsCommandHandler": {
      "id": "Awb0FilterSettings",
      "action": "updateSharedDataForFilterSettings",
      "visibleWhen": true,
      "activeWhen": true,
      "enableWhen": true
    },
    "discoveryOccEffectivityCommandHandler": {
      "id": "Awb0OccurrenceEffectivity",
      "activeWhen": {
        "condition": "conditions.isOccEffectivityCmdVisibleForSubset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryRevisionEffectivityCommandHandler": {
      "id": "Awb0ReleaseStatusEffectivity",
      "activeWhen": {
        "condition": "conditions.isRevisionEffectivityCmdVisibleForSubset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryInsertLevelCmdHandler": {
      "id": "Awb0InsertParentElement",
      "activeWhen": {
        "condition": "conditions.isInsertLevelCmdVisibleForSubset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryInsertLevelCtxCmdHandler": {
      "id": "Awb0InsertParentElementCtxMenu",
      "activeWhen": {
        "condition": "conditions.isInsertLevelCtxCmdVisibleForSubset"
      },
      "visibleWhen": false
    },
    "discoveryRemoveLevelCmdHandler": {
      "id": "Awb0RemoveLevel",
      "activeWhen": {
        "condition": "conditions.isRemoveLevelCmdVisibleForSubset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryRemoveLevelCtxCmdHandler": {
      "id": "Awb0RemoveLevelCtxMenu",
      "activeWhen": {
        "condition": "conditions.isRemoveLevelCtxCmdVisibleForSubset"
      },
      "visibleWhen": false
    },
    "discoveryWorksetSaveAsReplaceHandler": {
      "id": "Awb0SaveAsAndReplaceElement",
      "activeWhen": {
        "condition": "conditions.isSaveAsReplaceCmdForSubset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryHideShowSaveAsReviseCmd": {
      "id": "Awp0ShowSaveAs",
      "activeWhen": {
        "condition": "conditions.discoveryIsSaveAsReviseUnSupported"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryWorksetSaveAsReviseHandler": {
      "id": "Awp0ShowSaveAs",
      "action": "saveAsReviseWorkset",
      "activeWhen": {
        "condition": "conditions.aceSaveAsReviseWorkset"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.aceSaveAsReviseWorkset"
      }
    },
    "Awv0ShowObjectGalleryCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "openSnapshotAction",
      "activeWhen": {
        "condition": "conditions.isSnapshotInGlobalSearchOrInDiscussion"
      },
      "visibleWhen": {
        "condition": "conditions.isSnapshotInGlobalSearchOrInDiscussion"
      }
    },
    "Awv0OpenInNewTabGalleryCommandHandler": {
      "id": "Awp0OpenInNewTab",
      "action": "openInNewTabCommandContext",
      "activeWhen": {
        "condition": "conditions.isSnapshotInGlobalSearch"
      },
      "visibleWhen": {
        "condition": "conditions.isSnapshotInGlobalSearch"
      }
    },
    "Awv0OpenInNewWindowGalleryCommandHandler": {
      "id": "Awp0OpenInNewWindow",
      "action": "openInNewWindowCommandContext",
      "activeWhen": {
        "condition": "conditions.isSnapshotInGlobalSearch"
      },
      "visibleWhen": {
        "condition": "conditions.isSnapshotInGlobalSearch"
      }
    },
    "Awv0ShowObjectGalleryCellCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "showObjectCellCommandContext",
      "activeWhen": {
        "condition": "conditions.isSnapshotSelectedInMyGallery"
      },
      "visibleWhen": {
        "condition": "conditions.isSnapshotSelectedInMyGallery"
      }
    },
    "Awv0OpenInNewTabGalleryCellCommandHandler": {
      "id": "Awp0OpenInNewTab",
      "action": "openInNewTabCellCommandContext",
      "activeWhen": {
        "condition": "conditions.isSnapshotSelectedInMyGallery"
      },
      "visibleWhen": {
        "condition": "conditions.isSnapshotSelectedInMyGallery"
      }
    },
    "Awv0OpenInNewWindowGalleryCellCommandHandler": {
      "id": "Awp0OpenInNewWindow",
      "action": "openInNewWindowCellCommandContext",
      "activeWhen": {
        "condition": "conditions.isSnapshotSelectedInMyGallery"
      },
      "visibleWhen": {
        "condition": "conditions.isSnapshotSelectedInMyGallery"
      }
    },
    "discoveryWorksetShowUnconfiguredByVariantsHandler": {
      "id": "Awb0ShowUnconfiguredByVariants",
      "activeWhen": {
        "condition": "conditions.isShowVariantsUnconfiguredInWorksetCondition"
      },
      "visibleWhen": true,
      "enableWhen": false,
      "selectWhen": {
        "condition": "conditions.showUnconfiguredVariants"
      }
    },
    "discoveryWorksetShowUnconfiguredByVariantsHandler_142": {
      "id": "Awb0ShowUnconfiguredByVariants",
      "activeWhen": {
        "condition": "conditions.isShowViewTogglesInWorksetCondition_142"
      },
      "visibleWhen": true,
      "enableWhen": false,
      "selectWhen": {
        "condition": "conditions.showUnconfiguredVariants"
      }
    },
    "discoveryWorksetShowUnconfiguredByEffHandler": {
      "id": "Awb0ShowUnconfiguredByOccEffectivity",
      "activeWhen": {
        "condition": "conditions.isShowEffUnconfiguredInWorksetCondition"
      },
      "visibleWhen": true,
      "enableWhen": false,
      "selectWhen": {
        "condition": "conditions.showUnconfigured"
      }
    },
    "discoveryWorksetShowUnconfiguredByEffHandler_142": {
      "id": "Awb0ShowUnconfiguredByOccEffectivity",
      "activeWhen": {
        "condition": "conditions.isShowViewTogglesInWorksetCondition_142"
      },
      "visibleWhen": true,
      "enableWhen": false,
      "selectWhen": {
        "condition": "conditions.showUnconfigured"
      }
    },
    "discoveryWorksetShowSuppressedHandler": {
      "id": "Awb0ShowSuppressed",
      "activeWhen": {
        "condition": "conditions.isShowSuppressedInWorksetCondition"
      },
      "visibleWhen": true,
      "enableWhen": false,
      "selectWhen": {
        "condition": "conditions.showSuppressed"
      }
    },
    "discoveryWorksetShowSuppressedHandler_142": {
      "id": "Awb0ShowSuppressed",
      "activeWhen": {
        "condition": "conditions.isShowViewTogglesInWorksetCondition_142"
      },
      "visibleWhen": true,
      "enableWhen": false,
      "selectWhen": {
        "condition": "conditions.showSuppressed"
      }
    },
    "discoverySessionShowUnconfiguredByVariantsHandler": {
      "id": "Awb0ShowUnconfiguredByVariants",
      "activeWhen": {
        "condition": "conditions.isShowVariantsUnconfiguredApplicableForSession"
      },
      "visibleWhen": true,
      "enableWhen": false,
      "selectWhen": {
        "condition": "conditions.showUnconfiguredVariants"
      }
    },
    "discoverySessionShowEffByVariantsHandler": {
      "id": "Awb0ShowUnconfiguredByOccEffectivity",
      "activeWhen": {
        "condition": "conditions.isShowEffUnconfiguredApplicableForSession"
      },
      "visibleWhen": true,
      "enableWhen": false,
      "selectWhen": {
        "condition": "conditions.showUnconfigured"
      }
    },
    "discoverySessionShowSuppressedHandler": {
      "id": "Awb0ShowSuppressed",
      "activeWhen": {
        "condition": "conditions.isShowSuppressedApplicableForSession"
      },
      "visibleWhen": true,
      "enableWhen": false,
      "selectWhen": {
        "condition": "conditions.showSuppressed"
      }
    },
    "applyProductSnapshotCommandHandler": {
      "id": "applyProductSnapshotCommand",
      "action": "openSnapshotAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isSnapshotInGlobalSearchOrInDiscussion3D"
      }
    },
    "Awb0SaveWorksetCommandHandler": {
      "id": "Awb0SaveWorkset",
      "action": "performSaveWorkset",
      "visibleWhen": true,
      "activeWhen": {
        "condition": "conditions.isSaveWorksetActive"
      },
      "enableWhen": {
        "condition": "conditions.isSaveWorksetApplicable"
      }
    },
    "Awb0ReplayWorksetHandler": {
      "id": "Awb0ReplayWorkset",
      "action": "updateReplay",
      "activeWhen": {
        "condition": "conditions.isReplayOfWorksetApplicable"
      },
      "visibleWhen": {
        "condition": "conditions.isReplayOfWorksetApplicable"
      },
      "enableWhen": {
        "condition": "conditions.isReplayOfWorksetEnabled"
      }
    },
    "Awb0ReplayAutoSaveWorksetHandler": {
      "id": "Awb0ReplayAutoSaveWorkset",
      "action": "performReplayOfWorkset",
      "activeWhen": {
        "condition": "conditions.canReplayAutoSaveWorkset"
      },
      "visibleWhen": {
        "condition": "conditions.canReplayAutoSaveWorkset"
      },
      "enableWhen": {
        "condition": "conditions.isReplayOfAutoSaveWorksetEnabled"
      }
    },
    "Awb0ReplayStaleAutoSaveWorksetHandler": {
      "id": "Awb0ReplayStaleAutoSaveWorkset",
      "action": "performReplayOfWorkset",
      "activeWhen": {
        "condition": "conditions.canEnableReplayWorksetForStaleTreeContent"
      },
      "visibleWhen": {
        "condition": "conditions.canEnableReplayWorksetForStaleTreeContent"
      },
      "enableWhen": {
        "condition": "conditions.isStaleWorksetReplayEnabled"
      }
    },
    "Ac0ShowObjectCommandHandler": {
      "id": "Ac0ShowObjectCommand",
      "action": "openSnapshotAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awb0CBOSForWorksetCmdHandler": {
      "id": "Awb0CBOSCmd",
      "action": "configureBySelectionInWorkset",
      "activeWhen": {
        "condition": "conditions.aceCBOSForWorksetApplicable"
      },
      "visibleWhen": {
        "condition": "conditions.aceCBOSForWorksetVisible"
      },
      "enableWhen": {
        "condition": "conditions.aceCBOSForWorksetApplicable"
      }
    },
    "Awb0SessionOpenVisCommandHandler": {
      "id": "Awp0OpenVVI",
      "action": "launchOpenInVis",
      "activeWhen": {
        "condition": "conditions.discoverySessionOpenInVisApplicable"
      },
      "visibleWhen": {
        "condition": "conditions.discoverySessionOpenInVisApplicable"
      },
      "enableWhen": {
        "condition": "conditions.discoverySessionOpenInVisApplicable"
      }
    },
    "Awb0WorksetOpenVisCommandHandler": {
      "id": "Awp0OpenVVI",
      "action": "openInVis",
      "activeWhen": {
        "condition": "conditions.discoveryWorksetOpenInVisApplicable"
      },
      "visibleWhen": {
        "condition": "conditions.discoveryWorksetOpenInVisApplicable"
      },
      "enableWhen": {
        "condition": "conditions.discoveryWorksetOpenInVisApplicable"
      }
    },
    "discoveryAceUnifiedInContextSearchInWorksetCommandHandler": {
      "id": "Awb0AceUnifiedInContextSearch",
      "action": "launchUnifiedNavigationPanel",
      "visibleWhen": {
        "condition": "conditions.findInContextOfWorksetApplicable"
      },
      "activeWhen": {
        "condition": "conditions.findInContextOfWorksetApplicable"
      },
      "enableWhen": {
        "condition": "conditions.findInContextOfWorksetEnable"
      }
    },
    "discoveryInContextSearchInAppSessionWorksetCommandHandler": {
      "id": "Awb0AceUnifiedInContextSearch",
      "action": "launchUnifiedNavigationPanel",
      "visibleWhen": {
        "condition": "conditions.findInContextOfAppSessionWorksetApplicable"
      },
      "activeWhen": {
        "condition": "conditions.findInContextOfAppSessionWorksetApplicable"
      },
      "enableWhen": {
        "condition": "conditions.findInContextOfAppSessionWorksetEnable"
      }
    },
    "discoveryHideCBOSCommandHandler": {
      "id": "Awb0CBOSCmd",
      "activeWhen": {
        "condition": "conditions.hideCBOSForTopNode"
      },
      "visibleWhen": false
    },
    "discoveryDisableRollupGroup": {
      "id": "Awb0RollupGroup",
      "activeWhen": {
        "condition": "conditions.discoveryHideRollUpReport"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryHideOpenWithMultipleSubsetsHandler": {
      "id": "Awp0ShowObject",
      "activeWhen": {
        "condition": "conditions.isOpenValidForSelectedObjectsInWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryHideExportToPLMXMLCommandHandler": {
      "id": "exportToPLMXMLCommand",
      "activeWhen": {
        "condition": "conditions.isExportToPLMXMLDisabled"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryHideGenerateFMEAStructureCommandHandler": {
      "id": "Qfm0GenerateFmea",
      "activeWhen": {
        "condition": "conditions.isWorksetinAppSessionSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryHideExportToBriefcaseCommandHandler": {
      "id": "exportToBriefcaseCommand",
      "activeWhen": {
        "condition": "conditions.isExportToBriefcaseValidInAppSessionWithWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryProductSnapshotTileOpenCommandHandler": {
      "id": "Awv0ProductSnapshotTileOpenCommand",
      "action": "openProductSnapshotViaTileAction",
      "visibleWhen": true,
      "activeWhen": true
    },
    "discoveryRemoveElementCommandHandler": {
      "id": "Awb0RemoveElement",
      "activeWhen": {
        "condition": "conditions.isRemoveInvalidUnderWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "discoveryRemoveElementCtxMenuCmdHandler": {
      "id": "Awb0RemoveElementCtxMenu",
      "activeWhen": {
        "condition": "conditions.isRemoveInvalidUnderWorkset"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "discoveryHideCutCtxMenuForLastSubsetCmdHandler": {
      "id": "Awp0CutContextMenu",
      "activeWhen": {
        "condition": "conditions.isCutInvalidUnderWorkset"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "discoveryHideCutForLastSubsetCmdHandler": {
      "id": "Awp0Cut",
      "activeWhen": {
        "condition": "conditions.isCutInvalidUnderWorkset"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "Awp0AlignDesignHandler": {
      "id": "Awp0AlignDesign",
      "action": "AlignDesignCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0AlignDesignCommandCondition"
      }
    },
    "Awp0UnAlignDesignHandler": {
      "id": "Awp0UnAlignDesign",
      "action": "RemoveDesignAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0UnAlignDesignCommandCondition"
      }
    },
    "Awp0AlignPartHandler": {
      "id": "Awp0AlignPart",
      "action": "AlignPartCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0AlignPartCommandCondition"
      }
    },
    "Awp0UnAlignPartHandler": {
      "id": "Awp0UnAlignPart",
      "action": "RemovePartAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0UnAlignPartCommandCondition"
      }
    },
    "Awp0SetPrimaryDesignHandler": {
      "id": "Awp0SetPrimaryDesign",
      "action": "SetPrimaryCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0SetPrimaryDesignCommandCondition"
      }
    },
    "EntCBAShowObjectCellDelegateCommandHandler": {
      "id": "Awp0ShowObjectCell",
      "action": "EntCBAShowObjectCellDelegateAction",
      "activeWhen": {
        "condition": "conditions.EntCBAShowObjectCondition"
      },
      "visibleWhen": {
        "condition": "conditions.EntCBAShowObjectCondition"
      }
    },
    "EntCBAShowObjectDelegateCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "EntCBAShowObjectDelegateAction",
      "activeWhen": {
        "condition": "conditions.EntCBAOpenObjectCondition"
      },
      "visibleWhen": {
        "condition": "conditions.EntCBAOpenObjectCondition"
      }
    },
    "EntCBAOpenInNewTabDelegateCommandHandler": {
      "id": "Awp0OpenInNewTab",
      "action": "EntCBAOpenObjectInNewTabDelegateAction",
      "activeWhen": {
        "condition": "conditions.EntCBAOpenObjectCondition"
      },
      "visibleWhen": {
        "condition": "conditions.EntCBAOpenObjectCondition"
      }
    },
    "EntCBAOpenInWindowTabDelegateCommandHandler": {
      "id": "Awp0OpenInNewWindow",
      "action": "EntCBAOpenObjectInNewWindowDelegateAction",
      "activeWhen": {
        "condition": "conditions.EntCBAOpenObjectCondition"
      },
      "visibleWhen": {
        "condition": "conditions.EntCBAOpenObjectCondition"
      }
    },
    "EntCBAOpenInRACTabDelegateCommandHandler": {
      "id": "Awp0OpenInRAC",
      "action": "EntCBAOpenObjectInRACDelegateAction",
      "activeWhen": {
        "condition": "conditions.EntCBAOpenObjectCondition"
      },
      "visibleWhen": {
        "condition": "conditions.EntCBAOpenObjectCondition"
      }
    },
    "Awp0CutDesignEntCBACommandHandler": {
      "id": "Awp0Cut",
      "action": "RemoveDesignAction",
      "activeWhen": {
        "condition": "conditions.entCBACutDesignVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.entCBACutDesignVisibility"
      },
      "enableWhen": {
        "condition": "conditions.entCBACutDesignVisibility"
      }
    },
    "Awp0CutCtxMenuDesignEntCBACommandHandler": {
      "id": "Awp0CutContextMenu",
      "action": "RemoveDesignAction",
      "activeWhen": {
        "condition": "conditions.isValidSelectionInAlignedDesignSection"
      },
      "visibleWhen": {
        "condition": "conditions.isValidSelectionInAlignedDesignSection"
      }
    },
    "Awb0CutCtxMenuEntCBACommandHandler": {
      "id": "Awp0CutContextMenu",
      "activeWhen": {
        "condition": "conditions.entCBACutActiveCondition"
      },
      "visibleWhen": false
    },
    "Awb0MoveToContextMenuEntCBACommandHandler": {
      "id": "Awb0MoveToContextMenu",
      "activeWhen": {
        "condition": "conditions.entCBAMoveToCommandEnable"
      },
      "visibleWhen": false
    },
    "Awp0CutPartEntCBACommandHandler": {
      "id": "Awp0Cut",
      "action": "RemovePartAction",
      "activeWhen": {
        "condition": "conditions.entCBACutPartVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.entCBACutPartVisibility"
      },
      "enableWhen": {
        "condition": "conditions.entCBACutPartVisibility"
      }
    },
    "Awp0CutCtxMenuPartEntCBACommandHandler": {
      "id": "Awp0CutContextMenu",
      "action": "RemovePartAction",
      "activeWhen": {
        "condition": "conditions.isValidSelectionInAlignedPartSection"
      },
      "visibleWhen": {
        "condition": "conditions.isValidSelectionInAlignedPartSection"
      }
    },
    "Awb0EntCBALaunchAlignTaskHandler": {
      "id": "Awb0EntCBALaunchAlignTask",
      "action": "EntCBALaunchAlignTaskCommandAction",
      "activeWhen": {
        "condition": "conditions.EntCBALaunchAlignTaskCommandCondition"
      },
      "visibleWhen": {
        "condition": "conditions.EntCBALaunchAlignTaskCommandCondition"
      },
      "enableWhen": {
        "condition": "conditions.EntCBALaunchAlignTaskCommandCondition"
      }
    },
    "Awb0EntCBAAlignCommandHandler": {
      "id": "Awb0EntCBAAlignCommand",
      "action": "EntCBAAlignCommandAction",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "enableWhen": {
        "condition": "conditions.AlignCommandCondition"
      }
    },
    "Awb0EntCBAUnAlignCommandHandler": {
      "id": "Awb0EntCBAUnAlignCommand",
      "action": "showUnAlignmentConfirmationMessage",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "enableWhen": {
        "condition": "conditions.UnAlignCommandCondition"
      }
    },
    "Awb0EntCBATopAlignCommandHandler": {
      "id": "Awb0EntCBAAlignCommand",
      "action": "EntCBATopAlignCommandAction",
      "activeWhen": {
        "condition": "conditions.isAlignCommandAvailableForTop"
      },
      "visibleWhen": {
        "condition": "conditions.isAlignCommandAvailableForTop"
      },
      "enableWhen": {
        "condition": "conditions.isAlignCommandAvailableForTop"
      }
    },
    "Awb0EntCBATopUnAlignCommandHandler": {
      "id": "Awb0EntCBAUnAlignCommand",
      "action": "showTopUnAlignConfirmationMessage",
      "activeWhen": {
        "condition": "conditions.isUnalignCommandAvailableForTop"
      },
      "visibleWhen": {
        "condition": "conditions.isUnalignCommandAvailableForTop"
      },
      "enableWhen": {
        "condition": "conditions.isUnalignCommandAvailableForTop"
      }
    },
    "Awb0EntCBAAlignmentCheck132OnwardsCommandHandler": {
      "id": "Awb0EntCBAAlignmentCheck",
      "action": "executeAlignmentCheckBatch",
      "activeWhen": {
        "condition": "conditions.enableAlignmentCheck132Onwards"
      },
      "visibleWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "enableWhen": {
        "condition": "conditions.AlignmentCheckCommandCondition"
      }
    },
    "Awb0EntCBAAlignmentCheckCommandHandler": {
      "id": "Awb0EntCBAAlignmentCheck",
      "action": "executeAlignmentCheck",
      "activeWhen": {
        "condition": "conditions.enableAlignmentCheckPriorTo132"
      },
      "visibleWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "enableWhen": {
        "condition": "conditions.AlignmentCheckCommandCondition"
      }
    },
    "showCBAColumnArrangeCommandHandler": {
      "id": "openArrangePanel",
      "action": "processCBAColumnsArrangeSettings",
      "activeWhen": {
        "condition": "conditions.isColumnArrangeIconVisible"
      },
      "enableWhen": true,
      "visibleWhen": {
        "condition": "conditions.isColumnArrangeIconVisible"
      }
    },
    "openCBANotificationCommandHandler": {
      "id": "Awp0OpenLineItem",
      "action": "openCBANotification",
      "activeWhen": {
        "condition": "conditions.enableOpenCBANotificationCommandCond"
      },
      "visibleWhen": {
        "condition": "conditions.enableOpenCBANotificationCommandCond"
      }
    },
    "cbaOpenInViewCommandHandler": {
      "id": "awb0OpenInViewCommand",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaStartEditCommandHandler": {
      "id": "Awp0StartEditTable",
      "activeWhen": {
        "condition": "conditions.editCommandVisibility"
      },
      "visibleWhen": false
    },
    "cbaViewGroupCommandHandler": {
      "id": "Awb0ViewGroup",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "enableWhen": {
        "condition": "conditions.isEntCBASubLocation"
      }
    },
    "cbaEnableMultiSelectHandler": {
      "id": "Awp0EnableMultiSelect",
      "activeWhen": {
        "condition": "conditions.multiSelectEnableCondition"
      },
      "visibleWhen": false
    },
    "Awb0EntCBAOpenGroupCommandHandler": {
      "id": "Awb0EntCBAOpenGroup",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "enableWhen": {
        "condition": "conditions.openGroupCommandsVisibility"
      }
    },
    "openTreeTableObjectCommandHandler": {
      "id": "Awb0EntCBAOpenObject",
      "action": "openTreeTableObjectAction",
      "activeWhen": {
        "condition": "conditions.openObjectFromTreeTableCondition"
      },
      "visibleWhen": {
        "condition": "conditions.openObjectFromTreeTableCondition"
      }
    },
    "openTreeTableObjectInNewWindowCommandHandler": {
      "id": "Awb0EntCBAOpenInNewWindow",
      "action": "openTreeTableObjectInNewWindow",
      "activeWhen": {
        "condition": "conditions.openObjectFromTreeTableCondition"
      },
      "visibleWhen": {
        "condition": "conditions.openObjectFromTreeTableCondition"
      }
    },
    "openTreeTableObjectInNewTabCommandHandler": {
      "id": "Awb0EntCBAOpenInNewTab",
      "action": "openTreeTableObjectInNewTab",
      "activeWhen": {
        "condition": "conditions.openObjectFromTreeTableCondition"
      },
      "visibleWhen": {
        "condition": "conditions.openObjectFromTreeTableCondition"
      }
    },
    "openTreeTableOEBOMbjectCommandHandler": {
      "id": "Awb0EntCBAOpenObject",
      "action": "openTreeTableBOMObjectAction",
      "activeWhen": {
        "condition": "conditions.openBOMObjectFromTreeTableActiveCondition"
      },
      "visibleWhen": {
        "condition": "conditions.openBOMObjectFromTreeTableVisibleCondition"
      }
    },
    "openTreeTableBOMObjectInNewWindowCommandHandler": {
      "id": "Awb0EntCBAOpenInNewWindow",
      "action": "openTreeTableBOMObjectInNewWindow",
      "activeWhen": {
        "condition": "conditions.openBOMObjectFromTreeTableActiveCondition"
      },
      "visibleWhen": {
        "condition": "conditions.openBOMObjectFromTreeTableVisibleCondition"
      }
    },
    "openTreeTableBOMObjectInNewTabCommandHandler": {
      "id": "Awb0EntCBAOpenInNewTab",
      "action": "openTreeTableBOMObjectInNewTab",
      "activeWhen": {
        "condition": "conditions.openBOMObjectFromTreeTableActiveCondition"
      },
      "visibleWhen": {
        "condition": "conditions.openBOMObjectFromTreeTableVisibleCondition"
      }
    },
    "Fnd0AlingedObjectOpenCommandHandler": {
      "id": "Awb0EntCBAOpenObject",
      "action": "EntCBAShowObjectDelegateAction",
      "activeWhen": {
        "condition": "conditions.EntCBAOpenObjectCondition"
      },
      "visibleWhen": {
        "condition": "conditions.EntCBAOpenObjectCondition"
      }
    },
    "Fnd0AlingedObjectOpenInNewTabCommandHandler": {
      "id": "Awb0EntCBAOpenInNewTab",
      "action": "EntCBAOpenObjectInNewTabDelegateAction",
      "activeWhen": {
        "condition": "conditions.EntCBAOpenObjectCondition"
      },
      "visibleWhen": {
        "condition": "conditions.EntCBAOpenObjectCondition"
      }
    },
    "Fnd0AlingedObjectOpenInWindowTabCommandHandler": {
      "id": "Awb0EntCBAOpenInNewWindow",
      "action": "EntCBAOpenObjectInNewWindowDelegateAction",
      "activeWhen": {
        "condition": "conditions.EntCBAOpenObjectCondition"
      },
      "visibleWhen": {
        "condition": "conditions.EntCBAOpenObjectCondition"
      }
    },
    "openItemObjectCommandHandler": {
      "id": "Awb0EntCBAOpenObject",
      "action": "openItemObjectAction",
      "activeWhen": {
        "condition": "conditions.isItemOrItemRevisionSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isItemOrItemRevisionSelected"
      }
    },
    "openItemObjectInNewWindowDelegateCommandHandler": {
      "id": "Awb0EntCBAOpenInNewWindow",
      "action": "openItemObjectInNewWindowAction",
      "activeWhen": {
        "condition": "conditions.isItemOrItemRevisionSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isItemOrItemRevisionSelected"
      }
    },
    "openItemObjectInNewTabDelegateCommandHandler": {
      "id": "Awb0EntCBAOpenInNewTab",
      "action": "openItemObjectInNewTabAction",
      "activeWhen": {
        "condition": "conditions.isItemOrItemRevisionSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isItemOrItemRevisionSelected"
      }
    },
    "cbaAddGroupCommandHandler": {
      "id": "Awb0AddGroup",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaStructureFilterCommandHandler": {
      "id": "Awb0StructureFilterCommand",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "cbaPartitionCommandHandler": {
      "id": "Awb0Partition",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaCompareGroupCommandHandler": {
      "id": "Awb0CompareGroup",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaRollupGroupCommandHandler": {
      "id": "Awb0RollupGroup",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaShowDuplicateCommandHandler": {
      "id": "Awb0ShowDuplicate",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaSplitRootCommandHandler": {
      "id": "awb0SplitRootCmd",
      "activeWhen": {
        "condition": "conditions.splitCommandVisibility"
      },
      "visibleWhen": false
    },
    "cbaRestructureGroupCommandHandler": {
      "id": "Awb0RestructureGroup",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaConfigBySelectionCommandHandler": {
      "id": "Awb0CBOSCmd",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaConfigByProximityCommandHandler": {
      "id": "Awb0ConfigByProximityCmd",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaPackCommandHandler": {
      "id": "Awb0Pack",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaUnpackCommandHandler": {
      "id": "Awb0Unpack",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaSetInContextCommandHandler": {
      "id": "Awb0SetInContext",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaShowMarkupCommandHandler": {
      "id": "Awb0ShowMarkup",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaWBSCloneGroupHandler": {
      "id": "Awb0WBSCloneGroup",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "Awb0EntCBAAlignGroupCommandHandler": {
      "id": "Awb0EntCBAAlignGroup",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isAlignGroupCmdVisible"
      },
      "enableWhen": {
        "condition": "conditions.isAlignGroupCmdVisible"
      }
    },
    "Awb0EntCBAOpenAlignmentViewCommandHandler": {
      "id": "Awb0EntCBAOpenAlignmentView",
      "action": "EntCBALaunchAlignTaskCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.EntCBALaunchAlignTaskCommandCondition"
      },
      "enableWhen": {
        "condition": "conditions.EntCBALaunchAlignTaskCommandCondition"
      }
    },
    "CBADisableCutInAlignDesignSectionCmdHandler": {
      "id": "Awp0Cut",
      "activeWhen": {
        "condition": "conditions.isValidSelectionInAlignedDesignSection"
      },
      "visibleWhen": {
        "condition": "conditions.isValidSelectionInAlignedDesignSection"
      },
      "enableWhen": false
    },
    "CBADisableCutInAlignedPartSectionCmdHandler": {
      "id": "Awp0Cut",
      "activeWhen": {
        "condition": "conditions.isValidSelectionInAlignedPartSection"
      },
      "visibleWhen": {
        "condition": "conditions.isValidSelectionInAlignedPartSection"
      },
      "enableWhen": false
    },
    "Awb0EntCBADeselectAllHandler": {
      "id": "Awb0EntCBADeselectAll",
      "action": "Awb0EntCBADeselectAllCommandAction",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "enableWhen": {
        "condition": "conditions.DeselectAllCommandCondition"
      }
    },
    "Awb0FindAlignedCommandHandler": {
      "id": "Awb0FindAligned",
      "action": "FindAlignedAction",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": {
        "condition": "conditions.FindAlignedCommandCondition"
      },
      "enableWhen": {
        "condition": "conditions.FindAlignedCommandCondition"
      }
    },
    "cbaCopyContextMenuCommandHandler": {
      "id": "Awp0CopyContextMenu",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaCopyContextMenuCommandHandler2": {
      "id": "Awp0CopyContextMenu",
      "action": "copyFnd0AlignedElement",
      "activeWhen": {
        "condition": "conditions.isFnd0AlignedElementSelected"
      },
      "visibleWhen": {
        "condition": "conditions.isFnd0AlignedElementSelected"
      }
    },
    "cbaCopyCommandHandler": {
      "id": "Awp0Copy",
      "action": "copyFnd0AlignedElement",
      "activeWhen": {
        "condition": "conditions.isFnd0AlignedElementSelected"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isFnd0AlignedElementSelected"
      }
    },
    "cbaPackCtxMenuCommandHandler": {
      "id": "Awb0PackCtxMenu",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaUnpackCtxMenuCommandHandler": {
      "id": "Awb0UnpackCtxMenu",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaInsertParentElementCtxMenuCommandHandler": {
      "id": "Awb0InsertParentElementCtxMenu",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaReplaceElementCtxMenuCommandHandler": {
      "id": "Awb0ReplaceElementCtxMenu",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaRemoveElementCtxMenuCommandHandler": {
      "id": "Awb0RemoveElementCtxMenu",
      "activeWhen": {
        "condition": "conditions.activateRemoveElementCtxMenuCmdCondition"
      },
      "visibleWhen": false
    },
    "RemoveElementCtxMenuEntCBACommandHandler": {
      "id": "Awb0RemoveElementCtxMenu",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaRemoveLevelCtxMenuCommandHandler": {
      "id": "Awb0RemoveLevelCtxMenu",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaSetInContextCtxMenuCommandHandler": {
      "id": "Awb0SetInContextCtxMenu",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaIncludeCtxMenuCommandHandler": {
      "id": "Awb0IncludeCtxMenu",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaExcludeCtxMenuCommandHandler": {
      "id": "Awb0ExcludeCtxMenu",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaCreateTraceLinkCtxCommandHandler": {
      "id": "Arm0CreateTraceLinkCtx",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaAddTraceLinkCtxCommandHandler": {
      "id": "Arm0AddTraceLinkCtx",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaExistingTraceLinkCommandHandler": {
      "id": "Arm0ExistingTraceLink",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaPasteContextMenuCommandHandler": {
      "id": "Awp0PasteContextMenu",
      "activeWhen": {
        "condition": "conditions.isEntCBASubLocation"
      },
      "visibleWhen": false
    },
    "cbaPasteCommandHandler": {
      "id": "Awp0Paste",
      "action": "performPasteAction",
      "activeWhen": {
        "condition": "conditions.EntCBAPasteCommandCondition"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.EntCBAPasteCommandCondition"
      }
    },
    "RevisionRuleClauseUpCommandHandler": {
      "id": "RevisionRuleClauseUp",
      "action": "moveClauseUp",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRevisionRuleEditable"
      },
      "enableWhen": {
        "condition": "conditions.RevisionRuleClauseUpCommandEnable"
      }
    },
    "RevisionRuleClauseDownCommandHandler": {
      "id": "RevisionRuleClauseDown",
      "action": "moveClauseDown",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRevisionRuleEditable"
      },
      "enableWhen": {
        "condition": "conditions.RevisionRuleClauseDownCommandEnable"
      }
    },
    "RevisionRuleClauseAddCommandHandler": {
      "id": "RevisionRuleClauseAdd",
      "action": "launchAddClausePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRevisionRuleEditable"
      },
      "enableWhen": {
        "condition": "conditions.RevisionRuleClauseAddCommandEnable"
      }
    },
    "RevisionRuleClauseAddCommandHandlerForRevOcc": {
      "id": "RevisionRuleClauseAdd",
      "action": "launchAddClausePanel",
      "activeWhen": {
        "condition": "conditions.isRevisableOccurrenceStruct"
      },
      "visibleWhen": {
        "condition": "conditions.isRevisionRuleEditable"
      },
      "enableWhen": {
        "condition": "conditions.RevisionRuleClauseAddCommandEnableForRevOcc"
      }
    },
    "RevisionRuleClauseDeleteCommandHandler": {
      "id": "RevisionRuleClauseDelete",
      "action": "deleteClause",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRevisionRuleEditable"
      },
      "enableWhen": {
        "condition": "conditions.RevisionRuleClauseDeleteCommandEnable"
      }
    },
    "RevisionRuleAdminAddCommandHandler": {
      "id": "RevisionRuleAdminAdd",
      "action": "launchAddAdminPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0RevisionRuleAdminAddCommandConditionActive"
      }
    },
    "RevisionRuleAdminDeleteCommandHandler": {
      "id": "RevisionRuleAdminDelete",
      "action": "deleteRevisionRule",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0RevisionRuleAdminAddCommandConditionActive"
      },
      "enableWhen": {
        "condition": "conditions.RevisionRuleAdminDeleteCommandEnable"
      }
    },
    "RevisionRuleAdminCommandHandler": {
      "id": "RevisionRuleAdmin",
      "action": "launchRevisionRuleAdminPanelAction",
      "activeWhen": {
        "condition": "conditions.RevisionRuleAdminCommandConditionActive"
      },
      "visibleWhen": {
        "condition": "conditions.RevisionRuleAdminCommandConditionActive"
      }
    },
    "CloseRevisionRuleAdminPanelCommandHandler": {
      "id": "Awp0CloseCommandPanel",
      "action": "closeRevisionRulePanel",
      "activeWhen": {
        "condition": "conditions.isRevisionRulePanelLaunched"
      },
      "visibleWhen": true
    },
    "ClausePropertyAddCommandHandler": {
      "id": "ClausePropertyAdd",
      "action": "launchClausePropertyAddPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.ClausePropertyAddCommandActive"
      }
    },
    "AddClausePropertyCommandHandler": {
      "id": "AddClauseProperty",
      "action": "launchAddClausePropertyPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRevisionRuleEditable"
      },
      "enableWhen": {
        "condition": "conditions.AddClausePropertyCommandActive"
      }
    },
    "ClausePropertyRemoveCommandHandler": {
      "id": "ClausePropertyRemove",
      "action": "removeClauseProperty",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveReplacePropActive"
      }
    },
    "RemoveClausePropertyCommandHandler": {
      "id": "RemoveClauseProperty",
      "action": "clausePropertyRemove",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRevisionRuleEditable"
      },
      "enableWhen": {
        "condition": "conditions.IsAddRevisionRuleClausePropertyPresent"
      }
    },
    "ClausePropertyReplaceCommandHandler": {
      "id": "ClausePropertyReplace",
      "action": "launchClausePropertyReplacePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveReplacePropActive"
      }
    },
    "ReplaceClausePropertyCommandHandler": {
      "id": "ReplaceClauseProperty",
      "action": "launchReplaceClausePropertyPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRevisionRuleEditable"
      },
      "enableWhen": {
        "condition": "conditions.IsAddRevisionRuleClausePropertyPresent"
      }
    },
    "Awb0AddPartitionCommandHandler": {
      "id": "Awb0AddPartition",
      "action": "launchAddPartitionPanel",
      "activeWhen": {
        "condition": "conditions.isAddPartitionCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isAddPartitionCommandVisible"
      },
      "enableWhen": {
        "condition": "conditions.isAddPartitionCommandEnabled"
      }
    },
    "sptn0ImportBOMCmdHandler": {
      "id": "Awb0ImportFromExcel",
      "activeWhen": {
        "condition": "conditions.enableImportBOMCommandForPartition"
      },
      "visibleWhen": false
    },
    "sptn0CompareCmdHandler": {
      "id": "Awb0Compare",
      "activeWhen": {
        "condition": "conditions.isCompareApplicableInPartition"
      },
      "visibleWhen": false
    },
    "sptn0ShowMarkupCommandHandler": {
      "id": "Awb0ShowMarkup",
      "activeWhen": {
        "condition": "conditions.isSchemeAppliedAndNot4GD"
      },
      "visibleWhen": false
    },
    "sptn0ExcelRoundTripHandler": {
      "id": "Arm0ExportImport",
      "activeWhen": {
        "condition": "conditions.isSchemeAppliedAndNot4GD"
      },
      "visibleWhen": false
    },
    "sptn0ExportExcelCommandHandler": {
      "id": "Arm0Export",
      "activeWhen": {
        "condition": "conditions.isSchemeAppliedAndNot4GD"
      },
      "visibleWhen": false
    },
    "sptn0ImportExcelCommandHandler": {
      "id": "Arm0ImportExcel",
      "activeWhen": {
        "condition": "conditions.isSchemeAppliedAndNot4GD"
      },
      "visibleWhen": false
    },
    "structurePartitionOpenGroupCommandHandler": {
      "id": "Awp0OpenGroup",
      "activeWhen": {
        "condition": "conditions.isAtleastOnePartitionElementSelectedForStructurePartition"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "structurePartitionDuplicateHandeler": {
      "id": "Awb0ShowDuplicate",
      "activeWhen": {
        "condition": "conditions.isStrPartitionDuplicateSupported"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "structurePartitionSetInContextHandeler": {
      "id": "Awb0SetInContext",
      "activeWhen": {
        "condition": "conditions.isStrPartitionSetInContextSupported"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "structurePartitionSetInContextCtxHandeler": {
      "id": "Awb0SetInContextCtxMenu",
      "activeWhen": {
        "condition": "conditions.isStrPartitionSetInContextSupportedOnCtx"
      },
      "visibleWhen": false
    },
    "structurePartitionCompareGroupHandler": {
      "id": "Awb0CompareGroup",
      "activeWhen": {
        "condition": "conditions.isSchemeAppliedAndNot4GD"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "structurePartitionElemEffectivityHandeler": {
      "id": "Awb0OccurrenceEffectivity",
      "activeWhen": {
        "condition": "conditions.strPartitionElemEffectivitySupported"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "structurePartitionRollupGroupCmdHandler": {
      "id": "Awb0RollupGroup",
      "visibleWhen": true,
      "activeWhen": {
        "condition": "conditions.isStrPartitionRollupSupported"
      },
      "enableWhen": false
    },
    "structurePartitionPackHandler": {
      "id": "Awb0Pack",
      "activeWhen": {
        "condition": "conditions.isAtleastOnePartitionElementSelectedForStructurePartition"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "structurePartitionPackCtxMenuHandler": {
      "id": "Awb0PackCtxMenu",
      "activeWhen": {
        "condition": "conditions.isAtleastOnePartitionElementSelectedForStructurePartition"
      },
      "visibleWhen": false
    },
    "structurePartitionSplitHandler": {
      "id": "Awb0Separate",
      "action": "separateElementToDistinctElements",
      "visibleWhen": true,
      "activeWhen": {
        "condition": "conditions.isAutoPartitionUpdateScheme"
      },
      "enableWhen": {
        "condition": "conditions.isSplitEnableInAutoPartitionMode"
      }
    },
    "Awb0RemoveElementStructurePartitionHandler": {
      "id": "Awb0RemoveElement",
      "action": "showConfirmationMessage",
      "activeWhen": {
        "condition": "conditions.isSchemeAppliedAndNot4GD"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isRemoveCommandSupportedInSchemeOverlayMode"
      }
    },
    "Awb0RemoveElementCtxMenuStrPtnHandler": {
      "id": "Awb0RemoveElementCtxMenu",
      "action": "showConfirmationMessage",
      "activeWhen": {
        "condition": "conditions.isSchemeAppliedAndNot4GD"
      },
      "visibleWhen": {
        "condition": "conditions.isRemoveCommandSupportedInSchemeOverlayMode"
      },
      "enableWhen": {
        "condition": "conditions.isRemoveCommandSupportedInSchemeOverlayMode"
      }
    },
    "Awb0UnassignMemHandler": {
      "id": "Awb0UnassignMem",
      "action": "showPtnMemberConfirmationMessage",
      "visibleWhen": true,
      "activeWhen": {
        "condition": "conditions.isSchemeAppliedAndNot4GD"
      },
      "enableWhen": {
        "condition": "conditions.canUnassignPtnMemberEnabled"
      }
    },
    "Awb0DeletePartitionHandler": {
      "id": "Awb0DeletePartition",
      "action": "showPartitionDeletionConfirmationMessage",
      "activeWhen": {
        "condition": "conditions.isSchemeAppliedAndNot4GD"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isDeletePartitionCommandVisibleEnabled"
      }
    },
    "Awb0PartitionGroupHandler": {
      "id": "Awb0Partition",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isPartitionGroupVisible"
      },
      "enableWhen": {
        "condition": "conditions.isPartitionGroupVisible"
      }
    },
    "Awb0Unassigned": {
      "id": "Awb0Unassigned",
      "action": "toggleUnassignedMode",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isUnassignedCmdVisible"
      },
      "enableWhen": {
        "condition": "conditions.isUnassignedCmdEnable"
      },
      "selectWhen": {
        "condition": "conditions.isInUnassignedMode"
      }
    },
    "Awb0SplitRootCmdStructurePartitionHandler": {
      "id": "awb0SplitRootCmd",
      "action": "batchActionsForSpiltCommand",
      "visibleWhen": true,
      "activeWhen": {
        "condition": "conditions.isSplitCmdVisibleAndUnassignedMode"
      },
      "enableWhen": {
        "condition": "conditions.isSplitCmdVisibleAndUnassignedMode"
      },
      "selectWhen": {
        "condition": "conditions.isSplitCmdVisibleAndUnassignedMode"
      }
    },
    "structureFilterCommandPartitionHandler": {
      "id": "Awb0StructureFilterCommand",
      "action": "launchStructureFilterPanel",
      "activeWhen": {
        "condition": "conditions.isSchemeAppliedAndNot4GD"
      },
      "visibleWhen": {
        "condition": "conditions.isOccurrenceManagementSubLocation"
      },
      "enableWhen": {
        "condition": "conditions.isStructureFilterEnable"
      }
    },
    "addChildElementCommandHandlerOverride": {
      "id": "Awb0AddChildElementDeclarative",
      "activeWhen": {
        "condition": "conditions.isAddChildApplicableInContextOfPartitionScheme"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "addSiblingElementCommandHandlerOverride": {
      "id": "Awb0AddSiblingElementDeclarative",
      "activeWhen": {
        "condition": "conditions.isAddSiblingApplicableInContextOfPartitionScheme"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "Awb0GetLiveSearchResultCommandHandlerOverride": {
      "id": "Awb0GetLiveSearchResultCommand",
      "activeWhen": {
        "condition": "conditions.isSchemeAppliedConditionInFindPanel"
      },
      "visibleWhen": false
    },
    "Fgf0CreatePartitionSchemeHandler": {
      "id": "Fgf0CreatePartitionScheme",
      "action": "FgfCreatePartitionSchemeAction",
      "activeWhen": {
        "condition": "conditions.fgf0CreatePartitionSchemeCmdVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.fgf0CreatePartitionSchemeCmdVisibility"
      },
      "enableWhen": {
        "condition": "conditions.fgf0CreatePartitionSchemeCmdEnable"
      }
    },
    "PartitionPasteHandler": {
      "id": "Awp0Paste",
      "activeWhen": {
        "condition": "conditions.partitionPasteVisibleCondition"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "PartitionPasteContextMenuHandler": {
      "id": "Awp0PasteContextMenu",
      "activeWhen": {
        "condition": "conditions.partitionPasteVisibleCondition"
      },
      "visibleWhen": false
    },
    "Awb0MoveToHandler": {
      "id": "Awb0MoveTo",
      "action": "checkForEditsAndAcePasteContentsFromClipboard",
      "activeWhen": {
        "condition": "conditions.isSchemeAppliedAndNot4GD"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isMoveToCommandEnable"
      }
    },
    "Awb0MoveToContextMenuCommandHandler": {
      "id": "Awb0MoveToContextMenu",
      "action": "checkForEditsAndAcePasteContentsFromClipboard",
      "activeWhen": {
        "condition": "conditions.isSchemeAppliedAndNot4GD"
      },
      "visibleWhen": {
        "condition": "conditions.isMoveToCommandEnable"
      },
      "enableWhen": {
        "condition": "conditions.isMoveToCommandEnable"
      }
    },
    "awb0CutCommandHandlerOverride": {
      "id": "Awp0Cut",
      "action": "aceCutContentsToClipboard",
      "activeWhen": {
        "condition": "conditions.awb0CutCommandActiveInSchemeOverlaid"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.aceCutEnableInSchemeOverlaidCondition"
      }
    },
    "awb0CutCtxMenuCommandHandlerOverride": {
      "id": "Awp0CutContextMenu",
      "action": "aceCutContentsToClipboard",
      "activeWhen": {
        "condition": "conditions.awb0CutCommandActiveInSchemeOverlaid"
      },
      "visibleWhen": {
        "condition": "conditions.aceCutEnableInSchemeOverlaidCondition"
      }
    },
    "Awb0ContentCompareHandlerOverride": {
      "id": "Awb0ContentCompare",
      "activeWhen": {
        "condition": "conditions.isSchemeOverlaidAndPartitionSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    }
  },
  "commandPlacements": {
    "Awb0SeparateCommandPlacement": {
      "id": "Awb0Separate",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 50,
      "parentGroupId": "Awb0RestructureGroup"
    },
    "Awb0PackCmdPlacement": {
      "id": "Awb0Pack",
      "priority": 10,
      "uiAnchor": "Awb0ExpandGroup"
    },
    "Awb0PackCtxMenuCmdPlacement": {
      "id": "Awb0PackCtxMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 40
    },
    "Awb0UnpackCmdPlacement": {
      "id": "Awb0Unpack",
      "priority": 20,
      "uiAnchor": "Awb0ExpandGroup"
    },
    "Awb0UnpackCtxMenuCmdPlacement": {
      "id": "Awb0UnpackCtxMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 41
    },
    "Awb0PackAllCmdPlacement": {
      "id": "Awb0PackAll",
      "priority": 30,
      "uiAnchor": "Awb0ExpandGroup"
    },
    "Awb0UnpackAllCmdPlacement": {
      "id": "Awb0UnpackAll",
      "priority": 40,
      "uiAnchor": "Awb0ExpandGroup"
    },
    "Awb0GetLiveSearchResultCommandPlacement": {
      "id": "Awb0GetLiveSearchResultCommand",
      "uiAnchor": "aw_search_objects",
      "priority": 180
    },
    "Awb0MoveUpCommandPlacement": {
      "id": "Awb0MoveUpCommand",
      "uiAnchor": "aw_search_objects",
      "priority": 200
    },
    "Awb0MoveDownCommandPlacement": {
      "id": "Awb0MoveDownCommand",
      "uiAnchor": "aw_search_objects",
      "priority": 300
    },
    "Awb0SelectAllCommandPlacement": {
      "id": "Awb0SelectAllCommand",
      "uiAnchor": "aw_search_objects",
      "priority": 400
    },
    "addChildProductCommandPlacement-classic": {
      "id": "Awb0AddChildProductToSWC",
      "uiAnchor": "aw_toolsAndInfo",
      "priority": 100,
      "parentGroupId": "Awb0AddElementGroupDeclarative"
    },
    "addChildProductCommandPlacement": {
      "id": "Awb0AddChildProductToSWC",
      "uiAnchor": "aw_rightWall",
      "priority": 15,
      "parentGroupId": "Awp0NewGroup"
    },
    "addChildElementCommandPlacement-classic": {
      "id": "Awb0AddChildElementDeclarative",
      "uiAnchor": "aw_toolsAndInfo",
      "priority": 100,
      "parentGroupId": "Awb0AddElementGroupDeclarative"
    },
    "addChildElementCommandPlacement": {
      "id": "Awb0AddChildElementDeclarative",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 10,
      "parentGroupId": "Awb0AddGroup"
    },
    "Awb0AddSubstitutesCommandPlacement": {
      "id": "Awb0AddSubstitutesPWA",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 30,
      "parentGroupId": "Awb0AddGroup"
    },
    "insertLevelCommandPlacement": {
      "id": "Awb0InsertParentElement",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 44,
      "parentGroupId": "Awb0RestructureGroup"
    },
    "insertLevelCtxMenuCommandPlacement": {
      "id": "Awb0InsertParentElementCtxMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 43
    },
    "addSiblingElementCommandPlacement-classic": {
      "id": "Awb0AddSiblingElementDeclarative",
      "uiAnchor": "aw_toolsAndInfo",
      "priority": 100,
      "parentGroupId": "Awb0AddElementGroupDeclarative"
    },
    "addSiblingElementCommandPlacement": {
      "id": "Awb0AddSiblingElementDeclarative",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 20,
      "parentGroupId": "Awb0AddGroup"
    },
    "addSiblingProductToSWCCommandPlacement-classic": {
      "id": "Awb0AddSiblingProductToSWC",
      "uiAnchor": "aw_toolsAndInfo",
      "priority": 100,
      "parentGroupId": "Awb0AddElementGroupDeclarative"
    },
    "addSiblingProductToSWCCommandPlacement": {
      "id": "Awb0AddSiblingProductToSWC",
      "uiAnchor": "aw_rightWall",
      "priority": 25,
      "parentGroupId": "Awp0NewGroup"
    },
    "replaceElementCommandPlacement-classic": {
      "id": "Awb0ReplaceElementDeclarative",
      "uiAnchor": "aw_toolsAndInfo",
      "priority": 100,
      "parentGroupId": "Awb0ReplaceGroupCommand"
    },
    "replaceElementCommandPlacement": {
      "id": "Awb0ReplaceElementDeclarative",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 20,
      "parentGroupId": "Awb0RestructureGroup"
    },
    "replaceElementCtxMenuCmdPlacement": {
      "id": "Awb0ReplaceElementCtxMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 42
    },
    "saveAsAndReplaceElementCommandPlacement-classic": {
      "id": "Awb0SaveAsAndReplaceElement",
      "uiAnchor": "aw_toolsAndInfo",
      "priority": 100,
      "parentGroupId": "Awb0ReplaceGroupCommand"
    },
    "saveAsAndReplaceElementCommandPlacement": {
      "id": "Awb0SaveAsAndReplaceElement",
      "uiAnchor": "aw_rightWall",
      "priority": 660,
      "parentGroupId": "Awp0NewGroup"
    },
    "removeElementCommandPlacement": {
      "id": "Awb0RemoveElement",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 10,
      "parentGroupId": "Awb0RestructureGroup"
    },
    "removeLevelCommandPlacement": {
      "id": "Awb0RemoveLevel",
      "uiAnchor": "aw_primaryWorkAtea",
      "priority": 45,
      "parentGroupId": "Awb0RestructureGroup"
    },
    "removeElementCtxMenuCommandPlacement": {
      "id": "Awb0RemoveElementCtxMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 45
    },
    "removeLevelCtxMenuCommandPlacement": {
      "id": "Awb0RemoveLevelCtxMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 46
    },
    "occEffectivityCommandPlacement-classic": {
      "id": "Awb0OccurrenceEffectivity",
      "uiAnchor": "aw_toolsAndInfo",
      "priority": 50,
      "parentGroupId": "AceEffectivityGroup"
    },
    "occEffectivityCommandPlacement": {
      "id": "Awb0OccurrenceEffectivity",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 60,
      "parentGroupId": "Awb0AddGroup"
    },
    "Awb0GroupEffectivityCommandPlacement": {
      "id": "Awb0GroupEffectivity",
      "uiAnchor": "aw_navigate",
      "priority": 50
    },
    "revisionEffectivityCommandPlacement-classic": {
      "id": "Awb0ReleaseStatusEffectivity",
      "uiAnchor": "aw_toolsAndInfo",
      "priority": 100,
      "parentGroupId": "AceEffectivityGroup"
    },
    "revisionEffectivityCommandPlacement": {
      "id": "Awb0ReleaseStatusEffectivity",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 70,
      "parentGroupId": "Awb0AddGroup"
    },
    "revisionEffectivityCommandInHomePlacement": {
      "id": "Awp0ReleaseStatusEffectivity",
      "uiAnchor": "aw_rightWall",
      "priority": 4,
      "parentGroupId": "Awp0ManageGroup"
    },
    "awb0StructureFilterCommandDisplay": {
      "id": "Awb0StructureFilterCommand",
      "uiAnchor": "aw_primaryWorkArea_Awb0OccurrenceManagement",
      "priority": 21
    },
    "aceSaveWorkingContextCommandPlacement": {
      "id": "Awb0SaveWorkingContext",
      "uiAnchor": "aw_rightWall",
      "priority": 120,
      "parentGroupId": "Awp0NewGroup"
    },
    "aceUpdateWorkingContextCommandPlacement-classic": {
      "id": "Awb0UpdateWorkingContext",
      "uiAnchor": "aw_toolsAndInfo",
      "priority": 100,
      "parentGroupId": "Awb0SaveWorkingContextGroup",
      "showGroupSelected": true
    },
    "aceUpdateWorkingContextCommandPlacement": {
      "id": "Awb0UpdateWorkingContext",
      "uiAnchor": "aw_rightWall",
      "priority": 110,
      "parentGroupId": "Awp0EditGroup",
      "showGroupSelected": true
    },
    "aceSaveAsWorkingContextCommandPlacement-classic": {
      "id": "Awb0SaveAsWorkingContext",
      "uiAnchor": "aw_toolsAndInfo",
      "priority": 200,
      "parentGroupId": "Awb0SaveWorkingContextGroup"
    },
    "aceSaveAsWorkingContextCommandPlacement": {
      "id": "Awb0SaveAsWorkingContext",
      "uiAnchor": "aw_rightWall",
      "priority": 35,
      "parentGroupId": "Awp0NewGroup"
    },
    "aceResetStructureCommandPlacement": {
      "id": "Awb0ResetStructure",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 9,
      "parentGroupId": "Awb0ConfigurationGroup"
    },
    "UnifiedInContextSearchCommandPlacement": {
      "id": "Awb0AceUnifiedInContextSearch",
      "uiAnchor": "aw_primaryWorkArea_Awb0OccurrenceManagement",
      "priority": 20
    },
    "AceShowChildrenCommandPlacement": {
      "id": "Awb0ShowChildOccurrences",
      "uiAnchor": "occmgmt_cell_commands",
      "priority": 1,
      "cellDisplay": {
        "position": "BOTTOM_RIGHT"
      }
    },
    "AceShowChildrenBreadcrumbCellCommandPlacement": {
      "id": "Awb0ShowChildOccurrencesFromBreadcrumb",
      "uiAnchor": "occmgmt_breadcrumb_cell_commands",
      "priority": 1,
      "cellDisplay": {
        "position": "BOTTOM_RIGHT"
      }
    },
    "Awb0AddEffectivityForRelnStatusCmdPlacement": {
      "id": "Awb0AddEffectivityForRelnStatusCmd",
      "uiAnchor": "awb0_displayAndRemoveEffectivityForRelnStatus",
      "priority": 1
    },
    "Awb0RemoveEffectivityForRelnStatusCmdPlacement": {
      "id": "Awb0RemoveEffectivityForRelnStatusCmd",
      "uiAnchor": "awb0_displayAndRemoveEffectivityForRelnStatus",
      "priority": 1
    },
    "Awb0AddGroupEffectivityCmdPlacement": {
      "id": "Awb0AddGroupEffectivityCmd",
      "uiAnchor": "awb0_commandGroupEffectivities",
      "relativeTo": "Awb0RemoveGroupEffectivityCmd",
      "priority": 1
    },
    "Awb0RemoveGroupEffectivityCmdPlacement": {
      "id": "Awb0RemoveGroupEffectivityCmd",
      "uiAnchor": "awb0_commandGroupEffectivities",
      "priority": 1
    },
    "Awb0AddEffectivitiesCmdPlacement": {
      "id": "Awb0AddEffectivitiesCmd",
      "uiAnchor": "awb0_commandDisplayAndRemoveEffectivity",
      "priority": 1
    },
    "Awb0RemoveEffectivitiesCmdPlacement": {
      "id": "Awb0RemoveEffectivitiesCmd",
      "uiAnchor": "awb0_commandDisplayAndRemoveEffectivity",
      "priority": 1
    },
    "Awb0ClearAllEffectivitiesCmdPlacement": {
      "id": "Awb0ClearAllEffectivitiesCmd",
      "uiAnchor": "awb0_commandDisplayAndRemoveEffectivity",
      "relativeTo": "Awb0RemoveEffectivitiesCmd",
      "priority": 1
    },
    "Awb0AddNewVariantRuleCmdPlacement": {
      "id": "Awb0AddNewVariantRuleCmd",
      "uiAnchor": "awb0_variantCommands",
      "priority": 1
    },
    "useSubstituteCmdPlacement": {
      "id": "Awb0UseSubstitute",
      "uiAnchor": "aw_objectSet_right",
      "priority": 20
    },
    "showMarkupCmdPlacement": {
      "id": "Awb0ShowMarkup",
      "uiAnchor": "aw_workArea_right",
      "priority": 21
    },
    "configurationFilterCommandPlacement": {
      "id": "Awb0ConfigurationFilter",
      "uiAnchor": "aw_primaryWorkArea",
      "parentGroupId": "Awb0ConfigurationGroup",
      "priority": 8
    },
    "showIneffectiveCmdPlacement": {
      "id": "Awb0ShowUnconfiguredByOccEffectivity",
      "uiAnchor": "aw_primayWorkArea",
      "parentGroupId": "Awb0ConfigurationGroup",
      "priority": 15
    },
    "showVariantsInCmdPlacement": {
      "id": "Awb0ShowUnconfiguredByVariants",
      "uiAnchor": "aw_primayWorkArea",
      "parentGroupId": "Awb0ConfigurationGroup",
      "priority": 16
    },
    "showAwb0ExpandBelowDebugInCmdPlacement": {
      "id": "Awb0ExpandBelowDebug",
      "uiAnchor": "aw_primayWorkArea",
      "parentGroupId": "Awb0DebugGroup",
      "priority": 15
    },
    "showAwb0ExpandOneDebugInCmdPlacement": {
      "id": "Awb0ExpandOneDebug",
      "uiAnchor": "aw_primayWorkArea",
      "parentGroupId": "Awb0DebugGroup",
      "priority": 20
    },
    "showAwb0ReconfigureDebugInCmdPlacement": {
      "id": "Awb0ReconfigureDebug",
      "uiAnchor": "aw_primayWorkArea",
      "parentGroupId": "Awb0DebugGroup",
      "priority": 22
    },
    "showAwb0BackGroundSoaDebugInCmdPlacement": {
      "id": "Awb0BackGroundSoaDebug",
      "uiAnchor": "aw_primayWorkArea",
      "parentGroupId": "Awb0DebugGroup",
      "priority": 25
    },
    "showAwb0LoadTreePropsDebugInCmdPlacement": {
      "id": "Awb0LoadTreePropsDebug",
      "uiAnchor": "aw_primayWorkArea",
      "parentGroupId": "Awb0DebugGroup",
      "priority": 28
    },
    "showAwb0LoadTreePropsTimerDebugInCmdPlacement": {
      "id": "Awb0LoadTreePropsTimerDebug",
      "uiAnchor": "aw_primayWorkArea",
      "parentGroupId": "Awb0DebugGroup",
      "priority": 30
    },
    "stopAwb0ExpandBelowDebugInCmdPlacement": {
      "id": "Awb0StopExpandBelowDebug",
      "uiAnchor": "aw_primayWorkArea",
      "parentGroupId": "Awb0DebugGroup",
      "priority": 35
    },
    "showSuppressedCmdPlacement": {
      "id": "Awb0ShowSuppressed",
      "uiAnchor": "aw_primayWorkArea",
      "parentGroupId": "Awb0ConfigurationGroup",
      "priority": 17
    },
    "Awb0SetInContextCmdPlacement": {
      "id": "Awb0SetInContext",
      "uiAnchor": "aw_primayWorkArea",
      "parentGroupId": "Awb0RestructureGroup",
      "priority": 51
    },
    "Awb0SetInContextCtxMenu": {
      "id": "Awb0SetInContextCtxMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 50
    },
    "Awb0CBOSCmdPlacement": {
      "id": "Awb0CBOSCmd",
      "uiAnchor": "aw_primaryWorkArea",
      "parentGroupId": "Awb0ConfigurationGroup",
      "priority": 12
    },
    "Awb0ConfigByProximityCmdPlacement": {
      "id": "Awb0ConfigByProximityCmd",
      "uiAnchor": "aw_primaryWorkArea",
      "parentGroupId": "Awb0ConfigurationGroup",
      "priority": 13
    },
    "cancelMarkupLevelCmdPlacement": {
      "id": "Awb0CancelMarkupLevel",
      "uiAnchor": "Awb0MarkupAtLevelAnchor",
      "priority": 2
    },
    "cancelMarkupElementCmdPlacement": {
      "id": "Awb0CancelMarkupElement",
      "uiAnchor": "Awb0MarkupAtElementAnchor",
      "priority": 1
    },
    "expandBelowCommandPlacement": {
      "id": "Awb0ExpandBelow",
      "uiAnchor": "Awb0ExpandGroup",
      "priority": 41
    },
    "expandBelowNewCommandPlacement": {
      "id": "Awb0ExpandBelowFetchAll",
      "uiAnchor": "Awb0ExpandGroup",
      "priority": 42
    },
    "expandBelowCtxMenuCommandPlacement": {
      "id": "Awb0ExpandBelowCtxMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 38
    },
    "collapseBelowCommandPlacement": {
      "id": "Awb0CollapseBelow",
      "uiAnchor": "Awb0ExpandGroup",
      "priority": 42
    },
    "collapseBelowCtxMenuCommandPlacement": {
      "id": "Awb0CollapseBelowCtxMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 39
    },
    "Awb0ExpandCommandPlacement": {
      "id": "Awb0Expand",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 23
    },
    "applyMarkupCmdPlacement": {
      "id": "Awb0ApplyMarkup",
      "uiAnchor": "Awb0MarkupAtLevelAnchor",
      "priority": 1
    },
    "fakeCommandToForceServerVisibilityAwb0ViewElementEffectivityPlacement2": {
      "id": "fakeCommandToForceServerVisibilityAwb0ViewElementEffectivity",
      "uiAnchor": "aw_rightWall",
      "priority": 0
    },
    "Awb0AddGroupCommandPlacement": {
      "id": "Awb0AddGroup",
      "uiAnchor": "aw_primaryWorkArea_Awb0OccurrenceManagement",
      "priority": 18
    },
    "Awb0RestructureGroupCommandPlacement": {
      "id": "Awb0RestructureGroup",
      "uiAnchor": "aw_primaryWorkArea_Awb0OccurrenceManagement",
      "priority": 19
    },
    "Awb0DebugGroupCommandPlacement": {
      "id": "Awb0DebugGroup",
      "uiAnchor": "aw_primaryWorkArea_Awb0OccurrenceManagement",
      "priority": 300
    },
    "Awb0ConfigurationGroupCommandPlacement": {
      "id": "Awb0ConfigurationGroup",
      "uiAnchor": "aw_primaryWorkArea_Awb0OccurrenceManagement",
      "priority": 22
    },
    "removeOverrideCommandPlacement": {
      "id": "Awb0RemoveOverride",
      "uiAnchor": "aw_Override",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_CENTER",
        "selected": true
      }
    },
    "Awb0SaveVariantRuleCommandPlacement": {
      "id": "Awb0SaveVariantRule",
      "uiAnchor": "awb_variantConfigurationCommandBar",
      "priority": 100
    },
    "Awb0SaveAsVariantRuleCommandPlacement": {
      "id": "Awb0SaveAsVariantRule",
      "uiAnchor": "awb_variantConfigurationCommandBar",
      "priority": 200
    },
    "Awb0EffectivityCellCommandPlacement": {
      "id": "Awb0EditEffectivity",
      "uiAnchor": "occmgmt_effectivity_cell_commands",
      "priority": 100,
      "cellDisplay": {
        "hover": true,
        "selected": true,
        "position": "TOP_RIGHT"
      }
    },
    "Awb0ExpressionEffectivityPlacement": {
      "id": "Awb0ExpressionEffectivity",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 60,
      "parentGroupId": "Awb0AddGroup"
    },
    "psEditEffectivityGroupCommandPlacement": {
      "id": "psEditEffectivityGroupCmd",
      "uiAnchor": "edit_effectivity_group_cell_commands",
      "priority": 100,
      "cellDisplay": {
        "hover": true,
        "selected": true,
        "position": "TOP_RIGHT"
      }
    },
    "OccMgmtDuplicateCmdPlacement": {
      "id": "Awb0ShowDuplicate",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 101
    },
    "OccMgmtDuplicateRemoveCommandPlacement": {
      "id": "OccMgmtDuplicateRemove",
      "uiAnchor": "occMgmtDuplicate_primWorkArea_left",
      "priority": 1
    },
    "OccMgmtDuplicateRemoveMenuPlacement": {
      "id": "OccMgmtDuplicateRemove",
      "uiAnchor": "aw_contextMenu2",
      "priority": 1
    },
    "OccMgmtDuplicateReplaceCommandPlacement": {
      "id": "OccMgmtDuplicateReplace",
      "uiAnchor": "occMgmtDuplicate_primWorkArea_left",
      "priority": 2
    },
    "OccMgmtDuplicateReplaceMenuPlacement": {
      "id": "OccMgmtDuplicateReplace",
      "uiAnchor": "aw_contextMenu2",
      "priority": 2
    },
    "OccMgmtDuplicateCloneCommandPlacement": {
      "id": "OccMgmtDuplicateClone",
      "uiAnchor": "occMgmtDuplicate_primWorkArea_left",
      "priority": 3
    },
    "OccMgmtDuplicateCloneMenuPlacement": {
      "id": "OccMgmtDuplicateClone",
      "uiAnchor": "aw_contextMenu2",
      "priority": 3
    },
    "OccMgmtDuplicateCloneBelowCommandPlacement": {
      "id": "OccMgmtDuplicateCloneBelow",
      "uiAnchor": "occMgmtDuplicate_primWorkArea_left",
      "priority": 4
    },
    "OccMgmtDuplicateCloneBelowMenuPlacement": {
      "id": "OccMgmtDuplicateCloneBelow",
      "uiAnchor": "aw_contextMenu2",
      "priority": 4
    },
    "OccMgmtDuplicateReferenceCommandPlacement": {
      "id": "OccMgmtDuplicateUndo",
      "uiAnchor": "occMgmtDuplicate_primWorkArea_left",
      "priority": 5
    },
    "OccMgmtDuplicateReferenceMenuPlacement": {
      "id": "OccMgmtDuplicateUndo",
      "uiAnchor": "aw_contextMenu2",
      "priority": 5
    },
    "OccMgmtDuplicateSettingsCmdPlacement": {
      "id": "OccMgmtDuplicateSettingsCmd",
      "uiAnchor": "ocMgmtDuplicateTaskbarRightSlot",
      "priority": 5
    },
    "OccMgmtDuplicateExpandGroupCommandPlacement": {
      "id": "Awb0Expand",
      "uiAnchor": "occMgmtDuplicate_primWorkArea_left",
      "priority": 0
    },
    "awb0AddRevisionPlacement": {
      "id": "Awb0AddRevision",
      "priority": 260
    },
    "awb0RemoveRevisionPlacement": {
      "id": "Awb0RemoveRevision",
      "priority": 250
    },
    "Awb0ImportFromExcelCommandPlacement": {
      "id": "Awb0ImportFromExcel",
      "uiAnchor": "aw_rightWall",
      "priority": 500,
      "parentGroupId": "Awp0NewGroup"
    },
    "Awb0AceImportPreviewOverwriteContextMenuPlacement": {
      "id": "Awb0ImportPreviewAceOverwriteContextMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 105
    },
    "Awb0AceImportPreviewReviseContextMenuPlacement": {
      "id": "Awb0AceImportPreviewReviseContextMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 105
    },
    "Awb0AceImportPreviewReferenceContextMenuPlacement": {
      "id": "Awb0AceImportPreviewReferenceContextMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 105
    },
    "Awb0AddChildRMBMenuCommandPlacement": {
      "id": "Awb0AddChildRow",
      "uiAnchor": "aw_contextMenu2",
      "priority": 20
    },
    "Awb0AddSiblingRMBMenuCommandPlacement": {
      "id": "Awb0AddSiblingRow",
      "uiAnchor": "aw_contextMenu2",
      "priority": 20
    },
    "Awb0SaveRMBMenuCommandPlacement": {
      "id": "Awb0SaveRow",
      "uiAnchor": "aw_workArea_right",
      "priority": 20
    },
    "Awb0RemoveRMBMenuCommandPlacement": {
      "id": "Awb0RemoveAllRows",
      "uiAnchor": "aw_workArea_right",
      "priority": 15
    },
    "Awb0AddRefCommandPlacement": {
      "id": "Awb0AddRef",
      "uiAnchor": "aw_editActionCell",
      "priority": 30
    },
    "Awb0RemoveRowTreeCommandPlacement": {
      "id": "Awb0RemoveRow",
      "uiAnchor": "occmgmt_tree_cell_commands",
      "priority": 30
    },
    "awb0OpenInViewCommandPlacement": {
      "id": "awb0OpenInViewCommand",
      "uiAnchor": "aw_workArea_right"
    },
    "awb0SplitCommandPlacement": {
      "id": "awb0SplitRootCmd",
      "uiAnchor": "aw_primaryWorkArea",
      "parentGroupId": "Awp0ModelObjListDisplayToggles",
      "priority": 130
    },
    "Awb0CreateSessionPlacement": {
      "id": "Awb0CreateSessionCommand",
      "uiAnchor": "aw_rightWall",
      "parentGroupId": "Awp0NewGroup",
      "priority": 100,
      "relativeTo": "Awb0SaveWorkingContext"
    },
    "Awb0SaveAsSessionPlacement": {
      "id": "awb0SaveAsSession",
      "uiAnchor": "aw_workArea_right",
      "parentGroupId": "Awb0SessionGroup",
      "priority": 20
    },
    "Awb0SaveSessionCommandPlacement": {
      "id": "Awb0SaveSession",
      "uiAnchor": "aw_workArea_right",
      "priority": 1140,
      "relativeTo": "Awb0SessionGroup"
    },
    "Awb0SessionGroupCommandPlacement": {
      "id": "Awb0SessionGroup",
      "uiAnchor": "aw_workArea_right",
      "priority": 22
    },
    "Awb0ReplayCommandPlacement": {
      "id": "Awb0ReplaySession",
      "uiAnchor": "aw_workArea_right",
      "priority": 50
    },
    "Awb0ReplaySessionWithWorksetCommandPlacement": {
      "id": "Awb0ReplaySessionWithWorkset",
      "uiAnchor": "aw_workArea_right",
      "priority": 50
    },
    "Awb0ResetCommandPlacement": {
      "id": "Awb0ResetSession",
      "uiAnchor": "aw_workArea_right",
      "parentGroupId": "Awb0SessionGroup",
      "priority": 15
    },
    "Awb0CreateWorksetPlacement": {
      "id": "Awb0CreateWorksetCommand",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 28,
      "parentGroupId": "Awb0AddGroup"
    },
    "includeCtxMenuCommandPlacement": {
      "id": "Awb0IncludeCtxMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 39
    },
    "includeWithoutChildrenCtxMenuCommandPlacement": {
      "id": "Awb0IncludeWithoutChildrenCtxMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 40,
      "relativeTo": "Awb0IncludeCtxMenu"
    },
    "excludeCtxMenuCommandPlacement": {
      "id": "Awb0ExcludeCtxMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 41,
      "relativeTo": "Awb0IncludeCtxMenu"
    },
    "Awb0FilterSettingsCommandPlacement": {
      "id": "Awb0FilterSettings",
      "uiAnchor": "filterSettingsSlot",
      "priority": 10
    },
    "applyProductSnapshotCellCommandPlacement": {
      "id": "applyProductSnapshotCommand",
      "parentGroupId": "Awv0ProductSnapshotListCommand",
      "priority": 1
    },
    "applyProductSnapshotThumbnailPlacement": {
      "id": "applyProductSnapshotCommand",
      "uiAnchor": "aw_3dSnapshotThumbnailViewCommands",
      "priority": 2
    },
    "Awb0SaveWorksetCommandPlacement": {
      "id": "Awb0SaveWorkset",
      "uiAnchor": "aw_workArea_right",
      "priority": 22
    },
    "Awb0ReplayAutoSaveWorksetCommandPlacement": {
      "id": "Awb0ReplayAutoSaveWorkset",
      "uiAnchor": "aw_workArea_right",
      "priority": 50
    },
    "Awb0ReplayStaleAutoSaveWorksetCommandPlacement": {
      "id": "Awb0ReplayStaleAutoSaveWorkset",
      "uiAnchor": "aw_workArea_right",
      "priority": 50
    },
    "Awb0ReplayWorksetCommandPlacement": {
      "id": "Awb0ReplayWorkset",
      "uiAnchor": "aw_primaryWorkArea",
      "parentGroupId": "Awb0ConfigurationGroup",
      "priority": 11,
      "relativeTo": "Awb0ResetStructure"
    },
    "Ac0ShowObjectDiscussionCommandPlacement": {
      "id": "Ac0ShowObjectCommand",
      "uiAnchor": "aw_ProductSnapshotOnDiscussion2",
      "priority": 10
    },
    "Awb0EntCBALaunchAlignTaskCommandPlacement": {
      "id": "Awb0EntCBALaunchAlignTask",
      "uiAnchor": "aw_rightWall",
      "parentGroupId": "Awp0ViewGroup"
    },
    "Awb0EntCBAAlignCommandPlacement": {
      "id": "Awb0EntCBAAlignCommand",
      "uiAnchor": "alignmentSlot"
    },
    "Awb0EntCBAUnAlignCommandPlacement": {
      "id": "Awb0EntCBAUnAlignCommand",
      "uiAnchor": "alignmentSlot"
    },
    "Awb0EntCBAAlignmentCheckCommandPlacement": {
      "id": "Awb0EntCBAAlignmentCheck",
      "uiAnchor": "AlignmentCheckSlot",
      "priority": 10
    },
    "Awb0EntCBAOpenGroupCommandPlacement": {
      "id": "Awb0EntCBAOpenGroup",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 500
    },
    "Awb0EntCBAOpenObjectCommandPlacement": {
      "id": "Awb0EntCBAOpenObject",
      "parentGroupId": "Awb0EntCBAOpenGroup"
    },
    "Awb0EntCBAOpenInNewWindowCommandPlacement": {
      "id": "Awb0EntCBAOpenInNewWindow",
      "parentGroupId": "Awb0EntCBAOpenGroup"
    },
    "Awb0EntCBAOpenInNewTabCommandPlacement": {
      "id": "Awb0EntCBAOpenInNewTab",
      "parentGroupId": "Awb0EntCBAOpenGroup"
    },
    "Awb0EntCBAOpenAlignmentViewCommandPlacement": {
      "id": "Awb0EntCBAOpenAlignmentView",
      "parentGroupId": "Awb0EntCBAAlignGroup",
      "priority": 5,
      "uiAnchor": "aw_primaryWorkArea"
    },
    "Awb0EntCBAAlignGroupCommandPlacement": {
      "id": "Awb0EntCBAAlignGroup",
      "uiAnchor": "aw_primaryWorkArea",
      "relativeTo": "Awb0CompareGroup",
      "priority": 1
    },
    "Awb0EntCBADeselectAllCommandPlacement": {
      "id": "Awb0EntCBADeselectAll",
      "uiAnchor": "cbaToolbarRightSlot"
    },
    "Awb0FindAlignedCommandPlacement": {
      "id": "Awb0FindAligned",
      "uiAnchor": "aw_contextMenu2",
      "priority": 1
    },
    "RevisionRuleClauseUpCommandPlacement": {
      "id": "RevisionRuleClauseUp",
      "uiAnchor": "clausesCommandAnchor",
      "priority": 100
    },
    "RevisionRuleClauseDownCommandPlacement": {
      "id": "RevisionRuleClauseDown",
      "uiAnchor": "clausesCommandAnchor",
      "priority": 200
    },
    "RevisionRuleClauseDeleteCommandPlacement": {
      "id": "RevisionRuleClauseDelete",
      "uiAnchor": "clausesCommandAnchor",
      "priority": 300
    },
    "RevisionRuleClauseAddCommandPlacement": {
      "id": "RevisionRuleClauseAdd",
      "uiAnchor": "clausesCommandAnchor",
      "priority": 400
    },
    "RevisionRuleAdminAddCommandPlacement": {
      "id": "RevisionRuleAdminAdd",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 100
    },
    "RevisionRuleAdminDeleteCommandPlacement": {
      "id": "RevisionRuleAdminDelete",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 200
    },
    "RevisionRuleAdminCommandPlacement": {
      "id": "RevisionRuleAdmin",
      "uiAnchor": "occmgmt_revrule_admin_cell_commands",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "selected": true,
        "position": "BOTTOM_RIGHT"
      }
    },
    "ClausePropertyAddCommandPlacement": {
      "id": "ClausePropertyAdd",
      "uiAnchor": "clausePropertiesCommandAnchor",
      "priority": 100
    },
    "AddClausePropertyCommandPlacement": {
      "id": "AddClauseProperty",
      "uiAnchor": "addClausePropertiesCommandAnchor",
      "priority": 100
    },
    "ClausePropertyRemoveCommandPlacement": {
      "id": "ClausePropertyRemove",
      "uiAnchor": "clausePropertiesCommandAnchor",
      "priority": 200
    },
    "RemoveClausePropertyCommandPlacement": {
      "id": "RemoveClauseProperty",
      "uiAnchor": "addClausePropertiesCommandAnchor",
      "priority": 200
    },
    "ClausePropertyReplaceCommandPlacement": {
      "id": "ClausePropertyReplace",
      "uiAnchor": "clausePropertiesCommandAnchor",
      "priority": 300
    },
    "ReplaceClausePropertyCommandPlacement": {
      "id": "ReplaceClauseProperty",
      "uiAnchor": "addClausePropertiesCommandAnchor",
      "priority": 300
    },
    "Awb0AddPartitionPlacement": {
      "id": "Awb0AddPartition",
      "uiAnchor": "aw_primaryWorkArea_Awb0OccurrenceManagement",
      "parentGroupId": "Awb0Partition",
      "priority": 15
    },
    "Awb0DeletePartitionCmdPlacement": {
      "id": "Awb0DeletePartition",
      "uiAnchor": "aw_primaryWorkArea",
      "parentGroupId": "Awb0Partition",
      "priority": 20
    },
    "Awb0UnassignedCmdPlacement": {
      "id": "Awb0Unassigned",
      "uiAnchor": "aw_primaryWorkArea_Awb0OccurrenceManagement",
      "parentGroupId": "Awb0Partition",
      "priority": 200
    },
    "Awb0MoveToCmdPlacement": {
      "id": "Awb0MoveTo",
      "uiAnchor": "aw_primaryWorkArea_Awb0OccurrenceManagement",
      "parentGroupId": "Awb0Partition",
      "priority": 300
    },
    "Awb0MoveToContextMenuCmdPlacement": {
      "id": "Awb0MoveToContextMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 4
    },
    "Awb0UnassignMemCmdPlacement": {
      "id": "Awb0UnassignMem",
      "uiAnchor": "aw_primaryWorkArea",
      "parentGroupId": "Awb0Partition",
      "priority": 300
    },
    "Awb0RemoveElementCmdPlacementForPtn": {
      "id": "Awb0RemoveElement",
      "uiAnchor": "aw_primaryWorkArea",
      "parentGroupId": "Awb0RestructureGroup",
      "priority": 300
    },
    "Awb0PartitionCmdPlacement": {
      "id": "Awb0Partition",
      "uiAnchor": "aw_primaryWorkArea_Awb0OccurrenceManagement",
      "relativeTo": "Awb0Expand",
      "priority": 1
    },
    "fgfCreatePartitionCommandPlacement": {
      "id": "Fgf0CreatePartitionScheme",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 420,
      "parentGroupId": "Awb0AddGroup"
    }
  },
  "actions": {
    "SaveEditVCA2TableACE": {
      "actionType": "JSFunction",
      "method": "saveEditVCA2TableACE",
      "deps": "js/variantConditionService",
      "inputData": {
        "data": "{{commandContext}}"
      }
    },
    "checkForEditsAndAcePasteContentsFromClipboard": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "showLeaveConfirmation",
          "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
        },
        {
          "action": "acePasteContentsFromClipboard"
        }
      ]
    },
    "navigateToEditGroupEffectivity": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "navigateToEditGroupEffectivity",
            "eventData": {
              "vmo": "{{commandContext.vmo}}"
            }
          }
        ]
      }
    },
    "navigateToEditDateRangeGroupEffectivity": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "navigateToEditDateRangeGroupEffectivity",
            "eventData": {
              "vmo": "{{commandContext.vmo}}"
            }
          }
        ]
      }
    },
    "getEffectivityPropertiesForEditAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "objects": [
          "{{commandContext.vmo}}"
        ],
        "attributes": [
          "effectivity_dates",
          "effectivity_id",
          "effectivity_protection",
          "effectivity_units",
          "end_item",
          "end_item_rev",
          "range_text"
        ]
      },
      "outputData": {
        "ctx.editEffectivityContext.responseObjects": "modelObjects"
      },
      "events": {
        "success": [
          {
            "name": "launchEditEffectivityPanel"
          }
        ]
      },
      "deps": "js/editEffectivityCommandHandler"
    },
    "aceSaveAsorReviseContext": {
      "actionType": "JSFunction",
      "method": "updateSaveAsContextAndActivateCommandPanel",
      "deps": "js/Awp0ShowSaveAsService",
      "inputData": {
        "input": {
          "selectedObj": "{{ctx.selected}}",
          "openNewRevision": true,
          "showOpenNewRevisionCheckbox": false,
          "commandId": "Awp0ShowSaveAs",
          "location": "aw_toolsAndInfo"
        }
      }
    },
    "acePasteContentsFromClipboard": {
      "actionType": "JSFunction",
      "method": "acePasteObjectsFromClipboard",
      "inputData": {
        "commandContext": "{{commandContext}}"
      },
      "deps": "js/aceDefaultPasteHandler",
      "events": {
        "success": [
          {
            "name": "ace.pasteSuccessful"
          }
        ]
      }
    },
    "aceCutContentsToClipboard": {
      "actionType": "JSFunction",
      "method": "aceCutContentsToClipboard",
      "inputData": {
        "occContext": "{{commandContext.occContext}}"
      },
      "actionMessages": {
        "success": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "cutSingleSuccessful"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "cutMultipleSuccessful"
          }
        ]
      },
      "deps": "js/aceDefaultCutCopyService"
    },
    "separateElementToDistinctElements": {
      "actionType": "JSFunction",
      "method": "getSeperateQuantityAndPrepareAddInput",
      "events": {
        "success": [
          {
            "name": "split.splitStarted"
          }
        ]
      },
      "deps": "js/addElementService"
    },
    "showExpandOptions": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "Awb0ExpandOptions",
          "subPanelContext": {
            "context": "{{commandContext}}"
          },
          "whenParentScrolls": "close",
          "maxWidth": "670px",
          "toggleMode": true,
          "clickOutsideToClose": true,
          "forceCloseOthers": false,
          "open": false
        }
      },
      "outputData": {
        "popupId": ""
      }
    },
    "updateSelectedElementQuantity": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2010-09-DataManagement",
      "method": "setProperties",
      "inputData": {
        "info": [
          {
            "object": "{{ctx.selected}}",
            "vecNameVal": [
              {
                "name": "awb0Quantity",
                "values": [
                  ""
                ]
              }
            ]
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "ace.performSeparateElementsAction"
          }
        ]
      },
      "deps": "js/addElementService"
    },
    "postRemoveAttachmentCleanupAction": {
      "actionType": "JSFunction",
      "method": "postRemoveAttachmentCleanupAction",
      "deps": "js/aceInContextOverrideService"
    },
    "acePostPasteAction": {
      "actionType": "JSFunction",
      "method": "acePostPasteAction",
      "deps": "js/aceDefaultCutCopyService"
    },
    "copyInMarkupMode": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/aceCopyInMarkupModeService",
      "inputData": {
        "objectToCopy": "{{ctx.mselected}}"
      }
    },
    "aceSeparateElementsAction": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2019-06-OccurrenceManagement",
      "method": "addObject2",
      "inputData": {
        "input": {
          "objectsToBeAdded": [
            "{{ctx.selected}}"
          ],
          "parentElement": "{{ctx.aceActiveContext.context.addElement.parent}}",
          "siblingElement": "{{ctx.selected}}",
          "inputCtxt": {
            "productContext": "{{ctx.aceActiveContext.context.productContextInfo}}"
          },
          "sortCriteria": {
            "propertyName": "",
            "sortingOrder": ""
          },
          "addObjectIntent": "SplitIntent",
          "fetchPagedOccurrences": "{{ctx.aceActiveContext.context.addElement.fetchPagedOccurrences}}",
          "requestPref": "{{function:getRequestPrefValue}}",
          "numberOfElements": "{{ctx.aceActiveContext.context.addElement.seperateQuantity}}"
        }
      },
      "outputData": {
        "addElementResponse": "",
        "totalObjectsAdded": "{{function:getTotalNumberOfChildrenAdded}}"
      },
      "events": {
        "success": [
          {
            "name": "addElement.elementsAdded",
            "eventData": {
              "objectsToSelect": "{{function:getNewChildElements}}",
              "addElementResponse": "{{data.addElementResponse}}",
              "viewToReact": "{{ctx.aceActiveContext.key}}",
              "updatedParentElement": "{{ctx.aceActiveContext.context.addElement.parent}}"
            },
            "condition": "data.totalObjectsAdded>0"
          },
          {
            "name": "acePwa.reset",
            "condition": "!(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView')"
          }
        ],
        "failure": [
          {
            "name": "addElement.elementsAdded",
            "eventData": {
              "objectsToSelect": "{{function:getNewChildElements}}",
              "addElementResponse": "{{data.addElementResponse}}",
              "viewToReact": "{{ctx.aceActiveContext.key}}"
            },
            "condition": "data.totalObjectsAdded>0 && (ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView')"
          }
        ]
      },
      "deps": "js/addElementService"
    },
    "checkForEditsAndPackElements": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "showLeaveConfirmation",
          "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
        },
        {
          "action": "performPackAction"
        }
      ]
    },
    "performPackAction": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2019-06-OccurrenceManagement",
      "method": "packSimilarElements",
      "inputData": {
        "input": {
          "packMode": 0,
          "elements": "{{commandContext.occContext.selectedModelObjects}}",
          "inputCtxt": {
            "productContext": "{{commandContext.occContext.productContextInfo}}",
            "requestPref": {
              "displayMode": [
                "{{function:getTreeOrListDisplayMode}}"
              ]
            }
          },
          "sortCriteria": {
            "propertyName": "{{ctx.aceActiveContext.context.sortCriteria[0].fieldName}}",
            "sortingOrder": "{{ctx.aceActiveContext.context.sortCriteria[0].sortDirection}}"
          }
        }
      },
      "outputData": {
        "packedElementsFromResponse": "{{function:getPackedElements}}",
        "packUnpackResponseParentChildInfo": "result.parentChildrenInfos",
        "deletedElements": "result.ServiceData.deleted"
      },
      "events": {
        "success": [
          {
            "name": "postProcessPackUnpackAction",
            "condition": "ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView'",
            "eventData": {
              "packUnpackResponseParentChildInfo": "{{data.packUnpackResponseParentChildInfo}}",
              "occContext": "{{commandContext.occContext}}"
            }
          },
          {
            "name": "aceElementsDeSelectedEvent",
            "eventData": {
              "elementsToDeselect": "{{data.packedElementsFromResponse}}"
            },
            "condition": "!(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView') && ( data.eventMap.performPackUnPackAction.packMode === 0 )"
          },
          {
            "name": "acePwa.reset",
            "eventData": {
              "viewToReset": "{{ctx.aceActiveContext.key}}"
            },
            "condition": "!(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView')"
          },
          {
            "name": "hideExpandOptionsPopup"
          }
        ]
      },
      "deps": "js/packSimilarElementsService"
    },
    "checkForEditsAndUnpackElements": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "showLeaveConfirmation",
          "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
        },
        {
          "action": "performUnPackAction"
        }
      ]
    },
    "performUnPackAction": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2019-06-OccurrenceManagement",
      "method": "packSimilarElements",
      "inputData": {
        "input": {
          "packMode": 1,
          "elements": "{{function:getSelections}}",
          "inputCtxt": {
            "productContext": "{{commandContext.occContext.productContextInfo}}",
            "requestPref": {
              "displayMode": [
                "{{function:getTreeOrListDisplayMode}}"
              ],
              "selectedElementUids": "{{function:getSelectedUids}}"
            }
          },
          "sortCriteria": {
            "propertyName": "{{ctx.aceActiveContext.context.sortCriteria[0].fieldName}}",
            "sortingOrder": "{{ctx.aceActiveContext.context.sortCriteria[0].sortDirection}}"
          }
        }
      },
      "outputData": {
        "packedElementsFromResponse": "{{function:getPackedElements}}",
        "packUnpackResponseParentChildInfo": "result.parentChildrenInfos",
        "deletedElements": "result.ServiceData.deleted"
      },
      "events": {
        "success": [
          {
            "name": "postProcessPackUnpackAction",
            "condition": "ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView'",
            "eventData": {
              "packUnpackResponseParentChildInfo": "{{data.packUnpackResponseParentChildInfo}}",
              "occContext": "{{commandContext.occContext}}"
            }
          },
          {
            "name": "aceElementsDeSelectedEvent",
            "eventData": {
              "elementsToDeselect": "{{data.packedElementsFromResponse}}"
            },
            "condition": "!(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView') && ( data.eventMap.performPackUnPackAction.packMode === 0 )"
          },
          {
            "name": "acePwa.reset",
            "eventData": {
              "viewToReset": "{{ctx.aceActiveContext.key}}"
            },
            "condition": "!(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView')"
          },
          {
            "name": "hideExpandOptionsPopup"
          }
        ]
      },
      "deps": "js/packSimilarElementsService"
    },
    "postProcessPackUnpackAction": {
      "actionType": "JSFunction",
      "method": "postProcessPackUnpackResponse",
      "inputData": {
        "parentChildrenInfos": "{{data.eventData.packUnpackResponseParentChildInfo}}",
        "occContext": "{{data.eventData.occContext}}"
      },
      "deps": "js/packSimilarElementsService"
    },
    "performPackAllAction": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "inputData": {
        "path": null,
        "value": {
          "configContext": {
            "packSimilarElements": true
          },
          "transientRequestPref": {
            "addUpdatedFocusOccurrence": true,
            "jitterFreePropLoad": true,
            "startFreshNavigation": true
          }
        },
        "target": "{{commandContext.occContext}}"
      },
      "events": {
        "success": [
          {
            "name": "hideExpandOptionsPopup"
          },
          {
            "name": "perform.packAllSimilarElements",
            "eventData": {
              "viewToReact": "{{ctx.aceActiveContext.key}}"
            }
          }
        ]
      },
      "deps": "js/occmgmtUtils"
    },
    "performUnpackAllAction": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "inputData": {
        "path": null,
        "value": {
          "configContext": {
            "packSimilarElements": false
          },
          "transientRequestPref": {
            "addUpdatedFocusOccurrence": true,
            "jitterFreePropLoad": true,
            "startFreshNavigation": true
          }
        },
        "target": "{{commandContext.occContext}}"
      },
      "events": {
        "success": [
          {
            "name": "hideExpandOptionsPopup"
          },
          {
            "name": "perform.packAllSimilarElements",
            "eventData": {
              "viewToReact": "{{ctx.aceActiveContext.key}}"
            }
          }
        ]
      },
      "deps": "js/occmgmtUtils"
    },
    "updateValueOnCtxWithProvidedValue": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "inputData": {
        "path": "{{data.eventData.path}}",
        "value": "{{data.eventData.value}}"
      },
      "deps": "js/appCtxService"
    },
    "selectAllNavigateResults": {
      "actionType": "JSFunction",
      "method": "toggleSelectAllResults",
      "deps": "js/navigateSearchService",
      "inputData": {
        "data": "{{commandContext}}"
      }
    },
    "moveDownInList": {
      "actionType": "JSFunction",
      "method": "moveUpDown",
      "deps": "js/navigateSearchService",
      "inputData": {
        "data": "{{commandContext}}",
        "moveTo": "Down"
      }
    },
    "moveUpInList": {
      "actionType": "JSFunction",
      "method": "moveUpDown",
      "deps": "js/navigateSearchService",
      "inputData": {
        "data": "{{commandContext}}",
        "moveTo": "Up"
      }
    },
    "getLiveSearchResult": {
      "actionType": "JSFunction",
      "method": "getLiveSearchResult",
      "deps": "js/navigateSearchService",
      "inputData": {
        "data": "{{commandContext}}"
      }
    },
    "launchRevisionEffectivityPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0ReleaseStatusEffectivity",
        "location": "aw_toolsAndInfo"
      }
    },
    "launchRevisionEffectivityInHomePanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0ReleaseStatusEffectivity",
        "location": "aw_toolsAndInfo"
      }
    },
    "launchOccEffectivityPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0OccurrenceEffectivity",
        "location": "aw_toolsAndInfo"
      }
    },
    "launchViewOccEffectivityPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0ViewOccurrenceEffectivity",
        "location": "aw_toolsAndInfo"
      }
    },
    "launchAddGroupEffectivityPanelAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "setGroupEffectivityActiveState"
        },
        {
          "action": "setGroupEffectivitySharedData"
        },
        {
          "action": "navigateToAddGroupEffectivityPanel"
        }
      ]
    },
    "setGroupEffectivityActiveState": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "inputData": {
        "path": "",
        "value": {
          "activeView": "AddGroupEffectivity",
          "prevView": "AddGroupEffectivity",
          "selectedTab": "Search",
          "context": {}
        },
        "target": "{{commandContext.activeState}}"
      },
      "deps": "js/occmgmtUtils"
    },
    "setGroupEffectivitySharedData": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "inputData": {
        "path": "",
        "value": {
          "nameBox": "",
          "vmRows": [],
          "searchSelectedTab": true
        },
        "target": "{{commandContext.nestedNavigationState}}"
      },
      "deps": "js/occmgmtUtils"
    },
    "navigateToAddGroupEffectivityPanel": {
      "actionType": "JSFunction",
      "method": "navigateToView",
      "inputData": {
        "nestedNavigationState": "{{commandContext.nestedNavigationState}}",
        "view": {
          "panelId": "AddGroupEffectivity",
          "title": "{{i18n.addGroupEffectivity}}"
        }
      },
      "deps": "js/nestedNavigationPanelService"
    },
    "navigateToSaveAsVariantRulePanel": {
      "actionType": "JSFunction",
      "method": "navigateToView",
      "inputData": {
        "nestedNavigationState": "{{commandContext.nestedNavigationState}}",
        "view": {
          "panelId": "Awb0SaveVariantRule",
          "title": "{{i18n.saveButtonText}}",
          "subPanelContext": "{{commandContext}}"
        }
      },
      "deps": "js/nestedNavigationPanelService"
    },
    "removeGroupEffectivityAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "removeGroupEffectivities",
            "eventData": {
              "occContext": "{{commandContext.occContext}}"
            }
          }
        ]
      }
    },
    "launchAddChildProductToSWCPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0AddChildProductToSWC",
        "location": "aw_toolsAndInfo"
      }
    },
    "checkForEditsAndLaunchAddPanel": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "showLeaveConfirmation",
          "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
        },
        {
          "action": "launchAddChildElementPanel"
        }
      ]
    },
    "showLeaveConfirmation": {
      "actionType": "JSFunction",
      "method": "leaveConfirmation",
      "inputData": {},
      "events": {},
      "deps": "js/editHandlerService"
    },
    "launchAddChildElementPanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Awb0AddChildElementDeclarative",
        "location": "aw_toolsAndInfo",
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "checkForEditsAndLaunchSiblingPanel": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "showLeaveConfirmation",
          "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
        },
        {
          "action": "launchAddSiblingElementPanel"
        }
      ]
    },
    "launchAddSiblingElementPanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Awb0AddSiblingElementDeclarative",
        "location": "aw_toolsAndInfo",
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "launchAddSiblingProductToSWCPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0AddSiblingProductToSWC",
        "location": "aw_toolsAndInfo"
      }
    },
    "launchStructureFilterPanel": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ace.activateWindow",
            "eventData": {
              "key": "{{commandContext.contextKey}}"
            }
          },
          {
            "name": "acePwaCommand.launchStructureFilterPanelAction"
          }
        ]
      }
    },
    "launchStructureFilterPanelAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0StructureFilterCommand",
        "location": "aw_navigation"
      }
    },
    "checkForEditsAndLaunchReplaceElementPanel": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "showLeaveConfirmation",
          "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
        },
        {
          "action": "launchReplaceElementPanel"
        }
      ]
    },
    "launchReplaceElementPanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Awb0ReplaceElementDeclarative",
        "location": "aw_toolsAndInfo",
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "launchSaveAsAndReplace": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Awb0SaveAsAndReplaceElement",
        "location": "aw_toolsAndInfo",
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "launchSaveSWCPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0SaveWorkingContext",
        "location": "aw_toolsAndInfo"
      }
    },
    "launchSaveAsSWCPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0SaveAsWorkingContext",
        "location": "aw_toolsAndInfo"
      }
    },
    "launchUpdateSWCPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0UpdateWorkingContext",
        "location": "aw_toolsAndInfo"
      }
    },
    "launchConfigurationPanel": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ace.activateWindow",
            "eventData": {
              "key": "{{commandContext.contextKey}}"
            }
          },
          {
            "name": "acePwaCommand.launchConfigurationPanelAction"
          }
        ]
      }
    },
    "launchConfigurationPanelAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0ConfigurationFilter",
        "location": "aw_navigation"
      }
    },
    "checkForEditsAndShowConfirmationMessageForRemove": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "showLeaveConfirmation",
          "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
        },
        {
          "action": "showConfirmationMessageForRemove"
        }
      ]
    },
    "showConfirmationMessageForRemove": {
      "actionType": "JSFunction",
      "method": "getDisplayName",
      "deps": "js/typeDisplayName.service",
      "inputData": {
        "modelObject": "{{commandContext.occContext.selectedModelObjects[0]}}"
      },
      "outputData": {
        "displayNameOfSelectedElement": ""
      },
      "actionMessages": {
        "success": [
          {
            "condition": "commandContext.occContext.selectedModelObjects.length === 1",
            "message": "removeSingle"
          },
          {
            "condition": "commandContext.occContext.selectedModelObjects.length > 1",
            "message": "removeMultiple"
          }
        ]
      }
    },
    "checkForEditsAndShowConfirmationMessageForRemoveLevel": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "showLeaveConfirmation",
          "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
        },
        {
          "action": "showConfirmationMessageForRemoveLevel"
        }
      ]
    },
    "showConfirmationMessageForRemoveLevel": {
      "actionType": "JSFunction",
      "method": "getDisplayNamesForRemoveLevel",
      "deps": "js/removeElementService",
      "inputData": {
        "modelObject": "{{commandContext.occContext.selectedModelObjects[0]}}"
      },
      "outputData": {
        "displayNames": ""
      },
      "actionMessages": {
        "success": [
          {
            "condition": "commandContext.occContext.selectedModelObjects.length === 1",
            "message": "removeSingleLevel"
          }
        ]
      }
    },
    "showConfirmationMessageForReset": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ace.activateWindow",
            "eventData": {
              "key": "{{commandContext.contextKey}}"
            }
          },
          {
            "name": "acePwaCommand.showConfirmationMessageForResetAction"
          }
        ]
      }
    },
    "showConfirmationMessageForResetAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "aceReset.dummyEvent"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.aceActiveContext.context.workingContextObj.props.awb0PendingChanges.dbValues[0] === '1'",
            "message": "reset"
          },
          {
            "condition": "!(ctx.aceActiveContext.context.workingContextObj.props.awb0PendingChanges.dbValues[0] === '1')",
            "message": "resetOutsideSWC"
          }
        ]
      }
    },
    "launchUnifiedNavigationPanel": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ace.activateWindow",
            "eventData": {
              "key": "{{commandContext.contextKey}}"
            }
          },
          {
            "name": "acePwaCommand.launchUnifiedNavigationPanelAction"
          }
        ]
      }
    },
    "launchUnifiedNavigationPanelAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0AceUnifiedInContextSearch",
        "location": "aw_navigation",
        "context": {},
        "push": true,
        "closeWhenCommandHidden": false
      }
    },
    "performResetOfStructure": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": "",
        "value": {
          "displayToggleOptions": {},
          "transientRequestPref": {
            "savedSessionMode": "reset",
            "calculateFilters": true,
            "jitterFreePropLoad": true,
            "startFreshNavigation": true,
            "retainTreeExpansionStates": false
          },
          "persistentRequestPref": {},
          "currentState": {
            "uid": "{{commandContext.occContext.currentState.uid}}",
            "c_uid": null,
            "pci_uid": null,
            "o_uid": null,
            "t_uid": null,
            "spageId": null,
            "incontext_uid": null,
            "filter": null,
            "page": "{{commandContext.occContext.currentState.page}}",
            "pageId": "{{commandContext.occContext.currentState.pageId}}"
          }
        },
        "target": "{{commandContext.occContext}}"
      },
      "events": {
        "success": [
          {
            "name": "ace.resetStructureStarted"
          },
          {
            "name": "ace.resetStructureClearRecipe"
          },
          {
            "name": "ace.resetStructure"
          },
          {
            "name": "ace.ResetContentEvent"
          }
        ]
      }
    },
    "showChildrenFromPwaAction": {
      "actionType": "JSFunction",
      "method": "showChildOccurences",
      "inputData": {
        "vmo": "{{commandContext.vmo}}",
        "contextKey": "{{subPanelContext.viewKey}}"
      },
      "deps": "js/showChildOccsCommandHandler"
    },
    "showChildrenFromBreadcrumbAction": {
      "actionType": "JSFunction",
      "method": "showChildOccurences",
      "inputData": {
        "vmo": "{{commandContext.vmo}}",
        "contextKey": "{{ctx.aceActiveContext.key}}"
      },
      "deps": "js/showChildOccsCommandHandler"
    },
    "awb0ReleaseStatusPanelAction": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "inputData": {
        "path": "",
        "value": {
          "previousView": "{{commandContext.sharedData.activeView}}",
          "activeView": "AddReleaseStatusEffectivities"
        },
        "target": "{{commandContext.sharedData}}"
      },
      "deps": "js/occmgmtUtils"
    },
    "awb0RemoveEffectivityForRelnAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "removeEffectivitiesForRelnEvent",
            "eventData": {
              "data": "{{commandContext}}"
            }
          }
        ]
      }
    },
    "awb0AddEffectivitiesPanelAction": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "inputData": {
        "path": "",
        "value": {
          "previousView": "{{commandContext.sharedData.activeView}}",
          "activeView": "AddEffectivities"
        },
        "target": "{{commandContext.sharedData}}"
      },
      "deps": "js/occmgmtUtils"
    },
    "showConfirmationMessageForClearAll": {
      "actionType": "JSFunction",
      "method": "getDisplayName",
      "deps": "js/typeDisplayName.service",
      "inputData": {
        "modelObject": "{{commandContext.occContext.selectedModelObjects}}"
      },
      "outputData": {
        "displayNameOfSelectedElement": ""
      },
      "actionMessages": {
        "success": [
          {
            "message": "ClearAllEffectivities"
          }
        ]
      }
    },
    "awb0RemoveEffectivitiesAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "removeEffectivitiesEvent",
            "eventData": {
              "data": "{{commandContext}}"
            }
          }
        ]
      }
    },
    "removeElements": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2021-12-OccurrenceManagement",
      "method": "removeElements2",
      "inputData": {
        "input": "{{function:getRemoveElements2Input}}"
      },
      "outputData": {
        "removedElementsFromResponse": "{{function:getRemovedElements}}",
        "removePartialErrors": "partialErrors",
        "errorMessage": "{{function:processPartialErrors}}"
      },
      "events": {
        "success": [
          {
            "name": "performPostRemoveAction"
          }
        ],
        "failure": [
          {
            "name": "performPostRemoveAction"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "removeFailure"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "removeMultipleFailureMessage"
          }
        ]
      },
      "deps": "js/removeElementService"
    },
    "removeLevels": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2020-12-OccurrenceManagement",
      "method": "removeLevel",
      "inputData": {
        "inputData": {
          "elementsToRemoveLevel": "{{ctx.mselected}}",
          "productContext": "{{ctx.aceActiveContext.context.productContextInfo}}",
          "sortCriteria": {
            "propertyName": "{{ctx.aceActiveContext.context.sortCriteria[0].fieldName}}",
            "sortingOrder": "{{ctx.aceActiveContext.context.sortCriteria[0].sortDirection}}"
          }
        }
      },
      "outputData": {
        "removedLevelElementsFromResponse": ""
      },
      "events": {
        "success": [
          {
            "name": "performPostRemoveLevelAction"
          }
        ],
        "failure": [
          {
            "name": "performPostRemoveLevelAction"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "removeLevelSuccessfulMessage"
          }
        ],
        "failure": [
          {
            "message": "removeLevelFailure"
          }
        ]
      },
      "deps": "js/removeElementService"
    },
    "performPostRemoveAction": {
      "actionType": "JSFunction",
      "method": "performPostRemoveAction",
      "inputData": {
        "removedElements": "{{data.removedElementsFromResponse}}",
        "operationName": "removeElement",
        "occContext": "{{commandContext.occContext}}"
      },
      "deps": "js/removeElementService"
    },
    "performPostRemoveLevelAction": {
      "actionType": "JSFunction",
      "method": "performPostRemoveLevelAction",
      "inputData": {
        "removedElements": "{{data.removedLevelElementsFromResponse}}",
        "operationName": "removeLevel",
        "occContext": "{{commandContext.occContext}}"
      },
      "deps": "js/removeElementService"
    },
    "awb0AddNewVariantRuleCmdAction": {
      "actionType": "JSFunction",
      "method": "publishAddNewVariantRuleEvent",
      "deps": "js/variantInfoConfigurationService"
    },
    "checkForEditsAndLaunchAddSubstitutesPanel": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "showLeaveConfirmation",
          "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
        },
        {
          "action": "launchAddSubstitutesPanel"
        }
      ]
    },
    "launchAddSubstitutesPanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Awb0AddSubstitutes",
        "location": "aw_toolsAndInfo",
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "CheckForEditsAndLaunchInsertLevelPanel": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "showLeaveConfirmation",
          "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
        },
        {
          "action": "getInfoForInsertLevelAndLaunchInsertLevelPanel"
        }
      ]
    },
    "getInfoForInsertLevelAndLaunchInsertLevelPanel": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2020-12-OccurrenceManagement",
      "method": "getInfoForInsertLevel",
      "inputData": {
        "getInfoForInsertLevelIn": {
          "elementsToBeReparented": "{{function:populateInsertLevelInputInformation}}",
          "fetchAllowedOccRevTypes": false
        }
      },
      "outputData": {
        "insertLevelResponse": "",
        "allowedTypeInfo": "{{function:extractAllowedTypesInfoFromResponse}}"
      },
      "events": {
        "success": [
          {
            "name": "insertLevel.launchInsertLevelPanel"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "insertLevelResponse.ServiceData.partialErrors[0].errorValues[0].code==126006",
            "message": "getInfoForInsertLevelFailure"
          }
        ]
      },
      "deps": "js/insertElementService"
    },
    "launchInsertLevelPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0InsertLevel",
        "location": "aw_toolsAndInfo"
      }
    },
    "removeSubstitutes": {
      "actionType": "JSFunction",
      "method": "removeSubstitutes",
      "inputData": {
        "selectedObject": "{{ctx.pselected}}",
        "selectedSubstitutes": "{{ctx.mselected}}"
      },
      "outputData": {},
      "deps": "js/substitutesService"
    },
    "applyMarkup": {
      "actionType": "JSFunction",
      "method": "applyMarkupPreProcessing",
      "inputData": {},
      "outputData": {
        "replacedObjects": ""
      },
      "deps": "js/showMarkupService",
      "events": {
        "success": [
          {
            "name": "awb0Markup.ApplyMarkupSOA"
          }
        ]
      }
    },
    "applyMarkupSOA": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2018-12-Markup",
      "method": "applyMarkup",
      "inputData": {
        "input": [
          {
            "element": {
              "uid": "{{ctx.selected.uid}}",
              "type": "{{ctx.selected.type}}"
            },
            "recursive": false,
            "evaluate": false
          }
        ]
      },
      "outputData": {
        "srcUidsAndTargetUids": "{{function:setSourceAndTargetElements}}"
      },
      "events": {
        "success": [
          {
            "name": "ace.replaceRowsInTree",
            "eventData": {
              "targetUids": "{{data.srcUidsAndTargetUids.targetUids}}",
              "srcUids": "{{data.srcUidsAndTargetUids.srcUids}}"
            },
            "condition": "data.srcUidsAndTargetUids.srcUids.length > 0 && ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView'"
          },
          {
            "name": "reRenderTableOnClient",
            "condition": "data.srcUidsAndTargetUids.srcUids.length === 0 && ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView'"
          },
          {
            "name": "awb0ApplyMarkup.success",
            "condition": "!ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView'"
          },
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{ctx.selected}}",
                "{{ctx.pselected}}"
              ],
              "refreshLocationFlag": true
            }
          }
        ]
      },
      "deps": "js/showMarkupService"
    },
    "cancelMarkupLevel": {
      "actionType": "JSFunction",
      "method": "getDisplayName",
      "deps": "js/typeDisplayName.service",
      "inputData": {
        "modelObject": "{{ctx.mselected[0]}}"
      },
      "outputData": {
        "displayNameOfSelectedElement": ""
      },
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.mselected.length === 1",
            "message": "removeSingleForLevel"
          },
          {
            "condition": "ctx.mselected.length > 1",
            "message": "removeMultipleForLevel"
          }
        ]
      }
    },
    "cancelMarkupElement": {
      "actionType": "JSFunction",
      "method": "getDisplayName",
      "deps": "js/typeDisplayName.service",
      "inputData": {
        "modelObject": "{{ctx.mselected[0]}}"
      },
      "outputData": {
        "displayNameOfSelectedElement": ""
      },
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.mselected.length === 1",
            "message": "removeSingleForElement"
          },
          {
            "condition": "ctx.mselected.length > 1",
            "message": "removeMultipleForElement"
          }
        ]
      }
    },
    "cancelMarkupSOA": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2018-12-Markup",
      "method": "cancelMarkup",
      "inputData": {
        "element": {
          "uid": "{{ctx.pselected.uid}}",
          "type": "{{ctx.pselected.type}}"
        },
        "markups": "{{ctx.mselected}}"
      },
      "outputData": {
        "cancelMarkupSOAResponse": ""
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{ctx.selected}}",
                "{{ctx.pselected}}"
              ],
              "refreshLocationFlag": true
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "data.cancelMarkupSOAResponse.partialErrors[0].errorValues[0].code==51010",
            "message": "cancelMarkupSOAFailureMsg"
          }
        ]
      },
      "deps": "js/showMarkupService"
    },
    "aceShowObjectDelegateAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{ctx.selected}}",
          "path": "uid"
        },
        "page": "{{i18n.occMgmtTitle}}",
        "pageId": "tc_xrt_Content"
      }
    },
    "aceShowObjectDelegateCellAction": {
      "actionType": "JSFunction",
      "method": "openObject",
      "inputData": {
        "openedObject": "{{commandContext.vmo}}",
        "page": "{{i18n.occMgmtTitle}}",
        "pageId": "tc_xrt_Content"
      },
      "deps": "js/showObjectCellDelegateService"
    },
    "aceReviseObjectDelegateAction": {
      "actionType": "JSFunction",
      "method": "performPostReviseAction",
      "inputData": {
        "openedObject": "{{commandContext.vmo}}",
        "page": "{{i18n.occMgmtTitle}}",
        "pageId": "tc_xrt_Content"
      },
      "deps": "js/aceReviseObjectsService"
    },
    "aceJitterFreeReviseDelegateAction": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2021-06-OccurrenceManagement",
      "method": "updateContentBasedOnRevision2",
      "inputData": {
        "input": {
          "element": "{{ctx.selected}}",
          "workspaceObject": {
            "uid": "{{commandContext.vmo.uid}}",
            "type": "ItemRevision"
          },
          "productContext": {
            "uid": "{{ctx.aceActiveContext.context.productContextInfo.uid}}",
            "type": "Awb0ProductContextInfo"
          }
        }
      },
      "outputData": {
        "updatedElements": "result.ServiceData.updated"
      },
      "actionMessages": {
        "failure": [
          {
            "message": "soaFailureMessage"
          }
        ]
      }
    },
    "aceOpenInTabDelegateAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
        "uid": {
          "$adapt": "{{ctx.selected}}",
          "path": "uid"
        },
        "page": "{{i18n.occMgmtTitle}}",
        "pageId": "tc_xrt_Content",
        "retainTreeExp": true
      },
      "navigateIn": "newTab"
    },
    "aceOpenInWindowDelegateAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
        "uid": {
          "$adapt": "{{ctx.selected}}",
          "path": "uid"
        },
        "page": "{{i18n.occMgmtTitle}}",
        "pageId": "tc_xrt_Content",
        "retainTreeExp": true
      },
      "navigateIn": "newWindow",
      "options": {
        "top": 10,
        "left": 10
      }
    },
    "aceOpenInRACDelegateAction": {
      "actionType": "Navigate",
      "navigateTo": "launcher/openinrac",
      "navigationParams": {
        "-s": "226TCSession",
        "-o": {
          "$adapt": "{{ctx.selected}}",
          "path": "uid"
        },
        "-attach": "true"
      },
      "navigateIn": "newTab"
    },
    "useSubstitute": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2018-05-OccurrenceManagement",
      "method": "preferSubstitute",
      "inputData": {
        "occurrence": {
          "uid": "{{ctx.pselected.uid}}",
          "type": "{{ctx.pselected.type}}"
        },
        "preferredSubstitute": {
          "uid": "{{ctx.selected.uid}}",
          "type": "{{ctx.selected.type}}"
        }
      },
      "outputData": {
        "plain": "plain"
      },
      "actionMessages": {
        "failure": [
          {
            "message": "soaFailureMessage"
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "ace.UseSubstitute"
          },
          {
            "name": "ace.replaceRowsInTree",
            "eventData": {
              "targetUids": [
                "{{data.plain[0]}}"
              ],
              "srcUids": [
                "{{ctx.pselected.uid}}"
              ]
            },
            "condition": "(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' )"
          },
          {
            "name": "aceElementsSelectedEvent",
            "eventData": {
              "elementsToSelect": [
                "{{function:getObjectFromUid}}"
              ]
            }
          }
        ]
      },
      "deps": "soa/kernel/clientDataModel"
    },
    "updateActiveContextToRefreshSelectedObjectInPWA": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "inputData": {
        "path": "aceActiveContext.context.refreshSelectedObjectInPWA",
        "value": true
      },
      "events": {
        "success": [
          {
            "name": "ace.refreshSelectedObjectInPWA.updated"
          }
        ]
      },
      "deps": "js/appCtxService"
    },
    "refreshPwaWithStartFreshNavigation": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "inputData": {
        "path": "",
        "value": {
          "transientRequestPref": {
            "useProductIndex": false,
            "startFreshNavigation": true
          },
          "pwaReset": true
        },
        "target": "{{commandContext.occContext}}"
      },
      "deps": "js/occmgmtUtils"
    },
    "resetStructureClearRecipe": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "inputData": {
        "path": "aceActiveContext.context.recipe",
        "value": ""
      },
      "deps": "js/appCtxService"
    },
    "toggleMarkup": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ace.activateWindow",
            "eventData": {
              "key": "{{commandContext.contextKey}}"
            }
          },
          {
            "name": "acePwaCommand.toggleMarkupAction"
          }
        ]
      }
    },
    "toggleMarkupAction": {
      "actionType": "JSFunction",
      "method": "updateCtxWithShowMarkupValue",
      "deps": "js/showMarkupService",
      "inputData": {
        "markupToggleState": "{{!ctx.occmgmtContext.isMarkupEnabled}}"
      },
      "events": {
        "success": [
          {
            "name": "ace.refreshSelectedObjectInPWA.updated"
          }
        ]
      }
    },
    "toggleIneffective": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ace.activateWindow",
            "eventData": {
              "key": "{{commandContext.contextKey}}"
            }
          },
          {
            "name": "acePwaCommand.toggleIneffectiveAction"
          }
        ]
      }
    },
    "toggleIneffectiveAction": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": "",
        "value": {
          "displayToggleOptions": {
            "PSEShowUnconfigdEffPref": "{{!commandContext.occContext.displayToggleOptions.PSEShowUnconfigdEffPref}}"
          },
          "transientRequestPref": {
            "jitterFreePropLoad": true,
            "useProductIndex": false,
            "startFreshNavigation": true,
            "retainTreeExpansionStates": true,
            "userGesture": "EFFECTIVITY_TOGGLE_CHANGE"
          },
          "pwaReset": true
        },
        "target": "{{commandContext.occContext}}"
      }
    },
    "toggleVariantsIn": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ace.activateWindow",
            "eventData": {
              "key": "{{commandContext.contextKey}}"
            }
          },
          {
            "name": "acePwaCommand.toggleVariantsInAction"
          }
        ]
      }
    },
    "toggleVariantsInAction": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": "",
        "value": {
          "displayToggleOptions": {
            "PSEShowUnconfigdVarPref": "{{!commandContext.occContext.displayToggleOptions.PSEShowUnconfigdVarPref}}"
          },
          "transientRequestPref": {
            "jitterFreePropLoad": true,
            "useProductIndex": false,
            "startFreshNavigation": true,
            "retainTreeExpansionStates": true,
            "userGesture": "VARIANT_TOGGLE_CHANGE"
          },
          "pwaReset": true
        },
        "target": "{{commandContext.occContext}}"
      }
    },
    "toggleExpandBelowDebug": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": "",
        "value": {
          "ExpandBelowDebug": "{{commandContext.occContext.ExpandBelowDebug === 'false'}}"
        },
        "target": "{{commandContext.occContext}}"
      }
    },
    "toggleExpandOneDebug": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": "",
        "value": {
          "ExpandOneDebug": "{{commandContext.occContext.ExpandOneDebug === 'false'}}"
        },
        "target": "{{commandContext.occContext}}"
      }
    },
    "toggleReconfigureDebug": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": "",
        "value": {
          "ReconfigureDebug": "{{commandContext.occContext.ReconfigureDebug === 'false'}}"
        },
        "target": "{{commandContext.occContext}}"
      }
    },
    "toggleLoadTreePropsDebug": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": "",
        "value": {
          "LoadTreePropsDebug": "{{commandContext.occContext.LoadTreePropsDebug === 'false'}}",
          "LoadTreePropsTimerDebug": "false"
        },
        "target": "{{commandContext.occContext}}"
      }
    },
    "toggleLoadTreePropsTimerDebug": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": "",
        "value": {
          "LoadTreePropsTimerDebug": "{{commandContext.occContext.LoadTreePropsTimerDebug === 'false'}}",
          "LoadTreePropsDebug": "false"
        },
        "target": "{{commandContext.occContext}}"
      }
    },
    "toggleStopExpandBelowDebug": {
      "actionType": "JSFunction",
      "method": "stop",
      "deps": "js/invoker/invoker"
    },
    "toggleUseBackGroundSoaDDebug": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": "",
        "value": {
          "BackGroundSoaDebug": "{{commandContext.occContext.BackGroundSoaDebug === 'false'}}"
        },
        "target": "{{commandContext.occContext}}"
      }
    },
    "toggleSuppressedInAction": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": "",
        "value": {
          "displayToggleOptions": {
            "PSEShowSuppressedOccsPref": "{{!commandContext.occContext.displayToggleOptions.PSEShowSuppressedOccsPref}}"
          },
          "transientRequestPref": {
            "jitterFreePropLoad": true,
            "useProductIndex": false,
            "startFreshNavigation": true,
            "retainTreeExpansionStates": true,
            "userGesture": "SUPPRESSED_TOGGLE_CHANGE"
          },
          "pwaReset": true
        },
        "target": "{{commandContext.occContext}}"
      }
    },
    "aceCollapseBelow": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ace.activateWindow",
            "eventData": {
              "key": "{{commandContext.contextKey}}"
            }
          },
          {
            "name": "acePwaCommand.aceCollapseBelowAction"
          }
        ]
      }
    },
    "aceExpandBelowAction": {
      "actionType": "JSFunction",
      "method": "performExpandBelow",
      "deps": "js/aceExpandBelowService",
      "inputData": {
        "inputValue": {
          "expandBelow": true,
          "loadTreeHierarchyThreshold": 500,
          "scopeForExpandBelow": "{{commandContext.occContext.selectedModelObjects[0].uid}}"
        },
        "commandContext": "{{commandContext}}"
      }
    },
    "aceExpandBelowActionFetchAll": {
      "actionType": "JSFunction",
      "method": "performExpandBelowFetchAll",
      "deps": "js/aceExpandBelowFetchAllService",
      "inputData": {
        "inputValue": {
          "expandBelow": true,
          "loadTreeHierarchyThreshold": 500,
          "scopeForExpandBelow": "{{commandContext.occContext.selectedModelObjects[0].uid}}"
        },
        "commandContext": "{{commandContext}}"
      }
    },
    "aceCollapseBelowAction": {
      "actionType": "JSFunction",
      "method": "performCollapseBelow",
      "inputData": {
        "viewKey": "{{commandContext}}"
      },
      "deps": "js/aceExpandBelowService"
    },
    "hideExpandOptionsPopup": {
      "actionType": "JSFunction",
      "method": "close",
      "deps": "js/declpopupService"
    },
    "configureBySelection": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": null,
        "value": {
          "transientRequestPref": {
            "configBasedOnSel": "true",
            "currentSelections": "{{commandContext.occContext.selectedModelObjects[0].uid}}",
            "userGesture": "VARIANT_RULE_CHANGE"
          },
          "configContext": {
            "r_uid": null,
            "var_uids": null,
            "fromUnit": null,
            "toUnit": null,
            "startDate": null,
            "endDate": null
          }
        },
        "target": "{{commandContext.occContext}}"
      }
    },
    "configByProximityTarget": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": null,
        "value": {
          "transientRequestPref": {
            "configByProximityTarget": "true",
            "filterOrRecipeChange": "true",
            "startFreshNavigation": "true"
          },
          "configContext": {
            "r_uid": null,
            "var_uids": null,
            "fromUnit": null,
            "toUnit": null,
            "startDate": null,
            "endDate": null
          }
        },
        "target": "{{commandContext.occContext}}"
      },
      "actionMessages": {
        "success": [
          {
            "message": "notifyAppliedVariantRuleWithConfigureByProximity",
            "condition": "commandContext.occContext.productContextInfo.props.awb0VariantRules.dbValues != undefined && commandContext.occContext.productContextInfo.props.awb0VariantRules.dbValues.length > 0 && !commandContext.occContext.supportedFeatures.Awb0ConfiguredByProximity"
          }
        ]
      }
    },
    "aceSetInContext": {
      "actionType": "Event",
      "method": "Event",
      "deps": "js/aceInContextOverrideService",
      "inputData": {
        "events": [
          {
            "name": "toggleInContextOverrideOnSelectedParentAssembly"
          }
        ]
      }
    },
    "toggleInContextOverrideInTreeView": {
      "actionType": "JSFunction",
      "method": "toggleInContextOverrideOnSelectedParentAssemblyInTreeView",
      "deps": "js/aceInContextOverrideService",
      "inputData": {
        "commandContext": "{{commandContext}}"
      }
    },
    "toggleInContextOverrideFromNonTreeView": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "toggleInContextOverrideOnSelectedParentAssemblyInNonTreeView"
        },
        {
          "action": "switchToTreeViewInAce"
        }
      ]
    },
    "switchToTreeViewInAce": {
      "actionType": "JSFunction",
      "method": "changeViewMode",
      "deps": "js/viewMode.service",
      "inputData": {
        "viewMode": "TreeView"
      }
    },
    "toggleInContextOverrideOnSelectedParentAssemblyInNonTreeView": {
      "actionType": "JSFunction",
      "method": "updateContextState",
      "inputData": {
        "contextKey": "{{ctx.aceActiveContext.key}}",
        "newState": {
          "incontext_uid": "{{ctx.selected.uid !== commandContext.occContext.currentState.incontext_uid ? ctx.selected.uid : null}}"
        },
        "mergeWithCurrentState": true
      },
      "deps": "js/contextStateMgmtService"
    },
    "removePropertyOverride": {
      "actionType": "JSFunction",
      "method": "removePropertyOverride",
      "outputData": {
        "removeOverrideResponse": ""
      },
      "deps": "js/aceInContextOverrideService"
    },
    "Awb0SaveVariantRule": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ClassicVariants.updateVariantRule",
            "eventData": {}
          }
        ]
      }
    },
    "Awb0SaveAsVariantRule": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "inputData": {
        "path": "",
        "value": {
          "activeView": "Awb0SaveVariantRule"
        },
        "target": "{{commandContext.customVariantState}}"
      },
      "deps": "js/occmgmtUtils"
    },
    "removeAttachment": {
      "actionType": "JSFunction",
      "method": "removeAttachment",
      "inputData": {
        "commandContext": "{{commandContext}}"
      },
      "deps": "js/aceInContextOverrideService",
      "events": {
        "success": [
          {
            "name": "performRemoveAttachmentOverride"
          },
          {
            "name": "performCutAttachmentOperation"
          }
        ]
      }
    },
    "removeAttachmentOverrideSoaCall": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2019-12-OccurrenceManagement",
      "method": "detachObjects",
      "deps": "js/aceInContextOverrideService",
      "inputData": {
        "input": [
          {
            "primaryObj": {
              "type": "{{ctx.pselected.type}}",
              "uid": "{{ctx.pselected.uid}}"
            },
            "secondaryObjs": "{{function:getSecondaryObjects}}"
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": "{{function:adaptedRelatedModifiedRemoveOverrideInput}}",
              "createdObjects": "",
              "childObjects": "{{ctx.mselected}}"
            }
          },
          {
            "name": "cutToAwClipboard"
          },
          {
            "name": "postRemoveAttachmentCleanupAction"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "cutSingleSuccessful"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "cutMultipleSuccessful"
          }
        ]
      }
    },
    "cutAttachmentSoaCall": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2014-10-DataManagement",
      "method": "removeChildren",
      "deps": "js/cutUtils",
      "inputData": {
        "inputData": "{{function:cutInputs}}"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": "{{function:adaptedRelatedModifiedRemoveOverrideInput}}",
              "createdObjects": "",
              "childObjects": "{{ctx.mselected}}"
            }
          },
          {
            "name": "cutToAwClipboard"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "cutSingleSuccessful"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "cutMultipleSuccessful"
          }
        ],
        "failure": [
          {
            "message": "soaFailureMessage"
          }
        ]
      }
    },
    "launchEditEffectivityPanel": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/editEffectivityCommandHandler",
      "inputData": {
        "vmo": "{{commandContext.vmo}}"
      }
    },
    "launchExpressionEffectivityPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0ExpressionEffectivity",
        "location": "aw_toolsAndInfo"
      }
    },
    "saveUserWorkingContextStateAndSignOut": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "saveUserWorkingContextState"
        },
        {
          "action": "signOut"
        }
      ]
    },
    "saveUserWorkingContextState": {
      "actionType": "JSFunctionAsync",
      "method": "saveUserWorkingContextState",
      "deps": "js/backgroundWorkingContextService"
    },
    "launchEditEffectivityGroupPanel": {
      "actionType": "JSFunction",
      "method": "execute",
      "inputData": {
        "vmo": "{{commandContext.vmo}}"
      },
      "deps": "js/editGroupEffectivityCommandHandler"
    },
    "occMgmtDuplicateOpenNotification": {
      "actionType": "JSFunction",
      "method": "openInteractiveDuplicateNotification",
      "inputData": {
        "notificationObject": "{{commandContext}}"
      },
      "events": {
        "success": [
          {
            "name": "NotificationMessage.markRead"
          }
        ]
      },
      "deps": "js/occMgmtDuplicateActionService"
    },
    "occMgmtDuplicateCmdAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "occMgmtDuplicateSetConfigOnContext"
        },
        {
          "action": "occMgmtDuplicateShowLeaveConfirmation",
          "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
        },
        {
          "action": "occMgmtDuplicateNavigateAction"
        }
      ]
    },
    "occMgmtDuplicateSetConfigOnContext": {
      "actionType": "JSFunction",
      "method": "setConfigOnContext",
      "deps": "js/occMgmtDuplicateViewService"
    },
    "occMgmtDuplicateNavigateAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_client_duplicate",
      "navigationParams": {
        "uid": {
          "$adapt": "{{ctx.selected}}",
          "path": "uid"
        }
      }
    },
    "occMgmtDuplicateCloneActionOnLine": {
      "actionType": "JSFunction",
      "method": "setDuplicateActionOnLine",
      "inputData": {
        "operationType": 0,
        "target": "{{commandContext.occContext}}"
      },
      "deps": "js/occMgmtDuplicateActionService"
    },
    "occMgmtDuplicateReferenceActionOnLine": {
      "actionType": "JSFunction",
      "method": "setDuplicateActionOnLine",
      "inputData": {
        "operationType": 1,
        "target": "{{commandContext.occContext}}"
      },
      "deps": "js/occMgmtDuplicateActionService"
    },
    "setReplaceDataActionOnLine": {
      "actionType": "JSFunction",
      "method": "setDuplicateActionOnLine",
      "inputData": {
        "operationType": 3,
        "target": "{{commandContext.occContext}}"
      },
      "deps": "js/occMgmtDuplicateActionService"
    },
    "occMgmtDuplicateRemoveActionOnLine": {
      "actionType": "JSFunction",
      "method": "setDuplicateActionOnLine",
      "inputData": {
        "operationType": 5,
        "target": "{{commandContext.occContext}}"
      },
      "deps": "js/occMgmtDuplicateActionService"
    },
    "occMgmtDuplicateCloneBelowActionOnLine": {
      "actionType": "JSFunction",
      "method": "setDuplicateActionOnLine",
      "inputData": {
        "operationType": 6,
        "target": "{{commandContext.occContext}}"
      },
      "deps": "js/occMgmtDuplicateActionService"
    },
    "occMgmtDuplicateLaunchReplacePanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Awb0ReplaceElementDeclarative",
        "location": "aw_toolsAndInfo",
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "occMgmtDuplicateShowLeaveConfirmation": {
      "actionType": "JSFunction",
      "method": "leaveConfirmation",
      "inputData": {},
      "events": {},
      "deps": "js/editHandlerService"
    },
    "OccMgmtDuplicateSettingsCmdAction": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "OccMgmtDuplicatePanel",
        "location": "aw_toolsAndInfo"
      }
    },
    "addChildPanelSelection": {
      "actionType": "JSFunction",
      "method": "addPartPanelSelection",
      "inputData": {
        "selectedObject": "{{ctx.selected}}",
        "flag": "child"
      },
      "outputData": {
        "idOfAddChildSiblingPanelToShow": ""
      },
      "events": {
        "success": [
          {
            "name": "revOccAddChildActionEvent"
          }
        ]
      },
      "deps": "js/addRevOccService"
    },
    "addSiblingPanelSelection": {
      "actionType": "JSFunction",
      "method": "addPartPanelSelection",
      "inputData": {
        "selectedObject": "{{ctx.selected}}",
        "flag": "sibling"
      },
      "outputData": {
        "idOfAddChildSiblingPanelToShow": ""
      },
      "events": {
        "success": [
          {
            "name": "revOccAddSiblingActionEvent"
          }
        ]
      },
      "deps": "js/addRevOccService"
    },
    "revOccAddChildAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "{{data.idOfAddChildSiblingPanelToShow}}",
        "location": "aw_toolsAndInfo",
        "context": "{{commandContext}}",
        "push": false,
        "closeWhenCommandHidden": false,
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "revOccAddSiblingAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "{{data.idOfAddChildSiblingPanelToShow}}",
        "location": "aw_toolsAndInfo",
        "context": "{{commandContext}}",
        "push": false,
        "closeWhenCommandHidden": false,
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "updateCtxAndLaunchSaveAsAndReplacePanel": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "updatePartialCtxForSaveAsAndReplace"
        },
        {
          "action": "launchSaveAsAndReplace"
        }
      ]
    },
    "updatePartialCtxForSaveAsAndReplace": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "inputData": {
        "path": "aceActiveContext.context.adaptedPropForSaveAsReplace",
        "value": "awb0Archetype"
      },
      "deps": "js/appCtxService"
    },
    "awb0AddRevisionCommandAction": {
      "actionType": "JSFunction",
      "method": "updateAtomicDataValue",
      "inputData": {
        "AtomicObj": "{{commandContext.activeState}}",
        "value": {
          "activeView": "Awb0AddRevision"
        }
      },
      "deps": "js/addObjectUtils"
    },
    "awb0RemoveRevisionCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "awb0RemoveRevisionFromListEvent",
            "eventData": {
              "data": "{{commandContext}}"
            }
          }
        ]
      }
    },
    "revOccRemoveAlternates": {
      "actionType": "JSFunction",
      "method": "removeAlternates",
      "inputData": {
        "selectedAlternates": "{{ctx.mselected}}",
        "selectedObjects": "{{ctx.xrtSummaryContextObject.props.awb0Archetype.dbValues}}"
      },
      "outputData": {},
      "deps": "js/alternatesService"
    },
    "revOccSaveAsorReviseInContext": {
      "actionType": "JSFunction",
      "method": "updateSaveAsContextAndActivateCommandPanel",
      "deps": "js/Awp0ShowSaveAsService",
      "inputData": {
        "input": {
          "selectedObj": "{{ctx.selected}}",
          "openNewRevision": true,
          "showOpenNewRevisionCheckbox": false,
          "commandId": "Awp0ShowSaveAs",
          "location": "aw_toolsAndInfo"
        }
      }
    },
    "revOccCreateChangeInputAction": {
      "actionType": "JSFunction",
      "method": "getPartAndUsageListFromSelection",
      "outputData": {
        "createChangeInput": ""
      },
      "deps": "js/revOccUtils"
    },
    "revOccSubmitToWorkflow": {
      "actionType": "JSFunction",
      "method": "getPartAndUsageListFromSelection",
      "outputData": {
        "submitWorkflowInput": ""
      },
      "events": {
        "success": [
          {
            "name": "revOcc.submitWorkflow.adaptedInputs"
          }
        ]
      },
      "deps": "js/revOccUtils"
    },
    "revOccGetPropsForSubmitToWorkflow": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "objects": "{{data.submitWorkflowInput}}",
        "attributes": [
          "owning_site",
          "checked_out_user"
        ]
      },
      "events": {
        "success": [
          {
            "name": "revOcc.workflow.getSelectedBOTypeName"
          }
        ]
      }
    },
    "revOccGetSelectedBOTypeName": {
      "actionType": "JSFunction",
      "method": "getTheBOType",
      "deps": "js/Awp0NewWorkflowProcessCommandHandler",
      "inputData": {
        "selections": "{{data.submitWorkflowInput}}"
      },
      "outputData": {
        "inputForGetTypeConstantValues": []
      },
      "events": {
        "success": [
          {
            "name": "revOcc.workflow.getTypesFromBO"
          }
        ]
      }
    },
    "revOccGetTypeFromBOConstant": {
      "actionType": "TcSoaService",
      "serviceName": "BusinessModeler-2007-06-Constants",
      "method": "getTypeConstantValues",
      "inputData": {
        "keys": "{{data.inputForGetTypeConstantValues}}"
      },
      "outputData": {
        "applicableTypes": "constantValues"
      },
      "events": {
        "success": [
          {
            "name": "revOcc.workflow.validateForCreatingWorkflowPresenterEvent"
          }
        ]
      }
    },
    "revOccGalidateForCreatingWorkflowPresenterAction": {
      "actionType": "JSFunction",
      "method": "populateErrorMessage",
      "deps": "js/Awp0NewWorkflowProcessCommandHandler",
      "inputData": {
        "selections": "{{data.submitWorkflowInput}}",
        "data": "{{data}}",
        "ctx": "{{ctx}}"
      }
    },
    "revOccRegisterAppCreateChangePanelCtxAction": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "deps": "js/appCtxService",
      "inputData": {
        "name": "appCreateChangePanel.appSelectedObjects",
        "value": "{{data.createChangeInput}}"
      }
    },
    "revOccCreateChangeInContext": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "revOccCreateChangeInputAction"
        },
        {
          "action": "revOccRegisterAppCreateChangePanelCtxAction"
        },
        {
          "action": "Cm1ShowCreateChangeInContextPanel"
        }
      ]
    },
    "revOccJitterFreeReviseDelegateAction": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2020-05-OccurrenceManagement",
      "method": "updateContentBasedOnRevision",
      "inputData": {
        "input": {
          "workspaceObject": {
            "uid": "{{commandContext.vmo.uid}}",
            "type": "{{commandContext.vmo.type}}"
          },
          "productContext": {
            "uid": "{{ctx.aceActiveContext.context.productContextInfo.uid}}",
            "type": "Awb0ProductContextInfo"
          }
        }
      },
      "outputData": {
        "updatedElements": "result.ServiceData.updated"
      }
    },
    "setReferenceActionOnLine": {
      "actionType": "JSFunction",
      "method": "setActionOnLine",
      "deps": "js/importPreviewSetActionOnLine",
      "inputData": {
        "actionString": "Reference"
      }
    },
    "setReviseActionOnLine": {
      "actionType": "JSFunction",
      "method": "setActionOnLine",
      "deps": "js/importPreviewSetActionOnLine",
      "inputData": {
        "actionString": "Revise"
      }
    },
    "setOverwriteActionOnLine": {
      "actionType": "JSFunction",
      "method": "setActionOnLine",
      "deps": "js/importPreviewSetActionOnLine",
      "inputData": {
        "actionString": "Overwrite"
      }
    },
    "launchImportFromExcelPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0ImportFromExcel",
        "location": "aw_toolsAndInfo",
        "closeWhenCommandHidden": false
      }
    },
    "closeImportPreview": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "importBOMPreview.closeImportPreview"
          }
        ]
      }
    },
    "addChildRowCommandAction": {
      "actionType": "JSFunction",
      "method": "addRow",
      "inputData": {
        "commandContext": "{{commandContext}}",
        "isChild": true
      },
      "deps": "js/aceInlineAuthoringHandler"
    },
    "addSiblingRowCommandAction": {
      "actionType": "JSFunction",
      "method": "addRow",
      "inputData": {
        "commandContext": "{{commandContext}}",
        "isChild": false
      },
      "deps": "js/aceInlineAuthoringHandler"
    },
    "removeAllInlineRowAction": {
      "actionType": "JSFunction",
      "method": "removeRow",
      "inputData": {
        "targetObjects": [],
        "removeSingle": false,
        "occContext": "{{commandContext.occContext}}"
      },
      "deps": "js/aceInlineAuthoringHandler"
    },
    "saveRowAction": {
      "actionType": "JSFunction",
      "method": "saveRow",
      "inputData": {
        "occContext": "{{commandContext.occContext}}"
      },
      "deps": "js/aceInlineAuthoringHandler"
    },
    "launchAddRefPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0AddRef",
        "location": "aw_toolsAndInfo",
        "closeWhenCommandHidden": true
      }
    },
    "setAddPanelContext": {
      "actionType": "JSFunction",
      "method": "setAddPanelContext",
      "inputData": {
        "commandContext": "{{commandContext}}"
      },
      "deps": "js/aceInlineAuthoringHandler"
    },
    "launchAddPanel": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "setAddPanelContext"
        },
        {
          "action": "launchAddRefPanel"
        }
      ]
    },
    "removeRowAction": {
      "actionType": "JSFunction",
      "method": "removeRow",
      "inputData": {
        "vmo": [
          "{{commandContext.vmo}}"
        ],
        "removeSingle": true
      },
      "deps": "js/aceInlineAuthoringHandler"
    },
    "awb0SplitStartEditSummary": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/startEditGroupCommandService",
      "inputData": {
        "handleContext": "{{commandContext.occContext.customEditContext}}",
        "view": "{{ctx.ViewModeContext.ViewModeContext}}"
      }
    },
    "awb0launchOpenInViewCommandPanelAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "awb0OpenInViewCommand",
        "location": "aw_toolsAndInfo",
        "context": {
          "context": "{{commandContext}}",
          "includeTypes": "Item",
          "searchFilters": "ItemRevision"
        }
      }
    },
    "awb0launchOpenInViewCommandPanel": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ace.activateWindow",
            "eventData": {
              "key": "{{commandContext.contextKey}}"
            }
          },
          {
            "name": "acePwaCommand.launchOpenInViewCommand"
          }
        ]
      }
    },
    "openInSplitView": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showMultiObject",
      "navigationParams": {
        "uid": "{{data.eventData.uid}}",
        "uid2": "{{data.eventData.uid2}}",
        "pci_uid": "{{data.eventData.pci_uid}}",
        "pci_uid2": "{{data.eventData.pci_uid2}}"
      }
    },
    "awb0OpenInSplitView": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ace.clearExpansionState"
          },
          {
            "name": "ace.openInSplitView",
            "eventData": {
              "uid": {
                "$adapt": "{{ctx.mselected[0]}}",
                "path": "uid"
              },
              "uid2": {
                "$adapt": "{{ctx.mselected[1]}}",
                "path": "uid"
              },
              "pci_uid": "{{function:getPciForFirstSelection}}",
              "pci_uid2": "{{function:getPciForSecondSelection}}"
            }
          }
        ]
      },
      "deps": "js/occmgmtUtils"
    },
    "clearExpansionState": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "inputData": {
        "path": "resetTreeExpansionState",
        "value": true
      },
      "deps": "js/appCtxService"
    },
    "toggleSplitMode": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ace.retainCurrentExpansionState",
            "condition": "(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView')",
            "eventData": {
              "occContext": "{{commandContext.occContext}}"
            }
          },
          {
            "name": "ace.clearExpansionState"
          },
          {
            "name": "enableSplitMode",
            "condition": "ctx.splitView === undefined && ctx.aceActiveContext && !commandContext.occContext.supportedFeatures.4GStructureFeature && ctx.sublocation.clientScopeURI==='Awb0OccurrenceManagement'"
          },
          {
            "name": "clearLocalStorageForInactiveView"
          },
          {
            "name": "disableSplitMode",
            "condition": "ctx.splitView && ctx.splitView.mode"
          }
        ]
      }
    },
    "enableSplitMode": {
      "actionType": "JSFunction",
      "method": "navigateToSplitView",
      "inputData": {
        "occContext": "{{commandContext.occContext}}"
      },
      "deps": "js/occmgmtSplitViewService"
    },
    "disableSplitMode": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.occContext.currentState.uid}}",
        "c_uid": "{{commandContext.occContext.currentState.c_uid}}",
        "pci_uid": "{{commandContext.occContext.currentState.pci_uid}}",
        "o_uid": "{{commandContext.occContext.currentState.o_uid}}",
        "t_uid": "{{commandContext.occContext.currentState.t_uid}}",
        "spageId": "{{commandContext.occContext.currentState.spageId}}"
      }
    },
    "awb0StartTreeEditPre": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ace.activateWindow",
            "eventData": {
              "key": "{{commandContext.contextKey}}"
            }
          },
          {
            "name": "acePwaCommand.awb0StartTreeEdit"
          }
        ]
      }
    },
    "awb0StartTreeEdit": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/startEditGroupCommandService",
      "inputData": {
        "handleContext": "{{ctx.aceActiveContext.context.vmc.name}}",
        "view": "{{ctx.ViewModeContext.ViewModeContext}}"
      }
    },
    "retainCurrentExpansionState": {
      "actionType": "JSFunction",
      "method": "retainCurrentExpansionState",
      "inputData": {
        "vmc": "{{eventData.occContext.vmc}}"
      },
      "deps": "js/occmgmtTreeTableDataService"
    },
    "Awb0SelectAllCommandAction": {
      "actionType": "JSFunction",
      "method": "selectActionForPWA",
      "inputData": {
        "pwaSelectionModel": "{{commandContext.pwaSelectionModel}}",
        "eventData": {
          "selectAll": true
        }
      },
      "deps": "js/awDataNavigatorService"
    },
    "Awb0EnableMultiSelectCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "primaryWorkarea.multiSelectModeAction",
            "eventData": {
              "pwaSelectionModel": "{{commandContext.pwaSelectionModel}}",
              "multiSelect": true
            }
          }
        ]
      }
    },
    "Awb0DisableMultiSelectCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "primaryWorkarea.multiSelectModeAction",
            "eventData": {
              "pwaSelectionModel": "{{commandContext.pwaSelectionModel}}",
              "multiSelect": false
            }
          }
        ]
      }
    },
    "Awb0DeselectAllCommandAction": {
      "actionType": "JSFunction",
      "method": "selectActionForPWA",
      "inputData": {
        "pwaSelectionModel": "{{commandContext.pwaSelectionModel}}",
        "eventData": {
          "selectAll": false
        }
      },
      "deps": "js/awDataNavigatorService"
    },
    "updateInctiveView": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "aceElementsDeSelectedEvent",
            "eventData": {
              "viewToReact": "{{function:getInactiveViewKey}}",
              "silentSelection": true,
              "elementsToDeselect": "{{data.deletedElements}}"
            },
            "condition": "data.deletedElements && data.deletedElements.length > 0"
          },
          {
            "name": "ace.refreshInactiveViewWithSameConfig"
          }
        ]
      },
      "deps": "js/occmgmtSplitViewUpdateService"
    },
    "refreshInactiveViewWithSameConfig": {
      "actionType": "JSFunction",
      "method": "refreshInactiveViewWithSameConfig",
      "deps": "js/occmgmtSplitViewUpdateService"
    },
    "clearLocalStorageForInactiveView": {
      "actionType": "JSFunction",
      "method": "clearLocalStorageForInactiveView",
      "deps": "js/occmgmtSplitViewUpdateService"
    },
    "addProductOpenedInSplitViewToSessionStorage": {
      "actionType": "JSFunction",
      "method": "addProductOpenedInSplitViewToSessionStorage",
      "deps": "js/occmgmtSplitViewUpdateService",
      "inputData": {
        "uid": "{{commandContext.occContext.currentState.uid}}",
        "filterCount": "{{commandContext.occContext.productContextInfo.props.awb0FilterCount.dbValues[0]}}"
      }
    },
    "continueWithoutSaving": {
      "actionType": "JSFunction",
      "method": "setContinueWithUnsaved",
      "deps": "js/discoverySubscriptionService",
      "inputData": {
        "continueWithoutSave": true
      },
      "events": {
        "success": [
          {
            "name": "saveAsReviseNonDirtyWorkset"
          }
        ]
      }
    },
    "saveAsReviseWorksetAfterSaving": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "performSaveWorkset"
        },
        {
          "action": "saveAsReviseOpenPanelBatch"
        }
      ]
    },
    "saveAsReviseOpenPanelBatch": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "registerSaveAsReviseWorksetListeners"
        },
        {
          "action": "updateSelectedOnCtxOnSaveAsReviseWS"
        }
      ]
    },
    "registerSaveAsReviseWorksetListeners": {
      "actionType": "JSFunction",
      "method": "initializeSaveAsReviseWorksetListeners",
      "deps": "js/discoverySubscriptionService"
    },
    "saveAsReviseWorkset": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "saveAsReviseDirtyWorkset",
            "condition": "!conditions.isWorksetAutoSaveEnabled && ctx.aceActiveContext.context.worksetTopNode && ctx.aceActiveContext.context.worksetTopNode.props.fnd0PendingChanges.dbValues[0] === '1'"
          },
          {
            "name": "saveAsReviseNonDirtyWorkset",
            "condition": "(conditions.isWorksetAutoSaveEnabled && conditions.isTcReleaseAtLeast14_2 )|| ( ctx.aceActiveContext.context.worksetTopNode && ctx.aceActiveContext.context.worksetTopNode.props.fnd0PendingChanges.dbValues[0] === '0' )"
          }
        ]
      }
    },
    "updateSelectedOnCtxOnSaveAsReviseWS": {
      "actionType": "JSFunction",
      "method": "updateSaveAsContextAndActivateCommandPanel",
      "deps": "js/Awp0ShowSaveAsService",
      "inputData": {
        "input": {
          "selectedObj": "{{ctx.selected}}",
          "commandId": "Awb0ShowSaveAsWorkset",
          "location": "aw_toolsAndInfo",
          "openNewRevision": true,
          "showOpenNewRevisionCheckbox": false
        }
      }
    },
    "openSnapshotAction": {
      "actionType": "JSFunction",
      "method": "openProductSnapshot",
      "inputData": {
        "snapshotObj": "{{commandContext.vmo}}"
      },
      "events": {
        "success": [
          {
            "condition": "ctx.sublocation.clientScopeURI==='Awb0OccurrenceManagement'",
            "name": "occmgmtsubset.applySnapshot"
          }
        ]
      },
      "deps": "js/discoverySnapshotService"
    },
    "openInNewTabCommandContext": {
      "actionType": "JSFunction",
      "method": "openProductSnapshot",
      "inputData": {
        "snapshotObj": "{{commandContext.vmo}}",
        "navigateIn": "newTab"
      },
      "deps": "js/discoverySnapshotService"
    },
    "openInNewWindowCommandContext": {
      "actionType": "JSFunction",
      "method": "openProductSnapshot",
      "inputData": {
        "snapshotObj": "{{commandContext.vmo}}",
        "navigateIn": "newWindow"
      },
      "deps": "js/discoverySnapshotService"
    },
    "showObjectCellCommandContext": {
      "actionType": "JSFunction",
      "method": "openProductSnapshot",
      "inputData": {
        "snapshotObj": "{{ctx.selected}}"
      },
      "deps": "js/discoverySnapshotService"
    },
    "openInNewTabCellCommandContext": {
      "actionType": "JSFunction",
      "method": "openProductSnapshot",
      "inputData": {
        "snapshotObj": "{{ctx.selected}}",
        "navigateIn": "newTab"
      },
      "deps": "js/discoverySnapshotService"
    },
    "openInNewWindowCellCommandContext": {
      "actionType": "JSFunction",
      "method": "openProductSnapshot",
      "inputData": {
        "snapshotObj": "{{ctx.selected}}",
        "navigateIn": "newWindow"
      },
      "deps": "js/discoverySnapshotService"
    },
    "Awb0CreateWorksetCommandPanelAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0CreateWorkset",
        "location": "aw_toolsAndInfo"
      }
    },
    "clearFilterCache": {
      "actionType": "JSFunction",
      "method": "clearAllCacheOnReset",
      "deps": "js/discoveryFilterService"
    },
    "Awb0CreateSessionCommandPanelAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0CreateSession",
        "location": "aw_toolsAndInfo"
      }
    },
    "launchSaveAsSessionCommandPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awb0SaveAsSession",
        "location": "aw_toolsAndInfo"
      }
    },
    "performSaveSession": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "showSaveSessionInfoAction"
        },
        {
          "action": "saveSessionPendingChanges"
        }
      ]
    },
    "showSaveSessionInfoAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "showSaveSessionInfoEvent"
          }
        ]
      }
    },
    "saveSessionPendingChanges": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2020-05-OccurrenceManagement",
      "method": "updateWorkingContext",
      "inputData": {
        "input": [
          {
            "productInfo": "{{ctx.aceActiveContext.context.productContextInfo}}",
            "workingContext": "{{function:getWorkContextObject}}",
            "saveResult": true,
            "operation": "Save"
          }
        ]
      },
      "outputData": {
        "partialErrors": "partialErrors",
        "errorMessages": "{{partialErrors[0].errorValues[0].message}}"
      },
      "events": {
        "success": [
          {
            "name": "ace.saveSessionSuccess"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "saveSessionConfirmPopupNoOverwrite",
            "condition": "partialErrors && partialErrors[0].errorValues[0].code === 126262 && ctx.preferences.AWBShowOverwriteForConcurrentSave[0] === 'false'"
          },
          {
            "message": "saveSessionConfirmPopup",
            "condition": "partialErrors && partialErrors[0].errorValues[0].code === 126262 && ctx.preferences.AWBShowOverwriteForConcurrentSave[0] === 'true'"
          },
          {
            "message": "updateWorkingContextFailedMessage",
            "condition": "partialErrors && partialErrors[0].errorValues[0].code !== 126262"
          }
        ]
      },
      "deps": "soa/kernel/clientDataModel"
    },
    "overwriteSessionPendingChangesAction": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2020-05-OccurrenceManagement",
      "method": "updateWorkingContext",
      "inputData": {
        "input": [
          {
            "productInfo": "{{ctx.aceActiveContext.context.productContextInfo}}",
            "workingContext": "{{function:getWorkContextObject}}",
            "saveResult": true,
            "operation": "Overwrite"
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "ace.saveSessionSuccess"
          }
        ]
      },
      "deps": "soa/kernel/clientDataModel"
    },
    "performReplayOfSession": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "updateRecipeAndFilterCategoriesOnReplay",
          "condition": "conditions.isTcReleaseLessThan13_3"
        },
        {
          "action": "updateReplayInAppContext",
          "condition": "conditions.isTcReleaseLessThan13_3"
        },
        {
          "action": "publishEventForWorksetAutoSave",
          "condition": "conditions.isTcReleaseAtLeast14_2"
        },
        {
          "action": "updateReplay",
          "condition": "conditions.isTcReleaseAtLeast13_3"
        },
        {
          "action": "doReplayWithPrimaryWorkAreaReset",
          "condition": "conditions.isTcReleaseLessThan13_3"
        }
      ]
    },
    "performReplayOfWorkset": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "publishEventForWorksetAutoSave",
          "condition": "conditions.isTcReleaseAtLeast14_2"
        },
        {
          "action": "updateReplay"
        }
      ]
    },
    "updateRecipeAndFilterCategoriesOnReplay": {
      "actionType": "JSFunction",
      "method": "updateRecipeAndFilterInfoForReplay",
      "inputData": {
        "occContext": "{{commandContext.occContext}}"
      },
      "deps": "js/structureFilterService"
    },
    "updateReplayInAppContext": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "inputData": {
        "path": "aceActiveContext.context.requestPref",
        "value": {
          "replayRecipe": "true",
          "calculateFilters": true
        }
      },
      "deps": "js/appCtxService"
    },
    "updateReplay": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "inputData": {
        "path": "",
        "value": {
          "transientRequestPref": {
            "replayRecipe": "true",
            "currentSelections": "{{function:getSelectedObjectUids}}",
            "jitterFreePropLoad": true,
            "startFreshNavigation": true
          },
          "pwaReset": true
        },
        "target": "{{commandContext.occContext}}"
      },
      "deps": "js/occmgmtUtils"
    },
    "updateJitterFreeContextState": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "inputData": {
        "path": "aceActiveContext.context.retainTreeExpansionStateInJitterFreeWay",
        "value": true
      },
      "deps": "js/appCtxService"
    },
    "publishEventForWorksetAutoSave": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "workset.overridePartialErrorProcessing"
          }
        ]
      }
    },
    "doReplayWithPrimaryWorkAreaReset": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "acePwa.reset"
          }
        ]
      }
    },
    "launchStructureFilterPanelActionForIncludeBatch": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "includeSelectedElementToFilterBatch",
          "condition": "ctx.sidenavCommandId && ctx.sidenavCommandId === 'Awb0StructureFilterCommand'"
        },
        {
          "action": "launchStructureFilterPanelActionForInclude",
          "condition": "!ctx.sidenavCommandId || ctx.sidenavCommandId !== 'Awb0StructureFilterCommand'"
        }
      ]
    },
    "launchStructureFilterPanelActionForIncludeWithoutChildrenBatch": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "includeWithoutChildrenSelectedElementToFilterBatch",
          "condition": "ctx.sidenavCommandId && ctx.sidenavCommandId === 'Awb0StructureFilterCommand'"
        },
        {
          "action": "launchStructureFilterPanelActionForIncludeWithoutChildren",
          "condition": "!ctx.sidenavCommandId || ctx.sidenavCommandId !== 'Awb0StructureFilterCommand'"
        }
      ]
    },
    "includeSelectedElementToFilterBatch": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "updateInclContextState"
        },
        {
          "action": "addSelectedElementToFilter"
        }
      ]
    },
    "includeWithoutChildrenSelectedElementToFilterBatch": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "updateInclWithoutChildrenContextState"
        },
        {
          "action": "addSelectedElementToFilter"
        }
      ]
    },
    "launchStructureFilterPanelActionForInclude": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "inputData": {
        "commandId": "Awb0StructureFilterCommand",
        "location": "aw_navigation",
        "context": {
          "operation": "Include"
        }
      },
      "deps": "js/commandPanel.service"
    },
    "launchStructureFilterPanelActionForIncludeWithoutChildren": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "inputData": {
        "commandId": "Awb0StructureFilterCommand",
        "location": "aw_navigation",
        "context": {
          "operation": "IncludeWithoutChildren"
        }
      },
      "deps": "js/commandPanel.service"
    },
    "updateInclContextState": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": "operation",
        "value": "Include",
        "target": "panelContext"
      }
    },
    "updateInclWithoutChildrenContextState": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": "operation",
        "value": "IncludeWithoutChildren",
        "target": "panelContext"
      }
    },
    "addSelectedElementToFilter": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "awDiscovery.performIncludeExclude"
          }
        ]
      }
    },
    "launchStructureFilterPanelActionForExcludeBatch": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "excludeSelectedElementToFilterBatch",
          "condition": "ctx.sidenavCommandId && ctx.sidenavCommandId === 'Awb0StructureFilterCommand'"
        },
        {
          "action": "launchStructureFilterPanelActionForExclude",
          "condition": "!ctx.sidenavCommandId || ctx.sidenavCommandId !== 'Awb0StructureFilterCommand' "
        }
      ]
    },
    "excludeSelectedElementToFilterBatch": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "updateExclContextState"
        },
        {
          "action": "addSelectedElementToFilter"
        }
      ]
    },
    "launchStructureFilterPanelActionForExclude": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "inputData": {
        "commandId": "Awb0StructureFilterCommand",
        "location": "aw_navigation",
        "context": {
          "operation": "Exclude"
        }
      },
      "deps": "js/commandPanel.service"
    },
    "updateExclContextState": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": "operation",
        "value": "Exclude",
        "target": "panelContext"
      }
    },
    "updateSharedDataForFilterSettings": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "awb0.updateDiscoverySharedDataForPanelNavigation",
            "eventData": {
              "nextActiveView": "Awb0FilterPanelSettings"
            }
          }
        ]
      }
    },
    "performSaveWorkset": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "showSaveWorksetInfoAction"
        },
        {
          "action": "saveWorksetPendingChanges"
        }
      ]
    },
    "showSaveWorksetInfoAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "showSaveWorksetInfoEvent"
          }
        ]
      }
    },
    "saveWorksetPendingChanges": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2020-05-OccurrenceManagement",
      "method": "updateWorkingContext",
      "inputData": {
        "input": [
          {
            "productInfo": "{{ctx.aceActiveContext.context.productContextInfo}}",
            "workingContext": "{{ctx.aceActiveContext.context.worksetTopNode}}",
            "saveResult": true,
            "operation": "Save"
          }
        ]
      },
      "outputData": {
        "partialErrors": "partialErrors",
        "errorMessages": "{{partialErrors[0].errorValues[0].message}}"
      },
      "events": {
        "success": [
          {
            "name": "ace.saveSessionSuccess"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "concurrentSaveWorksetConfirmPopupNoOverwrite",
            "condition": "partialErrors && partialErrors[0].errorValues[0].code === 126262 && ctx.preferences.AWBShowOverwriteForConcurrentSave[0] === 'false'"
          },
          {
            "message": "concurrentSaveWorksetConfirmPopup",
            "condition": "partialErrors && partialErrors[0].errorValues[0].code === 126262 && ctx.preferences.AWBShowOverwriteForConcurrentSave[0] === 'true'"
          },
          {
            "message": "updateWorkingContextFailedMessage",
            "condition": "partialErrors && partialErrors[0].errorValues[0].code !== 126262"
          }
        ]
      },
      "deps": "soa/kernel/clientDataModel"
    },
    "configureBySelectionInWorkset": {
      "actionType": "JSFunction",
      "method": "updateValueOnCtxOrState",
      "deps": "js/occmgmtUtils",
      "inputData": {
        "path": null,
        "value": {
          "transientRequestPref": {
            "configBasedOnSel": "true",
            "currentSelections": "{{commandContext.occContext.selectedModelObjects[0].uid}}",
            "userGesture": "VARIANT_RULE_CHANGE"
          },
          "configContext": {
            "r_uid": null,
            "var_uids": null,
            "fromUnit": null,
            "toUnit": null,
            "startDate": null,
            "endDate": null
          }
        },
        "target": "{{commandContext.occContext}}"
      }
    },
    "saveAndOpenInVis": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "performSaveWorkset",
          "condition": "conditions.isSaveWorksetActive"
        },
        {
          "action": "performSaveSession",
          "condition": "conditions.isSaveSessionActive"
        },
        {
          "action": "openInVis"
        }
      ]
    },
    "launchOpenInVis": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "showUnsavedObjectMessageWithWriteAccessForOpenInVis",
          "condition": "conditions.isObjectUnsavedHasWriteAccess"
        },
        {
          "action": "showUnsavedObjectMessageNoWriteAccessForOpenInVis",
          "condition": "conditions.isObjectUnsavedNoWriteAccess"
        },
        {
          "action": "openInVis",
          "condition": "conditions.isOpenInVisDefault"
        }
      ]
    },
    "showUnsavedObjectMessageWithWriteAccessForOpenInVis": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "showUnsavedObjectMessageWithWriteAccessForOpenInVis"
          }
        ]
      }
    },
    "showUnsavedObjectMessageNoWriteAccessForOpenInVis": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "showUnsavedObjectMessageNoWriteAccessForOpenInVis"
          }
        ]
      }
    },
    "openInVis": {
      "actionType": "JSFunction",
      "method": "executeOpenInVisCommand",
      "deps": "js/Awv0VisualizationService"
    },
    "overwriteWorksetPendingChangesAction": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2020-05-OccurrenceManagement",
      "method": "updateWorkingContext",
      "inputData": {
        "input": [
          {
            "productInfo": "{{ctx.aceActiveContext.context.productContextInfo}}",
            "workingContext": "{{ctx.aceActiveContext.context.worksetTopNode}}",
            "saveResult": true,
            "operation": "Overwrite"
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "ace.saveSessionSuccess"
          }
        ]
      },
      "deps": "soa/kernel/clientDataModel"
    },
    "saveAsWSOnConcurrentSaveBatch": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "updateSaveAsOnConcurrentSaveOnCtx"
        },
        {
          "action": "registerSaveAsReviseWorksetListeners"
        },
        {
          "action": "changeSelectionToWorksetForConcurrentSave"
        },
        {
          "action": "updateSelectedOnCtxForConcurrentSaveWS"
        }
      ]
    },
    "updateSaveAsOnConcurrentSaveOnCtx": {
      "actionType": "JSFunction",
      "method": "populateSaveAsOnConcurrentSaveOnCtx",
      "deps": "js/createWorksetService"
    },
    "updateSelectedOnCtxForConcurrentSaveWS": {
      "actionType": "JSFunction",
      "method": "updateSaveAsContextAndActivateCommandPanel",
      "deps": "js/Awp0ShowSaveAsService",
      "inputData": {
        "input": {
          "selectedObj": "{{ctx.aceActiveContext.context.topElement}}",
          "openNewRevision": true,
          "showOpenNewRevisionCheckbox": false,
          "commandId": "Awb0ShowSaveAsWorkset",
          "location": "aw_toolsAndInfo"
        }
      }
    },
    "changeSelectionToWorksetForConcurrentSave": {
      "actionType": "JSFunction",
      "method": "changeSelectionToWorksetForConcurrentSave",
      "deps": "js/createWorksetService",
      "inputData": {
        "topElement": "{{ctx.aceActiveContext.context.topElement}}"
      }
    },
    "openProductSnapshotViaTileAction": {
      "actionType": "JSFunction",
      "method": "openProductSnapshotViaTile",
      "inputData": {
        "snapshotObj": "{{commandContext}}"
      },
      "events": {
        "success": [
          {
            "condition": "ctx.sublocation.clientScopeURI==='Awb0OccurrenceManagement'",
            "name": "occmgmtsubset.applySnapshot"
          }
        ]
      },
      "deps": "js/discoverySnapshotService"
    },
    "discoveryShowConfirmationMessageForReset": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ace.activateWindow",
            "eventData": {
              "key": "{{commandContext.contextKey}}"
            }
          },
          {
            "name": "occmgmtsubset.discoveryShowConfirmationMessageForResetAction"
          }
        ]
      }
    },
    "discoveryShowConfirmationMessageForResetAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "aceReset.dummyEvent"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "conditions.isTypeFnd0Workset",
            "message": "resetWorkset"
          },
          {
            "condition": "conditions.isTypeFnd0AppSession",
            "message": "resetSession"
          }
        ]
      }
    },
    "AlignDesignCommandAction": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "CbaAlignDesign",
        "location": "aw_toolsAndInfo",
        "config": {
          "isPinUnpinEnabled": true
        }
      },
      "actionMessages": {
        "failure": [
          {
            "message": "alignDesignCommandFailure"
          }
        ]
      }
    },
    "AlignPartCommandAction": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "CbaAlignPart",
        "location": "aw_toolsAndInfo",
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "SetPrimaryCommandAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "createRelations",
      "inputData": {
        "input": "{{function:getSetPrimaryInput}}"
      },
      "outputData": {
        "partialErorrs": "ServiceData.partialErrors"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relations": "",
              "relatedModified": [
                "{{ctx.pselected}}"
              ]
            }
          },
          {
            "name": "cba.refreshObjects",
            "eventData": {
              "primarySelection": [
                "{{ctx.pselected}}"
              ],
              "secondarySelection": "{{ctx.mselected}}"
            }
          },
          {
            "name": "cadbomalignment.primaryDesignRepresentationChanged",
            "eventData": {}
          },
          {
            "name": "cba.notifyViewerAlignmentUpdated",
            "eventData": {
              "contextName": "{{ctx.aceActiveContext.key}}",
              "primarySelection": "{{ctx.pselected}}",
              "secondarySelection": "{{ctx.mselected}}"
            },
            "excludeLocalDataCtx": true,
            "condition": "ctx.sublocation.enableOccMgmtCommands === true"
          }
        ],
        "failure": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": false,
              "relations": "",
              "relatedModified": [
                "{{data.primarySelection}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "setPrimaryDesignFailure"
          }
        ]
      },
      "deps": "js/CadBomAlignmentService"
    },
    "RemoveDesignAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteRelations",
      "inputData": {
        "input": "{{function:getRemoveInput}}"
      },
      "outputData": {},
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relations": "",
              "relatedModified": [
                "{{ctx.pselected}}"
              ]
            }
          },
          {
            "name": "cba.refreshObjects",
            "eventData": {
              "primarySelection": [
                "{{ctx.pselected}}"
              ],
              "secondarySelection": "{{ctx.mselected}}"
            }
          },
          {
            "name": "cba.partDesignUnAlignment",
            "condition": "ctx.cbaContext.srcStructure && ctx.cbaContext.trgStructure",
            "eventData": {
              "contextName": "{{ctx.aceActiveContext.key}}",
              "secondarySelection": "{{ctx.mselected}}"
            }
          },
          {
            "name": "cba.notifyViewerAlignmentUpdated",
            "eventData": {
              "contextName": "{{ctx.aceActiveContext.key}}",
              "primarySelection": "{{ctx.pselected}}",
              "secondarySelection": "{{ctx.mselected}}"
            },
            "excludeLocalDataCtx": true,
            "condition": "ctx.sublocation.enableOccMgmtCommands === true"
          }
        ],
        "failure": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": false,
              "relations": "",
              "relatedModified": [
                "{{data.primarySelection}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "RemoveDesignActionFailure"
          }
        ]
      },
      "deps": "js/CadBomAlignmentService"
    },
    "RemovePartAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteRelations",
      "inputData": {
        "input": "{{function:getRemovePartInput}}"
      },
      "outputData": {},
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relations": "",
              "relatedModified": [
                "{{ctx.pselected}}"
              ]
            }
          },
          {
            "name": "cba.refreshObjects",
            "eventData": {
              "primarySelection": [
                "{{ctx.pselected}}"
              ],
              "secondarySelection": "{{ctx.mselected}}"
            }
          },
          {
            "name": "cba.partDesignUnAlignment",
            "condition": "ctx.cbaContext.srcStructure && ctx.cbaContext.trgStructure",
            "eventData": {
              "contextName": "{{ctx.aceActiveContext.key}}",
              "secondarySelection": "{{ctx.mselected}}"
            }
          },
          {
            "name": "cba.notifyViewerAlignmentUpdated",
            "eventData": {
              "contextName": "{{ctx.aceActiveContext.key}}",
              "primarySelection": "{{ctx.pselected}}",
              "secondarySelection": "{{ctx.mselected}}"
            },
            "excludeLocalDataCtx": true,
            "condition": "ctx.sublocation.enableOccMgmtCommands === true && ctx.splitView"
          }
        ],
        "failure": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": false,
              "relations": "",
              "relatedModified": [
                "{{data.primarySelection}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "RemovePartActionFailure"
          }
        ]
      },
      "deps": "js/CadBomAlignmentService"
    },
    "EntCBAShowObjectCellDelegateAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{commandContext.vmo}}",
          "path": "props.fnd0UnderlyingObject.dbValues[0]"
        }
      }
    },
    "EntCBAShowObjectDelegateAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{ctx.mselected[0].props.fnd0UnderlyingObject.dbValues[0]}}"
      }
    },
    "EntCBAOpenObjectInNewTabDelegateAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
        "uid": "{{ctx.mselected[0].props.fnd0UnderlyingObject.dbValues[0]}}"
      },
      "navigateIn": "newTab"
    },
    "EntCBAOpenObjectInNewWindowDelegateAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
        "uid": "{{ctx.mselected[0].props.fnd0UnderlyingObject.dbValues[0]}}"
      },
      "navigateIn": "newWindow",
      "options": {
        "top": 10,
        "left": 10
      }
    },
    "EntCBAOpenObjectInRACDelegateAction": {
      "actionType": "Navigate",
      "navigateTo": "launcher/openinrac",
      "navigationParams": {
        "-s": "226TCSession",
        "-o": "{{ctx.mselected[0].props.fnd0UnderlyingObject.dbValues[0]}}",
        "-attach": "true"
      },
      "navigateIn": "newTab"
    },
    "EntCBALaunchAlignTaskCommandAction": {
      "actionType": "JSFunction",
      "method": "launchCBA",
      "inputData": {
        "commandContext": "{{commandContext}}"
      },
      "deps": "js/CadBomOccurrenceAlignmentService"
    },
    "EntCBAAlignCommandAction": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-EntCba-2019-12-Alignments",
      "method": "alignOccurrences",
      "inputData": {
        "input": "{{function:getOccAlignmentInput}}"
      },
      "outputData": {
        "alignmentResponse": "",
        "isAlignmentChanged": true
      },
      "actionMessages": {
        "failure": [
          {
            "message": "EntCBAAlignCommandActionFailure"
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "cba.updateStructures",
            "eventData": {
              "response": "{{data.alignmentResponse}}",
              "isAlignment": true
            }
          },
          {
            "name": "cdm.relatedModified",
            "condition": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' && ctx.CBASrcContext.activeTab.id !== 'Awb0ViewerFeature'",
            "eventData": {
              "refreshLocationFlag": true,
              "relations": "",
              "relatedModified": [
                "{{ctx.CBASrcContext.selectedModelObjects[0]}}"
              ]
            }
          },
          {
            "name": "cdm.relatedModified",
            "condition": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' && ctx.CBATrgContext.activeTab.id !== 'Awb0ViewerFeature'",
            "eventData": {
              "refreshLocationFlag": true,
              "relations": "",
              "relatedModified": [
                "{{ctx.CBATrgContext.selectedModelObjects[0]}}"
              ]
            }
          },
          {
            "name": "cba.alignmentUpdated",
            "eventData": {
              "viewToReact": "CBATrgContext"
            },
            "excludeLocalDataCtx": true
          }
        ],
        "failure": [
          {
            "name": "cba.alignmentSuccess",
            "eventData": {
              "objects": "{{data.alignmentResponse.updated}}"
            },
            "condition": "alignmentResponse.updated && alignmentResponse.updated.length > 0"
          },
          {
            "name": "cba.alignmentUpdated",
            "eventData": {
              "viewToReact": "CBATrgContext"
            },
            "condition": "alignmentResponse.updated && alignmentResponse.updated.length > 0",
            "excludeLocalDataCtx": true
          }
        ]
      },
      "deps": "js/CadBomOccurrenceAlignmentService"
    },
    "EntCBAUnAlignCommandAction": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-EntCba-2019-12-Alignments",
      "method": "unalignOccurrences",
      "inputData": {
        "input": "{{function:getOccUnAlignmentInput}}"
      },
      "outputData": {
        "unAlignmentResponse": "",
        "isAlignmentChanged": true
      },
      "events": {
        "success": [
          {
            "name": "cba.updateStructures",
            "eventData": {
              "response": "{{data.unAlignmentResponse}}",
              "isAlignment": false
            }
          },
          {
            "name": "cba.alignmentUpdated",
            "eventData": {
              "viewToReact": "CBATrgContext"
            },
            "excludeLocalDataCtx": true
          }
        ],
        "failure": [
          {
            "name": "cba.unAlignmentSuccess",
            "eventData": {
              "objects": "{{data.unAlignmentResponse.updated}}"
            },
            "condition": "unAlignmentResponse.updated && unAlignmentResponse.updated.length > 0"
          },
          {
            "name": "cba.alignmentUpdated",
            "eventData": {
              "viewToReact": "CBATrgContext"
            },
            "condition": "unAlignmentResponse.updated && unAlignmentResponse.updated.length > 0",
            "excludeLocalDataCtx": true
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "EntCBAUnAlignCommandActionFailure"
          }
        ]
      },
      "deps": "js/CadBomOccurrenceAlignmentService"
    },
    "EntCBATopAlignCommandAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "createRelations",
      "inputData": {
        "input": "{{function:getTopAlignmentInput}}"
      },
      "outputData": {
        "createRelationsOutput": ""
      },
      "events": {
        "success": [
          {
            "name": "cba.partDesignAlignment",
            "condition": "ctx.cbaContext.srcStructure && ctx.cbaContext.trgStructure",
            "eventData": {
              "contextName": "{{ctx.aceActiveContext.key}}",
              "secondarySelection": "",
              "isTopAlignment": true
            }
          },
          {
            "name": "cdm.relatedModified",
            "condition": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' && ctx.CBASrcContext.activeTab.id !== 'Awb0ViewerFeature'",
            "eventData": {
              "refreshLocationFlag": true,
              "relations": "",
              "relatedModified": [
                "{{ctx.CBASrcContext.selectedModelObjects[0]}}"
              ]
            }
          },
          {
            "name": "cdm.relatedModified",
            "condition": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' && ctx.CBATrgContext.activeTab.id !== 'Awb0ViewerFeature'",
            "eventData": {
              "refreshLocationFlag": true,
              "relations": "",
              "relatedModified": [
                "{{ctx.CBATrgContext.selectedModelObjects[0]}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "EntCBAAlignCommandActionFailure"
          }
        ]
      },
      "deps": "js/CadBomAlignmentService"
    },
    "EntCBATopUnAlignCommandAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteRelations",
      "inputData": {
        "input": "{{function:getTopAlignmentInput}}"
      },
      "outputData": {
        "deleteRelationsOutput": ""
      },
      "events": {
        "success": [
          {
            "name": "cba.partDesignUnAlignment",
            "condition": "ctx.cbaContext.srcStructure && ctx.cbaContext.trgStructure",
            "eventData": {
              "contextName": "{{ctx.aceActiveContext.key}}",
              "secondarySelection": "",
              "isTopAlignment": true
            }
          },
          {
            "name": "cdm.relatedModified",
            "condition": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' && ctx.CBASrcContext.activeTab.id !== 'Awb0ViewerFeature'",
            "eventData": {
              "refreshLocationFlag": true,
              "relations": "",
              "relatedModified": [
                "{{ctx.CBASrcContext.selectedModelObjects[0]}}"
              ]
            }
          },
          {
            "name": "cdm.relatedModified",
            "condition": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' && ctx.CBATrgContext.activeTab.id !== 'Awb0ViewerFeature'",
            "eventData": {
              "refreshLocationFlag": true,
              "relations": "",
              "relatedModified": [
                "{{ctx.CBATrgContext.selectedModelObjects[0]}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "data.deleteRelationsOutput.deleted  === undefined",
            "message": "AlignmentDoNotExist"
          }
        ],
        "failure": [
          {
            "message": "EntCBAUnAlignCommandActionFailure"
          }
        ]
      },
      "deps": "js/CadBomAlignmentService"
    },
    "performPasteAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "createRelations",
      "inputData": {
        "input": "{{function:getPasteInput}}"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relations": "",
              "relatedModified": [
                "{{data.primarySelection}}"
              ]
            }
          },
          {
            "name": "cba.refreshPrimaryObjects",
            "eventData": {
              "primarySelection": [
                "{{data.primarySelection}}"
              ],
              "secondarySelection": "{{data.sourceObjects}}"
            }
          },
          {
            "name": "cba.partDesignAlignment",
            "condition": "ctx.cbaContext.srcStructure && ctx.cbaContext.trgStructure",
            "eventData": {
              "contextName": "{{ctx.aceActiveContext.key}}",
              "secondarySelection": "{{data.sourceObjects}}"
            }
          },
          {
            "name": "cba.notifyViewerAlignmentUpdated",
            "eventData": {
              "contextName": "{{ctx.aceActiveContext.key}}",
              "primarySelection": "{{data.primarySelection}}",
              "secondarySelection": "{{data.sourceObjects}}"
            },
            "excludeLocalDataCtx": true,
            "condition": "ctx.sublocation.clientScopeURI==='Awb0OccurrenceManagement'"
          }
        ],
        "failure": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relations": "",
              "relatedModified": [
                "{{data.primarySelection}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "createRelationsFailure"
          }
        ]
      },
      "deps": "js/CadBomAlignmentService"
    },
    "fireReExecuteAlignmentCheck": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "cba.reExecuteAlignmentCheck",
            "eventData": {
              "contextName": "{{data.eventData.contextName}}",
              "secondarySelection": "{{data.eventData.secondarySelection}}",
              "isTopAlignment": "{{data.eventData.isTopAlignment}}"
            }
          }
        ]
      }
    },
    "showTopUnAlignConfirmationMessage": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {}
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "TopUnAlignConfirmationMessage"
          }
        ]
      }
    },
    "showUnAlignmentConfirmationMessage": {
      "actionType": "JSFunction",
      "method": "getUnAlignmentConfirmationInput",
      "deps": "js/CadBomOccurrenceAlignmentService",
      "inputData": {
        "data": "{{function:getUnAlignmentConfirmationInput}}"
      },
      "outputData": {
        "unAlignConfirmationInput": ""
      },
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.cadbomalignment.selection.source.length === 1 && ctx.cadbomalignment.selection.target.length === 1 && ctx.cadbomalignment.commands.isSingleSelectionInSrc=== true && ctx.cadbomalignment.commands.isSingleSelectionInTrg===true",
            "message": "removeSingleDesignPartAlignmentMessage"
          },
          {
            "condition": "ctx.cadbomalignment.selection.source.length === 1 && ctx.cadbomalignment.commands.isSingleSelectionInSrc=== true && ctx.cadbomalignment.commands.isSingleSelectionInTrg === false",
            "message": "removeSingleDesignAlignmentMessage"
          },
          {
            "condition": "ctx.cadbomalignment.selection.target.length === 1 && ctx.cadbomalignment.commands.isSingleSelectionInTrg === true && ctx.cadbomalignment.commands.isSingleSelectionInSrc === false",
            "message": "removeSinglePartAlignmentMessage"
          },
          {
            "condition": "ctx.cadbomalignment.selection.source.length >1 && ctx.cadbomalignment.commands.isSingleSelectionInSrc === true && ctx.cadbomalignment.commands.isSingleSelectionInTrg === false",
            "message": "removeMultipleDesignsAlignmentMessage"
          },
          {
            "condition": "ctx.cadbomalignment.selection.target.length > 1 && ctx.cadbomalignment.commands.isSingleSelectionInTrg === true && ctx.cadbomalignment.commands.isSingleSelectionInSrc === false",
            "message": "removeMultiplePartsAlignmentMessage"
          }
        ]
      }
    },
    "executeAlignmentCheckPostPartCADUnAlign": {
      "actionType": "JSFunction",
      "method": "reExecuteAlignmentCheck",
      "inputData": {
        "objects": "{{function:getAffectedObjectUIDPostPartCADAlignmentUpdate}}"
      },
      "deps": "js/CadBomOccAlignmentCheckService"
    },
    "executeAlignmentCheckPostAlignUnAlign": {
      "actionType": "JSFunction",
      "method": "reExecuteAlignmentCheck",
      "inputData": {
        "data": "{{data.eventData.objects}}",
        "isStructureUpdated": "{{data.eventData.isStructureUpdated}}"
      },
      "deps": "js/CadBomOccAlignmentCheckService"
    },
    "processCBAColumnsArrangeSettings": {
      "actionType": "JSFunction",
      "method": "processColumnsArrangeSettings",
      "inputData": {
        "dataProvider": "{{commandContext.dataProvider}}",
        "gridId": "{{commandContext.gridId}}",
        "gridOptions": "{{commandContext.gridOptions}}"
      },
      "events": {
        "success": [
          {
            "name": "openArrangePanelBasic"
          }
        ]
      },
      "deps": "js/CadBomColumnArrangeService"
    },
    "openCBANotification": {
      "actionType": "JSFunction",
      "method": "openCBANotification",
      "inputData": {
        "notificationObject": "{{commandContext}}"
      },
      "events": {
        "success": [
          {
            "name": "NotificationMessage.markRead"
          }
        ]
      },
      "deps": "js/CadBomOccAlignmentCheckService"
    },
    "cbaRefreshObjectsAction": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2007-01-DataManagement",
      "method": "refreshObjects",
      "inputData": {
        "objects": "{{function:getRefreshObjectsInput}}"
      },
      "outputData": {},
      "deps": "js/CadBomAlignmentService"
    },
    "openTreeTableObjectAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.occContext.selectedModelObjects[0].props.awb0UnderlyingObject.dbValues[0]}}"
      }
    },
    "openTreeTableObjectInNewTab": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
        "uid": "{{commandContext.occContext.selectedModelObjects[0].props.awb0UnderlyingObject.dbValues[0]}}"
      },
      "navigateIn": "newTab"
    },
    "openTreeTableObjectInNewWindow": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
        "uid": "{{commandContext.occContext.selectedModelObjects[0].props.awb0UnderlyingObject.dbValues[0]}}"
      },
      "navigateIn": "newWindow",
      "options": {
        "top": 10,
        "left": 10
      }
    },
    "openTreeTableBOMObjectAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.occContext.selectedModelObjects[0].props.awb0UnderlyingObject.dbValues[0]}}"
      }
    },
    "openTreeTableBOMObjectInNewTab": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
        "uid": "{{commandContext.occContext.selectedModelObjects[0].props.awb0UnderlyingObject.dbValues[0]}}"
      },
      "navigateIn": "newTab"
    },
    "openTreeTableBOMObjectInNewWindow": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
        "uid": "{{commandContext.occContext.selectedModelObjects[0].props.awb0UnderlyingObject.dbValues[0]}}"
      },
      "navigateIn": "newWindow",
      "options": {
        "top": 10,
        "left": 10
      }
    },
    "openItemObjectAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{ctx.selected.uid}}"
      }
    },
    "openItemObjectInNewTabAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
        "uid": "{{ctx.selected.uid}}"
      },
      "navigateIn": "newTab"
    },
    "openItemObjectInNewWindowAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
        "uid": "{{ctx.selected.uid}}"
      },
      "navigateIn": "newWindow",
      "options": {
        "top": 10,
        "left": 10
      }
    },
    "notifyViewerAlignmentUpdated": {
      "actionType": "JSFunction",
      "method": "notifyStructureViewers",
      "deps": "js/cbaViewerService",
      "inputData": {
        "contextName": "{{data.eventData.contextName}}",
        "primarySelection": "{{data.eventData.primarySelection}}",
        "secondarySelection": "{{data.eventData.secondarySelection}}"
      }
    },
    "updateStructuresPostAlignment": {
      "actionType": "JSFunction",
      "method": "updateStructureAfterAlignment",
      "deps": "js/cbaEditStructureService",
      "inputData": {
        "data": "{{data.eventData}}"
      },
      "outputData": {
        "isStructureUpdated": ""
      },
      "events": {
        "success": [
          {
            "name": "cba.alignmentSuccess",
            "eventData": {
              "objects": "{{data.alignmentResponse.updated}}",
              "isStructureUpdated": "{{data.isStructureUpdated}}"
            },
            "condition": "data.eventData.isAlignment===true"
          },
          {
            "name": "cba.unAlignmentSuccess",
            "eventData": {
              "objects": "{{data.unAlignmentResponse.updated}}",
              "isStructureUpdated": "{{data.isStructureUpdated}}"
            },
            "condition": "data.eventData.isAlignment===false"
          }
        ]
      }
    },
    "Awb0EntCBADeselectAllCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "primaryWorkarea.selectAction",
            "eventData": {
              "selectAll": false
            }
          }
        ]
      }
    },
    "FindAlignedAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "cba.findAlignedObject",
            "eventData": {
              "vmo": "{{commandContext.occContext.selectedModelObjects[0]}}",
              "contextName": "{{commandContext.contextKey}}",
              "contextMenuAction": true
            }
          }
        ]
      }
    },
    "resetFindAlignedState": {
      "actionType": "JSFunction",
      "method": "resetFindAlignedState",
      "inputData": {
        "data": "{{data.eventData.objects}}",
        "isStructureUpdated": "{{data.eventData.isStructureUpdated}}"
      },
      "deps": "js/cbaFindAlignedService"
    },
    "copyFnd0AlignedElement": {
      "actionType": "Copy",
      "method": "copyUrlToClipboard",
      "inputData": {
        "objectToCopy": {
          "$adapt": "{{ctx.mselected}}"
        },
        "copyType": "Object"
      },
      "actionMessages": {
        "success": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "copySingleSuccessful"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "copyMultipleSuccessful"
          }
        ]
      }
    },
    "setRevisionRuleAdminPanelContext": {
      "actionType": "JSFunction",
      "method": "setRevisionRuleAdminPanelContext",
      "deps": "js/revisionRuleAdminPanelService",
      "inputData": {
        "vmo": "{{commandContext.vmo}}"
      }
    },
    "launchRevisionRuleAdminPanelAction": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "setRevisionRuleAdminPanelContext"
        },
        {
          "action": "showSelectedRevisionRuleInAdminPanel",
          "condition": "ctx.sidenavCommandId === 'RevisionRuleAdminMainPanel'"
        },
        {
          "action": "navigateToRevisionRuleAdminPanel",
          "condition": "commandContext.context.nestedNavigationState"
        },
        {
          "action": "launchRevisionRuleAdminMainPanel",
          "condition": "ctx.sidenavCommandId !== 'RevisionRuleAdminMainPanel' && !commandContext.context.nestedNavigationState"
        }
      ]
    },
    "showSelectedRevisionRuleInAdminPanel": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "navigateToRevisionRuleAdminMainPanel"
          },
          {
            "name": "RevisionRuleAdminPanel.UpdateDataProvider"
          }
        ]
      }
    },
    "launchRevisionRuleAdminMainPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "RevisionRuleAdminMainPanel",
        "location": "aw_navigation"
      },
      "events": {
        "success": [
          {
            "name": "awPopupWidget.close"
          }
        ],
        "failure": [
          {
            "name": "awPopupWidget.close"
          }
        ]
      }
    },
    "navigateToRevisionRuleAdminPanel": {
      "actionType": "JSFunction",
      "method": "navigateToView",
      "inputData": {
        "nestedNavigationState": "{{commandContext.context.nestedNavigationState}}",
        "view": {
          "panelId": "RevisionRuleAdminPanel",
          "title": "{{i18n.RevisionRuleAdmin}}"
        }
      },
      "deps": "js/nestedNavigationPanelService"
    },
    "closeRevisionRulePanel": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "RevisionRuleAdminPanel.closeRevisionRulePanel",
            "eventData": {}
          }
        ]
      }
    },
    "launchAddClausePanel": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "setAddClausePanelData"
        },
        {
          "action": "navigateToAddClausePanel"
        }
      ]
    },
    "navigateToAddClausePanel": {
      "actionType": "JSFunction",
      "method": "navigateToView",
      "inputData": {
        "nestedNavigationState": "{{commandContext.nestedNavigationState}}",
        "view": {
          "panelId": "AddClauses",
          "title": "{{i18n.addClausesPanelTitle}}"
        }
      },
      "deps": "js/nestedNavigationPanelService"
    },
    "setAddClausePanelData": {
      "actionType": "JSFunction",
      "method": "setAddClausePanelData",
      "inputData": {
        "nestedNavigationState": "{{commandContext.nestedNavigationState}}"
      },
      "deps": "js/addClauseToRevRuleService"
    },
    "deleteRevisionRule": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "RevisionRuleAdmin.deleteRevisionRule",
            "eventData": {}
          }
        ]
      }
    },
    "deleteClause": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "deleteClauseInternal",
            "eventData": {}
          }
        ]
      }
    },
    "launchAddAdminPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "AddRevisionRule",
        "location": "aw_navigation"
      }
    },
    "moveClauseUp": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "moveClauseUpInternal",
            "eventData": {}
          }
        ]
      }
    },
    "moveClauseDown": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "moveClauseDownInternal",
            "eventData": {}
          }
        ]
      }
    },
    "launchClausePropertyAddPanel": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "RevisionRuleAdminPanel.launchClauseAddPropertyPanel"
          }
        ]
      }
    },
    "updateCurrentlySelectedClause": {
      "actionType": "JSFunction",
      "method": "updateCurrentlySelectedClause",
      "inputData": {
        "nestedNavigationState": "{{commandContext.nestedNavigationState}}",
        "currentlySelectedClause": "{{commandContext.currentlySelectedClause}}"
      },
      "deps": "js/addClauseToRevRuleService"
    },
    "navigateToAddClausePropertyPanel": {
      "actionType": "JSFunction",
      "method": "navigateToView",
      "inputData": {
        "nestedNavigationState": "{{commandContext.nestedNavigationState}}",
        "view": {
          "panelId": "AddClausePropertyPanel",
          "title": "{{addPanelTitle}}",
          "additionalSubPanelContext": {
            "activeView": "{{props.subPanelContext.activeView}}",
            "isAddClause": true,
            "typeFilter": "{{typeFilter}}"
          }
        }
      },
      "deps": "js/nestedNavigationPanelService"
    },
    "launchAddClausePropertyPanel": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "updateCurrentlySelectedClause"
        },
        {
          "action": "getAddClausePropertiesPanelTitle"
        },
        {
          "action": "navigateToAddClausePropertyPanel"
        }
      ]
    },
    "getAddClausePropertiesPanelTitle": {
      "actionType": "JSFunction",
      "method": "getClausePropertiesPanelTitle",
      "inputData": {
        "currentlySelectedClause": "{{commandContext.currentlySelectedClause}}",
        "panelTitle": "{{i18n.add}}"
      },
      "outputData": {
        "addPanelTitle": "title",
        "typeFilter": "typeFilter"
      },
      "deps": "js/addRevRuleClausePropertyService"
    },
    "launchClausePropertyReplacePanel": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "RevisionRuleAdminPanel.launchClauseReplacePropertyPanel",
            "eventData": {}
          }
        ]
      }
    },
    "launchReplaceClausePropertyPanel": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "AddClausePanel.launchReplaceClausePropertyPanel",
            "eventData": {}
          }
        ]
      }
    },
    "removeClauseProperty": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "RevisionRuleAdminPanel.removeClauseProperty",
            "eventData": {}
          }
        ]
      }
    },
    "clausePropertyRemove": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "AddClausePanel.clausePropertyRemove",
            "eventData": {}
          }
        ]
      }
    },
    "launchAddPartitionPanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Awb0AddPartition",
        "location": "aw_toolsAndInfo",
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "showConfirmationMessage": {
      "actionType": "JSFunction",
      "method": "getDisplayName",
      "deps": "js/typeDisplayName.service",
      "inputData": {
        "modelObject": "{{ctx.selected}}"
      },
      "outputData": {
        "displayNameOfSelectedElement": ""
      },
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.mselected.length === 1",
            "message": "removeSinglePartition"
          },
          {
            "condition": "ctx.mselected.length > 1",
            "message": "removeMultipleSelection"
          }
        ]
      }
    },
    "showPtnMemberConfirmationMessage": {
      "actionType": "JSFunction",
      "method": "getDisplayName",
      "deps": "js/typeDisplayName.service",
      "inputData": {
        "modelObject": "{{ctx.selected}}"
      },
      "outputData": {
        "displayNameOfSelectedElement": ""
      },
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.mselected.length === 1",
            "message": "removeSinglePtnMember"
          },
          {
            "condition": "ctx.mselected.length > 1",
            "message": "removeMultiplePtnMembers"
          }
        ]
      }
    },
    "showPartitionDeletionConfirmationMessage": {
      "actionType": "JSFunction",
      "method": "getDisplayName",
      "deps": "js/typeDisplayName.service",
      "inputData": {
        "modelObject": "{{ctx.selected}}"
      },
      "outputData": {
        "displayNameOfSelectedElement": ""
      },
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.mselected.length === 1",
            "message": "deleteSinglePtn"
          },
          {
            "condition": "ctx.mselected.length > 1",
            "message": "deleteMultiplePtns"
          }
        ]
      }
    },
    "removeElementsForPartition": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2021-12-OccurrenceManagement",
      "method": "removeElements2",
      "inputData": {
        "input": "{{function:getRemoveElements2Input}}"
      },
      "outputData": {
        "removedElementsFromResponse": "{{function:getRemovedElements}}",
        "removePartialErrors": "partialErrors",
        "errorMessage": "{{function:processPartialErrors}}",
        "updated": "updated"
      },
      "events": {
        "success": [
          {
            "name": "performPostRemoveActionForPartition"
          },
          {
            "name": "updateAcePwaWithCreatedPartition",
            "condition": "!conditions.isTCServerVersion142OrLater && data.updated != undefined && data.updated.length > 0"
          }
        ],
        "failure": [
          {
            "name": "performPostRemoveActionForPartition"
          },
          {
            "name": "updateAcePwaWithCreatedPartition",
            "condition": "!conditions.isTCServerVersion142OrLater && data.updated != undefined && data.updated.length > 0"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "removeFailure"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "removeMultipleFailureMessage"
          }
        ]
      },
      "deps": "js/removeElementService"
    },
    "removePtnMembersSOA": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ActiveWorkspaceBom-2022-12-BOMPartitionManagement",
      "method": "unassignMembers",
      "inputData": {
        "input": "{{function:getRemoveElements2Input}}"
      },
      "outputData": {
        "removedElementsFromResponse": "{{function:getRemovedElements}}",
        "removePartialErrors": "partialErrors",
        "errorMessage": "{{function:processPartialErrors}}",
        "updated": "updated"
      },
      "events": {
        "success": [
          {
            "name": "performPostRemoveActionForPartition"
          }
        ],
        "failure": [
          {
            "name": "performPostRemoveActionForPartition"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "removeFailure"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "removeMultipleFailureMessage"
          }
        ]
      },
      "deps": "js/removeElementService"
    },
    "performPostRemoveActionForPartition": {
      "actionType": "JSFunction",
      "method": "performPostRemoveAction",
      "inputData": {
        "removedElements": "{{data.removedElementsFromResponse}}",
        "operationName": "removeElement",
        "occContext": "{{commandContext.occContext}}"
      },
      "deps": "js/removeElementService"
    },
    "updateAcePwaWithCreatedPartition": {
      "actionType": "JSFunction",
      "method": "updateAcePwaWithCreatedPartition",
      "inputData": {
        "removedElements": "{{data.removedElementsFromResponse}}",
        "occContext": "{{commandContext.occContext}}"
      },
      "deps": "js/partitionRemoveElementService"
    },
    "toggleUnassignedMode": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "ace.retainCurrentExpansionState",
            "condition": "(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView') && commandContext.occContext.currentState.c_uid === commandContext.occContext.currentState.t_uid",
            "eventData": {
              "occContext": "{{commandContext.occContext}}"
            }
          },
          {
            "name": "updateCtxWithUnassigned"
          },
          {
            "name": "initializeUnassignedService"
          }
        ]
      }
    },
    "enableSplitModeForUnassigned": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showMultiObject",
      "navigationParams": {
        "uid": "{{commandContext.occContext.currentState.uid}}",
        "uid2": "{{commandContext.occContext.currentState.uid}}",
        "c_uid": "{{commandContext.occContext.currentState.c_uid}}",
        "c_uid2": "{{commandContext.occContext.currentState.c_uid}}",
        "pci_uid": "{{commandContext.occContext.currentState.pci_uid}}",
        "pci_uid2": "{{commandContext.occContext.currentState.pci_uid}}",
        "o_uid": "{{commandContext.occContext.currentState.o_uid}}",
        "o_uid2": "{{commandContext.occContext.currentState.o_uid}}",
        "t_uid": "{{commandContext.occContext.currentState.t_uid}}",
        "t_uid2": "{{commandContext.occContext.currentState.t_uid}}"
      }
    },
    "updateCtxWithUnassignedToTrue": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "inputData": {
        "path": "requestPref",
        "value": {
          "unassignedMode": true
        }
      },
      "deps": "js/appCtxService"
    },
    "updateCtxWithUnassignedToFalse": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "inputData": {
        "path": "requestPref",
        "value": {
          "unassignedMode": false
        }
      },
      "deps": "js/appCtxService"
    },
    "batchActionsForSpiltCommand": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "updateCtxWithUnassignedToFalse"
        },
        {
          "action": "disableUnassignedMode"
        }
      ]
    },
    "disableUnassignedMode": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{ctx.occmgmtContext.currentState.uid}}",
        "c_uid": "{{ctx.occmgmtContext.currentState.c_uid}}",
        "pci_uid": "{{ctx.occmgmtContext.currentState.pci_uid}}",
        "o_uid": "{{ctx.occmgmtContext.currentState.o_uid}}",
        "t_uid": "{{ctx.occmgmtContext.currentState.t_uid}}",
        "spageId": "{{ctx.occmgmtContext.currentState.spageId}}"
      }
    },
    "initializeUnassignedService": {
      "actionType": "JSFunction",
      "method": "initializeUnassignedService",
      "deps": "js/partitionUnassignedService",
      "events": {
        "success": [
          {
            "name": "enableSplitModeForUnassigned",
            "condition": "!conditions.is4GD && conditions.isOccurrenceManagementSubLocation"
          },
          {
            "name": "disableUnassignedMode",
            "condition": "conditions.isInUnassignedMode"
          }
        ]
      }
    },
    "FgfCreatePartitionSchemeAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Fgf0CreatePartitionScheme",
        "location": "aw_toolsAndInfo"
      }
    },
    "addProductOpenedInSplitViewToSessionStorageForPartition": {
      "actionType": "JSFunction",
      "method": "addProductOpenedInSplitViewToSessionStorage",
      "deps": "js/occmgmtSplitViewUpdateService",
      "inputData": {
        "uid": "{{commandContext.occContext.currentState.uid}}",
        "filterCount": "{{commandContext.occContext.productContextInfo.props.awb0FilterCount.dbValues[0]}}"
      }
    }
  },
  "messages": {
    "reset": {
      "messageType": "WARNING",
      "messageText": "{{i18n.resetConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Reset",
          "text": "{{i18n.reset}}",
          "action": "performResetOfStructure"
        }
      ]
    },
    "soaFailureMessage": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "resetOutsideSWC": {
      "messageType": "WARNING",
      "messageText": "{{i18n.resetConfirmationOutsideSWC}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Reset",
          "text": "{{i18n.reset}}",
          "action": "performResetOfStructure"
        }
      ]
    },
    "removeSingle": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeSingleConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.aceRemove}}",
          "action": "removeElements"
        }
      ],
      "messageTextParams": [
        "{{data.displayNameOfSelectedElement}}"
      ]
    },
    "removeMultiple": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeMultipleConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.aceRemove}}",
          "action": "removeElements"
        }
      ],
      "messageTextParams": [
        "{{ctx.mselected.length}}"
      ]
    },
    "removeSingleLevel": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeSingleLevelConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.aceRemoveLevel}}",
          "action": "removeLevels"
        }
      ],
      "messageTextParams": [
        "{{data.displayNames[0]}}",
        "{{data.displayNames[1]}}"
      ]
    },
    "removeMultipleFailureMessage": {
      "expression": {
        "successCount": "data.removedElementsFromResponse.length",
        "length": "ctx.mselected.length"
      },
      "messageType": "ERROR",
      "messageKey": "removeNotyError",
      "messageTextParams": [
        "{{expression.successCount}}",
        "{{expression.length}}",
        "{{expression.successCount}}",
        "{{expression.length}}"
      ],
      "messageData": {
        "partialErrors": "{{data.removePartialErrors}}"
      },
      "message": {
        "messageParam": {
          "name": "removeSuccessMsg"
        },
        "errorValues": {
          "name": ""
        }
      }
    },
    "removeFailure": {
      "messageType": "ERROR",
      "messageText": "{{i18n.removeFailure}}",
      "messageTextParams": [
        "{{data.errorMessage.name}}",
        "{{data.errorMessage.msg}}",
        "{{data.errorMessage.name}}",
        "{{data.errorMessage.msg}}"
      ]
    },
    "removeLevelSuccessfulMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.removeLevelSuccessful}}",
      "messageTextParams": [
        "{{data.displayNames[0]}}"
      ]
    },
    "removeLevelFailure": {
      "messageType": "ERROR",
      "messageText": "{{data.removedLevelElementsFromResponse.ServiceData.partialErrors[0].errorValues[0].message}}"
    },
    "cancelMarkupSOAFailureMsg": {
      "messageType": "ERROR",
      "messageText": "{{i18n.cancelMarkupFailureMsg}}"
    },
    "getInfoForInsertLevelFailure": {
      "messageType": "ERROR",
      "messageText": "{{data.insertLevelResponse.ServiceData.partialErrors[0].errorValues[0].message}}"
    },
    "notifyAppliedVariantRuleWithConfigureByProximity": {
      "messageType": "INFO",
      "messageText": "{{i18n.notifyAppliedVariantRuleWithConfigureByProximity}}"
    },
    "removeSingleForElement": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeSingleConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.aceRemove}}",
          "action": "cancelMarkupSOA"
        }
      ],
      "messageTextParams": [
        "{{data.displayNameOfSelectedElement}}"
      ]
    },
    "removeMultipleForElement": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeMultipleConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.aceRemove}}",
          "action": "cancelMarkupSOA"
        }
      ],
      "messageTextParams": [
        "{{ctx.mselected.length}}"
      ]
    },
    "removeSingleForLevel": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeSingleConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.aceRemove}}",
          "action": "cancelMarkupSOA"
        }
      ],
      "messageTextParams": [
        "{{data.displayNameOfSelectedElement}}"
      ]
    },
    "removeMultipleForLevel": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeMultipleConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.aceRemove}}",
          "action": "cancelMarkupSOA"
        }
      ],
      "messageTextParams": [
        "{{ctx.mselected.length}}"
      ]
    },
    "ClearAllEffectivities": {
      "messageType": "WARNING",
      "messageText": "{{i18n.clearAllConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.clear}}",
          "action": "awb0RemoveEffectivitiesAction"
        }
      ],
      "messageTextParams": [
        "{{commandContext.occContext.selectedModelObjects.length}}"
      ]
    },
    "updateWorkingContextFailedMessage": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "SaveWsConfirmPopupForSaveAsRevise": {
      "messageType": "WARNING",
      "messageText": "{{i18n.unsavedChangesForSaveAs}}",
      "messageTextParams": [
        "{{ctx.selected.props.object_string.dbValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "continue",
          "text": "{{i18n.continueForUnsavedWorkset}}",
          "action": "continueWithoutSaving"
        },
        {
          "option": "saveandcontinue",
          "text": "{{i18n.saveAndContinue}}",
          "action": "saveAsReviseWorksetAfterSaving"
        }
      ]
    },
    "saveSessionConfirmPopup": {
      "messageType": "WARNING",
      "messageText": "{{i18n.saveSessionConfirmPopupMsg}}",
      "messageTextParams": [
        "{{data.partialErrors[0].errorValues[0].message}}"
      ],
      "navigationOptions": [
        {
          "option": "cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "overwrite",
          "text": "{{i18n.OverwriteText}}",
          "action": "overwriteSessionPendingChangesAction"
        },
        {
          "option": "saveas",
          "text": "{{i18n.SaveAsSessionCmd}}",
          "action": "Awb0SetSaveAsSessionContext"
        }
      ]
    },
    "saveSessionConfirmPopupNoOverwrite": {
      "messageType": "WARNING",
      "messageText": "{{i18n.saveSessionConfirmPopupMsg}}",
      "messageTextParams": [
        "{{data.partialErrors[0].errorValues[0].message}}"
      ],
      "navigationOptions": [
        {
          "option": "cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "saveas",
          "text": "{{i18n.SaveAsSessionCmd}}",
          "action": "Awb0SetSaveAsSessionContext"
        }
      ]
    },
    "concurrentSaveWorksetConfirmPopup": {
      "messageType": "WARNING",
      "messageText": "{{i18n.saveSessionConfirmPopupMsg}}",
      "messageTextParams": [
        "{{data.partialErrors[0].errorValues[0].message}}"
      ],
      "navigationOptions": [
        {
          "option": "cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "overwrite",
          "text": "{{i18n.OverwriteText}}",
          "action": "overwriteWorksetPendingChangesAction"
        },
        {
          "option": "saveas",
          "text": "{{i18n.SaveAsSessionCmd}}",
          "action": "saveAsWSOnConcurrentSaveBatch"
        }
      ]
    },
    "concurrentSaveWorksetConfirmPopupNoOverwrite": {
      "messageType": "WARNING",
      "messageText": "{{i18n.saveSessionConfirmPopupMsg}}",
      "messageTextParams": [
        "{{data.partialErrors[0].errorValues[0].message}}"
      ],
      "navigationOptions": [
        {
          "option": "cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "saveas",
          "text": "{{i18n.SaveAsSessionCmd}}",
          "action": "saveAsWSOnConcurrentSaveBatch"
        }
      ]
    },
    "showSaveWorksetInfoMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.saveSessionInfoMsg}}",
      "messageTextParams": [
        "{{ctx.aceActiveContext.context.worksetTopNode.props.object_string.dbValues[0]}}"
      ]
    },
    "showSaveSessionInfoMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.saveSessionInfoMsg}}",
      "messageTextParams": [
        "{{ctx.aceActiveContext.context.workingContextObj.props.object_string.dbValues[0]}}"
      ]
    },
    "unsavedObjectMessageWithWriteAccessForOpenInVis": {
      "messageType": "WARNING",
      "messageText": "{{i18n.unsavedObjectMessageForOpenInVis}}",
      "messageTextParams": [
        "{{ctx.selected.props.object_string.dbValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "continueForUnsaved",
          "text": "{{i18n.continueForUnsaved}}",
          "action": "openInVis"
        },
        {
          "option": "saveAndOpen",
          "text": "{{i18n.saveAndOpen}}",
          "action": "saveAndOpenInVis"
        }
      ]
    },
    "unsavedObjectMessageNoWriteAccessForOpenInVis": {
      "messageType": "WARNING",
      "messageText": "{{i18n.unsavedObjectMessageForOpenInVis}}",
      "messageTextParams": [
        "{{ctx.selected.props.object_string.dbValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "continueForUnsaved",
          "text": "{{i18n.continueForUnsaved}}",
          "action": "openInVis"
        }
      ]
    },
    "resetWorkset": {
      "messageType": "WARNING",
      "messageText": "{{i18n.resetConfirmationWorkset}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Reset",
          "text": "{{i18n.reset}}",
          "action": "performResetOfStructure"
        }
      ]
    },
    "resetSession": {
      "messageType": "WARNING",
      "messageText": "{{i18n.resetConfirmationSession}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Reset",
          "text": "{{i18n.reset}}",
          "action": "performResetOfStructure"
        }
      ]
    },
    "EntCBAAlignCommandActionFailure": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "EntCBAUnAlignCommandActionFailure": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "AlignmentDoNotExist": {
      "messageType": "ERROR",
      "messageText": "{{i18n.AlignmentDoNotExist}}",
      "messageTextParams": [
        "{{ctx.cbaContext.srcStructure.props.object_string.dbValues[0]}}",
        "{{ctx.cbaContext.trgStructure.props.object_string.dbValues[0]}}"
      ]
    },
    "TopUnAlignConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.SingleDesignPartUnAlignmentConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "UnAlign",
          "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
          "action": "EntCBATopUnAlignCommandAction"
        }
      ],
      "messageTextParams": [
        "{{ctx.CBATrgContext.topElement.props.object_string.dbValues[0]}}",
        "{{ctx.CBASrcContext.topElement.props.object_string.dbValues[0]}}"
      ]
    },
    "removeSingleDesignPartAlignmentMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.SingleDesignPartUnAlignmentConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "UnAlign",
          "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
          "action": "EntCBAUnAlignCommandAction"
        }
      ],
      "messageTextParams": [
        "{{data.unAlignConfirmationInput[0]}}",
        "{{data.unAlignConfirmationInput[1]}}"
      ]
    },
    "removeSingleDesignMultiplePartsAlignmentMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.SingleDesignMultiplePartsUnAlignmentConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "UnAlign",
          "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
          "action": "EntCBAUnAlignCommandAction"
        }
      ],
      "messageTextParams": [
        "{{data.unAlignConfirmationInput[0]}}",
        "{{data.unAlignConfirmationInput[1]}}"
      ]
    },
    "removeMultipleDesignsSinglePartAlignmentMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.MultipleDesignsSinglePartUnAlignmentConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "UnAlign",
          "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
          "action": "EntCBAUnAlignCommandAction"
        }
      ],
      "messageTextParams": [
        "{{data.unAlignConfirmationInput[0]}}",
        "{{data.unAlignConfirmationInput[1]}}"
      ]
    },
    "removeSingleDesignAlignmentMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.SingleDesignUnAlignmentConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "UnAlign",
          "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
          "action": "EntCBAUnAlignCommandAction"
        }
      ],
      "messageTextParams": [
        "{{data.unAlignConfirmationInput[0]}}"
      ]
    },
    "removeMultipleDesignsAlignmentMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.MultipleDesignsUnAlignmentConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "UnAlign",
          "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
          "action": "EntCBAUnAlignCommandAction"
        }
      ],
      "messageTextParams": [
        "{{data.unAlignConfirmationInput[0]}}"
      ]
    },
    "removeSinglePartAlignmentMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.SinglePartUnAlignmentConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "UnAlign",
          "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
          "action": "EntCBAUnAlignCommandAction"
        }
      ],
      "messageTextParams": [
        "{{data.unAlignConfirmationInput[0]}}"
      ]
    },
    "removeMultiplePartsAlignmentMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.MultiplePartsUnAlignmentConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "UnAlign",
          "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
          "action": "EntCBAUnAlignCommandAction"
        }
      ],
      "messageTextParams": [
        "{{data.unAlignConfirmationInput[0]}}"
      ]
    },
    "alignDesignCommandFailure": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "RemoveDesignActionFailure": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "RemovePartActionFailure": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "setPrimaryDesignFailure": {
      "messageType": "ERROR",
      "messageText": "{{data.partialErorrs[0].errorValues[0].message}}"
    },
    "createRelationsFailure": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "removeSinglePartition": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeSingleConfirmationForPartition}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.aceRemove}}",
          "action": "removeElementsForPartition"
        }
      ],
      "messageTextParams": [
        "{{data.displayNameOfSelectedElement}}"
      ]
    },
    "removeMultipleSelection": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeMultipleConfirmationForPartition}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.aceRemove}}",
          "action": "removeElementsForPartition"
        }
      ],
      "messageTextParams": [
        "{{ctx.mselected.length}}"
      ]
    },
    "removeSinglePtnMember": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeSinglePtnMemberConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.Awb0UnassignMemBtn}}",
          "action": "removePtnMembersSOA"
        }
      ],
      "messageTextParams": [
        "{{data.displayNameOfSelectedElement}}"
      ]
    },
    "removeMultiplePtnMembers": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeMultiplePtnMemConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.Awb0UnassignMemBtn}}",
          "action": "removePtnMembersSOA"
        }
      ],
      "messageTextParams": [
        "{{ctx.mselected.length}}"
      ]
    },
    "deleteSinglePtn": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deleteSinglePtnConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.deletePtnBtn}}",
          "action": "removeElementsForPartition"
        }
      ],
      "messageTextParams": [
        "{{data.displayNameOfSelectedElement}}"
      ]
    },
    "deleteMultiplePtns": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deleteMultiplePtnsConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.deletePtnBtn}}",
          "action": "removeElementsForPartition"
        }
      ],
      "messageTextParams": [
        "{{ctx.mselected.length}}"
      ]
    }
  },
  "conditions": {
    "awp0PasteInWhereUsedTab": {
      "expression": "conditions.awp0PasteToObjectSetActiveCondition && commandContext.pageContext.secondaryActiveTabId === 'web_whereused'"
    },
    "editVariantTableInAceSubUnderECN": {
      "expression": "ctx.isVariantTableEditing === true && conditions.inECNContext && commandContext.subPanelContext.context.occContext.supportedFeatures.Awb0DateEffectivityConfigFeature"
    },
    "inECNContext": {
      "expression": "ctx.userSession.props.cm0GlobalChangeContext && ctx.userSession.props.cm0GlobalChangeContext.dbValue !== null && ctx.userSession.props.cm0GlobalChangeContext.dbValue !==''"
    },
    "aceSaveAsorRevise": {
      "expression": "conditions.saveAsorRevise && conditions.isOccurrenceManagementSubLocation && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1"
    },
    "Awb0StructureFilterCommandTemplateCondition": {
      "expression": "commandContext.occContext.productContextInfo.props.awb0FilterCount.dbValues[0] > 0"
    },
    "disableDeleteCmdVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.visibleServerCommands.Awp0Delete",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": {
              "$adapt": "ctx.selected"
            },
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$notin": [
                  "ItemRevision"
                ]
              }
            }
          }
        ]
      }
    },
    "aceDoesNotSupportsSummaryView": {
      "expression": "conditions.supportsSummaryView && conditions.isOccurrenceManagementSubLocation"
    },
    "aceDoesNotSupportsListView": {
      "expression": "conditions.supportsListView && conditions.isOccurrenceManagementSubLocation"
    },
    "aceDoesNotSupportsTableView": {
      "expression": "conditions.supportsTableView && conditions.isOccurrenceManagementSubLocation"
    },
    "aceDoesNotSupportsTableSummaryView": {
      "expression": "conditions.supportsTableSummaryView && conditions.isOccurrenceManagementSubLocation"
    },
    "aceDoesNotSupportsImageView": {
      "expression": "conditions.supportsImageView && conditions.isOccurrenceManagementSubLocation"
    },
    "NotReleasedAssembly": {
      "expression": "!(ctx.selected.props.awb0ArchetypeRevRelStatus && ctx.selected.props.awb0ArchetypeRevRelStatus.dbValues.length > 0)"
    },
    "isCutAction": {
      "expression": "ctx.cutIntent === true"
    },
    "isAwb0SaveAsorReviseApplicable": {
      "expression": "conditions.isOccurrenceManagementSubLocation && ctx.visibleServerCommands.Awp0ShowSaveAs === true"
    },
    "isSeparatePossible": {
      "expression": "!ctx.visibleServerCommands.Awb0Unpack && !ctx.occmgmtContext.isMarkupEnabled && ctx.visibleServerCommands.Awb0AddChildElement && ctx.selected.props.awb0Quantity.dbValues[ 0 ] > 1 && ctx.selected.props.awb0UoM.dbValues[ 0 ] === '' && !conditions.isOverrideContextApplied"
    },
    "isRootNodeInSelected": {
      "expression": "ctx.mselected.length === 1 && ctx.aceActiveContext.context.topElement.uid === ctx.mselected[0].uid"
    },
    "isUnconfiguredNodeInSelected": {
      "expression": "ctx.mselected.length === 1 && ctx.mselected[0].props.awb0Archetype && ctx.mselected[0].props.awb0Archetype.dbValues[ 0 ] === null "
    },
    "Awb0ViewElementEffectivity": {
      "expression": "ctx.visibleServerCommands.Awb0ViewElementEffectivity"
    },
    "isAcePWAInNonEditMode": {
      "expression": "!ctx[ ctx[commandContext.viewKey].vmc.name ]._editing"
    },
    "isACEPWAEditInProgressInTreeOrTable": {
      "expression": "(ctx.occDataProvider || ctx.occDataProvider2)  && (ctx.occDataProvider._editing || ctx.occDataProvider2._editing) || ctx.TABLE_CONTEXT && ctx.TABLE_CONTEXT._editing || ctx.NONE._editing"
    },
    "isTopNodeDisplayedInTree": {
      "expression": "(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView') && commandContext.occContext.showTopNode === true"
    },
    "isSaveAsAndReplaceCommandSupported": {
      "expression": "ctx.visibleServerCommands.Awb0ReplaceElement && conditions.isSelectionPresentInPWA && ctx.selected.props.awb0UnderlyingObject.dbValues[0]"
    },
    "isRedLineMode": {
      "expression": "ctx.isRedLineMode === 'true'"
    },
    "isAltsSubsProvider": {
      "expression": "ctx.relationContext.relationInfo[0].relationType === 'Awp0AlternatesProvider' || ctx.relationContext.relationInfo[0].relationType === 'Awb0SubstitutesProvider' || ctx.relationContext.relationInfo[0].relationType === 'REF(awb0UnderlyingObject,ItemRevision).REF(structure_revisions,PSBOMViewRevision)'"
    },
    "isSolutionVariantProvider": {
      "expression": "ctx.relationContext.relationInfo[0].relationType === 'Smc0SolutionVariantProvider'"
    },
    "isWhereUsedContextProvider": {
      "expression": "ctx.relationContext.relationInfo[0].relationType === 'Awb0ContextProvider'"
    },
    "isPartElement": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0PartElement') > -1"
    },
    "isAwb0ConditionalElement": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0ConditionalElement') > -1"
    },
    "awb0CutCommandActive": {
      "expression": "(!conditions.isRootNodeInSelected && conditions.isOccurrenceManagementSubLocation && conditions.isAwb0ConditionalElement)  || (conditions.cutVisibility && (conditions.isWhereUsedContextProvider || conditions.isAltsSubsProvider || conditions.isSolutionVariantProvider)) "
    },
    "isSelectionPresentInPWA": {
      "expression": "commandContext.occContext.selectedModelObjects[0].uid != commandContext.occContext.currentState.t_uid"
    },
    "isProductSelectedInSWC": {
      "expression": "commandContext.occContext.workingContextObj && commandContext.occContext.workingContextObj.uid == ctx.selected.props.awb0BreadcrumbAncestor.dbValues[0]"
    },
    "isSWCSelected": {
      "expression": "commandContext.occContext.workingContextObj && commandContext.occContext.workingContextObj.uid === commandContext.occContext.selectedModelObjects[0].uid "
    },
    "isAddChildCommandSupported": {
      "expression": "ctx.visibleServerCommands.Awb0AddChildElement && !ctx.hiddenCommands.Awb0AddChildElement"
    },
    "isAddSiblingCommandSupported": {
      "expression": "ctx.visibleServerCommands.Awb0AddSiblingElement && conditions.isSelectionPresentInPWA && !conditions.isProductSelectedInSWC && !ctx.hiddenCommands.Awb0AddSiblingElement"
    },
    "isAddChildProductToSWCVisible": {
      "expression": "ctx.visibleServerCommands.Awb0AddChildProductToSavedBookmark && conditions.isSWCSelected"
    },
    "isAddSiblingProductToSWCCommandSupported": {
      "expression": "ctx.visibleServerCommands.Awb0AddSiblingProductToSavedBookmark && conditions.isProductSelectedInSWC"
    },
    "isRemoveCommandSupported": {
      "expression": "ctx.visibleServerCommands.Awb0RemoveElement && ( conditions.isSelectionPresentInPWA || conditions.isTopNodeDisplayedInTree )"
    },
    "isSingleElementSelected": {
      "expression": "commandContext.occContext.selectedModelObjects && commandContext.occContext.selectedModelObjects.length === 1"
    },
    "isRemoveLevelCommandSupported": {
      "expression": "conditions.isSingleElementSelected && ctx.visibleServerCommands.Awb0RemoveLevel && !conditions.isMarkupEnabled && conditions.isValidChangeContext && !conditions.isOverrideContextApplied"
    },
    "isRemoveLevelCtxCommandSupported": {
      "expression": "conditions.isRemoveLevelCommandSupported && conditions.isSingleElementSelected"
    },
    "isReplaceCommandSupported": {
      "expression": "ctx.visibleServerCommands.Awb0ReplaceElement  && conditions.isSelectionPresentInPWA && !ctx.hiddenCommands.Awb0ReplaceElement"
    },
    "isStructureFilterSupported": {
      "expression": "commandContext.occContext.supportedFeatures.Awb0StructureFilterFeature === true && !ctx.hiddenCommands.Awb0StructureFilter"
    },
    "isRevisionEffectivityCommandVisibile": {
      "expression": "ctx.visibleServerCommands.Awb0ReleaseStatusEffectivity && conditions.isSelectionPresentInPWA"
    },
    "isRevisionEffectivityCommandInHomeVisibile": {
      "expression": "ctx.visibleServerCommands.Awp0ReleaseStatusEffectivity"
    },
    "isOccEffectivityCommandVisibile": {
      "expression": "conditions.isAwb0ExpressionEffectivityNotVisible && ctx.visibleServerCommands.Awb0OccurrenceEffectivity  && conditions.isSelectionPresentInPWA"
    },
    "isViewOccEffectivityCommandVisibile": {
      "expression": "conditions.isAwb0ExpressionEffectivityNotVisible && ctx.visibleServerCommands.Awb0ViewElementEffectivity  && conditions.isSelectionPresentInPWA"
    },
    "isCreateSWCCommandVisible": {
      "expression": "ctx.visibleServerCommands.Awb0SaveWorkingContext && !ctx.hiddenCommands.isSaveWorkingContextNotSupported"
    },
    "isSaveAsSWCCommandVisible": {
      "expression": "conditions.isOccurrenceManagementSubLocation && !ctx.hiddenCommands.isSaveWorkingContextNotSupported && ( ctx.visibleServerCommands.Awb0SaveWorkingContextDuplicateInProductContext || ctx.visibleServerCommands.Awb0SaveWorkingContextDuplicateInSavedBookmark )"
    },
    "isUpdateSWCCommandVisible": {
      "expression": "conditions.isOccurrenceManagementSubLocation && !ctx.hiddenCommands.isSaveWorkingContextNotSupported && ( ctx.visibleServerCommands.Awb0SaveWorkingContextSaveInProductContext || ctx.visibleServerCommands.Awb0SaveWorkingContextSaveInSavedBookmark )"
    },
    "isConfigurationFilterSupported": {
      "expression": "commandContext.occContext.supportedFeatures.Awb0EnableConfigurationPanelFeature === true"
    },
    "isResetApplicable": {
      "expression": "conditions.isOccurrenceManagementSubLocation && ( ctx.aceActiveContext.context.workingContextObj.props.awb0PendingChanges.dbValues[0] === '1' || !ctx.aceActiveContext.context.isOpenedUnderAContext )"
    },
    "isAWBEnableAllStructureFeatures": {
      "expression": "commandContext.occContext.supportedFeatures.Awb0UnifiedFindInStructure"
    },
    "isNavigationSupported": {
      "expression": "((ctx.aceActiveContext.context.isOpenedUnderAContext) || ( !ctx.aceActiveContext.context.isOpenedUnderAContext && (commandContext.occContext.supportedFeatures.Awb0FindInStructure === true || commandContext.occContext.supportedFeatures.Awb0FullTextSearchFeature === true)))"
    },
    "isMoveUpEnabled": {
      "expression": "conditions.isMoveUpDownVisible && commandContext.selectionData.selected && commandContext.selectionData.selected.length === 1 && commandContext.selectionState !== 'none' && commandContext.selectionModel.getDpListener().selectedObjects[0] !== commandContext.selectionModel.getDpListener().vmCollectionObj.vmCollection.loadedVMObjects[0]"
    },
    "isSelectAllVisible": {
      "expression": "conditions.isOccurrenceManagementSubLocation && commandContext.searchState.totalLoaded > 1 && commandContext.selectionModel.selectionEnabled"
    },
    "cmdSelectAllEnabled": {
      "expression": "commandContext.searchState.totalLoaded > 0 && commandContext.selectionModel.selectionState === 'all'"
    },
    "isMoveUpDownVisible": {
      "expression": "conditions.isOccurrenceManagementSubLocation && commandContext.searchState.totalLoaded > 1 && commandContext.searchState.endIndex !== undefined"
    },
    "isMoveDownEnabled": {
      "expression": "conditions.isMoveUpDownVisible && commandContext.selectionData.selected && commandContext.selectionData.selected.length === 1 && commandContext.selectionState !== 'none' && commandContext.selectionModel.getDpListener().selectedObjects[0] !== commandContext.selectionModel.getDpListener().vmCollectionObj.vmCollection.loadedVMObjects.slice( -1 )[0]"
    },
    "isLiveSearchResultCommandVisible": {
      "expression": "commandContext.searchState && commandContext.searchState.endIndex !== undefined && commandContext.searchState.isKeywordSearch && commandContext.preFilterContext && commandContext.preFilterContext.occContext.supportedFeatures.Awb0UnifiedFindInStructure && commandContext.preFilterContext.occContext.supportedFeatures.Awb0FindInStructure && commandContext.preFilterContext.occContext.productContextInfo.props.awb0AlternateConfiguration.dbValues[ 0 ] !== ''"
    },
    "isLiveSearchResultCommandEnabled": {
      "expression": "conditions.isLiveSearchResultCommandVisible && commandContext.searchState.showLiveSearchResultCommand"
    },
    "isShowChildrenCommandVisible": {
      "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'Awb0Element' ) > -1 && commandContext.vmo.props.awb0NumberOfChildren && commandContext.vmo.props.awb0NumberOfChildren.dbValue > 0"
    },
    "isRemoveEffectivityForRelnStatusVisible": {
      "expression": "commandContext.dataProviders.getRelStatusEffectivities.selectedObjects.length>0 && commandContext.sharedData.activeView=='DisplayAndRemoveEffectivitiesForRelStatus'"
    },
    "isAddEffectivitiesVisible": {
      "expression": "commandContext.sharedData.activeView=='DisplayAndRemoveEffectivities'"
    },
    "isRemoveEffectivitiesVisible": {
      "expression": "commandContext.dataProviders.getAppliedEffectivities.selectedObjects.length>0 && commandContext.sharedData.activeView=='DisplayAndRemoveEffectivities'"
    },
    "isClearAllVisible": {
      "expression": "commandContext.occContext.selectedModelObjects.length > 1"
    },
    "isRemoveGroupEffectivitiesVisible": {
      "expression": "commandContext.dataProviders.getAppliedGroupEffectivities.viewModelCollection.totalObjectsLoaded >= 1 && commandContext.dataProviders.getAppliedGroupEffectivities.selectedObjects.length > 0"
    },
    "isAwb0AddNewVariantRuleCmdVisible": {
      "expression": "ctx.variantRule.showOverlayCommand && commandContext.occContext.supportedFeatures.Awb0MultipleVariantRuleFeature && !ctx.variantRule.isVariantRuleFeatureReadOnly"
    },
    "isAddSubstitutesSupported": {
      "expression": "conditions.isOccurrenceManagementSubLocation && ctx.visibleServerCommands.Awb0AddSubstitutes && !ctx.hiddenCommands.Awb0AddSubstitutes"
    },
    "isAddSubstitutesSupportedForPWA": {
      "expression": "ctx.mselected.length === 1 && conditions.isOccurrenceManagementSubLocation && ctx.visibleServerCommands.Awb0AddSubstitutes && !ctx.hiddenCommands.Awb0AddSubstitutes"
    },
    "isTCServerVersion132OrLater": {
      "expression": "ctx.tcSessionData.tcMajorVersion > 13 || (ctx.tcSessionData.tcMajorVersion === 13 && ctx.tcSessionData.tcMinorVersion >= 2 )"
    },
    "isValidChangeContext": {
      "expression": "conditions.isTCServerVersion132OrLater || !ctx.occmgmtContext.isChangeEnabled"
    },
    "isInsertLevelSupported": {
      "expression": "ctx.visibleServerCommands.Awb0InsertParentElement && !conditions.isMarkupEnabled && conditions.isValidChangeContext && !conditions.isOverrideContextApplied"
    },
    "isRemoveSubstitutesSupported": {
      "expression": "conditions.isOccurrenceManagementSubLocation && ctx.visibleServerCommands.Awb0RemoveSubstitutes && !ctx.hiddenCommands.Awb0RemoveSubstitutes && commandContext.occContext.viewKey === ctx.aceActiveContext.key"
    },
    "isApplyMarkupSupported": {
      "expression": "conditions.isOccurrenceManagementSubLocation && commandContext.objectSetSource==='Awb0MarkupForLevelProvider.Fnd0MarkupChange' && ctx.visibleServerCommands.Awb0ApplyMarkup"
    },
    "isCancelMarkupAtLevelSupported": {
      "expression": "conditions.isOccurrenceManagementSubLocation && commandContext.objectSetSource==='Awb0MarkupForLevelProvider.Fnd0MarkupChange' && commandContext.selectionModel.selectionData.value.selected.length > 0 && ctx.selected.type === 'Fnd0MarkupChange'"
    },
    "isCancelMarkupAtElementSupported": {
      "expression": "conditions.isOccurrenceManagementSubLocation && commandContext.objectSetSource==='Awb0MarkupProvider.Fnd0MarkupChange' && commandContext.selectionModel.selectionData.value.selected.length > 0 && ctx.selected.type === 'Fnd0MarkupChange'"
    },
    "isACEShowObjectDelegateActive": {
      "expression": "conditions.isOccurrenceManagementSubLocation && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1"
    },
    "isACEShowObjectDelegateVisible": {
      "expression": "conditions.isOccurrenceManagementSubLocation && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1 && commandContext.occContext.selectedModelObjects.length === 1 && commandContext.occContext.selectedModelObjects[0].uid !== commandContext.occContext.currentState.t_uid"
    },
    "isSubsetFilterApplied": {
      "expression": "commandContext.occContext.currentState && commandContext.occContext.currentState.filter && commandContext.occContext.currentState.filter !== ''"
    },
    "isUnpackCmdVisible": {
      "expression": "( ctx.visibleServerCommands.Awb0Unpack || conditions.isPackedHiddenNodeSelected )  && commandContext.occContext.supportedFeatures.Awb0PackSimilarElementsFeature && !conditions.isSubsetFilterApplied && !conditions.isSplitViewOpenedWithSameConfiguration"
    },
    "isUnpackCmdVisibleInCtxMenu": {
      "expression": "( ctx.visibleServerCommands.Awb0Unpack || conditions.isPackedHiddenNodeSelected ) && commandContext.occContext.supportedFeatures.Awb0PackSimilarElementsFeature && !conditions.isSubsetFilterApplied && !conditions.isSplitViewOpenedWithSameConfiguration"
    },
    "isPackedHiddenNodeSelected": {
      "expression": "ctx.aceActiveContext && ctx.aceActiveContext.context.acePartialSelection && ctx.aceActiveContext.context.acePartialSelection.isPackedHiddenNodeSelected === true"
    },
    "isPackCmdVisible": {
      "expression": "ctx.visibleServerCommands.Awb0Pack  && commandContext.occContext.supportedFeatures.Awb0PackSimilarElementsFeature && !conditions.isSubsetFilterApplied && !conditions.isSplitViewOpenedWithSameConfiguration"
    },
    "isPackCmdVisibleInCtxMenu": {
      "expression": "ctx.visibleServerCommands.Awb0Pack && commandContext.occContext.supportedFeatures.Awb0PackSimilarElementsFeature && !conditions.isSubsetFilterApplied && !conditions.isSplitViewOpenedWithSameConfiguration"
    },
    "isPackAllCmdVisible": {
      "expression": "commandContext.occContext.supportedFeatures.Awb0PackSimilarElementsFeature && !commandContext.occContext.supportedFeatures.4GStructureFeature && !conditions.isSplitViewOpenedWithSameConfiguration"
    },
    "topElementHasChild": {
      "expression": "ctx[commandContext.viewKey].rootElement.props.awb0NumberOfChildren && ctx[commandContext.viewKey].rootElement.props.awb0NumberOfChildren.dbValues[0] > 0"
    },
    "isUnpackAllCmdVisible": {
      "expression": "commandContext.occContext.supportedFeatures.Awb0PackSimilarElementsFeature && !commandContext.occContext.supportedFeatures.4GStructureFeature && !conditions.isSplitViewOpenedWithSameConfiguration"
    },
    "isACEShowObjectCellDelegateActive": {
      "expression": {
        "$or": [
          {
            "$and": [
              {
                "$source": "conditions.isOccurrenceManagementSubLocation",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "commandContext.vmo",
                "$query": {
                  "$source": "modelType.typeHierarchyArray",
                  "$query": {
                    "$in": [
                      "Awb0Element"
                    ]
                  }
                }
              }
            ]
          },
          {
            "$source": "commandContext.vmo",
            "$query": {
              "$source": "props.awp0Relationship.displayValues",
              "$query": {
                "$in": [
                  "Awb0ContextProvider"
                ]
              }
            }
          }
        ]
      }
    },
    "isACEShowObjectCellDelegateForBookmarkActive": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isOccurrenceManagementSubLocation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.vmo",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Awb0SavedBookmark"
                ]
              }
            }
          }
        ]
      }
    },
    "isACEReviseObjectDelegateActive": {
      "expression": "conditions.isOccurrenceManagementSubLocation && commandContext.vmo.modelType.typeHierarchyArray.indexOf('ItemRevision') > -1 && ( commandContext.subPanelContext.occContext.supportedFeatures.Awb0JitterFreeReviseFeature !== true || commandContext.subPanelContext.occContext.baseModelObject.uid === ctx.selected.uid )"
    },
    "isACEJitterFreeReviseDelegateActive": {
      "expression": "conditions.isOccurrenceManagementSubLocation && commandContext.vmo.modelType.typeHierarchyArray.indexOf('ItemRevision') > -1 && commandContext.subPanelContext.occContext.supportedFeatures.Awb0JitterFreeReviseFeature === true && commandContext.subPanelContext.occContext.baseModelObject.uid !== ctx.selected.uid && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1"
    },
    "isACEOpenInTabDelegateActive": {
      "expression": "conditions.isOccurrenceManagementSubLocation && conditions.cmdOpenInNewTabCommandActive && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1 && !ctx.aw_hosting_enabled"
    },
    "isACEOpenInWindowDelegateActive": {
      "expression": "conditions.isOccurrenceManagementSubLocation && conditions.cmdOpenInNewWindowCommandActive && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1 && !ctx.aw_hosting_enabled"
    },
    "isACEOpenInRACDelegateActive": {
      "expression": "conditions.isOccurrenceManagementSubLocation && conditions.awp0OpenInRACCommandCondition && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1"
    },
    "isUseSubstituteSupported": {
      "expression": "conditions.isOccurrenceManagementSubLocation && commandContext.objectSetSource==='Awb0SubstitutesProvider.ItemRevision' && ctx.visibleServerCommands.Awb0UseSubstitute && !ctx.hiddenCommands.Awb0UseSubstitute && commandContext.occContext.viewKey === ctx.aceActiveContext.key"
    },
    "isAdaptedObjectPresent": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isOccurrenceManagementSubLocation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$source": "props.awb0UnderlyingObject",
              "$query": {
                "$notNull": true
              }
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$source": "props.awb0UnderlyingObject.dbValues[0]",
              "$query": {
                "$isNull": true
              }
            }
          }
        ]
      }
    },
    "aceCutEnableCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.awb0CutCommandActive",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isRemoveCommandSupported",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isAltsSubsProvider",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isWhereUsedContextProvider",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isMarkupEnabled",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isRedLineMode",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Awb0ConditionalElement"
                ]
              }
            }
          }
        ]
      }
    },
    "isPasteAllowed": {
      "expression": "conditions.isAddChildProductToSWCVisible || conditions.isAddChildCommandSupported"
    },
    "acePasteVisibleCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isPasteAllowed",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": "{{ctx.selectedModelTypeRelations}}"
              }
            }
          },
          {
            "$source": "ctx.mselected.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.selected.props.is_modifiable.dbValues",
            "$query": {
              "$in": [
                "1",
                "true"
              ]
            }
          },
          {
            "$source": "ctx.selectedModelTypeRelations.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "ctx.sublocation.clientScopeURI",
            "$query": {
              "$ne": "Awp0ShowObject"
            }
          },
          {
            "$source": "conditions.isOccurrenceManagementSubLocation",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isMarkupLineSelected": {
      "expression": "conditions.isMarkupEnabled && ( ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0MarkupElement') > -1 || ctx.selected.props.awb0MarkupType.dbValues[0] === '128' || ctx.selected.props.awb0MarkupType.dbValues[0] === '144' )"
    },
    "isMarkupEnabled": {
      "expression": "ctx.occmgmtContext.isMarkupEnabled"
    },
    "showMarkupCondition": {
      "expression": "!ctx.occmgmtContext.isChangeEnabled && ctx.locationContext['ActiveWorkspace:SubLocation'] === 'com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation' && commandContext.occContext.supportedFeatures.Awb0MarkupFeature === true && !ctx.hiddenCommands.Awb0ShowMarkup && !conditions.isOverrideContextApplied"
    },
    "hideMarkupForSessionandSplit": {
      "expression": "conditions.isOccurrenceManagementSubLocation && !conditions.isTypeFnd0AppSession && !ctx.splitView.mode"
    },
    "showUnconfigured": {
      "expression": "commandContext.occContext.displayToggleOptions.PSEShowUnconfigdEffPref === true"
    },
    "showUnconfiguredVariants": {
      "expression": "commandContext.occContext.displayToggleOptions.PSEShowUnconfigdVarPref === true"
    },
    "showAwb0ExpandBelowDebug": {
      "expression": "commandContext.occContext.ExpandBelowDebug === 'true'"
    },
    "showAwb0ExpandOneDebug": {
      "expression": "commandContext.occContext.ExpandOneDebug === 'true'"
    },
    "showAwb0ReconfigureDebug": {
      "expression": "commandContext.occContext.ReconfigureDebug === 'true'"
    },
    "showAwb0LoadTreePropsDebug": {
      "expression": "commandContext.occContext.LoadTreePropsDebug === 'true'"
    },
    "showAwb0LoadTreePropsTimerDebug": {
      "expression": "commandContext.occContext.LoadTreePropsTimerDebug === 'true'"
    },
    "showAwb0BackGroundSoaDebug": {
      "expression": "commandContext.occContext.BackGroundSoaDebug === 'true'"
    },
    "showSuppressed": {
      "expression": "commandContext.occContext.displayToggleOptions.PSEShowSuppressedOccsPref === true"
    },
    "showIneffectiveCondition": {
      "expression": "commandContext.occContext.supportedFeatures.Awb0DisplayToggleFeature === true"
    },
    "showVariantsInCondition": {
      "expression": "commandContext.occContext.supportedFeatures.Awb0DisplayToggleFeature === true"
    },
    "showSuppressedInCondition": {
      "expression": "commandContext.occContext.supportedFeatures.Awb0DisplayToggleFeature === true"
    },
    "showViewGroupCondition": {
      "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation'"
    },
    "isExpandOptionsEnabled": {
      "expression": "conditions.isExpandBelowApplicable  && commandContext.occContext.selectedModelObjects && commandContext.occContext.selectedModelObjects.length === 1  && commandContext.occContext.selectedModelObjects[ 0 ].props.awb0NumberOfChildren && commandContext.occContext.selectedModelObjects[ 0 ].props.awb0NumberOfChildren.dbValues > 0"
    },
    "isExpandOptionsFetchAllEnabled": {
      "expression": "commandContext.occContext.currentState.expb_all === 'true'"
    },
    "isDegugEnabled": {
      "expression": "commandContext.occContext.currentState.debug === 'true'"
    },
    "isParentAssembliesProvider": {
      "expression": "ctx.relationContext.relationInfo[0].relationType == 'ps_parents'"
    },
    "isReferencesProvider": {
      "expression": "ctx.relationContext.relationInfo[0].relationType == 'Awp0ReferencesProvider'"
    },
    "isExpandOptionsEnabledInCtxMenu": {
      "expression": "conditions.isExpandBelowApplicable && !conditions.isParentAssembliesProvider && !conditions.isReferencesProvider && !conditions.isAltsSubsProvider && !conditions.isWhereUsedContextProvider && !conditions.isSolutionVariantProvider && commandContext.occContext.selectedModelObjects && commandContext.occContext.selectedModelObjects.length === 1  && commandContext.occContext.selectedModelObjects[ 0 ].props.awb0NumberOfChildren && commandContext.occContext.selectedModelObjects[ 0 ].props.awb0NumberOfChildren.dbValues > 0"
    },
    "isExpandBelowApplicable": {
      "expression": "commandContext.occContext.selectedModelObjects[ 0 ].modelType.typeHierarchyArray.indexOf( 'Awb0Element' ) > -1 && commandContext.occContext.supportedFeatures[ 'Awb0ExpandBelowFeature' ] === true && !(ctx.selected.modelType.typeHierarchyArray.indexOf('ItemRevision') > -1)"
    },
    "isSetInContextCmdVisible": {
      "expression": "conditions.isOccurrenceManagementSubLocation && ctx.visibleServerCommands.Awb0SetInContext && !ctx.splitView.mode && !conditions.isACEPWAEditInProgressInTreeOrTable && !conditions.isMarkupEnabled"
    },
    "isCBOSCmdVisible": {
      "expression": "ctx.visibleServerCommands.Awb0CBOSCmd"
    },
    "isConfigByProximityCmdVisible": {
      "expression": "ctx.visibleServerCommands.Awb0ConfigureByValidOverlays"
    },
    "isOccurrenceManagementSubLocation": {
      "expression": "ctx.sublocation.clientScopeURI === 'Awb0OccurrenceManagement'"
    },
    "isSignOutVisibleForACE": {
      "expression": "conditions.isOccurrenceManagementSubLocation && !ctx.signOutDisabled"
    },
    "isTreeOrTreeSummaryView": {
      "expression": "(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' )"
    },
    "isNotTreeOrTreeeSummaryView": {
      "expression": "!conditions.isTreeOrTreeSummaryView"
    },
    "isOverrideContextApplied": {
      "expression": "commandContext.occContext.currentState && commandContext.occContext.currentState.incontext_uid && commandContext.occContext.currentState.incontext_uid !== ''"
    },
    "isClassicVariantRulePanelDirty": {
      "expression": "ctx.classicCfgContext && ctx.classicCfgContext.isSavePanelDirty && ctx.classicCfgContext.isSavePanelDirty === true"
    },
    "isClassicVariantRuleModifiable": {
      "expression": "ctx.variantConfigContext.initialVariantRule && ctx.variantConfigContext.initialVariantRule.props && ctx.variantConfigContext.initialVariantRule.props.object_string.dbValue !== 'Adhoc_Rule' && ctx.variantConfigContext.initialVariantRule.props.is_modifiable.dbValues[0] === '1'"
    },
    "checkUserAccessForSaveAsVariantRule": {
      "expression": "ctx.classicCfgContext && ctx.classicCfgContext.hasRootModifyAccess && ctx.classicCfgContext.hasRootModifyAccess === '1'"
    },
    "removeAttachmentVisibility": {
      "expression": "!conditions.isAltsSubsProvider && conditions.isOccurrenceManagementSubLocation && ctx.relationContext.relationInfo[0].relationType !== 'Awb0ContextProvider' && ctx.visibleServerCommands.Awp0Cut === true && ctx.relationContext.relationInfo.length > 0 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1 && (ctx.relationContext.relationInfo[0].relationType !== 'ps_parents' && ctx.relationContext.relationInfo[0].relationType !== 'Awp0ReferencesProvider')"
    },
    "isRemoveAttachmentOverridePerformed": {
      "expression": "ctx.aceActiveContext.attachmentContext === 'removeOverride'"
    },
    "isCutAttachmentPerformed": {
      "expression": "ctx.aceActiveContext.attachmentContext === undefined"
    },
    "isAwb0EditEffectivityVisible": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.vmo.cellHeader2",
            "$query": {
              "$notinregexp": ";"
            }
          },
          {
            "$source": "commandContext.vmo.type",
            "$query": {
              "$eq": "Effectivity"
            }
          }
        ]
      }
    },
    "isAwb0ExpressionEffectivityVisible": {
      "expression": "ctx.visibleServerCommands.Awp0ExpressionEffectivity && conditions.isSelectionPresentInPWA"
    },
    "isAwb0ExpressionEffectivityNotVisible": {
      "expression": "!ctx.visibleServerCommands.Awp0ExpressionEffectivity"
    },
    "isUsedInStructuresView": {
      "expression": "commandContext.arrangeData.columnConfigId === 'WhereUsedColConfig'"
    },
    "isEffectivityGroupEditable": {
      "expression": "commandContext.vmo.props.is_modifiable.dbValues[ 0 ] === true || commandContext.vmo.props.is_modifiable.dbValues[ 0 ] === '1'"
    },
    "isSplitViewOpenedWithSameConfiguration": {
      "expression": "ctx.splitView.mode && ctx.occmgmtContext && ctx.occmgmtContext2 && ctx.occmgmtContext.productContextInfo && ctx.occmgmtContext2.productContextInfo && ctx.occmgmtContext.productContextInfo.uid === ctx.occmgmtContext2.productContextInfo.uid"
    },
    "isAwp0ExportToExcelVisibleInSWA": {
      "expression": "commandContext.objectSetTitleKey === 'tc_xrt_AssemblyInformation'"
    },
    "isOccmgmtDuplicateSubLocation": {
      "expression": "ctx.sublocation.nameToken === 'com.siemens.splm.client.duplicate:DuplicateSublocation'"
    },
    "isOccMgmtDuplicateMenuApplicable": {
      "expression": "conditions.isOccmgmtDuplicateSubLocation && !conditions.isRootNodeInSelected && !conditions.isUnconfiguredNodeInSelected && (ctx.mselected.length > 1 || !ctx.selected.props.hideDuplicateCommand)"
    },
    "isOccMgmtDuplicateRemoveApplicable": {
      "expression": "conditions.isOccMgmtDuplicateMenuApplicable && (ctx.mselected.length > 1 || ctx.selected.props.awb0PendingAction.dbValue !== 5)"
    },
    "isOccMgmtDuplicateUndoApplicable": {
      "expression": "conditions.isOccMgmtDuplicateMenuApplicable && (ctx.mselected.length > 1 || (ctx.selected.props.awb0PendingAction.dbValue !== 1 && ctx.selected.props.awb0PendingAction.dbValue !== null ))"
    },
    "isOccMgmtDuplicateCloneApplicable": {
      "expression": "conditions.isOccMgmtDuplicateMenuApplicable && (ctx.mselected.length > 1 || (ctx.selected.props.awb0PendingAction.dbValue !== 0 && ctx.selected.props.awb0PendingAction.dbValue !== 6) )"
    },
    "isOccMgmtDuplicateCloneBelowApplicable": {
      "expression": "conditions.isOccMgmtDuplicateMenuApplicable && (ctx.mselected.length > 1 || ctx.selected.props.awb0PendingAction.dbValue !== 6)"
    },
    "isOccMgmtDuplicateReplaceApplicable": {
      "expression": "conditions.isOccMgmtDuplicateMenuApplicable && ctx.mselected.length === 1 && ctx.selected.props.awb0PendingAction.dbValue !== 3"
    },
    "isAwb0DuplicateVisible": {
      "expression": "!ctx.splitView.mode && !conditions.isUpdateSWCCommandVisible && ctx.mselected.length === 1 && commandContext.occContext.supportedFeatures.Awb0InteractiveDuplicateFeature  && !ctx.occmgmtContext.isMarkupEnabled && !conditions.isOverrideContextApplied && conditions.isExpandOptionsEnabled"
    },
    "isOccMgmtDuplicateNotificationCommandCond": {
      "expression": "commandContext.group.groupName==='CLONE_CONTENT_SUCCESSFUL'"
    },
    "isTopWorkSet": {
      "expression": "ctx.occmgmtContext.topElement.props.awb0UnderlyingObjectType.dbValues[0] === 'Fnd0WorksetRevision'"
    },
    "isAwb0AddPartSiblingCommandActive": {
      "expression": "conditions.isAddSiblingCommandSupported && conditions.isRevisableOccurrenceStructure"
    },
    "isAwb0AddPartChildCommandActive": {
      "expression": "conditions.isAddChildCommandSupported && ( ( conditions.isRevisableOccurrenceStructure && conditions.isTopWorkSet ) || conditions.isRevisableOccurrenceStructure )"
    },
    "isRemoveRevisionCmdSupported": {
      "expression": "commandContext.dataProviders.getChildRevisionDataProvider.selectedObjects.length > 0 "
    },
    "isSaveAsAndReplaceCmdSupported": {
      "expression": "conditions.isSaveAsAndReplaceCommandSupported && conditions.isRevisableOccurrenceStructure"
    },
    "isSaveAsAndReviseActive": {
      "expression": "( conditions.isAwb0SaveAsorReviseApplicable && conditions.isRevisableOccurrenceStructure )  || conditions.isPersistentRevOccSelected"
    },
    "isSaveAsAndReviseVisible": {
      "expression": "conditions.isAwb0SaveAsorReviseApplicable && conditions.isRevisableOccurrenceStructure && ctx.selected.props.awb0Archetype.dbValues[0]!==null"
    },
    "revOccRemoveAlternateCommandCondition": {
      "expression": "commandContext.objectSetSource ==='Awp0AlternatesProvider.Item' && ctx.visibleServerCommands.Awp0RemoveAlternate && conditions.isRevisableOccurrenceStructure"
    },
    "isRevisableOccurrenceStructure": {
      "expression": "commandContext.occContext.supportedFeatures.Awb0RevisibleOccurrenceFeature === true"
    },
    "isRevOccSaveWorkingContextVisible": {
      "expression": "conditions.isCreateSWCCommandVisible && conditions.isRevisableOccurrenceStructure"
    },
    "isRevOccInspectionDefVisible": {
      "expression": "ctx.mselected.length === 1 && conditions.revOccDuplicatedAqc0IsOccStructure && conditions.isRevisableOccurrenceStructure"
    },
    "revOccDuplicatedAqc0IsOccStructure": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Awb0Element' ) > -1 && conditions.revOccDuplicatedIsOccMgmtSublocation"
    },
    "isRevOccOpenInRichClientVisible": {
      "expression": "( conditions.isACEOpenInRACDelegateActive && conditions.isRevisableOccurrenceStructure) || conditions.isRevOccInContextOfChange"
    },
    "isRevOccCreateRecipeVisible": {
      "expression": "conditions.revOccDuplicatedCreateRecipeFromBomSelection && conditions.revOccDuplicatedIsTcReleaseAtLeast122Version && conditions.isRevisableOccurrenceStructure && conditions.isRootElementPartProduct"
    },
    "revOccDuplicatedCreateRecipeFromBomSelection": {
      "expression": "ctx.occmgmtContext && ctx.occmgmtContext.selectedModelObjects && ctx.occmgmtContext.selectedModelObjects.length > 0"
    },
    "isRevOccGenTraceMatVisible": {
      "expression": "( conditions.revOccDuplicatedIsCreateTracelinkCommandVisibleAce && conditions.isRevisableOccurrenceStructure ) || conditions.isRevOccInContextOfChange"
    },
    "revOccDuplicatedIsCreateTracelinkCommandVisibleAce": {
      "expression": "ctx.occmgmtContext  && (ctx.selected.modelType.typeHierarchyArray.indexOf( 'Awb0ConditionalElement' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'ItemRevision' ) > -1)"
    },
    "isRevOccRevisionEffectivityCmdVisibile": {
      "expression": "conditions.isRevisionEffectivityCommandVisibile && conditions.isRevisableOccurrenceStructure"
    },
    "isRevOccInContextOfChange": {
      "expression": "ctx.pselected.modelType.typeHierarchyArray.indexOf( 'ChangeItemRevision' ) >-1 && conditions.isPersistentRevOccSelected"
    },
    "isRevOccStructureOrRevOccInContextOfChange": {
      "expression": "conditions.isRevOccInContextOfChange || conditions.isRevisableOccurrenceStructure"
    },
    "isRevOccAwb0SetInContextCmdVisible": {
      "expression": "conditions.isSetInContextCmdVisible && conditions.isRevisableOccurrenceStructure"
    },
    "revOccDuplicatedIsRunningHosted": {
      "expression": "(ctx.aw_hosting_enabled===true)"
    },
    "revOccDuplicatedIsSEECHostType": {
      "expression": "(ctx.aw_host_type.toUpperCase() === 'SEEC')"
    },
    "revOccDuplicatedIsOccMgmtSublocation": {
      "expression": "ctx.sublocation.nameToken === 'com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation'"
    },
    "revOccDuplicatedAwp0OpenInSEECStandAloneNonAceModeCommandCondition": {
      "expression": "!(conditions.revOccDuplicatedIsRunningHosted && conditions.revOccDuplicatedIsSEECHostType ) && conditions.revOccDuplicatedIsOccMgmtSublocation === false && ctx.visibleServerCommands.Awp0OpenInSEEC && conditions.isRevisableOccurrenceStructure"
    },
    "isRevOccOverriddenCm1ShowCreateChangeInContextCmdActive": {
      "expression": "(ctx.visibleServerCommands.Cm1ShowCreateChangeInContext===true) && conditions.isRevisableOccurrenceStructure"
    },
    "revOccOverriddenSc1CreateCmdCond": {
      "expression": "conditions.isRootElementPartProduct && conditions.isRevisableOccurrenceStructure"
    },
    "isRootElementPartProduct": {
      "expression": "ctx.aceActiveContext.context.supportedFeatures.ProductEBOMFeature===true"
    },
    "revOccOverriddenAwb0SeparateCmdCond": {
      "expression": "conditions.isSeparatePossible && conditions.isRevisableOccurrenceStructure"
    },
    "isPersistentRevOccSelected": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Fnd0AbstractOccRevision' ) > -1"
    },
    "isSub0SubscribeSupported": {
      "expression": "conditions.isRevisableOccurrenceStructure || conditions.isPersistentRevOccSelected"
    },
    "isAwb0ShowDuplicateCmdSupportedForProductUsage": {
      "expression": "conditions.isAwb0DuplicateVisible && conditions.isRevisableOccurrenceStructure && conditions.isSelectionProductType"
    },
    "revOccDuplicatedIsTcReleaseAtLeast122Version": {
      "expression": "ctx.tcSessionData.tcMajorVersion >= 12 && ctx.tcSessionData.tcMinorVersion >= 2 || ctx.tcSessionData.tcMajorVersion >= 13"
    },
    "isRevOccJitterFreeReviseDelegateActive": {
      "expression": "conditions.isRevisableOccurrenceStructure && commandContext.vmo.modelType.typeHierarchyArray.indexOf('ItemRevision') > -1 && ctx.aceActiveContext.context.supportedFeatures.Awb0JitterFreeReviseFeature === true && ctx.aceActiveContext.context.topElement.uid !== ctx.selected.uid && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1"
    },
    "isSelectionProductType": {
      "expression": {
        "$source": "ctx.preferences.FND0_PRODUCTEBOMREVISION_TYPES",
        "$query": {
          "$in": "{{ctx.selected.props.awb0UnderlyingObjectType.dbValues[0]}}"
        }
      }
    },
    "isAwb0UseSubstituteCommandSupported": {
      "expression": "conditions.isUseSubstituteSupported && conditions.isRevisableOccurrenceStructure"
    },
    "isImportCmdVisible": {
      "expression": "ctx.selected && ctx.mselected && ctx.mselected.length === 1"
    },
    "checkModelType": {
      "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf( 'Folder' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'Awb0Element' ) > -1)"
    },
    "enableImportBOMCommand": {
      "expression": "conditions.isImportCmdVisible && conditions.checkModelType"
    },
    "isImportPreviewSublocation": {
      "expression": "ctx.sublocation.clientScopeURI === 'Awb0ImportPreview'"
    },
    "is4GDObjectInImportBOM": {
      "expression": "ctx.selected.uid.endsWith('AWB4GD')"
    },
    "disableArm0Export": {
      "expression": "conditions.isImportPreviewSublocation && ctx.workspace.workspaceId !== 'TcRMWorkspace' && ctx.selected.modelType && ( ctx.locationContext.modelObject && ctx.locationContext.modelObject.modelType.typeHierarchyArray.indexOf( 'Folder' ) !== -1 || ctx.aceActiveContext && !ctx.splitView.mode ) && !conditions.is4GDObjectInImportBOM"
    },
    "disableExcelRoundTripInImportPreviewSublocation": {
      "expression": "conditions.isImportPreviewSublocation && conditions.importBOMRoundTripCommandDisablityCond"
    },
    "importBOMRoundTripCommandDisablityCond": {
      "expression": "!conditions.importBOMParameterTableEditInProgress && (conditions.importBOMMultipleProductSelectedDisable || conditions.importBOMIsParamProjectSelectedDisable || conditions.isParamGroupDisableInImportPreview || conditions.importBOMParamProxySelectedDisable || conditions.importBOMRoundTripParameterDefVisibility || conditions.importPreviewParameterTableIsVisible || conditions.importBOMIsInVRContextExceptStudy )"
    },
    "importBOMParameterTableEditInProgress": {
      "expression": "ctx.NONE && ctx['NONE']._editing || ctx['ATTRIBUTE_TABLE_CONTEXT'] && ctx['ATTRIBUTE_TABLE_CONTEXT']._editing || ctx.isMappingTableEditing || ctx['MAPPING_TABLE_CONTEXT'] && ctx['MAPPING_TABLE_CONTEXT']._editing"
    },
    "importBOMMultipleProductSelectedDisable": {
      "expression": "ctx.mselected.length > 0 && ctx.mselected[ctx.mselected.length -1].modelType.typeHierarchyArray.indexOf('Awb0Element') > -1 && ctx.Att1ShowMappedAttribute"
    },
    "importBOMIsParamProjectSelectedDisable": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0ParamProject' ) > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Att0ParamProject' ) > -1"
    },
    "isParamGroupDisableInImportPreview": {
      "expression": "ctx.parammgmtctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0ParamGroup' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0ParamGroup' ) > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Att0ParamGroup' ) > -1"
    },
    "importBOMParamProxySelectedDisable": {
      "expression": "ctx.parammgmtctx.mselected && ctx.parammgmtctx.mselected.length > 0 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att1AttributeAlignmentProxy' ) > -1"
    },
    "importBOMRoundTripParameterDefVisibility": {
      "expression": "conditions.importBOMIsParamDictionarySelected || ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Att0ParamDictionary' ) > -1 || (ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Fnd0HomeFolder' ) > -1 && ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Att0AttributeDefRevision' ))"
    },
    "importPreviewParameterTableIsVisible": {
      "expression": "ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_AttributesForDCP'"
    },
    "importBOMIsInVRContextExceptStudy": {
      "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf( 'Crt0VldnContractRevision' ) > -1 || ctx.locationContext.modelObject.modelType.typeHierarchyArray.indexOf( 'Crt0VldnContractRevision' ) > -1 ) && !conditions.importBOMStudyTabContext"
    },
    "importBOMIsParamDictionarySelected": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0ParamDictionary' ) > -1"
    },
    "importBOMStudyTabContext": {
      "expression": "conditions.importBOMStudyTabContextPre124 || conditions.importBOMStudyTabContextFor124"
    },
    "importBOMStudyTabContextPre124": {
      "expression": "ctx.xrtPageContext && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Studies' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Studies')"
    },
    "importBOMStudyTabContextFor124": {
      "expression": "ctx.xrtPageContext && conditions.importBOMIsTcReleaseAtLeast124 && ( ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Requests' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Requests')"
    },
    "importBOMIsTcReleaseAtLeast124": {
      "expression": "ctx.tcSessionData.tcMajorVersion > 12 || ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion >= 4"
    },
    "isActionOnSelectedLineIsNew": {
      "expression": "ctx.selected.props['Action'].uiValue !== 'New'"
    },
    "isReferenceActionApplicableOnContextInImportPreview": {
      "expression": "conditions.isImportPreviewSublocation && ( ctx.mselected.length > 1 || ( conditions.isActionOnSelectedLineIsNew && ctx.selected.props['Action'].uiValue !== 'Reference' ) )"
    },
    "isReviseActionMenuApplicableOnContextInImportPreview": {
      "expression": "conditions.isImportPreviewSublocation && ( ctx.mselected.length > 1 || ( conditions.isActionOnSelectedLineIsNew && ctx.selected.props['Action'].uiValue !== 'Revise' ) )"
    },
    "isOverwriteActionMenuApplicableOnContextInImportPreview": {
      "expression": "conditions.isImportPreviewSublocation && ( ctx.mselected.length > 1 || ( conditions.isActionOnSelectedLineIsNew && ctx.selected.props['Action'].uiValue !== 'Overwrite' ) )"
    },
    "isTreeModeSupported": {
      "expression": "ctx.ViewModeContext && (ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView')"
    },
    "isTableModeSupported": {
      "expression": "ctx.ViewModeContext && (ctx.ViewModeContext.ViewModeContext === 'TableView' || ctx.ViewModeContext.ViewModeContext === 'TableSummaryView')"
    },
    "isInlineAuthoringMode": {
      "expression": "commandContext.occContext.inlineAuthoringContext.isInlineAuthoringMode && commandContext.occContext.inlineAuthoringContext.isInlineAuthoringMode === true"
    },
    "isInlineAuthoringSupported": {
      "expression": "!conditions.isInSplitMode && commandContext.occContext.supportedFeatures.Awb0InlineAuthoringFeature"
    },
    "isAddChildRowCommandSupported": {
      "expression": "( ( conditions.isInlineMultiRowEnabled && conditions.isInlineAddChildMode ) || ( !ctx.editInProgress && !conditions.isInlineAuthoringMode ) ) && conditions.isTreeModeSupported && conditions.isAddChildCommandSupported && conditions.isInlineAuthoringSupported && !conditions.isTopSelectedAndOrganisationSchemeSet"
    },
    "isAddSiblingRowCommandSupported": {
      "expression": "( ( conditions.isInlineAuthoringMode && conditions.isInlineMultiRowEnabled && !conditions.isInlineAddChildMode ) || ( !ctx.editInProgress && !conditions.isInlineAuthoringMode ) ) && (conditions.isTreeModeSupported || conditions.isTableModeSupported) && conditions.isAddSiblingCommandSupported && conditions.isInlineAuthoringSupported && !conditions.isFirstLevelPartition"
    },
    "isInlineMultiRowEnabled": {
      "expression": "ctx.preferences.AWC_InlineMultiRowEnabled[0] === 'true'"
    },
    "isInlineAddChildMode": {
      "expression": "commandContext.occContext.inlineAuthoringContext.isInlineAddChildMode && commandContext.occContext.inlineAuthoringContext.isInlineAddChildMode === true"
    },
    "isRemoveRowCommandSupported": {
      "expression": "conditions.isInlineAuthoringMode === true"
    },
    "isSaveRowCommandSupported": {
      "expression": "conditions.isInlineAuthoringMode === true"
    },
    "isStartEditAllowedInInlineAuthoringMode": {
      "expression": "conditions.isInlineAuthoringMode && (conditions.isTreeModeSupported || conditions.isTableModeSupported)  && ctx.visibleServerCommands.Awp0StartEdit"
    },
    "isObjectInfoCmdAllowedInInlineAuthoringMode": {
      "expression": "conditions.isInlineAuthoringMode && conditions.cmdObjectInfoActive"
    },
    "isInlineRemoveRowCellCommandSupported": {
      "expression": "commandContext.vmo.isInlineRow"
    },
    "isInlineRemoveElementCommandSupported": {
      "expression": "conditions.isRemoveCommandSupported && conditions.isInlineAuthoringMode"
    },
    "isInlineReplaceRevOccElementCommandSupported": {
      "expression": "conditions.isReplaceCommandSupported && conditions.isInlineAuthoringMode"
    },
    "isSaveAsOrReviseSupportedInInlineAuthoring": {
      "expression": "conditions.isAwb0SaveAsorReviseApplicable && conditions.isInlineAuthoringMode"
    },
    "isAddChildOrSiblingSupportedInInlineAuthoring": {
      "expression": "(conditions.isAddChildCommandSupported || conditions.isAddSiblingCommandSupported) && conditions.isInlineAuthoringMode"
    },
    "isMarkupSupportedInInlineAuthoring": {
      "expression": "conditions.showMarkupCondition && conditions.isInlineAuthoringMode"
    },
    "isShowDuplicateSupportedInInlineAuthoring": {
      "expression": "conditions.isAwb0DuplicateVisible && conditions.isInlineAuthoringMode"
    },
    "isExpandSupportedInInlineAuthoring": {
      "expression": "conditions.isExpandBelowApplicable && conditions.isInlineAuthoringMode"
    },
    "isOrganisationSchemeSet": {
      "expression": "commandContext.occContext.productContextInfo.props.fgf0PartitionScheme && commandContext.occContext.productContextInfo.props.fgf0PartitionScheme.dbValues[0] !== null"
    },
    "isTopSelectedAndOrganisationSchemeSet": {
      "expression": "conditions.isRootNodeInSelected && conditions.isOrganisationSchemeSet"
    },
    "isFirstLevelPartition": {
      "expression": "(ctx.selected.type === 'Fgf0PartitionElement' && ctx.selected.props.awb0Parent.dbValues[0] === ctx.aceActiveContext.context.topElement.uid)"
    },
    "isParentWorksetNode": {
      "expression": "ctx.selected.props.awb0Parent.dbValues[0] === commandContext.occContext.topElement.uid && (ctx.aceActiveContext.context.worksetTopNode && commandContext.occContext.topElement.props.awb0Archetype.dbValues[0] === ctx.aceActiveContext.context.worksetTopNode.uid)"
    },
    "isParentNotWorksetNode": {
      "expression": "!conditions.isParentWorksetNode"
    },
    "isOrgSchemeSetAndParentWorksetNode": {
      "expression": "conditions.isOrganisationSchemeSet && conditions.isParentWorksetNode"
    },
    "addChildRowCommandEnableCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isAddChildRowCommandSupported",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSelectionCollaborativePartOrProductOrPartition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isOrgSchemeSetAndParentWorksetNode",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "addSiblingRowCommandEnableCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isAddSiblingRowCommandSupported",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSelectionCollaborativePartOrProductOrPartition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isParentNotWorksetNode",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isSelectionCollaborativePartOrProductOrPartition": {
      "expression": {
        "$or": [
          {
            "$and": [
              {
                "$source": "ctx.preferences.FND0_COLLABORATIVE_PARTREVISION_TYPES",
                "$query": {
                  "$in": "{{ctx.selected.props.awb0UnderlyingObjectType.dbValues[0]}}"
                }
              },
              {
                "$source": "ctx.preferences.FND0_PARTREVISION_TYPES",
                "$query": {
                  "$in": "{{ctx.selected.props.awb0UnderlyingObjectType.dbValues[0]}}"
                }
              }
            ]
          },
          {
            "$source": "ctx.preferences.FND0_PRODUCTEBOMREVISION_TYPES",
            "$query": {
              "$in": "{{ctx.selected.props.awb0UnderlyingObjectType.dbValues[0]}}"
            }
          },
          {
            "$source": "ctx.selected.type",
            "$query": {
              "$eq": "Fgf0PartitionElement"
            }
          }
        ]
      }
    },
    "isAwp0CutContextMenuCommandSupportedInInlineAuthMode": {
      "expression": "conditions.awb0CutCommandActive && conditions.isInlineAuthoringMode"
    },
    "areSelectionsValidForSplitting": {
      "expression": "!ctx.isNarrowMode && conditions.areElementsSelected || conditions.areItemRevisionsSelected"
    },
    "isPackUnpackParentChildInfoReceived": {
      "expression": "ctx.aceActiveContext.context.packUnpackResponseParentChildInfo && ctx.aceActiveContext.context.packUnpackResponseParentChildInfo.length > 0"
    },
    "areItemRevisionsSelected": {
      "expression": "ctx.mselected && ctx.mselected.length === 2 && ctx.mselected[0].modelType.typeHierarchyArray.includes('ItemRevision') && ctx.mselected[1].modelType.typeHierarchyArray.includes('ItemRevision')"
    },
    "areElementsSelected": {
      "expression": "ctx.mselected && ctx.mselected.length === 2 && commandContext.provider.clientScopeURI==='Awb0OccurrenceManagement' && ctx.aceActiveContext && !commandContext.occContext.supportedFeatures.4GStructureFeature && ctx.mselected[0].modelType.typeHierarchyArray.includes('Awb0Element') && ctx.mselected[1].modelType.typeHierarchyArray.includes('Awb0Element')"
    },
    "isSplitCommandVisible": {
      "expression": "ctx.aceActiveContext && !commandContext.occContext.supportedFeatures.4GStructureFeature && commandContext.clientScopeURI==='Awb0OccurrenceManagement' && !ctx.aceActiveContext.context.isOpenedUnderAContext && !ctx.hiddenCommands.awb0SplitRootCmd"
    },
    "isInSplitMode": {
      "expression": "(ctx.splitView && ctx.splitView.mode) || commandContext.provider.requestPref.splitMode ==='true'"
    },
    "isAwb0TreeEditInProgress": {
      "expression": "(commandContext.dataProviderName === 'occDataProvider' && ctx.occDataProvider._editing) || (commandContext.dataProviderName === 'occDataProvider2' && ctx.occDataProvider2._editing)"
    },
    "isAwb0AnyTreeEditInProgress": {
      "expression": "(ctx.occDataProvider.canEdit || ctx.occDataProvider2.canEdit) && (ctx.NONE.canEdit || ctx.leftXRTEditContext.canEdit || ctx.rightXRTEditContext.canEdit)"
    },
    "isAwb0SummaryEditIsInProgress": {
      "expression": "ctx.NONE._editing || ctx.leftXRTEditContext._editing || ctx.rightXRTEditContext._editing"
    },
    "isAwb0TreeEditNotInProgress": {
      "expression": "!ctx.NONE._editing && !ctx.leftXRTEditContext._editing && !ctx.rightXRTEditContext._editing && !ctx.occDataProvider._editing && !ctx.occDataProvider2._editing"
    },
    "startEditCmdServerVisible": {
      "expression": "ctx.visibleServerCommands.Awp0StartEditTable"
    },
    "isAwb0StartTreeEditApplicable": {
      "expression": "conditions.isOccurrenceManagementSubLocation && conditions.isTreeOrTreeSummaryView && conditions.startEditCmdServerVisible && conditions.isAwb0TreeEditNotInProgress"
    },
    "isAwb0StartSummaryEditApplicable": {
      "expression": "conditions.isOccurrenceManagementSubLocation && conditions.isTreeOrTreeSummaryView && ctx.visibleServerCommands.Awp0StartEdit && conditions.isAwb0AnyTreeEditInProgress"
    },
    "isAwb0StartSummaryEditVisible": {
      "expression": "commandContext.occContext.selectedModelObjects.length===1 && conditions.isAwb0TreeEditNotInProgress"
    },
    "awb0SelectAllCondition": {
      "expression": "conditions.awp0SelectAllCondition && ctx.splitView && ctx.splitView.mode"
    },
    "awb0DeselectAllCondition": {
      "expression": "conditions.awp0DeselectAllCondition && ctx.splitView && ctx.splitView.mode"
    },
    "awb0MultiSelectEnableCondition": {
      "expression": "conditions.awp0MultiSelectEnableCondition && ctx.splitView && ctx.splitView.mode"
    },
    "awb0DisableMultiSelectCondition": {
      "expression": "conditions.awp0MultiSelectDisableCondition && ctx.splitView && ctx.splitView.mode"
    },
    "isSessionWithWorksetOpen": {
      "expression": "conditions.isTypeFnd0AppSession && ctx.aceActiveContext.context.appSessionWorksetNode !== undefined"
    },
    "isSessionWithProductOpen": {
      "expression": "conditions.isTypeFnd0AppSession && !ctx.aceActiveContext.context.appSessionWorksetNode"
    },
    "isSessionWithWorksetSelected": {
      "expression": "conditions.isSessionWithWorksetOpen && ctx.mselected.length === 1 && ctx.mselected[0].uid === commandContext.occContext.topElement.uid"
    },
    "isWorksetinAppSessionSelected": {
      "expression": "conditions.isSessionWithWorksetOpen && ctx.mselected.length === 1 && ctx.mselected[0].uid === ctx.aceActiveContext.context.appSessionWorksetNode.uid"
    },
    "isReplaySessionWithWorksetEnabled": {
      "expression": "ctx.mselected.length === 1 && ctx.mselected[0].uid !== commandContext.occContext.topElement.uid && conditions.isWriteAccessProvidedOnAppSessionWorksetRev"
    },
    "isReplaySessionWithProductVisible": {
      "expression": "conditions.isResetGroupCommandVisible && conditions.isSessionWithProductOpen && conditions.isStaleTreeContentFeatureNotPresent"
    },
    "isReplaySessionWithWorksetVisible": {
      "expression": "conditions.isResetGroupCommandVisible && conditions.isSessionWithWorksetOpen && conditions.isStaleTreeContentFeatureNotPresent"
    },
    "isResetForSessionWithProductApplicable": {
      "expression": "conditions.isResetApplicable && conditions.isSessionWithProductOpen"
    },
    "isSubsetUnderWorksetAppSessionSelected": {
      "expression": "conditions.isSessionWithWorksetOpen && ctx.mselected[ctx.mselected.length-1].props.awb0Parent.dbValues[0] === ctx.aceActiveContext.context.appSessionWorksetNode.uid"
    },
    "isWorksetOrSubsetInAppSessionSelectedInSWA": {
      "expression": "ctx.aceActiveContext.context.appSessionWorksetNode !== undefined && ctx.sublocation.clientScopeURI === 'Awb0OccurrenceManagement'"
    },
    "isWorksetOpenCondition": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSessionWithWorksetOpen",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isBomLineUnderWorksetAppSessionSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isSessionWithWorksetOpen",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$all": {
                "$source": "props.awb0Parent.dbValues[0]",
                "$query": {
                  "$neq": "{{ctx.aceActiveContext.context.appSessionWorksetNode.uid}}"
                }
              }
            }
          }
        ]
      }
    },
    "isSubsetOrWorksetinAppSessionSelected": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isSubsetUnderWorksetAppSessionSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetinAppSessionSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isBomlineOrSubsetOrWorksetinAppSessionSelected": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isSubsetUnderWorksetAppSessionSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetinAppSessionSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isBomLineUnderWorksetAppSessionSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isSubsetOrWorksetSelectedCondition": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isSubsetOrWorksetinAppSessionSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSubsetOrWorksetSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isBOMWorksetOrWorksetInAppSessionCondition": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isBOMWorkset",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isBomlineOrSubsetOrWorksetinAppSessionSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "aceSaveAsReviseWorkset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.aceSaveAsorRevise",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isWorksetSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isWorksetinAppSessionSelected",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "doesdataProviderHasSnapshotSelected": {
      "expression": "(ctx.getRecentObjsProvider.selectedObjects.length === 1 && ctx.getRecentObjsProvider.selectedObjects[0].modelType.typeHierarchyArray.indexOf('Fnd0Snapshot')> -1) || (ctx.getClipboardProvider.selectedObjects.length === 1 && ctx.getClipboardProvider.selectedObjects[0].modelType.typeHierarchyArray.indexOf('Fnd0Snapshot')> -1) ||  (ctx.getFavoriteProvider.selectedObjects.length === 1 && ctx.getFavoriteProvider.selectedObjects[0].modelType.typeHierarchyArray.indexOf('Fnd0Snapshot')> -1) "
    },
    "isSnapshotSelectedInQuickAccess": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.sidenavCommandId",
            "$query": {
              "$eq": "cmdQuickAccess"
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.doesdataProviderHasSnapshotSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": {
                  "$adapt": "commandContext.vmo"
                },
                "$query": {
                  "$source": "modelType.typeHierarchyArray",
                  "$query": {
                    "$in": [
                      "Fnd0Snapshot"
                    ]
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "isSnapshotInGlobalSearch": {
      "expression": "(commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'Fnd0Snapshot' ) > -1 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'Fnd0Snapshot' ) > -1 )|| commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'Fnd0Snapshot' ) > -1"
    },
    "showSnapshotInAce": {
      "expression": "ctx.panelContext.viewerAtomicData.isViewerRevealed && ctx.panelContext.viewerAtomicData.viewerViewMode === 'VIEWER3D'"
    },
    "showSnapshotInNonAce": {
      "expression": "ctx.aceActiveContext.context.currentState.spageId !=='3D'"
    },
    "isSnapshotInGlobalSearchOrInDiscussion3D": {
      "expression": "conditions.isSnapshotInGlobalSearch && conditions.showSnapshotInAce"
    },
    "isSnapshotSelectedInMyGallery": {
      "expression": "commandContext.selectionData.selected && commandContext.selectionData.selected.length === 1 && commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf( 'Fnd0Snapshot' ) > -1"
    },
    "isHandlerActiveForSnapshot": {
      "expression": "conditions.cmdAwp0ShowObjectCellForObjectNavigationBaseVisibleCondition && commandContext &&  commandContext.vmo && commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'Fnd0Snapshot' ) > -1 && ctx.sublocation.clientScopeURI!=='Awb0OccurrenceManagement' "
    },
    "isAwb0CreateWorksetAllowed": {
      "expression": "commandContext.occContext.supportedFeatures.Awb0CreateWorkset === true"
    },
    "hideCreateWorksetInMarkupMode": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isAwb0CreateWorksetAllowed",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isMarkupEnabled",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "hideReplaceForSubsetAndWorksetAtNonAce": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isReplaceCommandSupported",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isSubsetUnderWorksetSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isSubsetUnderWorksetAppSessionSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isWorksetSelectedAtNonAce",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "isTcReleaseAtLeast12_4": {
      "expression": "(ctx.tcSessionData.tcMajorVersion >=12 && ctx.tcSessionData.tcMinorVersion >=4) || ctx.tcSessionData.tcMajorVersion >=13"
    },
    "isNotTreeWithSummaryView": {
      "expression": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView'"
    },
    "isTcReleaseAtLeast14_2": {
      "expression": "(ctx.tcSessionData.tcMajorVersion >=14 && ctx.tcSessionData.tcMinorVersion >=2)"
    },
    "isTcReleaseAtLeast14_1": {
      "expression": "(ctx.tcSessionData.tcMajorVersion >=14 && ctx.tcSessionData.tcMinorVersion >=1)"
    },
    "isTcReleaseAtLeast13_3": {
      "expression": "(ctx.tcSessionData.tcMajorVersion >=13 && ctx.tcSessionData.tcMinorVersion >=3) || ctx.tcSessionData.tcMajorVersion >= 14"
    },
    "isTcReleaseLessThan13_3": {
      "expression": "(ctx.tcSessionData.tcMajorVersion <= 13 && ctx.tcSessionData.tcMinorVersion < 3)"
    },
    "isTypeFnd0AppSession": {
      "expression": "ctx.aceActiveContext.context.topElement.modelType.typeHierarchyArray.indexOf( 'Fnd0AppSession' ) > -1"
    },
    "isFnd0AppSessionSelected": {
      "expression": "ctx.mselected.length === 1 && ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Fnd0AppSession' ) > -1"
    },
    "isAwb0CreateSessionAllowed": {
      "expression": "commandContext.occContext.topElement.modelType.typeHierarchyArray.indexOf( 'Awb0ConditionalElement' ) > -1 && !commandContext.occContext.supportedFeatures['4GStructureFeature']  && conditions.isTcReleaseAtLeast12_4 && !ctx.splitView.mode && !conditions.isWorksetSelectedAtNonAce && ( conditions.isTcReleaseAtLeast14_2 || conditions.isTypeNotFnd0Workset)"
    },
    "isAwb0SaveAsSessionAllowed": {
      "expression": "conditions.isTypeFnd0AppSession && conditions.isTcReleaseAtLeast12_4"
    },
    "hideSWCCommandForSession": {
      "expression": "conditions.isSaveAsSWCCommandVisible && conditions.isAwb0SaveAsSessionAllowed"
    },
    "isWriteAccessProvided": {
      "expression": "ctx.aceActiveContext.context.modelObject.props.is_modifiable.dbValues[0]==='1'"
    },
    "isWriteAccessProvidedOnWorksetRev": {
      "expression": "ctx.aceActiveContext.context.worksetTopNode && ctx.aceActiveContext.context.worksetTopNode.props.is_modifiable.dbValues[0] === '1'"
    },
    "isWriteAccessProvidedOnAppSessionWorksetRev": {
      "expression": "ctx.aceActiveContext.context.appSessionWorksetNode && ctx.aceActiveContext.context.appSessionWorksetUnderlyingObject && ctx.aceActiveContext.context.appSessionWorksetUnderlyingObject.props.is_modifiable.dbValues[0] === '1'"
    },
    "isWriteAccessNotProvidedOnWorksetRev": {
      "expression": "ctx.aceActiveContext.context.worksetTopNode && ctx.aceActiveContext.context.worksetTopNode.props.is_modifiable.dbValues[0] === '0'"
    },
    "isWriteAccessProvidedOnWorksetItem": {
      "expression": "ctx.aceActiveContext.context.worksetTopNode && ctx.aceActiveContext.context.worksetItemTopNode.props.is_modifiable.dbValues[0] === '1'"
    },
    "isWriteAccessNotProvidedOnWorksetItem": {
      "expression": "ctx.aceActiveContext.context.worksetTopNode && ctx.aceActiveContext.context.worksetItemTopNode.props.is_modifiable.dbValues[0] === '0'"
    },
    "isPendingChanges": {
      "expression": "ctx.aceActiveContext.context.workingContextObj.props.awb0PendingChanges.dbValues[0] === '1'"
    },
    "isPendingChangesOnWorkset": {
      "expression": "ctx.aceActiveContext.context.worksetTopNode && ctx.aceActiveContext.context.worksetTopNode.props.fnd0PendingChanges.dbValues[0] === '1'"
    },
    "isSaveSessionActive": {
      "expression": "conditions.isTcReleaseAtLeast12_4 && conditions.isTypeFnd0AppSession && !conditions.isFnd0SnapshotOpened && conditions.isWriteAccessProvided "
    },
    "isSaveSessionApplicable": {
      "expression": "conditions.isSaveSessionActive && conditions.isPendingChanges"
    },
    "isEditWorkingContextVisible": {
      "expression": "conditions.isUpdateSWCCommandVisible && conditions.isTypeFnd0AppSession"
    },
    "isOpenInRichClientVisibleForSession": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.awp0OpenInRACCommandCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTypeFnd0AppSession",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isBOMWorkset": {
      "expression": "(ctx.aceActiveContext !== undefined && ctx.aceActiveContext.context.worksetTopNode !== undefined) || (ctx.mselected.length === 1 && ctx.sublocation.clientScopeURI !== 'Awb0OccurrenceManagement' && ( ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Fnd0WorksetRevision' ) > -1 || ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Fnd0Workset' ) > -1 ))"
    },
    "isWorksetSelected": {
      "expression": "ctx.mselected.length === 1 && ctx.aceActiveContext.context.worksetTopNode !== undefined && ctx.mselected[0].props.awb0UnderlyingObject.dbValues[0]=== ctx.aceActiveContext.context.worksetTopNode.uid"
    },
    "isProductSelectedInSWAForWorkset": {
      "expression": {
        "$or": [
          {
            "$and": [
              {
                "$or": [
                  {
                    "$source": "conditions.isProductSelectedForWorksetInAceSWA",
                    "$query": {
                      "$eq": true
                    }
                  },
                  {
                    "$source": "conditions.isWorksetOrSubsetInAppSessionSelectedInSWA",
                    "$query": {
                      "$eq": true
                    }
                  }
                ]
              },
              {
                "$source": "conditions.removeAttachmentVisibility",
                "$query": {
                  "$eq": true
                }
              }
            ]
          },
          {
            "$source": "conditions.isProductSelectedForWorksetInNonAceSWA",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isProductSelectedForWorksetInAceSWA": {
      "expression": "ctx.aceActiveContext.context.worksetTopNode !== undefined && ctx.sublocation.clientScopeURI === 'Awb0OccurrenceManagement'"
    },
    "isProductSelectedForWorksetInNonAceSWA": {
      "expression": "ctx.pselected.modelType.name === 'Fnd0WorksetRevision' && ctx.sublocation.clientScopeURI !== 'Awb0OccurrenceManagement'"
    },
    "isWorksetNotInSelectedObjects": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$all": {
                "$source": "props.awb0UnderlyingObject.dbValues[0]",
                "$query": {
                  "$neq": "{{ctx.aceActiveContext.context.worksetTopNode.uid}}"
                }
              }
            }
          }
        ]
      }
    },
    "isWorksetSelectedAtNonAce": {
      "expression": "ctx.mselected.length === 1 && ctx.sublocation.clientScopeURI !== 'Awb0OccurrenceManagement' && ( ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Fnd0WorksetRevision' ) > -1 || ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Fnd0Workset' ) > -1 )"
    },
    "isSmartDiscovery": {
      "expression": "(ctx.aceActiveContext.context.productContextInfo.props.awb0AlternateConfiguration !== undefined && ctx.aceActiveContext.context.productContextInfo.props.awb0AlternateConfiguration.dbValues[0] === '')"
    },
    "isValidSelectionsToIncludeOrExclude": {
      "expression": "ctx.filter.validSelectionsToIncludeOrExclude"
    },
    "isResetGroupCommandVisible": {
      "expression": "conditions.isTypeFnd0AppSession && !conditions.isFnd0SnapshotOpened"
    },
    "isFnd0SnapshotOpened": {
      "expression": "ctx.aceActiveContext.context.topElement.modelType.typeHierarchyArray.indexOf( 'Fnd0Snapshot' ) > -1"
    },
    "isSelectedHasParent": {
      "expression": "ctx.mselected && ctx.mselected.length === 1 && ctx.mselected[0].props.awb0Parent && ctx.mselected[0].props.awb0Parent.dbValues[0] !== null"
    },
    "isReplayOfWorksetApplicable": {
      "expression": "!conditions.isTcReleaseAtLeast14_2 && conditions.isTcReleaseAtLeast14_1 && conditions.isTypeFnd0Workset"
    },
    "isInsertLevelCtxCmdVisibleForSubset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isInsertLevelSupported",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isSubsetUnderWorksetAppSessionSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isTypeFnd0Workset",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "isRemoveLevelCtxCmdVisibleForSubset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isRemoveLevelCtxCommandSupported",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isSubsetUnderWorksetAppSessionSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isTypeFnd0Workset",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "isInsertLevelCmdVisibleForSubset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isInsertLevelSupported",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isSubsetUnderWorksetAppSessionSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isTypeFnd0Workset",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "isRemoveLevelCmdVisibleForSubset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isRemoveLevelCommandSupported",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isSubsetUnderWorksetAppSessionSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isTypeFnd0Workset",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "isOccEffectivityCmdVisibleForSubset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isAwb0ExpressionEffectivityNotVisible",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isSubsetUnderWorksetSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isSubsetUnderWorksetAppSessionSelected",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "isRevisionEffectivityCmdVisibleForSubset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isRevisionEffectivityCommandVisibile",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSubsetUnderWorksetSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isTypeNotFnd0Workset": {
      "expression": "ctx.aceActiveContext.context.worksetTopNode === undefined || ctx.aceActiveContext.context.worksetTopNode.modelType.typeHierarchyArray.indexOf( 'Fnd0WorksetRevision' ) < 0"
    },
    "isTypeFnd0Workset": {
      "expression": "ctx.aceActiveContext.context.worksetTopNode !== undefined && ctx.aceActiveContext.context.worksetTopNode.modelType.typeHierarchyArray.indexOf( 'Fnd0WorksetRevision' ) > -1"
    },
    "isSubstituteCmdVisibleForSubsetPWA": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isAddSubstitutesSupportedForPWA",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSubsetUnderWorksetSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isSubstituteCmdVisibleForSubset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isAddSubstitutesSupported",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSubsetUnderWorksetSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isSeparateCmdVisibleForSubset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isSeparatePossible",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSubsetUnderWorksetSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isAlternateCmdVisibleForWorkset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.ps0AddAlternateCommandConditionForPWA",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isSubsetUnderWorksetSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isWorksetSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isWorksetSelectedAtNonAce",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isSubsetOrWorksetinAppSessionSelected",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "isResetApplicableForWorkset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isResetApplicable",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isSplitCommandVisibleForSubset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isSplitCommandVisible",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "awb0CutCommandActiveForWorkset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.aceCutEnableCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isWorksetSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isWorksetSelectedAtNonAce",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "awp0CopyCommandActiveForWorkset": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelectedAtNonAce",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetinAppSessionSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isMarkAsSuspectCommandEnabledForWorkset": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isSubsetUnderWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelectedAtNonAce",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSubsetOrWorksetinAppSessionSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "initiateComplianceCheckCommandVisibleForWorkset": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isSubsetUnderWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelectedAtNonAce",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSubsetOrWorksetinAppSessionSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "executeRecipeCommandConditionForWorkset": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isSubsetUnderWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelectedAtNonAce",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSubsetOrWorksetinAppSessionSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isBranchUploadEnabledForWorkset": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isSubsetUnderWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelectedAtNonAce",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSubsetOrWorksetinAppSessionSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isSubsetOrWorksetSelected": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isSubsetUnderWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelectedAtNonAce",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "setFreezePointCmdEnabledForWorkset": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isSubsetUnderWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelectedAtNonAce",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "createRecipeEnabledForWorkset": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isSubsetUnderWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelectedAtNonAce",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isSaveAsReplaceCmdForSubset": {
      "expression": "conditions.isSaveAsAndReplaceCommandSupported && ( conditions.isSubsetUnderWorksetSelected || conditions.isWorksetSelectedAtNonAce || conditions.isSubsetUnderWorksetAppSessionSelected )"
    },
    "discoveryIsSaveAsReviseUnSupported": {
      "expression": {
        "$or": [
          {
            "$and": [
              {
                "$source": "conditions.aceSaveAsorRevise",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$or": [
                  {
                    "$source": "conditions.isSubsetUnderWorksetSelected",
                    "$query": {
                      "$eq": true
                    }
                  },
                  {
                    "$source": "conditions.isProductUnderSessionSelected",
                    "$query": {
                      "$eq": true
                    }
                  },
                  {
                    "$source": "conditions.isSubsetUnderWorksetAppSessionSelected",
                    "$query": {
                      "$eq": true
                    }
                  }
                ]
              }
            ]
          },
          {
            "$and": [
              {
                "$source": "conditions.saveAsorRevise",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isWorksetSelectedAtNonAce",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "isProductUnderSessionSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isSessionWithProductOpen",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$all": {
                "$source": "props.awb0Parent.isNulls",
                "$query": {
                  "$eq": true
                }
              }
            }
          }
        ]
      }
    },
    "isBomLineUnderSessionSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTypeFnd0AppSession",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isSelectedHasParent",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "ctx.mselected.length",
                "$query": {
                  "$gt": 1
                }
              }
            ]
          }
        ]
      }
    },
    "isSubsetUnderWorksetSelected": {
      "expression": "conditions.isTypeFnd0Workset && ctx.mselected[ctx.mselected.length-1].props.awb0Parent.dbValues[0] === ctx.aceActiveContext.context.topElement.uid"
    },
    "isOpenValidForSelectedObjectsInWorkset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isACEShowObjectDelegateActive",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.mselected.length",
            "$query": {
              "$neq": 1
            }
          },
          {
            "$or": [
              {
                "$source": "ctx.mselected.length",
                "$query": {
                  "$neq": 1
                }
              },
              {
                "$source": "conditions.isWorksetSelected",
                "$query": {
                  "$eq": false
                }
              }
            ]
          }
        ]
      }
    },
    "isBomLineUnderSubsetForWorksetSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$all": {
                "$source": "props.awb0Parent.dbValues",
                "$query": {
                  "$neq": "{{ctx.aceActiveContext.context.topElement.uid}}"
                }
              }
            }
          }
        ]
      }
    },
    "isShowViewTogglesInWorksetCondition_142": {
      "expression": "conditions.isTcReleaseAtLeast14_2 && (conditions.isTypeFnd0Workset || conditions.isSessionWithWorksetOpen)"
    },
    "isShowVariantsUnconfiguredApplicableForSubset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.showVariantsInCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isSubsetUnderWorksetSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isBomLineUnderSubsetForWorksetSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "ctx.mselected.length",
                "$query": {
                  "$gt": 1
                }
              }
            ]
          },
          {
            "$source": "conditions.isWorksetSelected",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isShowVariantsUnconfiguredInWorksetCondition": {
      "expression": "conditions.isTcReleaseAtLeast14_1 && !conditions.isTcReleaseAtLeast14_2 && conditions.isShowVariantsUnconfiguredApplicableForSubset"
    },
    "isShowEffUnconfiguredApplicableForSubset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.showIneffectiveCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isSubsetUnderWorksetSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isBomLineUnderSubsetForWorksetSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "ctx.mselected.length",
                "$query": {
                  "$gt": 1
                }
              }
            ]
          },
          {
            "$source": "conditions.isWorksetSelected",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isShowEffUnconfiguredInWorksetCondition": {
      "expression": "conditions.isTcReleaseAtLeast14_1 && !conditions.isTcReleaseAtLeast14_2 && conditions.isShowEffUnconfiguredApplicableForSubset"
    },
    "isShowSuppressedApplicableForSubset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.showSuppressedInCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isSubsetUnderWorksetSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isBomLineUnderSubsetForWorksetSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "ctx.mselected.length",
                "$query": {
                  "$gt": 1
                }
              }
            ]
          },
          {
            "$source": "conditions.isWorksetSelected",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isShowSuppressedInWorksetCondition": {
      "expression": "conditions.isTcReleaseAtLeast14_1 && !conditions.isTcReleaseAtLeast14_2 && conditions.isShowSuppressedApplicableForSubset"
    },
    "isShowVariantsUnconfiguredApplicableForSession": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.showVariantsInCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isBomLineUnderSessionSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isShowEffUnconfiguredApplicableForSession": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.showIneffectiveCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isBomLineUnderSessionSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isShowSuppressedApplicableForSession": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.showSuppressedInCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isBomLineUnderSessionSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "canReplayAutoSaveWorkset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetAutoSaveEnabled",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isStaleTreeContentFeaturePresent",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isReplayOfAutoSaveWorksetEnabled": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.canReplayAutoSaveWorkset",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWriteAccessProvidedOnWorksetRev",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isReplayOfWorksetEnabled": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$all": {
                "$or": [
                  {
                    "$source": "props.awb0UnderlyingObject.dbValues[0]",
                    "$query": {
                      "$eq": "{{ctx.aceActiveContext.context.worksetTopNode.uid}}"
                    }
                  },
                  {
                    "$source": "props.awb0Parent.dbValues[0]",
                    "$query": {
                      "$eq": "{{commandContext.occContext.topElement.uid}}"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "isStaleTreeContentFeaturePresent": {
      "expression": "commandContext.occContext.supportedFeatures && commandContext.occContext.supportedFeatures.Awb0StaleTreeContent === true"
    },
    "isStaleTreeContentFeatureNotPresent": {
      "expression": "!commandContext.occContext.supportedFeatures.Awb0StaleTreeContent"
    },
    "canEnableReplayWorksetForStaleTreeContent": {
      "expression": "conditions.isStaleTreeContentFeaturePresent && ( conditions.isTypeFnd0Workset || conditions.isSessionWithWorksetOpen )"
    },
    "isWorksetAutoSaveEnabled": {
      "expression": "(ctx.tcSessionData.tcMajorVersion >=14 && ctx.tcSessionData.tcMinorVersion > 1)"
    },
    "isStaleWorksetReplayEnabled": {
      "expression": "conditions.canEnableReplayWorksetForStaleTreeContent && ( conditions.isWriteAccessProvidedOnWorksetRev || conditions.isWriteAccessProvidedOnAppSessionWorksetRev )"
    },
    "isSaveWorksetActive": {
      "expression": "!conditions.isTcReleaseAtLeast14_2 && conditions.isTcReleaseAtLeast14_1 && conditions.isTypeFnd0Workset && conditions.isWriteAccessProvidedOnWorksetRev"
    },
    "isSaveWorksetApplicable": {
      "expression": "conditions.isSaveWorksetActive && conditions.isPendingChangesOnWorkset"
    },
    "isSessionUnsavedHasWriteAccess": {
      "expression": "conditions.isTypeFnd0AppSession && conditions.isPendingChanges && conditions.isWriteAccessProvided"
    },
    "isSessionUnsavedNoWriteAccess": {
      "expression": "conditions.isTypeFnd0AppSession && conditions.isPendingChanges && !conditions.isWriteAccessProvided"
    },
    "isWorksetUnsavedHasWriteAccess": {
      "expression": "conditions.isTcReleaseAtLeast14_1 && (ctx.aceActiveContext.context.worksetTopNode && conditions.isWorksetSelected && conditions.isPendingChangesOnWorkset && conditions.isWriteAccessProvidedOnWorksetRev)"
    },
    "isWorksetUnsavedNoWriteAccess": {
      "expression": "conditions.isTcReleaseAtLeast14_1 && (ctx.aceActiveContext.context.worksetTopNode && conditions.isWorksetSelected && conditions.isPendingChangesOnWorkset && conditions.isWriteAccessNotProvidedOnWorksetRev)"
    },
    "isFilterFeatureAvailable": {
      "expression": "commandContext.occContext.supportedFeatures && commandContext.occContext.supportedFeatures.Awb0StructureFilterFeature === true && commandContext.occContext.supportedFeatures.Awb0EnableSmartDiscoveryFeature === true && !(ctx.hiddenCommands && ctx.hiddenCommands.Awb0StructureFilter )"
    },
    "isFilterFeatureNotReadOnly": {
      "expression": "!commandContext.occContext.readOnlyFeatures.Awb0StructureFilterFeature"
    },
    "isIncludeExcludeVisible": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isValidSelectionsToIncludeOrExclude",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isFilterFeatureAvailable",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isIncludeExcludeEnable": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isValidSelectionsToIncludeOrExclude",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isFilterFeatureAvailable",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isFilterFeatureNotReadOnly",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isIncludeWithoutChildrenVisible": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTcReleaseAtLeast14_2",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isIncludeExcludeVisible",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isIncludeWithoutChildrenEnabled": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isIncludeWithoutChildrenVisible",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isFilterFeatureNotReadOnly",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "aceCBOSForWorksetApplicable": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTcReleaseAtLeast14_1",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isCBOSCmdVisible",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "aceCBOSForWorksetVisible": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.aceCBOSForWorksetApplicable",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetNotInSelectedObjects",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isBomLineUnderSubsetForWorksetSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSelectionsInSingleSubsetInWorkset",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isFilterFeatureNotReadOnly",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isSelectionsInSingleSubsetInWorkset": {
      "expression": "ctx.filter.validSelectionsInSingleSubsetInWorkset"
    },
    "discoverySessionOpenInVisApplicable": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.Awp0OpenVVICmdCond",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$and": [
                  {
                    "$source": "conditions.isTcReleaseAtLeast14_1",
                    "$query": {
                      "$eq": true
                    }
                  },
                  {
                    "$source": "conditions.isSessionWithProductOpen",
                    "$query": {
                      "$eq": true
                    }
                  }
                ]
              },
              {
                "$and": [
                  {
                    "$source": "conditions.isTcReleaseAtLeast14_2",
                    "$query": {
                      "$eq": true
                    }
                  },
                  {
                    "$source": "conditions.isSessionWithWorksetOpen",
                    "$query": {
                      "$eq": true
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "discoveryWorksetOpenInVisApplicable": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.Awp0OpenVVICmdCond",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTcReleaseAtLeast14_2",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSessionWithWorksetOpen",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "discoveryIsOpenInTcVisUnSupported": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.Awp0OpenVVICmdCond",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isWorksetSelectedAtNonAce",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isObjectUnsavedHasWriteAccess": {
      "expression": "conditions.isSessionUnsavedHasWriteAccess || conditions.isWorksetUnsavedHasWriteAccess"
    },
    "isObjectUnsavedNoWriteAccess": {
      "expression": "conditions.isSessionUnsavedNoWriteAccess || conditions.isWorksetUnsavedNoWriteAccess"
    },
    "isOpenInVisDefault": {
      "expression": "!conditions.isObjectUnsavedHasWriteAccess && !conditions.isObjectUnsavedNoWriteAccess"
    },
    "findInContextOfWorksetApplicable": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTcReleaseAtLeast14_1",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isNavigationSupported",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "findInContextOfWorksetEnable": {
      "expression": "conditions.isSelectionsInSingleSubsetInWorkset || conditions.isWorksetSelected || (ctx.mselected.length === 1 && conditions.isSubsetUnderWorksetSelected)"
    },
    "findInContextOfAppSessionWorksetApplicable": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTcReleaseAtLeast14_2",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSessionWithWorksetOpen",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isNavigationSupported",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "findInContextOfAppSessionWorksetEnable": {
      "expression": "conditions.isSelectionsInSingleSubsetInWorkset || (ctx.mselected.length === 1 && conditions.isSubsetUnderWorksetAppSessionSelected)"
    },
    "isTopNodeNotInSelectedObjects": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.mselected",
            "$query": {
              "$all": {
                "$source": "uid",
                "$query": {
                  "$neq": "{{commandContext.occContext.topElement.uid}}"
                }
              }
            }
          }
        ]
      }
    },
    "hideCBOSForTopNode": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isCBOSCmdVisible",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTopNodeNotInSelectedObjects",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "discoveryHideRollUpReport": {
      "expression": {
        "$and": [
          {
            "$or": [
              {
                "$source": "conditions.isTypeFnd0Workset",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isSessionWithWorksetOpen",
                "$query": {
                  "$eq": true
                }
              }
            ]
          },
          {
            "$source": "conditions.isOccurrenceManagementSubLocation",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isDiscussionLocationAndSnapshot": {
      "expression": "(ctx.sublocation.historyNameToken==='feed' || ctx.sublocation.historyNameToken==='actionableFeed') && commandContext.vmo.type === 'Fnd0Snapshot' "
    },
    "isSnapshotInGlobalSearchOrInDiscussion": {
      "expression": "(conditions.isSnapshotInGlobalSearch && conditions.showSnapshotInNonAce) || (conditions.isDiscussionLocationAndSnapshot && conditions.showSnapshotInNonAce)"
    },
    "isShowSnapshotInNonAceOrInAceAndNotCreate": {
      "expression": "conditions.showSnapshotInNonAce || (conditions.showSnapshotInAce && !ctx.Ac0ConvCtx.createNewConversation)"
    },
    "discoveryIsPLMXMLExportSupported": {
      "expression": {
        "$or": [
          {
            "$and": [
              {
                "$source": "ctx.mselected.length",
                "$query": {
                  "$gt": 0
                }
              },
              {
                "$source": "ctx.preferences.AWC_PLMXML_export_supported_types",
                "$query": {
                  "$notNull": true
                }
              },
              {
                "$source": "ctx.mselected",
                "$query": {
                  "$source": "modelType.typeHierarchyArray",
                  "$query": {
                    "$in": "{{ctx.preferences.AWC_PLMXML_export_supported_types}}"
                  }
                }
              },
              {
                "$source": "ctx.mselected",
                "$query": {
                  "$all": {
                    "$source": "modelType.typeHierarchyArray",
                    "$query": {
                      "$notin": [
                        "Sc0SRMXChange",
                        "Sc0SRMXChangeRevision"
                      ]
                    }
                  }
                }
              },
              {
                "$source": "ctx.locationContext.modelObject",
                "$query": {
                  "$source": "modelType.typeHierarchyArray",
                  "$query": {
                    "$notin": [
                      "Sc0SRMXChangeRevision"
                    ]
                  }
                }
              }
            ]
          },
          {
            "$and": [
              {
                "$source": "ctx.mselected.length",
                "$query": {
                  "$gt": 0
                }
              },
              {
                "$source": "ctx.preferences.AWC_PLMXML_export_supported_types",
                "$query": {
                  "$isNull": true
                }
              },
              {
                "$source": "ctx.mselected",
                "$query": {
                  "$source": "modelType.typeHierarchyArray",
                  "$query": {
                    "$in": [
                      "Awb0Element",
                      "Folder",
                      "Item",
                      "ItemRevision",
                      "Form",
                      "Dataset",
                      "CCObject",
                      "StructureContext",
                      "TransactionElement",
                      "FaultCode",
                      "CfgAttachmentLine",
                      "AppearanceGroup",
                      "DC_Admin",
                      "DCt_GraphicPriority",
                      "DCt_Language",
                      "Schedule",
                      "Cls0HierarchyNode",
                      "Lbr0Library",
                      "Lbr0LibraryElement",
                      "Mdl0SubsetDefinition",
                      "Ptn0Partition",
                      "Cpd0DesignElement",
                      "Cpd0DesignFeature"
                    ]
                  }
                }
              },
              {
                "$source": "ctx.mselected",
                "$query": {
                  "$all": {
                    "$source": "modelType.typeHierarchyArray",
                    "$query": {
                      "$notin": [
                        "Sc0SRMXChange",
                        "Sc0SRMXChangeRevision"
                      ]
                    }
                  }
                }
              },
              {
                "$source": "ctx.locationContext.modelObject",
                "$query": {
                  "$source": "modelType.typeHierarchyArray",
                  "$query": {
                    "$notin": [
                      "Sc0SRMXChangeRevision"
                    ]
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "isExportToPLMXMLDisabled": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.discoveryIsPLMXMLExportSupported",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isSubsetOrWorksetSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isBomlineOrSubsetOrWorksetinAppSessionSelected",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "isExportToBriefcaseValidInAppSessionWithWorkset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isBriefcaseExportSupported",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isBomlineOrSubsetOrWorksetinAppSessionSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isSelectionsUnderWorksetApplicableForRemoveOrCut": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$and": [
                  {
                    "$source": "conditions.isOnlySubsetsInSelections",
                    "$query": {
                      "$eq": true
                    }
                  },
                  {
                    "$source": "commandContext.occContext.topElement.props.awb0NumberOfChildren.dbValues[0]",
                    "$query": {
                      "$eq": "{{ctx.mselected.length}}"
                    }
                  }
                ]
              },
              {
                "$and": [
                  {
                    "$source": "conditions.isOnlySubsetsInSelections",
                    "$query": {
                      "$eq": false
                    }
                  },
                  {
                    "$source": "conditions.isWorksetNotInSelectedObjects",
                    "$query": {
                      "$eq": true
                    }
                  },
                  {
                    "$source": "conditions.isBomLineUnderSubsetForWorksetSelected",
                    "$query": {
                      "$eq": false
                    }
                  },
                  {
                    "$source": "ctx.mselected.length",
                    "$query": {
                      "$gt": 1
                    }
                  }
                ]
              },
              {
                "$source": "conditions.isWorksetNotInSelectedObjects",
                "$query": {
                  "$eq": false
                }
              }
            ]
          }
        ]
      }
    },
    "isSelectionsUnderWorksetSessionApplicableForRemoveOrCut": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isSessionWithWorksetOpen",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$and": [
                  {
                    "$source": "conditions.isOnlySubsetsUnderAppSessionInSelections",
                    "$query": {
                      "$eq": true
                    }
                  },
                  {
                    "$source": "ctx.aceActiveContext.context.appSessionWorksetNode.props.awb0NumberOfChildren.dbValues[0]",
                    "$query": {
                      "$eq": "{{ctx.mselected.length}}"
                    }
                  }
                ]
              },
              {
                "$and": [
                  {
                    "$source": "conditions.isOnlySubsetsUnderAppSessionInSelections",
                    "$query": {
                      "$eq": false
                    }
                  },
                  {
                    "$source": "conditions.isAppSessionWorksetNotInSelectedObjects",
                    "$query": {
                      "$eq": true
                    }
                  },
                  {
                    "$source": "conditions.isBomLineUnderWorksetAppSessionSelected",
                    "$query": {
                      "$eq": false
                    }
                  },
                  {
                    "$source": "ctx.mselected.length",
                    "$query": {
                      "$gt": 1
                    }
                  }
                ]
              },
              {
                "$source": "conditions.isAppSessionWorksetNotInSelectedObjects",
                "$query": {
                  "$eq": false
                }
              }
            ]
          }
        ]
      }
    },
    "isOnlySubsetsInSelections": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTypeFnd0Workset",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$all": {
                "$source": "props.awb0Parent.dbValues[0]",
                "$query": {
                  "$eq": "{{ctx.aceActiveContext.context.topElement.uid}}"
                }
              }
            }
          }
        ]
      }
    },
    "isOnlySubsetsUnderAppSessionInSelections": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isSessionWithWorksetOpen",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$all": {
                "$source": "props.awb0Parent.dbValues[0]",
                "$query": {
                  "$eq": "{{ctx.aceActiveContext.context.appSessionWorksetNode.uid}}"
                }
              }
            }
          }
        ]
      }
    },
    "isAppSessionWorksetNotInSelectedObjects": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isSessionWithWorksetOpen",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$all": {
                "$source": "props.awb0UnderlyingObject.dbValues[0]",
                "$query": {
                  "$neq": "{{ctx.aceActiveContext.context.appSessionWorksetNode.uid}}"
                }
              }
            }
          }
        ]
      }
    },
    "isRemoveInvalidUnderWorkset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isRemoveCommandSupported",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isSelectionsUnderWorksetApplicableForRemoveOrCut",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isSelectionsUnderWorksetSessionApplicableForRemoveOrCut",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "isCutInvalidUnderWorkset": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.aceCutEnableCondition",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isSelectionsUnderWorksetApplicableForRemoveOrCut",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isSelectionsUnderWorksetSessionApplicableForRemoveOrCut",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "isValidSelectionInAlignedDesignSection": {
      "expression": "ctx.relationContext.relationInfo[0].relationType==='Fnd0AlignedDesignsProvider' || ( conditions.removeAttachmentVisibility && ctx.relationContext.relationInfo[0].relationType==='Fnd0AlignedDesignsProvider')"
    },
    "isValidSelectionInAlignedPartSection": {
      "expression": "ctx.relationContext.relationInfo[0].relationType==='Fnd0AlignedPartsProvider' || ( conditions.removeAttachmentVisibility && ctx.relationContext.relationInfo[0].relationType==='Fnd0AlignedPartsProvider')"
    },
    "isReloadViewerCondition": {
      "expression": "ctx.sublocation.enableOccMgmtCommands === true"
    },
    "Awp0AlignDesignCommandCondition": {
      "expression": "commandContext.objectSetSource==='Fnd0AlignedDesignsProvider.Fnd0AlignedDesign' && (!conditions.isSolutionVariantPart)"
    },
    "Awp0UnAlignDesignCommandCondition": {
      "expression": "ctx.mselected && ctx.mselected.length >0 && ctx.mselected[0].type==='Fnd0AlignedDesign' && (!conditions.isSolutionVariantPart)"
    },
    "Awp0AlignPartCommandCondition": {
      "expression": "commandContext.objectSetSource==='Fnd0AlignedPartsProvider.Fnd0AlignedPart'"
    },
    "Awp0UnAlignPartCommandCondition": {
      "expression": "ctx.mselected && ctx.mselected.length >0 && ctx.mselected[0].type==='Fnd0AlignedPart'"
    },
    "Awp0SetPrimaryDesignCommandCondition": {
      "expression": "ctx.mselected && ctx.mselected.length ==1 && ctx.mselected[0].type==='Fnd0AlignedDesign' && ctx.mselected[0].props.fnd0IsPrimary.dbValues[0]!='1' && (!conditions.isSolutionVariantPart)"
    },
    "isSolutionVariantPart": {
      "expression": "ctx.aceActiveContext && ((ctx.mselected[0].modelType.typeHierarchyArray.includes('Awb0PositionedElement') && conditions.isCurrentSelectionSVPart) || (ctx.mselected[0].type==='Fnd0AlignedDesign' && conditions.isPrimarytSelectionSVPart)) || conditions.isCurrentSelectionSVPart || conditions.isPrimarytSelectionSVPart"
    },
    "isCurrentSelectionSVPart": {
      "expression": "ctx.mselected[0].props.awb0IsVi.dbValues[0]==='1' || ctx.mselected[0].props.is_vi.dbValues[0]==='1'"
    },
    "isPrimarytSelectionSVPart": {
      "expression": "ctx.pselected.props.awb0IsVi.dbValues[0]==='1' || ctx.pselected.props.is_vi.dbValues[0]==='1'"
    },
    "EntCBAPasteCommandCondition": {
      "expression": {
        "$and": [
          {
            "$or": [
              {
                "$source": "commandContext.objectSetSource",
                "$query": {
                  "$eq": "Fnd0AlignedDesignsProvider.Fnd0AlignedDesign"
                }
              },
              {
                "$source": "commandContext.objectSetSource",
                "$query": {
                  "$eq": "Fnd0AlignedPartsProvider.Fnd0AlignedPart"
                }
              }
            ]
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gte": 1
            }
          },
          {
            "$or": [
              {
                "$and": [
                  {
                    "$or": [
                      {
                        "$source": "commandContext.vmo.type",
                        "$query": {
                          "$in": "{{ctx.preferences.FND0_DESIGNREVISION_TYPES}}"
                        }
                      },
                      {
                        "$source": "commandContext.occContext.selectedModelObjects[0]",
                        "$query": {
                          "$source": "props.awb0UnderlyingObjectType.dbValues[0]",
                          "$query": {
                            "$in": "{{ctx.preferences.FND0_DESIGNREVISION_TYPES}}"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "$or": [
                      {
                        "$source": "ctx.awClipBoardProvider",
                        "$query": {
                          "$source": "type",
                          "$query": {
                            "$in": "{{ctx.preferences.FND0_PARTREVISION_TYPES}}"
                          }
                        }
                      },
                      {
                        "$source": "ctx.awClipBoardProvider",
                        "$query": {
                          "$source": "props.awb0UnderlyingObjectType.dbValues[0]",
                          "$query": {
                            "$in": "{{ctx.preferences.FND0_PARTREVISION_TYPES}}"
                          }
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "$and": [
                  {
                    "$or": [
                      {
                        "$source": "commandContext.vmo.type",
                        "$query": {
                          "$in": "{{ctx.preferences.FND0_PARTREVISION_TYPES}}"
                        }
                      },
                      {
                        "$source": "commandContext.occContext.selectedModelObjects[0]",
                        "$query": {
                          "$source": "props.awb0UnderlyingObjectType.dbValues[0]",
                          "$query": {
                            "$in": "{{ctx.preferences.FND0_PARTREVISION_TYPES}}"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "$or": [
                      {
                        "$source": "ctx.awClipBoardProvider",
                        "$query": {
                          "$source": "type",
                          "$query": {
                            "$in": "{{ctx.preferences.FND0_DESIGNREVISION_TYPES}}"
                          }
                        }
                      },
                      {
                        "$source": "ctx.awClipBoardProvider",
                        "$query": {
                          "$source": "props.awb0UnderlyingObjectType.dbValues[0]",
                          "$query": {
                            "$in": "{{ctx.preferences.FND0_DESIGNREVISION_TYPES}}"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "EntCBAShowObjectCondition": {
      "expression": {
        "$source": {
          "$adapt": "commandContext.vmo"
        },
        "$query": {
          "$source": "type",
          "$query": {
            "$in": [
              "Fnd0AlignedDesign",
              "Fnd0AlignedPart"
            ]
          }
        }
      }
    },
    "EntCBAOpenObjectCondition": {
      "expression": "ctx.mselected.length == 1 && (ctx.mselected[0].type=='Fnd0AlignedDesign' || ctx.mselected[0].type=='Fnd0AlignedPart')"
    },
    "entCBACutDesignVisibility": {
      "expression": "ctx.mselected && ctx.mselected.length >0 && ctx.mselected[0].type=='Fnd0AlignedDesign'"
    },
    "entCBACutPartVisibility": {
      "expression": "ctx.mselected && ctx.mselected.length >0 && ctx.mselected[0].type=='Fnd0AlignedPart'"
    },
    "entCBACutActiveCondition": {
      "expression": "conditions.isEntCBASubLocation && conditions.awb0CutCommandActive"
    },
    "entCBAMoveToCommandEnable": {
      "expression": "conditions.isEntCBASubLocation && conditions.isMoveToCommandEnable"
    },
    "EntCBALaunchAlignTaskCommandCondition": {
      "expression": "ctx.visibleServerCommands.Awb0EntCBALaunchAlignTask && !ctx.isNarrowMode && (conditions.isCBAItemRevisionSelected || conditions.isCBAElementSelected || conditions.areCBAItemRevisionsSelected || conditions.areCBAElementsSelected || conditions.isAlignedDesignOrPartSelected)"
    },
    "isDoubleSelection": {
      "expression": "ctx.mselected && ctx.mselected.length === 2 "
    },
    "isSingleSelection": {
      "expression": "ctx.mselected && ctx.mselected.length === 1 "
    },
    "isCBAItemRevisionSelected": {
      "expression": "conditions.isSingleSelection && ctx.mselected[0].modelType.typeHierarchyArray.includes('ItemRevision') "
    },
    "areCBAItemRevisionsSelected": {
      "expression": "conditions.isDoubleSelection && ctx.mselected[0].modelType.typeHierarchyArray.includes('ItemRevision') && ctx.mselected[1].modelType.typeHierarchyArray.includes('ItemRevision')"
    },
    "is4GStructure": {
      "expression": "ctx.aceActiveContext && commandContext.occContext.supportedFeatures['4GStructureFeature']"
    },
    "isAWB0Element": {
      "expression": "ctx.mselected[0].modelType.typeHierarchyArray.includes('Awb0Element')"
    },
    "isCBAElementSelected": {
      "expression": "conditions.isSingleSelection && !conditions.is4GStructure && conditions.isAWB0Element"
    },
    "areCBAElementsSelected": {
      "expression": "conditions.isDoubleSelection && !conditions.is4GStructure && conditions.isAWB0Element"
    },
    "isAlignedDesignOrPartSelected": {
      "expression": "ctx.pselected && conditions.isSingleSelection && (ctx.mselected[0].type === 'Fnd0AlignedPart' || ctx.mselected[0].type === 'Fnd0AlignedDesign')"
    },
    "isEntCBASubLocation": {
      "expression": "ctx.splitView && ctx.splitView.mode===true && ctx.sublocation.nameToken === 'com.siemens.splm.client.cba.CADBOMAlignment:CBASublocation' && (conditions.isSchemeApplied || !conditions.isSchemeApplied)"
    },
    "isColumnArrangeIconVisible": {
      "expression": "commandContext.gridOptions.enableArrangeMenu && commandContext.isArrangeSupported && (commandContext.gridId === 'cbaSourceTree' || commandContext.gridId === 'cbaTargetTree')"
    },
    "enableOpenCBANotificationCommandCond": {
      "expression": "commandContext.group.groupName==='CBA'"
    },
    "editCommandVisibility": {
      "expression": "conditions.isEntCBASubLocation && ctx.visibleServerCommands.Awp0StartEditTable && ( ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' || ctx.ViewModeContext.ViewModeContext === 'TreeView' )"
    },
    "multiSelectEnableCondition": {
      "expression": "conditions.isEntCBASubLocation && conditions.awp0MultiSelectEnableCondition && ctx.splitView && ctx.splitView.mode"
    },
    "isSingleSelectedInTreeView": {
      "expression": "ctx.ViewModeContext.ViewModeContext === 'TreeView' && commandContext.occContext.selectedModelObjects.length === 1"
    },
    "isSingleSelectedInTreeSummaryView": {
      "expression": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' && commandContext.occContext.selectedModelObjects.length === 1 && commandContext.occContext.selectedModelObjects.length <= 1"
    },
    "isSingleRowSelected": {
      "expression": "commandContext.occContext.selectedModelObjects.length === 1 && ctx[ commandContext.viewKey ].isRowSelected === true"
    },
    "openGroupCommandsVisibility": {
      "expression": "conditions.isEntCBASubLocation &&( conditions.isSingleSelectedInTreeView || conditions.isSingleSelectedInTreeSummaryView || conditions.isSingleRowSelected ) && !conditions.isUnconfiguredNodeSelected && !ctx.selected.modelType.typeHierarchyArray.includes('Fgf0PartitionElement')"
    },
    "openObjectFromTreeTableCondition": {
      "expression": "conditions.isSingleSelection && !conditions.EntCBAOpenObjectCondition && !conditions.isItemOrItemRevisionSelected"
    },
    "isPartElementSelected": {
      "expression": "commandContext.occContext.selectedModelObjects[0].modelType.typeHierarchyArray.indexOf('Awb0PartElement') > -1"
    },
    "openBOMObjectFromTreeTableActiveCondition": {
      "expression": "conditions.isPartElementSelected && conditions.isSingleSelection && !conditions.EntCBAOpenObjectCondition && !conditions.isItemOrItemRevisionSelected"
    },
    "openBOMObjectFromTreeTableVisibleCondition": {
      "expression": "conditions.isPartElementSelected &&  ctx.selected.props.awb0Archetype && ctx.selected.props.awb0Archetype.dbValues[0]!==null && conditions.isSingleSelection && !conditions.EntCBAOpenObjectCondition && !conditions.isItemOrItemRevisionSelected"
    },
    "isItemOrItemRevisionSelected": {
      "expression": "conditions.isSingleSelection && ctx.selected.modelType.typeHierarchyArray.includes('Item') || ctx.selected.modelType.typeHierarchyArray.includes('ItemRevision')"
    },
    "isConfigurationFilterSupportedInCBA": {
      "expression": "commandContext.occContext.supportedFeatures.Awb0EnableConfigurationPanelFeature === true"
    },
    "configurationFilterCommandInCBA": {
      "expression": "conditions.isEntCBASubLocation && conditions.isConfigurationFilterSupportedInCBA"
    },
    "splitCommandVisibility": {
      "expression": "conditions.isEntCBASubLocation && ctx.aceActiveContext && !commandContext.occContext.supportedFeatures['4GStructureFeature'] && ctx.sublocation.clientScopeURI==='Awb0OccurrenceManagement'"
    },
    "isUnconfiguredNodeSelected": {
      "expression": "commandContext.occContext.selectedModelObjects.length === 1 && commandContext.occContext.selectedModelObjects[0].props.awb0UnderlyingObject && commandContext.occContext.selectedModelObjects[0].props.awb0UnderlyingObject.dbValues[ 0 ] === null "
    },
    "isExplodedMode": {
      "expression": "ctx.CBATrgContext.productContextInfo.props.awb0ShowExplodedLines.dbValues[0]==='1'"
    },
    "isSummarizedMode": {
      "expression": "!conditions.isExplodedMode"
    },
    "isPlatformVersionAtleast132": {
      "expression": "ctx.tcSessionData.tcMajorVersion > 13 || (ctx.tcSessionData.tcMajorVersion === 13 && ctx.tcSessionData.tcMinorVersion >= 2)"
    },
    "enableAlignmentCheck132Onwards": {
      "expression": "conditions.isEntCBASubLocation && conditions.isPlatformVersionAtleast132 && !ctx.cadbomalignment.ImpactAnalysis.isImpactAnalysisMode"
    },
    "enableAlignmentCheckPriorTo132": {
      "expression": "conditions.isEntCBASubLocation && !conditions.isPlatformVersionAtleast132 && !ctx.cadbomalignment.ImpactAnalysis.isImpactAnalysisMode"
    },
    "activateRemoveElementCtxMenuCmdCondition": {
      "expression": "conditions.isEntCBASubLocation && ctx.splitView && ctx.splitView.mode===true && ctx.sublocation && ctx.mselected && ctx.mselected.length >0 && ctx.sublocation.enableOccMgmtCommands === true"
    },
    "areMultipleStructureInCBA": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.cbaContext.srcStructure.uid",
            "$query": {
              "$notNull": true
            }
          },
          {
            "$source": "commandContext.cbaContext.trgStructure.uid",
            "$query": {
              "$notNull": true
            }
          }
        ]
      }
    },
    "isSourceTopSelected": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.CBASrcContext.selectedModelObjects",
            "$query": {
              "$source": "uid",
              "$query": {
                "$eq": "{{ctx.CBASrcContext.topElement.uid}}"
              }
            }
          },
          {
            "$source": "ctx.CBASrcContext.isRowSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isTargetTopSelected": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.CBATrgContext.selectedModelObjects",
            "$query": {
              "$source": "uid",
              "$query": {
                "$eq": "{{ctx.CBATrgContext.topElement.uid}}"
              }
            }
          },
          {
            "$source": "ctx.CBATrgContext.isRowSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isSingleRowSelectionInOnlySrcIncludePackedLines": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.CBASrcContext.isRowSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.CBATrgContext.isRowSelected",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "ctx.CBASrcContext.selectedModelObjects.length",
            "$query": {
              "$eq": "1"
            }
          },
          {
            "$source": "ctx.CBASrcContext.selectedModelObjects",
            "$query": {
              "$source": "props.pma1IsPartRequired.dbValues",
              "$query": {
                "$in": [
                  "1",
                  "true"
                ]
              }
            }
          }
        ]
      }
    },
    "isSingleRowSelectionInOnlyTrgIncludePackedLines": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.CBASrcContext.isRowSelected",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "ctx.CBATrgContext.isRowSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.CBATrgContext.selectedModelObjects.length",
            "$query": {
              "$eq": "1"
            }
          },
          {
            "$source": "ctx.CBATrgContext.selectedModelObjects",
            "$query": {
              "$source": "props.pma1IsDesignRequired.dbValues",
              "$query": {
                "$in": [
                  "1",
                  "true"
                ]
              }
            }
          }
        ]
      }
    },
    "isTrgSelectionSVProductOcc": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.CBATrgContext.selectedModelObjects",
            "$query": {
              "$source": "props.awb0IsVi.dbValues",
              "$query": {
                "$eq": "1"
              }
            }
          },
          {
            "$source": "ctx.preferences.FND0_PRODUCTEBOMREVISION_TYPES",
            "$query": {
              "$in": "{{ctx.CBATrgContext.selectedModelObjects[0].props.awb0UnderlyingObjectType.dbValues[0]}}"
            }
          }
        ]
      }
    },
    "isOnlySVProductOccInTrgSelection": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.CBASrcContext.isRowSelected",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isTrgSelectionSVProductOcc",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isOnlySourceTopSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isSourceTopSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.CBATrgContext.isRowSelected",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "ctx.CBASrcContext.selectedModelObjects.length",
            "$query": {
              "$eq": "1"
            }
          }
        ]
      }
    },
    "isOnlyTargetTopSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isTargetTopSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.CBASrcContext.isRowSelected",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "ctx.CBATrgContext.selectedModelObjects.length",
            "$query": {
              "$eq": "1"
            }
          }
        ]
      }
    },
    "areOnlySourceAndTargetTopSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isSourceTopSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.CBASrcContext.selectedModelObjects.length",
            "$query": {
              "$eq": "1"
            }
          },
          {
            "$source": "conditions.isTargetTopSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.CBATrgContext.selectedModelObjects.length",
            "$query": {
              "$eq": "1"
            }
          }
        ]
      }
    },
    "isSelectionValidForAccCheck": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isSingleRowSelectionInOnlySrcIncludePackedLines",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isOnlySourceTopSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSingleRowSelectionInOnlyTrgIncludePackedLines",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isOnlyTargetTopSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isRowSelectionInSrcOrTrg",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.areOnlySourceAndTargetTopSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isOnlySVProductOccInTrgSelection",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isRowSelectionInSrcOrTrg": {
      "expression": {
        "$or": [
          {
            "$source": "ctx.CBASrcContext.isRowSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.CBATrgContext.isRowSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isRowSelectionInSrcAndTrg": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.CBASrcContext.isRowSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.CBATrgContext.isRowSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "areMultipleSrcSelected": {
      "expression": {
        "$or": [
          {
            "$source": "ctx.CBASrcContext.selectedModelObjects.length",
            "$query": {
              "$gt": "1"
            }
          },
          {
            "$source": "ctx.CBASrcContext.selectedModelObjects",
            "$query": {
              "$source": "props.awb0IsPacked.dbValues",
              "$query": {
                "$eq": "1"
              }
            }
          }
        ]
      }
    },
    "areMultipleTrgSelected": {
      "expression": {
        "$or": [
          {
            "$source": "ctx.CBATrgContext.selectedModelObjects.length",
            "$query": {
              "$gt": "1"
            }
          },
          {
            "$source": "ctx.CBATrgContext.selectedModelObjects",
            "$query": {
              "$source": "props.awb0IsPacked.dbValues",
              "$query": {
                "$eq": "1"
              }
            }
          }
        ]
      }
    },
    "areMultipleSrcTrgSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.areMultipleSrcSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.areMultipleTrgSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "areMultipleSrcORTrgSelected": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.areMultipleSrcSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.areMultipleTrgSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isOneToManySelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isRowSelectionInSrcAndTrg",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.areMultipleSrcSelected",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.areMultipleTrgSelected",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isManyToOneSelected": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isRowSelectionInSrcAndTrg",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.areMultipleSrcSelected",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.areMultipleTrgSelected",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isPartRequiredOnSrc": {
      "expression": {
        "$source": "ctx.CBASrcContext.selectedModelObjects",
        "$query": {
          "$and": [
            {
              "$source": "props.pma1IsPartRequired",
              "$query": {
                "$notNull": true
              }
            },
            {
              "$source": "props.pma1IsPartRequired.dbValues",
              "$query": {
                "$in": [
                  "1",
                  "true"
                ]
              }
            }
          ]
        }
      }
    },
    "isPartRequiredOnTrg": {
      "expression": {
        "$source": "ctx.CBATrgContext.selectedModelObjects",
        "$query": {
          "$and": [
            {
              "$source": "props.pma1IsPartRequired",
              "$query": {
                "$notNull": true
              }
            },
            {
              "$source": "props.pma1IsPartRequired.dbValues",
              "$query": {
                "$in": [
                  "1",
                  "true"
                ]
              }
            }
          ]
        }
      }
    },
    "isDesignRequiredSrc": {
      "expression": {
        "$source": "ctx.CBASrcContext.selectedModelObjects",
        "$query": {
          "$and": [
            {
              "$source": "props.pma1IsDesignRequired",
              "$query": {
                "$notNull": true
              }
            },
            {
              "$source": "props.pma1IsDesignRequired.dbValues",
              "$query": {
                "$in": [
                  "1",
                  "true"
                ]
              }
            }
          ]
        }
      }
    },
    "isDesignRequiredTrg": {
      "expression": {
        "$source": "ctx.CBATrgContext.selectedModelObjects",
        "$query": {
          "$and": [
            {
              "$source": "props.pma1IsDesignRequired",
              "$query": {
                "$notNull": true
              }
            },
            {
              "$source": "props.pma1IsDesignRequired.dbValues",
              "$query": {
                "$in": [
                  "1",
                  "true"
                ]
              }
            }
          ]
        }
      }
    },
    "isDesignOrPartRequiredSrc": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isPartRequiredOnSrc",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isDesignRequiredSrc",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isDesignOrPartRequiredTrg": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isDesignRequiredTrg",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isPartRequiredOnTrg",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isDesignOrPartNotRequired": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.isDesignOrPartRequiredSrc",
            "$query": {
              "$eq": false
            }
          },
          {
            "$and": [
              {
                "$source": "conditions.isTrgTopSelectedWithNoRowCheck",
                "$query": {
                  "$eq": false
                }
              },
              {
                "$source": "conditions.isDesignOrPartRequiredTrg",
                "$query": {
                  "$eq": false
                }
              }
            ]
          }
        ]
      }
    },
    "isDesOrPrtReqOrIsTrgProductAndSelectionConfigured": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isUnconfiguredSrcOrTrgLineSelected",
            "$query": {
              "$eq": false
            }
          },
          {
            "$or": [
              {
                "$source": "conditions.isDesignOrPartNotRequiredForTop",
                "$query": {
                  "$eq": false
                }
              },
              {
                "$source": "ctx.preferences.FND0_PRODUCTEBOMREVISION_TYPES",
                "$query": {
                  "$in": "{{ctx.cbaContext.trgStructure.type}}"
                }
              }
            ]
          }
        ]
      }
    },
    "isDesignOrPartNotRequiredForTop": {
      "expression": {
        "$or": [
          {
            "$source": "ctx.CBASrcContext.topElement.props.pma1IsDesignRequired.dbValues[0]",
            "$query": {
              "$in": [
                "0",
                "false"
              ]
            }
          },
          {
            "$source": "ctx.CBASrcContext.topElement.props.pma1IsPartRequired.dbValues[0]",
            "$query": {
              "$in": [
                "0",
                "false"
              ]
            }
          },
          {
            "$source": "ctx.CBATrgContext.topElement.props.pma1IsDesignRequired.dbValues[0]",
            "$query": {
              "$in": [
                "0",
                "false"
              ]
            }
          },
          {
            "$source": "ctx.CBATrgContext.topElement.props.pma1IsPartRequired.dbValues[0]",
            "$query": {
              "$in": [
                "0",
                "false"
              ]
            }
          }
        ]
      }
    },
    "isUnconfiguredSrcOrTrgLineSelected": {
      "expression": {
        "$or": [
          {
            "$source": "ctx.CBASrcContext.selectedModelObjects",
            "$query": {
              "$source": "props.awb0Archetype.dbValues[0]",
              "$query": {
                "$isNull": true
              }
            }
          },
          {
            "$source": "ctx.CBATrgContext.selectedModelObjects",
            "$query": {
              "$source": "props.awb0Archetype.dbValues[0]",
              "$query": {
                "$isNull": true
              }
            }
          }
        ]
      }
    },
    "isAlignCommandAvailableForTop": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isEntCBASubLocation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.cadbomalignment.commands.isAlignCmdForTopVisible",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isNotInGuidedMode",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isUnalignCommandAvailableForTop": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isEntCBASubLocation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.cadbomalignment.commands.isUnalignCmdForTopVisible",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isNotInGuidedMode",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isNotInGuidedMode": {
      "expression": "ctx.cbaContext && !ctx.cadbomalignment.ImpactAnalysis.isImpactAnalysisMode"
    },
    "AlignCommandCondition": {
      "expression": "ctx.cadbomalignment.commands.isAlignCmdVisible===true"
    },
    "UnAlignCommandCondition": {
      "expression": "ctx.cadbomalignment.commands.isUnAlignCmdVisible===true"
    },
    "isTrgTopSelectedWithNoRowCheck": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.CBATrgContext.selectedModelObjects",
            "$query": {
              "$source": "uid",
              "$query": {
                "$eq": "{{ctx.CBATrgContext.topElement.uid}}"
              }
            }
          }
        ]
      }
    },
    "treeLoadingInProgress": {
      "expression": {
        "$or": [
          {
            "$source": "ctx.CBASrcContext.treeLoadingInProgress",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.CBATrgContext.treeLoadingInProgress",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "AlignmentCheckCommandCondition": {
      "expression": "ctx.cadbomalignment.commands.isAlignmentCheckCmdVisible===true"
    },
    "DeselectAllCommandCondition": {
      "expression": "ctx.cadbomalignment.commands.isDeselectAllCmdVisible===true"
    },
    "isAlignGroupCmdVisible": {
      "expression": "conditions.isOccurrenceManagementSubLocation && !ctx.splitView && conditions.EntCBALaunchAlignTaskCommandCondition"
    },
    "isPlatformVersionAtleast133": {
      "expression": {
        "$or": [
          {
            "$source": "ctx.tcSessionData.tcMajorVersion",
            "$query": {
              "$gt": 13
            }
          },
          {
            "$and": [
              {
                "$source": "ctx.tcSessionData.tcMajorVersion",
                "$query": {
                  "$gte": 13
                }
              },
              {
                "$source": "ctx.tcSessionData.tcMinorVersion",
                "$query": {
                  "$gte": 3
                }
              }
            ]
          }
        ]
      }
    },
    "FindAlignedCommandCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isPlatformVersionAtleast133",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.areMultipleStructureInCBA",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.occContext.selectedModelObjects.length",
            "$query": {
              "$eq": "1"
            }
          },
          {
            "$source": "commandContext.occContext.selectedModelObjects[0]",
            "$query": {
              "$source": "uid",
              "$query": {
                "$neq": "{{commandContext.occContext.topElement.uid}}"
              }
            }
          },
          {
            "$or": [
              {
                "$source": "commandContext.occContext.selectedModelObjects[0].props.pma1IsDesignRequired.dbValues[0]",
                "$query": {
                  "$in": [
                    "1",
                    "true"
                  ]
                }
              },
              {
                "$source": "commandContext.occContext.selectedModelObjects[0].props.pma1IsPartRequired.dbValues[0]",
                "$query": {
                  "$in": [
                    "1",
                    "true"
                  ]
                }
              },
              {
                "$source": "conditions.isTrgSelectionSVProductOcc",
                "$query": {
                  "$eq": true
                }
              }
            ]
          },
          {
            "$source": "commandContext.occContext.selectedModelObjects[0]",
            "$query": {
              "$source": "uid",
              "$query": {
                "$notin": "{{ctx.cbaContext.alignmentCheckContext.alignmentCheckInfo.unalignedUIDs}}"
              }
            }
          }
        ]
      }
    },
    "isFnd0AlignedElementSelected": {
      "expression": {
        "$source": "ctx.mselected",
        "$query": {
          "$source": "type",
          "$query": {
            "$in": [
              "Fnd0AlignedDesign",
              "Fnd0AlignedPart"
            ]
          }
        }
      }
    },
    "IsInAdminWorkspace": {
      "expression": "ctx.sublocation.nameToken === 'com.siemens.splm.client.revruleadmin.revRuleAdmin'"
    },
    "isRevisionRulePanelLaunched": {
      "expression": "ctx.sidenavCommandId === 'RevisionRuleAdminMainPanel' || ctx.RevisionRuleAdmin.closeHandlerToBeActivated"
    },
    "Awp0RevisionRuleAdminAddCommandConditionActive": {
      "expression": "conditions.IsInAdminWorkspace"
    },
    "RevisionRuleAdminDeleteCommandEnable": {
      "expression": "ctx.mselected.length>0"
    },
    "CheckIfNotASeparatorObject": {
      "expression": "ctx.aceActiveContext && commandContext.vmo.uid !== 'separatorObject'"
    },
    "RevisionRuleAdminCommandConditionActive": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.CheckIfNotASeparatorObject",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": {
              "$adapt": "commandContext.context.occContext.topElement"
            },
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "ItemRevision"
                ]
              }
            }
          },
          {
            "$source": "commandContext.context.occContext.supportedFeatures",
            "$query": {
              "$source": "Awb0RevisionRuleInformationFeature",
              "$query": {
                "$eq": true
              }
            }
          }
        ]
      }
    },
    "RevisionRuleClauseAddCommandEnable": {
      "expression": "conditions.IsRevisionRuleModifiable &&  !conditions.IsExactlySameClauseWarningPresent"
    },
    "RevisionRuleClauseLatestForRevOcc": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.dataProviders.getRevisionRuleInfoProvider.viewModelCollection.totalFound",
            "$query": {
              "$eq": 4
            }
          },
          {
            "$all": {
              "$source": "commandContext.dataProviders.getRevisionRuleInfoProvider.viewModelCollection.loadedVMObjects",
              "$query": {
                "$source": "entryType",
                "$query": {
                  "$eq": 3
                }
              }
            }
          },
          {
            "$all": {
              "$source": "commandContext.dataProviders.getRevisionRuleInfoProvider.viewModelCollection.loadedVMObjects",
              "$query": {
                "$source": "entryType",
                "$query": {
                  "$eq": 4
                }
              }
            }
          },
          {
            "$all": {
              "$source": "commandContext.dataProviders.getRevisionRuleInfoProvider.viewModelCollection.loadedVMObjects",
              "$query": {
                "$source": "entryType",
                "$query": {
                  "$eq": 7
                }
              }
            }
          },
          {
            "$all": {
              "$source": "commandContext.dataProviders.getRevisionRuleInfoProvider.viewModelCollection.loadedVMObjects",
              "$query": {
                "$source": "entryType",
                "$query": {
                  "$eq": 8
                }
              }
            }
          }
        ]
      }
    },
    "RevisionRuleClauseAddCommandEnableForRevOcc": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.RevisionRuleClauseLatestForRevOcc",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.RevisionRuleClauseAddCommandEnable",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isRevisableOccurrenceStruct": {
      "expression": "ctx.aceActiveContext.context.supportedFeatures.Awb0RevisibleOccurrenceFeature === true"
    },
    "RevisionRuleClauseDeleteCommandEnable": {
      "expression": "conditions.IsRevisionRuleClauseSelected && conditions.IsRevisionRuleModifiable && commandContext.dataProviders.getRevisionRuleInfoProvider.viewModelCollection.loadedVMObjects.length > 1"
    },
    "RevisionRuleClauseUpCommandEnable": {
      "expression": "conditions.IsRevisionRuleClauseSelected && commandContext.dataProviders.getRevisionRuleInfoProvider.selectedObjects[0] !== commandContext.dataProviders.getRevisionRuleInfoProvider.viewModelCollection.loadedVMObjects[0] && conditions.IsRevisionRuleModifiable &&  !conditions.IsExactlySameClauseWarningPresent"
    },
    "RevisionRuleClauseDownCommandEnable": {
      "expression": "conditions.IsRevisionRuleClauseSelected && commandContext.dataProviders.getRevisionRuleInfoProvider.selectedObjects[0] !== commandContext.dataProviders.getRevisionRuleInfoProvider.viewModelCollection.loadedVMObjects.slice(-1)[0] && conditions.IsRevisionRuleModifiable &&  !conditions.IsExactlySameClauseWarningPresent"
    },
    "IsExactlySameClauseWarningPresent": {
      "expression": "commandContext.nestedNavigationState.exactlySameClauseWarning === true"
    },
    "IsRevisionRuleModifiable": {
      "expression": "ctx.aceActiveContext || (conditions.IsInAdminWorkspace && ctx.RevisionRuleAdmin.currentlySelectedRevisionRule.props.is_modifiable.dbValue)"
    },
    "IsRevisionRuleClauseSelected": {
      "expression": "commandContext.dataProviders.getRevisionRuleInfoProvider.selectedObjects.length > 0"
    },
    "IsRevisionRuleClausePropertyPresent": {
      "expression": "ctx.RevisionRuleAdmin.currentlySelectedClauseProperty !== undefined"
    },
    "IsAddRevisionRuleClausePropertyPresent": {
      "expression": "ctx.RevisionRuleAdmin.addClause_currentlySelectedClauseProperty !== undefined"
    },
    "isRemoveReplacePropActive": {
      "expression": "conditions.IsRevisionRuleClausePropertyPresent && conditions.isRevisionRuleEditable"
    },
    "ClausePropertyAddCommandActive": {
      "expression": "conditions.IsRevisionRuleClausePropertyPresent === false && conditions.isRevisionRuleEditable"
    },
    "AddClausePropertyCommandActive": {
      "expression": "conditions.IsAddRevisionRuleClausePropertyPresent === false"
    },
    "isRevisionRuleEditable": {
      "expression": "conditions.isTcReleaseAtLeast123 && conditions.isBranchClauseNotPresent"
    },
    "isTcReleaseAtLeast123": {
      "expression": "(ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion >= 3) || ctx.tcSessionData.tcMajorVersion > 12"
    },
    "isBranchClauseNotPresent": {
      "expression": "ctx.RevisionRuleAdmin.isBranchClausePresent !== undefined && ctx.RevisionRuleAdmin.isBranchClausePresent === false"
    },
    "isFilterNotApplied": {
      "expression": "!(commandContext.occContext.productContextInfo.props.awb0FilterCount.dbValues[0]>0)"
    },
    "isSplitEnableInAutoPartitionMode": {
      "expression": "conditions.isSeparatePossible && ctx.visibleServerCommands.Awb0InsertParentElement"
    },
    "isRemoveActiveForPartitionLineEnabled": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isRemoveActiveForPartitionLine",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isFilterNotApplied",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTypeFnd0AppSession",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isRemoveActiveForPartitionLine": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.occContext.selectedModelObjects[0]",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Fgf0PartitionElement"
                ]
              }
            }
          },
          {
            "$source": "commandContext.occContext.supportedFeatures.Fgf0OrganizationSchemeFeature",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.occContext.supportedFeatures.Fgf0OrganizationSchemeFeature",
            "$query": {
              "$ne": "undefined"
            }
          }
        ]
      }
    },
    "isAtleastOnePartitionElementSelectedForStructurePartition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isOccurrenceManagementSubLocation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "commandContext.occContext.selectedModelObjects",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Fgf0PartitionElement"
                ]
              }
            }
          },
          {
            "$source": "conditions.is4GD",
            "$query": {
              "$ne": true
            }
          }
        ]
      }
    },
    "strPartitionElemEffectivitySupported": {
      "expression": "conditions.isAwb0ExpressionEffectivityNotVisible && conditions.isPartitionLineSelected"
    },
    "isStrPartitionDuplicateSupported": {
      "expression": "conditions.isAwb0DuplicateVisible && conditions.isSchemeAppliedAndNot4GD"
    },
    "isStrPartitionRollupSupported": {
      "expression": "conditions.isTCServerVersion141OrEarlier && conditions.isSchemeAppliedAndNot4GD"
    },
    "enableImportBOMCommandForPartition": {
      "expression": "conditions.enableImportBOMCommand && conditions.isSchemeAppliedForActiveCtx && !conditions.is4GD"
    },
    "isSchemeAppliedForActiveCtx": {
      "expression": "commandContext.occContext.productContextInfo.props.fgf0PartitionScheme.isNulls === undefined && commandContext.occContext.productContextInfo.props.fgf0PartitionScheme.dbValues.length >0 "
    },
    "isSchemeAppliedinAtleastOneView": {
      "expression": "ctx.splitView.mode && ((ctx[ctx.splitView.viewKeys[0]].productContextInfo.props.fgf0PartitionScheme.isNulls === undefined && ctx[ctx.splitView.viewKeys[0]].productContextInfo.props.fgf0PartitionScheme.dbValues.length >0) || (ctx[ctx.splitView.viewKeys[1]].productContextInfo.props.fgf0PartitionScheme.isNulls === undefined && ctx[ctx.splitView.viewKeys[1]].productContextInfo.props.fgf0PartitionScheme.dbValues.length >0))"
    },
    "isCompareApplicableInPartition": {
      "expression": "conditions.isSchemeAppliedinAtleastOneView && !conditions.is4GD"
    },
    "isStrPartitionSetInContextSupported": {
      "expression": "conditions.isSetInContextCmdVisible && conditions.isPartitionLineSelected"
    },
    "isStrPartitionSetInContextSupportedOnCtx": {
      "expression": "conditions.isSetInContextCmdVisible && conditions.isPartitionLineSelected"
    },
    "isOragnizationSchemeFeaturePresent": {
      "expression": "commandContext.occContext.supportedFeatures.Fgf0OrganizationSchemeFeature === true && commandContext.occContext.supportedFeatures.Fgf0OrganizationSchemeFeature !== undefined"
    },
    "isSchemeApplied": {
      "expression": "commandContext.occContext.productContextInfo.props.fgf0PartitionScheme.isNulls === undefined && commandContext.occContext.productContextInfo.props.fgf0PartitionScheme.dbValues.length >0 "
    },
    "isSchemeAppliedConditionInFindPanel": {
      "expression": "commandContext.preFilterContext.occContext.productContextInfo.props.fgf0PartitionScheme.isNulls === undefined && commandContext.preFilterContext.occContext.productContextInfo.props.fgf0PartitionScheme.uiValues[0] !== '' "
    },
    "isAddPartitionCommandEnabled": {
      "expression": "ctx.visibleServerCommands.Awb0AddChildElement && conditions.isFilterNotApplied && !conditions.isWorksetSelected && !commandContext.occContext.currentState.pci_uid.includes( 'UM:1' )"
    },
    "isAddPartitionCommandVisible": {
      "expression": {
        "$and": [
          {
            "$or": [
              {
                "$source": "conditions.isTopBomLineSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isPartitionLineSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isSubsetUnderWorksetSelected",
                "$query": {
                  "$eq": true
                }
              }
            ]
          },
          {
            "$source": "conditions.isOragnizationSchemeFeaturePresent",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isOccurrenceManagementSubLocation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSchemeApplied",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isTypeFnd0AppSession",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "isDeletePartitionCommandVisible": {
      "expression": "ctx.visibleServerCommands.Fgf0DeleteCmd && !conditions.isTypeFnd0AppSession"
    },
    "isDeletePartitionCommandVisibleEnabled": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isDeletePartitionCommandVisible",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isFilterNotApplied",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.areAllObjectsPartitions",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "is4GD": {
      "expression": "commandContext.occContext.supportedFeatures.4GStructureFeature === true"
    },
    "isSchemeAppliedAndNot4GD": {
      "expression": "conditions.isSchemeApplied && !conditions.is4GD"
    },
    "isAddChildApplicableInContextOfPartitionScheme": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isOragnizationSchemeFeaturePresent",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isOccurrenceManagementSubLocation",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isSchemeApplied",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$and": [
                  {
                    "$source": "conditions.isTopBomLineSelected",
                    "$query": {
                      "$eq": true
                    }
                  },
                  {
                    "$source": "conditions.isWorksetSelected",
                    "$query": {
                      "$eq": false
                    }
                  }
                ]
              },
              {
                "$source": "conditions.isSubsetUnderWorksetSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isTopBomLineInSessionSelected",
                "$query": {
                  "$eq": true
                }
              }
            ]
          }
        ]
      }
    },
    "isAddSiblingApplicableInContextOfPartitionScheme": {
      "expression": "conditions.isCurrentParentIsTopLine && conditions.isOragnizationSchemeFeaturePresent && conditions.isOccurrenceManagementSubLocation && conditions.isSchemeApplied && !conditions.isSubsetUnderWorksetSelected"
    },
    "isCurrentParentIsTopLine": {
      "expression": "commandContext.occContext.selectedModelObjects && commandContext.occContext.selectedModelObjects.length === 1 && commandContext.occContext.selectedModelObjects[0].props.awb0Parent.dbValues[ 0 ] === commandContext.occContext.topElement.uid"
    },
    "canUnassignPtnMember": {
      "expression": "ctx.visibleServerCommands.Fgf0UnassignPtnMember"
    },
    "canUnassignPtnMemberEnabled": {
      "expression": "conditions.canUnassignPtnMember && conditions.isFilterNotApplied"
    },
    "isTopBomLineSelected": {
      "expression": "commandContext.occContext.selectedModelObjects && commandContext.occContext.selectedModelObjects.length === 1 &&  commandContext.occContext.selectedModelObjects[0].uid === commandContext.occContext.currentState.t_uid"
    },
    "isTopBomLineInSessionSelected": {
      "expression": "commandContext.occContext.selectedModelObjects && commandContext.occContext.selectedModelObjects.length === 1 && commandContext.occContext.selectedModelObjects[0].props.awb0Parent.isNulls[0] === true && commandContext.occContext.currentState.t_uid === commandContext.occContext.topElement.uid"
    },
    "isPartitionLineSelected": {
      "expression": "commandContext.occContext.selectedModelObjects && commandContext.occContext.selectedModelObjects.length === 1 && commandContext.occContext.selectedModelObjects[0].modelType.typeHierarchyArray.indexOf('Fgf0PartitionElement') > -1"
    },
    "isPartitionGroupVisible": {
      "expression": "conditions.isOragnizationSchemeFeaturePresent && conditions.isOccurrenceManagementSubLocation && conditions.isSchemeApplied && conditions.isTCServerVersion132OrLater"
    },
    "isUnassignedCmdVisible": {
      "expression": "conditions.isPartitionGroupVisible && !conditions.is4GD && !conditions.isTypeFnd0AppSession && !conditions.isAutoPartitionUpdateScheme"
    },
    "isUnassignedCmdEnable": {
      "expression": "conditions.isPartitionGroupVisible && !conditions.is4GD && !conditions.isTypeFnd0AppSession && !conditions.isAutoPartitionUpdateScheme && conditions.isTypeNotFnd0Workset && !(ctx.splitView && ctx.splitView.mode && !conditions.isInUnassignedMode)"
    },
    "isAutoPartitionUpdateScheme": {
      "expression": "commandContext.occContext.supportedFeatures.Fgf0AutoPartitionSchemeFeature"
    },
    "tcVersionCondition13": {
      "expression": "ctx.tcSessionData.tcMajorVersion > 12"
    },
    "isInUnassignedMode": {
      "expression": "ctx.splitView && ctx.splitView.mode && ctx.occmgmtContext2.currentState.pci_uid.includes( 'UM:1' )"
    },
    "isSplitCmdVisibleAndUnassignedMode": {
      "expression": "conditions.isSplitCommandVisible && conditions.isInUnassignedMode"
    },
    "isStructureFilterEnable": {
      "expression": "conditions.isStructureFilterSupported && conditions.isSchemeApplied && commandContext.occContext.supportedFeatures.Awb0EnableSmartDiscoveryFeature === true"
    },
    "fgf0CreatePartitionSchemeCmdVisibility": {
      "expression": "ctx.visibleServerCommands.Fgf0Organization && !conditions.isTypeFnd0AppSession && conditions.isTypeNotFnd0Workset && conditions.isTCServerVersion132OrLater"
    },
    "fgf0CreatePartitionSchemeCmdEnable": {
      "expression": "conditions.fgf0CreatePartitionSchemeCmdVisibility && !(commandContext.occContext.productContextInfo.props.awb0FilterCount.dbValues[0]>0)"
    },
    "isPartitionObjectPresentInClipBoard": {
      "expression": "ctx.awClipBoardProvider[0].type === 'Fgf0PartitionElement'"
    },
    "isSrcObjIsPartitionAndTargetObjIsBomLine": {
      "expression": "conditions.isPartitionObjectPresentInClipBoard && commandContext.occContext.selectedModelObjects[0].modelType.typeHierarchyArray.indexOf( 'Awb0PositionedElement' ) > -1"
    },
    "isSrcObjAndTargetObjArePartition": {
      "expression": "conditions.isPartitionObjectPresentInClipBoard && commandContext.occContext.selectedModelObjects[0].type === 'Fgf0PartitionElement'"
    },
    "isCutOperationForPartition": {
      "expression": "ctx.cutIntent !== undefined && ctx.cutIntent === true && conditions.isPartitionObjectPresentInClipBoard"
    },
    "partitionPasteVisibleCondition2": {
      "expression": "conditions.isOccurrenceManagementSubLocation && !conditions.is4GD && (conditions.isSchemeApplied || conditions.isWorksetSelected)"
    },
    "partitionPasteVisibleCondition": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isPartitionPresentInClipboardObjects",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.partitionPasteVisibleCondition2",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isPartitionPresentInClipBoard": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.awClipBoardProvider",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Fgf0PartitionElement"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "isPartitionAbsentInSelections": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.occContext.selectedModelObjects",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$notin": [
                    "Fgf0PartitionElement"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "areAllObjectsPartitions": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.occContext.selectedModelObjects",
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Fgf0PartitionElement"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "isMoveToCommandVisible": {
      "expression": "conditions.isSchemeAppliedAndNot4GD && conditions.isAddPartitionCommandEnabled && conditions.isCutOperationForPartition && (conditions.isTopBomLineSelected || conditions.isSubsetUnderWorksetSelected || conditions.isSrcObjAndTargetObjArePartition) && conditions.isTCServerVersion142OrLater"
    },
    "isMoveToCommandEnable": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isMoveToCommandVisible",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isPartitionPresentInClipBoard",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "isTCServerVersion142OrLater": {
      "expression": "ctx.tcSessionData.tcMajorVersion > 14 || (ctx.tcSessionData.tcMajorVersion === 14 && ctx.tcSessionData.tcMinorVersion >= 2)"
    },
    "isTCServerVersion141OrEarlier": {
      "expression": "ctx.tcSessionData.tcMajorVersion < 14 || (ctx.tcSessionData.tcMajorVersion === 14 && ctx.tcSessionData.tcMinorVersion < 2)"
    },
    "awb0CutCommandActiveInSchemeOverlaid": {
      "expression": "conditions.awb0CutCommandActive && conditions.isSchemeAppliedAndNot4GD"
    },
    "aceCutEnableInSchemeOverlaidCondition": {
      "expression": "!conditions.isAltsSubsProvider && !conditions.isWhereUsedContextProvider && !conditions.isMarkupEnabled && !conditions.isRedLineMode && !conditions.isSolutionVariantProvider"
    },
    "isPartitionPresentInSelectedObjects": {
      "expression": {
        "$source": "commandContext.occContext.selectedModelObjects",
        "$query": {
          "$source": "modelType.typeHierarchyArray",
          "$query": {
            "$in": [
              "Fgf0PartitionElement"
            ]
          }
        }
      }
    },
    "isPartitionPresentInClipboardObjects": {
      "expression": {
        "$source": "ctx.awClipBoardProvider",
        "$query": {
          "$source": "modelType.typeHierarchyArray",
          "$query": {
            "$in": [
              "Fgf0PartitionElement"
            ]
          }
        }
      }
    },
    "isSchemeOverlaidAndPartitionSelected": {
      "expression": "conditions.isSchemeAppliedAndNot4GD && conditions.isPartitionPresentInSelectedObjects"
    },
    "isRemoveCommandSupportedInSchemeOverlayMode": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isRemoveCommandSupported",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isPartitionAbsentInSelections",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    }
  },
  "functions": {
    "populateEditEffectivityProperties": {
      "functionName": "populateEditEffectivityProperties",
      "parameters": []
    },
    "getSeperateQuantityAndPrepareAddInput": {
      "functionName": "getSeperateQuantityAndPrepareAddInput",
      "parameters": []
    },
    "getNewChildElements": {
      "functionName": "getNewlyAddedChildElements",
      "parameters": [
        "{{data}}"
      ]
    },
    "getTotalNumberOfChildrenAdded": {
      "functionName": "getTotalNumberOfChildrenAdded",
      "parameters": [
        "{{data}}"
      ]
    },
    "getRequestPrefValue": {
      "functionName": "getRequestPrefValue",
      "parameters": [
        "{{commandContext.occContext}}"
      ]
    },
    "getTreeOrListDisplayMode": {
      "functionName": "getTreeOrListDisplayMode",
      "parameters": []
    },
    "adaptedRelatedModifiedRemoveOverrideInput": {
      "functionName": "adaptedRelatedModifiedInput",
      "parameters": []
    },
    "getSecondaryObjects": {
      "functionName": "getSecondaryObjects",
      "parameters": []
    },
    "setSourceAndTargetElements": {
      "functionName": "setSourceAndTargetElements",
      "parameters": [
        "{{data}}"
      ]
    },
    "populateInsertLevelInputInformation": {
      "functionName": "populateInsertLevelInputInformation",
      "parameters": [
        "{{commandContext.occContext}}"
      ]
    },
    "extractAllowedTypesInfoFromResponse": {
      "functionName": "extractAllowedTypesInfoFromResponse",
      "parameters": []
    },
    "getRemoveElements2Input": {
      "functionName": "getRemoveElements2Input",
      "parameters": [
        "{{commandContext}}"
      ]
    },
    "getSelections": {
      "functionName": "getSelections",
      "parameters": [
        "{{commandContext}}"
      ]
    },
    "getSelectedUids": {
      "functionName": "getSelectedUids",
      "parameters": [
        "{{commandContext}}"
      ]
    },
    "getObjectFromUid": {
      "functionName": "getObject",
      "parameters": [
        "{{data.plain[0]}}"
      ]
    },
    "getPciForFirstSelection": {
      "functionName": "getProductContextForProvidedObject",
      "parameters": [
        "{{ctx.mselected[0]}}"
      ]
    },
    "getPciForSecondSelection": {
      "functionName": "getProductContextForProvidedObject",
      "parameters": [
        "{{ctx.mselected[1]}}"
      ]
    },
    "getInactiveViewKey": {
      "functionName": "getInactiveViewKey",
      "parameters": []
    },
    "getWorkContextObject": {
      "functionName": "getObject",
      "parameters": [
        "{{ctx.aceActiveContext.context.workingContextObj.uid}}"
      ]
    },
    "getSelectedObjectUids": {
      "functionName": "getSelectedObjectUids",
      "parameters": [
        "{{commandContext.occContext.selectedModelObjects}}"
      ]
    },
    "getRemoveInput": {
      "functionName": "getRemoveInput",
      "parameters": [
        "{{data}}",
        "{{commandContext.occContext}}"
      ]
    },
    "getRemovePartInput": {
      "functionName": "getRemovePartInput",
      "parameters": [
        "{{data}}",
        "true",
        "{{commandContext.occContext}}"
      ]
    },
    "getSetPrimaryInput": {
      "functionName": "getSetPrimaryInput",
      "parameters": [
        "{{data}}",
        "{{commandContext.occContext}}"
      ]
    },
    "getOccAlignmentInput": {
      "functionName": "getOccAlignmentInput",
      "parameters": []
    },
    "getTopAlignmentInput": {
      "functionName": "getTopAlignmentInput",
      "parameters": [
        "{{ctx.cbaContext.trgStructure}}",
        "{{ctx.cbaContext.srcStructure}}"
      ]
    },
    "getOccUnAlignmentInput": {
      "functionName": "getOccUnAlignmentInput",
      "parameters": []
    },
    "getUnAlignmentConfirmationInput": {
      "functionName": "getUnAlignmentConfirmationInput",
      "parameters": []
    },
    "getRefreshObjectsInput": {
      "functionName": "getRefreshObjectsInput",
      "parameters": [
        "{{data.eventMap['cba.refreshObjects'].primarySelection}}",
        "{{data.eventMap['cba.refreshObjects'].secondarySelection}}"
      ]
    },
    "getAffectedObjectUIDPostPartCADAlignmentUpdate": {
      "functionName": "getAffectedObjectUIDPostPartCADAlignmentUpdate",
      "parameters": [
        "{{data.eventMap['cba.reExecuteAlignmentCheck'].contextName}}",
        "{{data.eventMap['cba.reExecuteAlignmentCheck'].secondarySelection}}",
        "{{data.eventMap['cba.reExecuteAlignmentCheck'].isTopAlignment}}"
      ]
    },
    "getPasteInput": {
      "functionName": "getPasteInput",
      "parameters": [
        "{{data}}",
        "{{commandContext.occContext}}",
        "{{ctx.awClipBoardProvider}}"
      ]
    }
  },
  "i18n": {
    "addElementBtn": [
      "OccurrenceManagementConstants",
      "OccmgmtRevOccConstants",
      "OccurrenceManagementConstants"
    ],
    "addSibling": [
      "OccurrenceManagementConstants"
    ],
    "replaceElementBtn": [
      "OccurrenceManagementConstants"
    ],
    "saveAsAndReplace": [
      "OccurrenceManagementConstants"
    ],
    "addChild": [
      "OccurrenceManagementConstants"
    ],
    "restructure": [
      "OccurrenceManagementConstants"
    ],
    "effectivity": [
      "OccurrenceManagementConstants"
    ],
    "effectivityTitle": [
      "OccurrenceManagementConstants"
    ],
    "elementEffectivityTitle": [
      "OccurrenceManagementConstants"
    ],
    "occmgmtConfigurationFilterTitle": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ExpandGroupDesc": [
      "OccurrenceManagementConstants"
    ],
    "filter": [
      "OccurrenceManagementConstants"
    ],
    "saveWorkingContextTitle": [
      "OccurrenceManagementConstants"
    ],
    "workingContextTitle": [
      "OccurrenceManagementConstants"
    ],
    "saveAsWorkingContextTitle": [
      "OccurrenceManagementConstants"
    ],
    "saveButtonText": [
      "OccurrenceManagementConstants"
    ],
    "saveAsButtonText": [
      "OccurrenceManagementConstants"
    ],
    "reset": [
      "OccurrenceManagementConstants"
    ],
    "resetCmdTitle": [
      "OccurrenceManagementConstants"
    ],
    "find": [
      "OccurrenceManagementConstants"
    ],
    "removeSingleConfirmation": [
      "OccurrenceManagementMessages"
    ],
    "removeSingleLevelConfirmation": [
      "OccurrenceManagementMessages"
    ],
    "removeMultipleConfirmation": [
      "OccurrenceManagementMessages"
    ],
    "removeFailure": [
      "OccurrenceManagementMessages",
      "OccurrenceManagementMessages"
    ],
    "removeLevelSuccessful": [
      "OccurrenceManagementMessages"
    ],
    "cancelMarkupFailureMsg": [
      "OccurrenceManagementMessages"
    ],
    "aw_navigate": [
      "OccurrenceManagementMessages"
    ],
    "occmgmt_cell_commands": [
      "OccurrenceManagementMessages"
    ],
    "occmgmt_breadcrumb_cell_commands": [
      "OccurrenceManagementMessages"
    ],
    "removeSuccessMsg": [
      "OccurrenceManagementMessages",
      "OccurrenceManagementMessages"
    ],
    "awb0_displayAndRemoveEffectivityForRelnStatus": [
      "OccurrenceManagementMessages"
    ],
    "awb0_commandGroupEffectivities": [
      "OccurrenceManagementMessages"
    ],
    "awb0_commandDisplayAndRemoveEffectivity": [
      "OccurrenceManagementMessages"
    ],
    "awb0_variantCommands": [
      "OccurrenceManagementMessages"
    ],
    "Awb0MarkupAtLevelAnchor": [
      "OccurrenceManagementMessages"
    ],
    "Awb0MarkupAtElementAnchor": [
      "OccurrenceManagementMessages"
    ],
    "occurrenceManagementShowChildOccurrencesTitle": [
      "OccurrenceManagementConstants"
    ],
    "resetConfirmation": [
      "OccurrenceManagementMessages"
    ],
    "resetConfirmationOutsideSWC": [
      "OccurrenceManagementMessages"
    ],
    "awb0_oneStepPinCommands": [
      "OccurrenceManagementMessages"
    ],
    "aw_ICS": [
      "OccurrenceManagementMessages"
    ],
    "aw_toolsAndInfo": [
      "OccurrenceManagementMessages"
    ],
    "clearAllConfirmation": [
      "OccurrenceManagementMessages"
    ],
    "clearEff": [
      "OccurrenceManagementConstants"
    ],
    "clear": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ClearEffCommandDesc": [
      "OccurrenceManagementConstants"
    ],
    "selectAll": [
      "OccurrenceManagementConstants"
    ],
    "clearAll": [
      "OccurrenceManagementConstants"
    ],
    "cancel": [
      "OccurrenceManagementConstants",
      "OccurrenceManagementConstants"
    ],
    "occMgmtTitle": [
      "OccurrenceManagementConstants"
    ],
    "awb0PinButtonToolTip": [
      "OccurrenceManagementConstants"
    ],
    "awb0UnpinButtonToolTip": [
      "OccurrenceManagementConstants"
    ],
    "addEffectivities": [
      "OccurrenceManagementConstants"
    ],
    "aceRemove": [
      "OccurrenceManagementConstants",
      "OccurrenceManagementConstants"
    ],
    "aceRemoveLevel": [
      "OccurrenceManagementConstants"
    ],
    "removeElementTitle": [
      "OccurrenceManagementConstants"
    ],
    "addSubstitute": [
      "OccurrenceManagementConstants"
    ],
    "addSubstitutePWA": [
      "OccurrenceManagementConstants"
    ],
    "insertLevel": [
      "OccurrenceManagementConstants"
    ],
    "cutSubstitute": [
      "OccurrenceManagementConstants"
    ],
    "useSubstitute": [
      "OccurrenceManagementConstants"
    ],
    "markup": [
      "OccurrenceManagementConstants"
    ],
    "showExcluded": [
      "OccurrenceManagementConstants"
    ],
    "showExcludedByVariants": [
      "OccurrenceManagementConstants"
    ],
    "showSuppressed": [
      "OccurrenceManagementConstants"
    ],
    "expand": [
      "OccurrenceManagementConstants"
    ],
    "expandBelow": [
      "OccurrenceManagementConstants"
    ],
    "newExpandBelow": [
      "OccurrenceManagementConstants"
    ],
    "newExpandOne": [
      "OccurrenceManagementConstants"
    ],
    "newReconfigure": [
      "OccurrenceManagementConstants"
    ],
    "loadTreeProps": [
      "OccurrenceManagementConstants"
    ],
    "loadTreePropsTimer": [
      "OccurrenceManagementConstants"
    ],
    "expandBelowFetchAll": [
      "OccurrenceManagementConstants"
    ],
    "debugMenu": [
      "OccurrenceManagementConstants"
    ],
    "stopExpandBelow": [
      "OccurrenceManagementConstants"
    ],
    "Awb0StopExpandBelowDesc": [
      "OccurrenceManagementConstants"
    ],
    "backGroundSoa": [
      "OccurrenceManagementConstants"
    ],
    "Awb0LoadTreePropsDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0BackGroundSoaDesc": [
      "OccurrenceManagementConstants"
    ],
    "collapseBelow": [
      "OccurrenceManagementConstants"
    ],
    "liveSearchResultCommandTitle": [
      "OccurrenceManagementConstants"
    ],
    "applyMarkup": [
      "OccurrenceManagementConstants"
    ],
    "cancelMarkup": [
      "OccurrenceManagementConstants"
    ],
    "acePackElement": [
      "OccurrenceManagementConstants"
    ],
    "aceUnpackElement": [
      "OccurrenceManagementConstants"
    ],
    "acePackAllElements": [
      "OccurrenceManagementConstants"
    ],
    "aceUnpackAllElements": [
      "OccurrenceManagementConstants"
    ],
    "applyMarkups": [
      "OccurrenceManagementConstants"
    ],
    "confirm": [
      "OccurrenceManagementConstants"
    ],
    "pending": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ViewGroup": [
      "OccurrenceManagementConstants"
    ],
    "groupEffectivityTitle": [
      "OccurrenceManagementConstants"
    ],
    "addGroupEffectivity": [
      "OccurrenceManagementConstants"
    ],
    "removeGroupEffectivityTooltip": [
      "OccurrenceManagementConstants"
    ],
    "separateElementToDistinctElements": [
      "OccurrenceManagementConstants"
    ],
    "configure": [
      "OccurrenceManagementConstants"
    ],
    "aceSetInContext": [
      "OccurrenceManagementConstants"
    ],
    "configureBySelection": [
      "OccurrenceManagementConstants"
    ],
    "configureByProximity": [
      "OccurrenceManagementConstants"
    ],
    "RemoveOverride": [
      "OccurrenceManagementConstants"
    ],
    "notifyAppliedVariantRuleWithConfigureByProximity": [
      "OccurrenceManagementMessages"
    ],
    "Awb0GroupEffectivityDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0AceUnifiedInContextSearchDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0SeparateDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0PackDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0UnpackDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0PackAllDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0UnpackAllDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0AddChildElementDeclarativeDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0AddSiblingElementDeclarativeDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ExpandSuppressedDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0RemoveElementDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0RemoveLevelDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ReplaceElementDeclarativeDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0SaveAsAndReplaceElementDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ReleaseStatusEffectivityDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awp0ReleaseStatusEffectivityDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0OccurrenceEffectivityDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0AddGroupEffectivityCmdDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0RemoveGroupEffectivityCmdDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0StructureFilterCommandDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0SaveWorkingContextDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0SaveAsWorkingContextDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0UpdateWorkingContextDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ConfigurationFilterDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ResetStructureDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ShowChildOccurrencesDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0AddEffectivityForRelnStatusCmdDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0RemoveEffectivityForRelnStatusCmdDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0AddEffectivitiesCmdDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0RemoveEffectivitiesCmdDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0AddNewVariantRuleCmdDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0AddSubstitutesDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0InsertParentElementDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0RemoveSubstitutesDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0UseSubstituteDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ShowMarkupDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ShowUnconfiguredByOccEffectivityDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ShowUnconfiguredByVariantsDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ShowSuppressedDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ExpandBelowDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ReconfigureDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0CollapseBelowDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0CancelMarkupLevelDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ApplyMarkupDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ViewGroupDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0ConfigurationGroupDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0SetInContextDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0CBOSCmdDesc": [
      "OccurrenceManagementConstants"
    ],
    "configureByProximityTooltip": [
      "OccurrenceManagementConstants"
    ],
    "Awb0RemoveOverrideDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0SaveVariantRuleDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0GetLiveSearchResultCommandDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0MoveDownCommandDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0MoveUpCommand": [
      "OccurrenceManagementConstants"
    ],
    "moveUpTitle": [
      "OccurrenceManagementConstants"
    ],
    "moveDownTitle": [
      "OccurrenceManagementConstants"
    ],
    "Awb0SelectAllCommandDesc": [
      "OccurrenceManagementConstants"
    ],
    "Awb0AddGroupDescription": [
      "OccurrenceManagementConstants"
    ],
    "Awb0RestructureGrpDesc": [
      "OccurrenceManagementConstants"
    ],
    "occMgmtDuplicateRemove": [
      "OccMgmtDuplicateConstants"
    ],
    "occMgmtDuplicateReplace": [
      "OccMgmtDuplicateConstants"
    ],
    "occMgmtDuplicateClone": [
      "OccMgmtDuplicateConstants"
    ],
    "occMgmtDuplicateCloneBelow": [
      "OccMgmtDuplicateConstants"
    ],
    "OccMgmtDuplicateUndo": [
      "OccMgmtDuplicateConstants"
    ],
    "occMgmtDuplicateRemoveDesc": [
      "OccMgmtDuplicateConstants"
    ],
    "occMgmtDuplicateReplaceDesc": [
      "OccMgmtDuplicateConstants"
    ],
    "occMgmtDuplicateCloneDesc": [
      "OccMgmtDuplicateConstants"
    ],
    "occMgmtDuplicateCloneBelowDesc": [
      "OccMgmtDuplicateConstants"
    ],
    "OccMgmtDuplicateUndoDesc": [
      "OccMgmtDuplicateConstants"
    ],
    "occMgmtDuplicateCmdDesc": [
      "OccMgmtDuplicateConstants"
    ],
    "occMgmtDuplicateTitle": [
      "OccMgmtDuplicateConstants"
    ],
    "OccMgmtDuplicateSettings": [
      "OccMgmtDuplicateConstants"
    ],
    "OccMgmtDuplicateSettingsDesc": [
      "OccMgmtDuplicateConstants"
    ],
    "removeRevision": [
      "OccmgmtRevOccConstants"
    ],
    "Awb0AddRevisionDesc": [
      "OccmgmtRevOccConstants"
    ],
    "Awb0RemoveRevisionDesc": [
      "OccmgmtRevOccConstants"
    ],
    "actionColumn": [
      "OccmgmtImportExportConstants"
    ],
    "aceImportPreviewNewAction": [
      "OccmgmtImportExportConstants"
    ],
    "aceImportPreviewOverwriteContentMenu": [
      "OccmgmtImportExportConstants"
    ],
    "aceImportPreviewReferenceContentMenu": [
      "OccmgmtImportExportConstants"
    ],
    "aceImportPreviewReviseContentMenu": [
      "OccmgmtImportExportConstants"
    ],
    "Awb0AceImportPreviewOverwriteContextMenuDesc": [
      "OccmgmtImportExportConstants"
    ],
    "Awb0AceImportPreviewReferenceContextMenuDesc": [
      "OccmgmtImportExportConstants"
    ],
    "Awb0AceImportPreviewReviseContextMenuDesc": [
      "OccmgmtImportExportConstants"
    ],
    "importTitle": [
      "OccmgmtImportExportConstants"
    ],
    "Awb0ImportFromExcelDesc": [
      "OccmgmtImportExportConstants"
    ],
    "addChildRow": [
      "OccmgmtInlineAuthConstants"
    ],
    "addSiblingRow": [
      "OccmgmtInlineAuthConstants"
    ],
    "cancelEditsTitle": [
      "ZeroCompileCommandMessages"
    ],
    "saveEditsTitle": [
      "ZeroCompileCommandMessages"
    ],
    "add": [
      "OccmgmtInlineAuthConstants",
      "RevisionRuleAdminConstants"
    ],
    "removeInlineRow": [
      "OccmgmtInlineAuthConstants"
    ],
    "awb0SplitToolTip": [
      "occmgmtSplitViewsConstants"
    ],
    "openInView": [
      "occmgmtSplitViewsConstants"
    ],
    "awb0OpenInViewCommandDesc": [
      "occmgmtSplitViewsConstants"
    ],
    "awb0SplitRootCmdDesc": [
      "occmgmtSplitViewsConstants"
    ],
    "continueForUnsavedWorkset": [
      "OccurrenceManagementSubsetConstants"
    ],
    "saveAndContinue": [
      "OccurrenceManagementSubsetConstants"
    ],
    "unsavedChangesForSaveAs": [
      "OccurrenceManagementSubsetConstants"
    ],
    "CreateWorksetCmd": [
      "OccurrenceManagementSubsetConstants"
    ],
    "createWorksetTooltip": [
      "OccurrenceManagementSubsetConstants"
    ],
    "SaveSessionCmd": [
      "OccurrenceManagementSubsetConstants"
    ],
    "SaveAsSessionCmd": [
      "OccurrenceManagementSubsetConstants"
    ],
    "CreateSessionCmd": [
      "OccurrenceManagementSubsetConstants"
    ],
    "replayTitle": [
      "OccurrenceManagementSubsetConstants"
    ],
    "ResetSessionCmd": [
      "OccurrenceManagementSubsetConstants"
    ],
    "Session": [
      "OccurrenceManagementSubsetConstants"
    ],
    "resetSessionTooltip": [
      "OccurrenceManagementSubsetConstants"
    ],
    "saveSessionTooltip": [
      "OccurrenceManagementSubsetConstants"
    ],
    "sessionCmdGroupTooltip": [
      "OccurrenceManagementSubsetConstants"
    ],
    "createSessionTooltip": [
      "OccurrenceManagementSubsetConstants"
    ],
    "saveAsSessionTooltip": [
      "OccurrenceManagementSubsetConstants"
    ],
    "saveSessionConfirmPopupMsg": [
      "OccurrenceManagementSubsetConstants"
    ],
    "CancelText": [
      "OccurrenceManagementSubsetConstants"
    ],
    "OverwriteText": [
      "OccurrenceManagementSubsetConstants"
    ],
    "include": [
      "OccurrenceManagementSubsetConstants"
    ],
    "includeWithoutChildren": [
      "OccurrenceManagementSubsetConstants"
    ],
    "exclude": [
      "OccurrenceManagementSubsetConstants"
    ],
    "includeDesc": [
      "OccurrenceManagementSubsetConstants"
    ],
    "includeWithoutChildrenDesc": [
      "OccurrenceManagementSubsetConstants"
    ],
    "excludeDesc": [
      "OccurrenceManagementSubsetConstants"
    ],
    "ClearText": [
      "OccurrenceManagementSubsetConstants"
    ],
    "settings": [
      "OccurrenceManagementSubsetConstants"
    ],
    "filterSettingsDesc": [
      "OccurrenceManagementSubsetConstants"
    ],
    "applyButtonTitle": [
      "OccurrenceManagementSubsetConstants"
    ],
    "applyProductSnapshotCommandDesc": [
      "OccurrenceManagementSubsetConstants"
    ],
    "saveSessionInfoMsg": [
      "OccurrenceManagementSubsetConstants"
    ],
    "SaveWorksetCmd": [
      "OccurrenceManagementSubsetConstants"
    ],
    "saveWorksetTooltip": [
      "OccurrenceManagementSubsetConstants"
    ],
    "unsavedObjectMessageForOpenInVis": [
      "OccurrenceManagementSubsetConstants"
    ],
    "saveAndOpen": [
      "OccurrenceManagementSubsetConstants"
    ],
    "continueForUnsaved": [
      "OccurrenceManagementSubsetConstants"
    ],
    "resetConfirmationWorkset": [
      "OccurrenceManagementSubsetConstants"
    ],
    "resetConfirmationSession": [
      "OccurrenceManagementSubsetConstants"
    ],
    "Awp0AlignDesignTooltip": [
      "CadBomAlignmentConstants"
    ],
    "Awp0UnAlignDesignTooltip": [
      "CadBomAlignmentConstants"
    ],
    "Awp0AlignTooltip": [
      "CadBomAlignmentConstants"
    ],
    "Awp0UnAlignTooltip": [
      "CadBomAlignmentConstants"
    ],
    "Awp0SetPrimaryDesignTooltip": [
      "CadBomAlignmentConstants"
    ],
    "AlignOccurrenceToolTip": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBALaunchAlignTaskToolTip": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAModuleTitle": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAAlignTaskTitle": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAAlignToolTip": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAUnAlignToolTip": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAAlignmentCheckGroup": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAAlignmentCheck": [
      "CadBomAlignmentConstants"
    ],
    "AlignmentDoNotExist": [
      "CadBomAlignmentMessages"
    ],
    "SingleDesignPartUnAlignmentConfirmation": [
      "CadBomAlignmentMessages"
    ],
    "SingleDesignMultiplePartsUnAlignmentConfirmation": [
      "CadBomAlignmentMessages"
    ],
    "MultipleDesignsSinglePartUnAlignmentConfirmation": [
      "CadBomAlignmentMessages"
    ],
    "SingleDesignUnAlignmentConfirmation": [
      "CadBomAlignmentMessages"
    ],
    "MultipleDesignsUnAlignmentConfirmation": [
      "CadBomAlignmentMessages"
    ],
    "SinglePartUnAlignmentConfirmation": [
      "CadBomAlignmentMessages"
    ],
    "MultiplePartsUnAlignmentConfirmation": [
      "CadBomAlignmentMessages"
    ],
    "Awp0AlignDesignDesc": [
      "CadBomAlignmentConstants"
    ],
    "Awp0UnAlignDesignDesc": [
      "CadBomAlignmentConstants"
    ],
    "Awp0AlignPartDesc": [
      "CadBomAlignmentConstants"
    ],
    "Awp0UnAlignPartDesc": [
      "CadBomAlignmentConstants"
    ],
    "Awp0SetPrimaryDesignDesc": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBALaunchAlignTaskDesc": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAAlignDesc": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAUnAlignDesc": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAAlignmentCheckDesc": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAOpenGroupTitle": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAOpenGroupDesc": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAOpenObjectTitle": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAOpenObjectDesc": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAOpenInNewWindowTitle": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAOpenInNewWindowDesc": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAOpenInNewTabTitle": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAOpenInNewTabDesc": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAAlignGroupTitle": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAAlignGroupDesc": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAOpenAlignmentViewTitle": [
      "CadBomAlignmentConstants"
    ],
    "Awb0EntCBAOpenAlignmentViewDesc": [
      "CadBomAlignmentConstants"
    ],
    "Awb0FindAlignedTitle": [
      "CadBomAlignmentConstants"
    ],
    "Awb0FindAlignedDesc": [
      "CadBomAlignmentConstants"
    ],
    "RevisionRuleAdminTitle": [
      "RevisionRuleAdminConstants"
    ],
    "clauseUp": [
      "RevisionRuleAdminConstants"
    ],
    "clauseDown": [
      "RevisionRuleAdminConstants"
    ],
    "clauseAdd": [
      "RevisionRuleAdminConstants"
    ],
    "clauseDelete": [
      "RevisionRuleAdminConstants"
    ],
    "addClausesPanelTitle": [
      "RevisionRuleAdminConstants"
    ],
    "addRevisionRule": [
      "RevisionRuleAdminConstants"
    ],
    "deleteRevisionRule": [
      "RevisionRuleAdminConstants"
    ],
    "clausesCommandAnchor": [
      "RevisionRuleAdminConstants"
    ],
    "removeProp": [
      "RevisionRuleAdminConstants"
    ],
    "ClausePropertyAddDesc": [
      "RevisionRuleAdminConstants"
    ],
    "RevisionRuleClauseUpDesc": [
      "RevisionRuleAdminConstants"
    ],
    "RevisionRuleClauseDownDesc": [
      "RevisionRuleAdminConstants"
    ],
    "RevisionRuleClauseAddDesc": [
      "RevisionRuleAdminConstants"
    ],
    "RevisionRuleClauseDeleteDesc": [
      "RevisionRuleAdminConstants"
    ],
    "RevisionRuleAdminDesc": [
      "RevisionRuleAdminConstants"
    ],
    "ClausePropertyRemoveDesc": [
      "RevisionRuleAdminConstants"
    ],
    "ClausePropertyReplaceDesc": [
      "RevisionRuleAdminConstants"
    ],
    "replace": [
      "RevisionRuleAdminConstants"
    ],
    "RevisionRuleAdmin": [
      "RevisionRuleAdminConstants"
    ],
    "removeSingleConfirmationForPartition": [
      "OccmgmtPartitionMessages"
    ],
    "removeMultipleConfirmationForPartition": [
      "OccmgmtPartitionMessages"
    ],
    "Unassigned": [
      "OccmgmtPartitionMessages"
    ],
    "Awb0UnassignedDesc": [
      "OccmgmtPartitionMessages"
    ],
    "Partition": [
      "OccmgmtPartitionMessages"
    ],
    "Awb0PartitionDesc": [
      "OccmgmtPartitionMessages"
    ],
    "addPartitionTooltip": [
      "OccmgmtPartitionMessages"
    ],
    "Fgf0CreatePartitionSchemeDesc": [
      "OccmgmtPartitionMessages"
    ],
    "PartitionScheme": [
      "OccmgmtPartitionMessages"
    ],
    "MoveTo": [
      "OccmgmtPartitionMessages"
    ],
    "MoveToDesc": [
      "OccmgmtPartitionMessages"
    ],
    "Awb0UnassignMemBtn": [
      "OccmgmtPartitionMessages"
    ],
    "Awb0UnassignMemTooltip": [
      "OccmgmtPartitionMessages"
    ],
    "removeSinglePtnMemberConfirmation": [
      "OccmgmtPartitionMessages"
    ],
    "removeMultiplePtnMemConfirmation": [
      "OccmgmtPartitionMessages"
    ],
    "deletePtnBtn": [
      "OccmgmtPartitionMessages"
    ],
    "deletePtnBtnTooltip": [
      "OccmgmtPartitionMessages"
    ],
    "deleteSinglePtnConfirmation": [
      "OccmgmtPartitionMessages"
    ],
    "deleteMultiplePtnsConfirmation": [
      "OccmgmtPartitionMessages"
    ],
    "Awb0RemoveElementDescForPtn": [
      "OccmgmtPartitionMessages"
    ],
    "Awb0RemoveForPtn": [
      "OccmgmtPartitionMessages"
    ]
  },
  "onEvent": [
    {
      "eventId": "launchEditEffectivityPanel",
      "action": "launchEditEffectivityPanel"
    },
    {
      "eventId": "split.splitStarted",
      "action": "updateSelectedElementQuantity",
      "cacheEventData": true
    },
    {
      "eventId": "postRemoveAttachmentCleanupAction",
      "action": "postRemoveAttachmentCleanupAction"
    },
    {
      "eventId": "ace.pasteSuccessful",
      "action": "acePostPasteAction",
      "condition": "conditions.isCutAction"
    },
    {
      "eventId": "ace.performSeparateElementsAction",
      "action": "aceSeparateElementsAction",
      "cacheEventData": true
    },
    {
      "eventId": "performPostRemoveAction",
      "action": "performPostRemoveAction"
    },
    {
      "eventId": "performPostRemoveLevelAction",
      "action": "performPostRemoveLevelAction"
    },
    {
      "eventId": "ace.UseSubstitute",
      "action": "refreshPwaWithStartFreshNavigation"
    },
    {
      "eventId": "ace.refreshSelectedObjectInPWA.updated",
      "action": "refreshPwaWithStartFreshNavigation"
    },
    {
      "eventId": "ace.resetStructureClearRecipe",
      "action": "resetStructureClearRecipe"
    },
    {
      "eventId": "postProcessPackUnpackAction",
      "action": "postProcessPackUnpackAction",
      "cacheEventData": true
    },
    {
      "eventId": "performPackUnpackAllAction",
      "action": "performPackUnpackAllAction",
      "cacheEventData": true
    },
    {
      "eventId": "acePwaCommand.showConfirmationMessageForResetAction",
      "action": "showConfirmationMessageForResetAction"
    },
    {
      "eventId": "acePwaCommand.toggleMarkupAction",
      "action": "toggleMarkupAction"
    },
    {
      "eventId": "acePwaCommand.launchStructureFilterPanelAction",
      "action": "launchStructureFilterPanelAction"
    },
    {
      "eventId": "acePwaCommand.launchConfigurationPanelAction",
      "action": "launchConfigurationPanelAction"
    },
    {
      "eventId": "acePwaCommand.launchUnifiedNavigationPanelAction",
      "action": "launchUnifiedNavigationPanelAction"
    },
    {
      "eventId": "acePwaCommand.toggleIneffectiveAction",
      "action": "toggleIneffectiveAction"
    },
    {
      "eventId": "acePwaCommand.toggleVariantsInAction",
      "action": "toggleVariantsInAction"
    },
    {
      "eventId": "acePwaCommand.toggleSuppressedInAction",
      "action": "toggleSuppressedInAction"
    },
    {
      "eventId": "acePwaCommand.aceCollapseBelowAction",
      "action": "aceCollapseBelowAction"
    },
    {
      "eventId": "acePwaCommand.aceUnpackAllElementsAction",
      "action": "aceUnpackAllElementsAction"
    },
    {
      "eventId": "toggleInContextOverrideOnSelectedParentAssembly",
      "condition": "conditions.isTreeOrTreeSummaryView",
      "action": "toggleInContextOverrideInTreeView"
    },
    {
      "eventId": "toggleInContextOverrideOnSelectedParentAssembly",
      "condition": "conditions.isNotTreeOrTreeeSummaryView",
      "action": "toggleInContextOverrideFromNonTreeView"
    },
    {
      "eventId": "hideExpandOptionsPopup",
      "action": "hideExpandOptionsPopup"
    },
    {
      "eventId": "performRemoveAttachmentOverride",
      "condition": "conditions.isRemoveAttachmentOverridePerformed",
      "action": "removeAttachmentOverrideSoaCall"
    },
    {
      "eventId": "performCutAttachmentOperation",
      "condition": "conditions.isCutAttachmentPerformed",
      "action": "cutAttachmentSoaCall"
    },
    {
      "eventId": "awb0Markup.ApplyMarkupSOA",
      "action": "applyMarkupSOA",
      "cacheEventData": true
    },
    {
      "eventId": "awb0ApplyMarkup.success",
      "action": "updateActiveContextToRefreshSelectedObjectInPWA"
    },
    {
      "eventId": "insertLevel.launchInsertLevelPanel",
      "action": "launchInsertLevelPanel"
    },
    {
      "eventId": "updateContextInfo",
      "action": "updateValueOnCtxWithProvidedValue",
      "cacheEventData": true
    },
    {
      "eventId": "revOcc.submitWorkflow.adaptedInputs",
      "action": "revOccGetPropsForSubmitToWorkflow"
    },
    {
      "eventId": "revOcc.workflow.getSelectedBOTypeName",
      "action": "revOccGetSelectedBOTypeName"
    },
    {
      "eventId": "revOcc.workflow.getTypesFromBO",
      "action": "revOccGetTypeFromBOConstant"
    },
    {
      "eventId": "revOcc.workflow.validateForCreatingWorkflowPresenterEvent",
      "action": "revOccGalidateForCreatingWorkflowPresenterAction"
    },
    {
      "eventId": "revOccAddChildActionEvent",
      "action": "revOccAddChildAction"
    },
    {
      "eventId": "revOccAddSiblingActionEvent",
      "action": "revOccAddSiblingAction"
    },
    {
      "eventId": "ace.retainCurrentExpansionState",
      "cacheEventData": true,
      "action": "retainCurrentExpansionState"
    },
    {
      "eventId": "acePwaCommand.launchOpenInViewCommand",
      "action": "awb0launchOpenInViewCommandPanelAction"
    },
    {
      "eventId": "enableSplitMode",
      "action": "enableSplitMode"
    },
    {
      "eventId": "enableSplitMode",
      "action": "addProductOpenedInSplitViewToSessionStorage"
    },
    {
      "eventId": "disableSplitMode",
      "action": "disableSplitMode"
    },
    {
      "eventId": "ace.openInSplitView",
      "cacheEventData": true,
      "action": "openInSplitView"
    },
    {
      "eventId": "ace.clearExpansionState",
      "action": "clearExpansionState"
    },
    {
      "eventId": "acePwaCommand.awb0StartTreeEdit",
      "action": "awb0StartTreeEdit"
    },
    {
      "eventId": "tree.packUnpackSuccessful",
      "action": "updateInctiveView",
      "condition": "conditions.isPackUnpackParentChildInfoReceived"
    },
    {
      "eventId": "ace.refreshInactiveViewWithSameConfig",
      "action": "refreshInactiveViewWithSameConfig"
    },
    {
      "eventId": "clearLocalStorageForInactiveView",
      "action": "clearLocalStorageForInactiveView"
    },
    {
      "eventId": "confirmSaveSessionEvent",
      "message": "saveSessionConfirmPopup"
    },
    {
      "eventId": "showSaveSessionInfoEvent",
      "message": "showSaveSessionInfoMessage"
    },
    {
      "eventId": "showSaveWorksetInfoEvent",
      "message": "showSaveWorksetInfoMessage"
    },
    {
      "eventId": "saveAsReviseNonDirtyWorkset",
      "action": "saveAsReviseOpenPanelBatch"
    },
    {
      "eventId": "saveAsReviseDirtyWorkset",
      "message": "SaveWsConfirmPopupForSaveAsRevise",
      "condition": "conditions.isWriteAccessProvidedOnWorksetRev"
    },
    {
      "eventId": "saveAsReviseDirtyWorkset",
      "action": "continueWithoutSaving",
      "condition": "conditions.isWriteAccessNotProvidedOnWorksetRev"
    },
    {
      "eventId": "occmgmtsubset.applySnapshot",
      "action": "clearFilterCache"
    },
    {
      "eventId": "showUnsavedObjectMessageWithWriteAccessForOpenInVis",
      "message": "unsavedObjectMessageWithWriteAccessForOpenInVis"
    },
    {
      "eventId": "showUnsavedObjectMessageNoWriteAccessForOpenInVis",
      "message": "unsavedObjectMessageNoWriteAccessForOpenInVis"
    },
    {
      "eventId": "occmgmtsubset.discoveryShowConfirmationMessageForResetAction",
      "action": "discoveryShowConfirmationMessageForResetAction"
    },
    {
      "eventId": "cba.alignmentSuccess",
      "action": "executeAlignmentCheckPostAlignUnAlign",
      "cacheEventData": true
    },
    {
      "eventId": "cba.alignmentSuccess",
      "action": "resetFindAlignedState",
      "cacheEventData": true
    },
    {
      "eventId": "cba.unAlignmentSuccess",
      "action": "executeAlignmentCheckPostAlignUnAlign",
      "cacheEventData": true
    },
    {
      "eventId": "cba.unAlignmentSuccess",
      "action": "resetFindAlignedState",
      "cacheEventData": true
    },
    {
      "eventId": "cba.partDesignAlignment",
      "action": "fireReExecuteAlignmentCheck",
      "cacheEventData": true
    },
    {
      "eventId": "cba.partDesignUnAlignment",
      "action": "fireReExecuteAlignmentCheck",
      "cacheEventData": true
    },
    {
      "eventId": "cba.reExecuteAlignmentCheck",
      "action": "executeAlignmentCheckPostPartCADUnAlign",
      "cacheEventData": true
    },
    {
      "eventId": "cba.refreshObjects",
      "action": "cbaRefreshObjectsAction",
      "cacheEventData": true
    },
    {
      "eventId": "cba.notifyViewerAlignmentUpdated",
      "action": "notifyViewerAlignmentUpdated",
      "cacheEventData": true
    },
    {
      "eventId": "cba.updateStructures",
      "action": "updateStructuresPostAlignment",
      "cacheEventData": true
    },
    {
      "eventId": "performPostRemoveActionForPartition",
      "action": "performPostRemoveActionForPartition"
    },
    {
      "eventId": "updateAcePwaWithCreatedPartition",
      "action": "updateAcePwaWithCreatedPartition"
    },
    {
      "eventId": "ace.retainCurrentExpansionState",
      "cacheEventData": true,
      "action": "retainCurrentExpansionState"
    },
    {
      "eventId": "enableSplitModeForUnassigned",
      "action": "enableSplitModeForUnassigned"
    },
    {
      "eventId": "disableUnassignedMode",
      "action": "disableUnassignedMode"
    },
    {
      "eventId": "ace.clearExpansionState",
      "action": "clearExpansionState"
    },
    {
      "eventId": "updateCtxWithUnassigned",
      "action": "updateCtxWithUnassignedToTrue",
      "condition": "!conditions.isInUnassignedMode"
    },
    {
      "eventId": "updateCtxWithUnassigned",
      "action": "updateCtxWithUnassignedToFalse",
      "condition": "conditions.isInUnassignedMode"
    },
    {
      "eventId": "initializeUnassignedService",
      "action": "initializeUnassignedService"
    },
    {
      "eventId": "initializeUnassignedService",
      "action": "addProductOpenedInSplitViewToSessionStorageForPartition"
    }
  ],
  "preferences": [
    "AWC_InlineMultiRowEnabled"
  ]
}
