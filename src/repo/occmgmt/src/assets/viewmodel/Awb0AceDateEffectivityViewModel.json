{
    "schemaVersion": "1.0.0",

    "data": {
        "flag": {
            "type": "STRING",
            "dbValue": "{{props.subPanelContext.data.flag.dbValue}}"
        },
        "isShared": {
            "displayName": "{{i18n.shareEffectivity}}",
            "type":"BOOLEAN",
            "isRequired": "false",
            "isEditable": "true",
            "labelPosition": "PROPERTY_LABEL_AT_RIGHT",
            "dbValue": "{{props.subPanelContext.sharedData.isShared.dbValue}}"
        },
        "nameBox": {
            "displayName": "{{i18n.name}}",
            "type": "STRING",
            "dbValue": "{{props.subPanelContext.sharedData.nameBox.dbValue}}",
            "isRequired": "true",
            "maxLength": 32
        },
        "startDate": {
            "dbValue": "{{props.subPanelContext.sharedData.startDate.dbValue}}",
            "type": "DATETIME",
            "isRequired": "true",
            "displayName": "{{i18n.startDate}}",
            "isEditable": "true"
        },

        "endDate": {
            "dbValue": "{{props.subPanelContext.sharedData.endDate.dbValue}}",
            "uiValue": "{{props.subPanelContext.sharedData.endDate.dbValue}}",
            "type": "{{props.subPanelContext.sharedData.endDate.type}}",
            "isRequired": "true",
            "validationCriteria": [ {
                "condition": "data.endDate.dbValue !== '' && !conditions.isEndDateGreaterThanStartDate",
                "value": "{{i18n.dateRangeInvalidMessage}}"
            } ]
        },
        "endDateList": {
            "type": "STRING",
            "dbValue": [
                { "propDisplayValue": "{{i18n.dateEffectivity}}", "propInternalValue": "Date" },
                { "propDisplayValue": "{{i18n.upText}}", "propInternalValue": "UP" },
                { "propDisplayValue": "{{i18n.soText}}", "propInternalValue": "SO" }
            ]
        },
        "endDateOptions": {
            "type": "STRING",
            "isRequired": "true",
            "hasLov": true,
            "displayName": "{{i18n.endDate}}",
            "isEditable": "true",
            "dbValue": "{{props.subPanelContext.sharedData.endDateOptions.dbValue}}",
            "uiValue": "{{props.subPanelContext.sharedData.endDateOptions.uiValue}}"
        },
        "isProtected": {
            "displayName": "{{i18n.protect}}",
            "type": "BOOLEAN",
            "isRequired": "false",
            "isEditable": "true",
            "labelPosition": "PROPERTY_LABEL_AT_RIGHT",
            "dbValue": "{{props.subPanelContext.sharedData.isProtected.dbValue}}"
        }
    },
    "i18n": {
        "dateEffectivity": [
            "OccurrenceManagementConstants"
        ],
        "shareEffectivity": [
            "OccurrenceManagementConstants"
        ],
        "name": [
            "OccurrenceManagementConstants"
        ],
        "upText": [
            "OccurrenceManagementConstants"
        ],
        "soText": [
            "OccurrenceManagementConstants"
        ],
        "startDate": [
            "OccurrenceManagementConstants"
        ],
        "endDate": [
            "OccurrenceManagementConstants"
        ],
        "dateEffectivityPlaceholder": [
            "OccurrenceManagementConstants"
        ],
        "protect": [
            "OccurrenceManagementConstants"
        ],
        "addElementBtn": [
            "OccurrenceManagementConstants"
        ],
        "saveButtonText": [
            "OccurrenceManagementConstants"
        ],
        "dateRangeInvalidMessage": [
            "OccurrenceManagementMessages"
        ],
        "failedToApplyEffectivity": [
            "OccurrenceManagementConstants"
        ],
        "failedToSaveEffectivityMessage": [
            "OccurrenceManagementMessages"
        ],
        "duplicateEffectivityCreationErrorMessage": [
            "OccurrenceManagementMessages"
        ],
        "effectivitesSuccessfullyApplied":
        [
            "OccurrenceManagementMessages"
        ],
        "genericServerError":
        [
            "OccurrenceManagementMessages"
        ]
    },
    "actions": {
        "onUpdateEndDateBatchJob": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "onUpdateEndDate",
                    "condition": "data.startDate.uiValue!== '' && data.endDate.dbValue!== ''"
                }
            ]
        },
        "onUpdateEndDate": {
            "actionType": "JSFunction",
            "method": "updateField",
            "inputData": {
                "fields": "{{fields}}",
                "fieldNameToValidate": "endDate"
            },
            "deps": "js/occmgmtUtils"
        },
        "onUpdateShareCheckboxBatchJob": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "onUpdateShareCheckbox",
                    "condition": "fields.nameBox.touched === 'true'"
                },
                {
                    "action": "updateShareRequiredField"
                }
            ]
        },
        "updateShareRequiredField": {
            "actionType": "JSFunction",
            "method": "updateNameBox",
            "inputData": {
                "fields": "{{fields}}",
                "fieldNameToValidate": "nameBox",
                "data": "{{data}}"
            },
            "deps": "js/aceEffectivityService"
        },
        "onUpdateShareCheckbox": {
            "actionType": "JSFunction",
            "method": "updateField",
            "inputData": {
                "fields": "{{fields}}",
                "fieldNameToValidate": "nameBox"
            },
            "deps": "js/occmgmtUtils"
        },
        "updateIsProtectedValue": {
            "actionType": "JSFunction",
            "method": "updateValueOnCtxOrState",
            "inputData": {
                "path": "",
                "value": {
                    "isProtected": {
                        "dbValue": "{{data.isProtected.dbValue}}"
                    }
                },
                "target": "{{props.subPanelContext.sharedData}}"
            },
            "deps": "js/occmgmtUtils"
        },
        "authorEffectivity": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-ActiveWorkspaceBom-2020-12-OccurrenceManagement",
            "method": "createAndAddElementEffectivity2",
            "inputData": {
                "input": {
                    "elements": "{{props.subPanelContext.occContext.selectedModelObjects}}",
                    "effectivityInfo": {
                        "name": "{{function:getEffectivityName}}",
                        "endItemRev": {
                            "uid": "",
                            "type": ""
                        },
                        "unitRangeText": "",
                        "dateRange": "{{function:getDateRangeText}}",
                        "openEndedStatus": "{{data.endDate.openEndedStatus}}",
                        "isProtected": "{{fields.isProtected.value}}",
                        "isShared": "{{fields.isShared.value}}"
                    },
                    "effectivityResponseCriteria" : ""
                }
            },
            "outputData": {
                "effResp" : ""
            },
            "deps": "js/sharedEffectivityService",
            "events": {
                "success": [ {
                        "name": "occurrenceUpdatedByEffectivityEvent",
                        "eventData": {
                            "updated": "{{data.effResp.ServiceData.updated}}",
                            "deleted": "{{data.effResp.ServiceData.deleted}}",
                            "viewToReact": "{{props.subPanelContext.provider.contextKey}}",
                            "addedEffectivities": "",
                            "state": "COMPLETED",
                            "source": "toolAndInfoPanel"
                        }
                    },
                    {
                        "name": "complete",
                        "eventData":
                        {
                            "source": "toolAndInfoPanel"
                        },
                        "condition": "data.effResp.ServiceData.updated && data.effResp.ServiceData.deleted.includes(ctx.selected.uid)"
                    },
                    {
                        "name": "navigateToDisplayandRemovePanelEvent",
                        "condition": "data.effResp.ServiceData.updated && data.effResp.ServiceData.updated.includes(ctx.selected.uid)"
                    },
                    {
                        "name": "aceElementsDeSelectedEvent",
                        "eventData": {
                            "elementsToDeselect": [ "{{props.subPanelContext.occContext.selectedModelObjects}}" ]
                        },
                        "condition": "data.effResp.ServiceData.deleted && data.effResp.ServiceData.deleted.includes(ctx.selected.uid)"
                    }
                ]
            },
            "actionMessages": {
                "failure": [
                    {
                        "condition":"effResp.ServiceData.partialErrors[0].errorValues[0].code==710079",
                        "message": "duplicateEffectivityCreationErrorMessage"
                    },
                    {
                        "condition": "(props.subPanelContext.occContext.selectedModelObjects && props.subPanelContext.occContext.selectedModelObjects.length > 1)",
                        "message": "addFailureMessage"
                    }
                ],
                "success": [
                    {
                        "condition": "props.subPanelContext.occContext.selectedModelObjects.length > 1",
                        "message": "succsessfullyAddedEffectivityMessage"
                    }
                ]
            }
        },
        "authorRevisionEffectivity": {
            "actionType": "TcSoaService",
            "serviceName": "StructureManagement-2014-12-Effectivity",
            "method": "createReleaseStatusEffectivity",
            "inputData": {
                "input": [ {
                    "releaseStatus": {
                        "uid": "{{props.subPanelContext.sharedData.releaseStatus.uid}}",
                        "type": "{{props.subPanelContext.sharedData.releaseStatus.type}}"
                    },
                    "effectivityInfoInput": {
                        "effectivityId": "{{function:getEffectivityName}}",
                        "endItem": {
                            "uid": "",
                            "type": ""
                        },
                        "unitRangeText": "",
                        "dateRange": "{{function:getDateRangeText}}",
                        "openEndedStatus": "{{data.endDate.openEndedStatus}}",
                        "isProtected": "{{fields.isProtected.value}}"
                    }
                } ]
            },
            "outputData": {},
            "events": {
                "success": [ {
                        "name": "releaseStatusUpdatedByEffectivityEvent"
                    },
                    {
                        "name": "navigateToDisplayandRemoveRelEffPanelEvent"
                    }
                ]
            },
            "actionMessages": {
                "failure": [ {
                        "condition": "errorCode.code!==710079",
                        "message": "failedToApplyEffectivityMessage"
                    },
                    {
                        "condition": "errorCode.code==710079",
                        "message": "duplicateEffectivityCreationErrorMessage"
                    }
                ]
            },
            "deps": "js/sharedEffectivityService"
        },
        "editEffectivity": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-ActiveWorkspaceBom-2017-06-OccurrenceManagement",
            "method": "editElementEffectivity",
            "inputData": {
                "input": {
                    "element": {
                        "uid": "{{props.subPanelContext.occContext.selectedModelObjects[0].uid}}",
                        "type": "{{props.subPanelContext.occContext.selectedModelObjects[0].type}}"
                    },
                    "effectivity": {
                        "uid": "{{props.subPanelContext.sharedData.selectedCell.uid}}",
                        "type": "{{props.subPanelContext.sharedData.selectedCell.type}}"
                    },
                    "effectivityInfo": {
                        "name": "{{function:getEffectivityName}}",
                        "endItemRev": {
                            "uid": "",
                            "type": ""
                        },
                        "unitRangeText": "",
                        "dateRange": "{{function:getDateRangeText}}",
                        "openEndedStatus": "{{data.endDate.openEndedStatus}}",
                        "isProtected": "{{fields.isProtected.value}}",
                        "isShared": "{{fields.isShared.value}}"
                    }
                }
            },
            "outputData": {
                "occurrenceConfigured": "updated",
                "occurrenceUnconfigured": "deleted"
            },
            "events": {
                "success": [ {
                        "name": "occurrenceUpdatedByEffectivityEvent",
                        "eventData": {
                            "updated": "{{data.occurrenceConfigured}}",
                            "deleted": "{{data.occurrenceUnconfigured}}",
                            "viewToReact": "{{props.subPanelContext.provider.contextKey}}",
                            "addedEffectivities": "",
                            "state": "COMPLETED",
                            "source": "toolAndInfoPanel"
                        }
                    },
                    {
                        "name": "complete",
                        "eventData":
                        {
                            "source": "toolAndInfoPanel"
                        },
                        "condition": "data.occurrenceUnconfigured && data.occurrenceUnconfigured.includes(ctx.selected.uid)"
                    },
                    {
                        "name": "navigateToDisplayandRemovePanelEvent",
                        "condition": "data.occurrenceConfigured && data.occurrenceConfigured.includes(ctx.selected.uid)"
                    },
                    {
                        "name": "aceElementsDeSelectedEvent",
                        "eventData": {
                            "elementsToDeselect": [ "{{ctx.selected}}" ]
                        },
                        "condition": "data.occurrenceUnconfigured && data.occurrenceUnconfigured.includes(ctx.selected.uid)"
                    }
                ]
            },

            "actionMessages": {
                "failure": [ {
                        "message": "failedToSaveEffectivityMessage"
                    },

                    {
                        "condition": "errorCode==710079",
                        "message": "duplicateEffectivityCreationErrorMessage"
                    }
                ]
            },

            "deps": "js/sharedEffectivityService"
        },
        "editRevisionEffectivity": {
            "actionType": "TcSoaService",
            "serviceName": "StructureManagement-2015-10-Effectivity",
            "method": "editReleaseStatusEffectivity",
            "inputData": {
                "input": [ {
                    "releaseStatus": {
                        "uid": "{{props.subPanelContext.sharedData.releaseStatus.uid}}",
                        "type": "{{props.subPanelContext.sharedData.releaseStatus.type}}"
                    },
                    "effectivityComponent": {
                        "uid": "{{props.subPanelContext.sharedData.selectedCell.uid}}",
                        "type": "{{props.subPanelContext.sharedData.selectedCell.type}}"
                    },
                    "effectivityInfoInput": {
                        "effectivityId": "{{function:getEffectivityName}}",
                        "endItem": {
                            "uid": "",
                            "type": ""
                        },
                        "unitRangeText": "",
                        "dateRange": "{{function:getDateRangeText}}",
                        "openEndedStatus": "{{data.endDate.openEndedStatus}}",
                        "isProtected": "{{fields.isProtected.value}}"
                    }
                } ]
            },
            "outputData": {},
            "events": {
                "success": [ {
                        "name": "releaseStatusUpdatedByEffectivityEvent"
                    },
                    {
                        "name": "navigateToDisplayandRemoveRelEffPanelEvent"
                    }

                ]
            },
            "actionMessages": {
                "failure": [ {
                        "message": "failedToSaveEffectivityMessage"
                    },
                    {
                        "condition": "errorCode==214011",
                        "message": "duplicateEffectivityCreationErrorMessage"
                    }
                ]
            },
            "deps": "js/sharedEffectivityService"
        },
        "refreshSelectedObject": {
            "actionType": "JSFunction",
            "method": "updateEffectivities",
            "inputData": {
                "selectedModelObject": "{{ctx.selected}}",
                "subPanelContext": "{{props.subPanelContext}}"
            },
            "deps": "js/sharedEffectivityService"
        },
        "navigateToDisplayandRemovePanelAction": {
            "actionType": "JSFunction",
            "method": "updateValueOnCtxOrState",
            "inputData": {
                "path": "",
                "value": {
                    "previousView": "{{props.subPanelContext.sharedData.activeView}}",
                    "activeView": "DisplayAndRemoveEffectivities"
                },
                "target": "{{props.subPanelContext.sharedData}}"
            },
            "deps": "js/occmgmtUtils"
        },
        "navigateToDisplayandRemoveRelEffPanelAction": {
            "actionType": "JSFunction",
            "method": "updateValueOnCtxOrState",
            "inputData": {
                "path": "",
                "value": {

                    "previousView": "{{props.subPanelContext.sharedData.activeView}}",
                    "activeView": "DisplayAndRemoveEffectivitiesForRelStatus"
                },
                "target": "{{props.subPanelContext.sharedData}}"
            },
            "deps": "js/occmgmtUtils"
        },
        "updateDateEffectivityStateToDefault": {
            "actionType": "JSFunction",
            "method": "updateDateEffectivityStateToDefault",
            "inputData": {
                "sharedData": "{{props.subPanelContext.sharedData}}"
            },
            "deps": "js/aceEffectivityService"
        },
        "updateProtectCheckBoxOnData": {
            "actionType": "JSFunction",
            "method": "updateProtectCheckBoxOnData",
            "inputData": {
                "sharedData": "{{props.subPanelContext.sharedData}}",
                "data":"{{data}}"
            },
            "outputData": {
                "isProtected.dbValue": ""
            },
            "deps": "js/aceEffectivityService"
        }
    },
    "conditions": {
        "isEndDateGreaterThanStartDate": {
            "expression": "data.endDate.dbValue > data.startDate.dbValue"
        },
        "isEqualDate": {
            "expression": "(data.endDate.dbValue !== '' && data.startDate.dbValue !== '' ) && (data.endDate.dbValue - data.startDate.dbValue) === 0"
        },
        "isValidStartAndEndDate": {
            "expression": "(data.startDate.dbValue !== '' && (data.endDateOptions.dbValue !== 'Date' || (data.endDate.dbValue !== '' && conditions.isEndDateGreaterThanStartDate && !conditions.isEqualDate)))"
        },
        "dateOrUnitEffectivityTypeRadioButton": {
            "expression": "props.subPanelContext.sharedData.dateOrUnitEffectivityTypeRadioButton.dbValue",
            "trackValues": true
        },
        "isValidEffectivityPanel": {
            "expression": "(!data.isShared.dbValue || data.isShared.dbValue === 'false' || data.nameBox.dbValue ) && conditions.isValidStartAndEndDate"
        },
        "isRevisionEffectivity": {
            "expression": "data.flag.dbValue === 'AUTHORREVISION'"
        }
    },
    "lifecycleHooks": {
        "onMount":"updateProtectCheckBoxOnData",
        "onUpdate": [
            {
                "action": "onUpdateEndDateBatchJob",
                "observers": ["viewModel.data.endDate.dbValue", "viewModel.data.startDate.dbValue"]
            },
            {
                "action": "onUpdateShareCheckboxBatchJob",
                "observers": ["viewModel.data.isShared.dbValue"]
            }
        ],
        "onUnmount" : "updateDateEffectivityStateToDefault"
    },
    "onEvent": [
        {
            "eventId": "releaseStatusUpdatedByEffectivityEvent",
            "action": "refreshSelectedObject",
            "condition": "props.subPanelContext.sharedData.activeView === 'AddReleaseStatusEffectivities' || props.subPanelContext.sharedData.activeView === 'EditEffectivities'"
        },
        {
            "eventId": "navigateToDisplayandRemovePanelEvent",
            "action": "navigateToDisplayandRemovePanelAction"
        },
        {
            "eventId": "navigateToDisplayandRemoveRelEffPanelEvent",
            "action": "navigateToDisplayandRemoveRelEffPanelAction"
        }
    ],
    "functions": {
        "getEffectivityName": {
            "functionName": "getEffectivityName",
            "parameters": [
                "{{data}}"
            ]
        },
        "getDateRangeText": {
            "functionName": "getDateRangeText",
            "parameters": [
                "{{data}}",
                "{{props.subPanelContext}}"
            ]
        }
    },
    "messages": {
        "failedToApplyEffectivityMessage": {
            "messageType": "INFO",
            "messageText": "{{i18n.failedToApplyEffectivity}}",
            "messageTextParams": [
                "{{ctx.selected.props.awb0Name.dbValue}}"
            ]
        },
        "duplicateEffectivityCreationErrorMessage": {
            "messageType": "ERROR",
            "messageText": "{{i18n.duplicateEffectivityCreationErrorMessage}}",
            "messageTextParams": [
                "{{data.nameBox.dbValue}}"
            ]
        },
        "failedToSaveEffectivityMessage": {
            "messageType": "INFO",
            "messageText": "{{i18n.failedToSaveEffectivityMessage}}"
        },
       "succsessfullyAddedEffectivityMessage":
        {
            "messageType": "INFO",
            "messageText": "{{i18n.effectivitesSuccessfullyApplied}}",
            "messageTextParams":
            [
                "{{props.subPanelContext.occContext.selectedModelObjects.length}}"
            ]
        },
        "addFailureMessage": {
            "messageType": "ERROR",
            "messageText": "{{i18n.genericServerError}}",
            "messageTextParams": [
                "{{data.effResp.ServiceData.partialErrors[0].errorValues[0].message}}"
            ]
        }
    },
    "props": {
        "sub-panel-context": {
            "type": "object"
        }
    }
}
