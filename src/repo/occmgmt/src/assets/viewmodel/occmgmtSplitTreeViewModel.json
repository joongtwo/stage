{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-splm-table.directive"
    ],
    "actions": {
        "doArrangeEvent": {
            "actionType": "JSFunctionAsync",
            "method": "arrangeColumns",
            "inputData": {
                "declViewModel": "{{data}}",
                "eventData": {
                    "name": "occTreeTable2",
                    "arrangeType": "{{data.eventData.arrangeType}}",
                    "columns": "{{data.eventData.columns}}",
                    "operationType": "{{data.eventData.operationType}}",
                    "objectSetUri": "{{data.eventData.objectSetUri}}"
                }
            },
            "deps": "js/columnArrangeService"
        },
        "groupObjectsByProperties": {
            "actionType": "JSFunction",
            "method": "groupObjectsByProperties",
            "deps": "js/aceColorDecoratorService",
            "inputData": {
                "vmos": "{{data.dataProviders.occDataProvider2.viewModelCollection.loadedVMObjects}}"
            }
        },
        "toggleTreeNodeHierarchy": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "toggleTreeNodeHierarchy",
                    "eventData": {
                        "data": "{{data}}",
                        "row": "{{data.eventData}}"
                    }
                } ]
            }
        },
        "loadDataForSavedColumnConfig": {
            "actionType": "JSFunctionAsync",
            "method": "getTableViewModelProperties",
            "deps": "js/tcViewModelObjectService",
            "inputData": {
                "vmNodes": "{{data.dataProviders.occDataProvider2.viewModelCollection.loadedVMObjects}}",
                "context": {
                    "clientScopeURI": "{{data.dataProviders.occDataProvider2.objectSetUri}}",
                    "clientName": "AWClient",
                    "columnsToExclude": "{{ctx.occmgmtContext2.columnsToExclude}}",
                    "operationType": "{{eventData.operationType}}"
                }
            },
            "outputData": {
                "newColumnConfig": "result.output.columnConfig"
            },
            "events": {
                "success": [ {
                    "name": "occTreeTable2.updateOccMgmtSplitTreeColumns"
                } ]
            }
        },
        "loadInitialOccurrences": {
            "actionType": "JSFunctionAsync",
            "method": "loadTreeTableData",
            "inputData": {
                "methodArgument": {
                    "treeLoadInput": "request.treeLoadInput",
                    "dataProviderActionType": "initializeAction",
                    "loadIDs": "request.loadIDs",
                    "grid": "{{data.grids.occTreeTable2}}",
                    "uwDataProvider": "{{data.dataProviders.occDataProvider2}}",
                    "declViewModel": "{{data}}",
                    "sortCriteria": "{{data.columnProviders.occColumnProvider2.sortCriteria}}",
                    "subPanelContext": "{{props.subPanelContext.provider}}"
                }
            },
            "outputData": {
                "ctx.locationContext.modelObject": "result.treeLoadResult.baseModelObject",
                "ctx.objectQuotaContext.useObjectQuota": "result.treeLoadResult.useObjectQuotatoUnload",
                "ctx.changeContext": "result.treeLoadResult.changeContext",
                "ctx.occmgmtContext2.serializedRevRule": "result.treeLoadResult.serializedRevRule",
                "ctx.occmgmtContext2.modelObject": "result.treeLoadResult.baseModelObject",
                "ctx.occmgmtContext2.productContextInfo": "result.treeLoadResult.productContextInfo",
                "ctx.occmgmtContext2.openedElement": "result.treeLoadResult.openedModelObject",
                "ctx.occmgmtContext2.topElement": "result.treeLoadResult.topModelObject",
                "ctx.occmgmtContext2.sublocationAttributes": "result.treeLoadResult.sublocationAttributes",
                "ctx.occmgmtContext2.recipe": "result.treeLoadResult.filter.recipe",
                "ctx.occmgmtContext2.searchFilterCategories": "result.treeLoadResult.filter.searchFilterCategories",
                "ctx.occmgmtContext2.searchFilterMap": "result.treeLoadResult.filter.searchFilterMap",
                "ctx.occmgmtContext2.elementToPCIMap": "result.treeLoadResult.elementToPCIMap",
                "ctx.isRedLineMode": "result.treeLoadResult.isRedLineMode",
                "ctx.occmgmtContext2.isChangeEnabled": "result.treeLoadResult.isChangeEnabled",
                "ctx.occmgmtContext2.sublocation.clientScopeURI":"result.treeLoadResult.productContextInfo.props.awb0ClientScopeUri.dbValues[0]",
                "dataProviders.occDataProvider2.ttState": "result.treeLoadResult.ttstate",
                "dataProviders.occDataProvider2.topTreeNode": "result.treeLoadResult.newTopNode",
                "dataProviders.occDataProvider2.topNodeUid": "result.treeLoadResult.newTopNode.uid",
                "dataProviders.occDataProvider2.objectSetUri":"result.treeLoadResult.productContextInfo.props.awb0ClientScopeUri.dbValues[0]",
                "dataProviders.occDataProvider2.columnConfig": "result.treeLoadResult.columnConfig"
            },
            "events": {
                "success": [ {
                    "name": "occDataLoadedEvent",
                    "eventData": {
                        "contextKey": "{{props.subPanelContext.provider.contextKey}}",
                        "dataProviderActionType": "initializeAction",
                        "occContext": "{{props.subPanelContext.provider.occContext}}"
                    }
                }, {
                    "name": "occMgmt.visibilityStateChanged",
                    "eventData": {
                        "viewToReact": "{{props.subPanelContext.provider.contextKey}}",
                        "sourceGridId": "occTreeTable2"
                    }
                } ]
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "loadOccurrencesWithFocus": {
            "actionType": "JSFunctionAsync",
            "method": "loadOccurrencesWithFocusInTreeTable",
            "inputData": {
                "methodArgument": {
                    "treeLoadInput": "request.treeLoadInput",
                    "dataProviderActionType": "focusAction",
                    "loadIDs": "request.loadIDs",
                    "gridOptions": "{{data.grids.occTreeTable2.gridOptions}}",
                    "uwDataProvider": "{{data.dataProviders.occDataProvider2}}",
                    "declViewModel": "{{data}}",
                    "sortCriteria": "{{data.columnProviders.occColumnProvider2.sortCriteria}}",
                    "subPanelContext": "{{props.subPanelContext.provider}}"
                }
            },
            "outputData": {
                "dataProviders.occDataProvider2.columnConfig": "result.treeLoadResult.columnConfig"
            },
            "events": {
                "success": [ {
                    "name": "occDataLoadedEvent",
                    "eventData": {
                        "contextKey": "{{props.subPanelContext.provider.contextKey}}",
                        "dataProviderActionType": "focusAction"
                    }
                } ]
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "loadNextOccurrences": {
            "actionType": "JSFunctionAsync",
            "method": "loadNextOccurrencesInTreeTable",
            "inputData": {
                "methodArgument": {
                    "treeLoadInput": "request.treeLoadInput",
                    "dataProviderActionType": "nextAction",
                    "loadIDs": "request.loadIDs",
                    "gridOptions": "{{data.grids.occTreeTable2.gridOptions}}",
                    "uwDataProvider": "{{data.dataProviders.occDataProvider2}}",
                    "declViewModel": "{{data}}",
                    "sortCriteria": "{{data.columnProviders.occColumnProvider2.sortCriteria}}",
                    "subPanelContext": "{{props.subPanelContext.provider}}"
                }
            },
            "outputData": {
                "dataProviders.occDataProvider2.columnConfig": "result.treeLoadResult.columnConfig",
                "dataProviders.occDataProvider2.scrollPosition": "{{function:clearCurrentExpandBelowBufferVmo}}"
            },
            "events": {
                "success": [ {
                    "name": "occDataLoadedEvent",
                    "eventData": {
                        "contextKey": "{{props.subPanelContext.provider.contextKey}}",
                        "dataProviderActionType": "nextAction"
                    }
                } ]
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "loadPreviousOccurrences": {
            "actionType": "JSFunctionAsync",
            "method": "loadPreviousOccurrencesInTreeTable",
            "inputData": {
                "methodArgument": {
                    "treeLoadInput": "request.treeLoadInput",
                    "dataProviderActionType": "previousAction",
                    "loadIDs": "request.loadIDs",
                    "gridOptions": "{{data.grids.occTreeTable2.gridOptions}}",
                    "uwDataProvider": "{{data.dataProviders.occDataProvider2}}",
                    "declViewModel": "{{data}}",
                    "sortCriteria": "{{data.columnProviders.occColumnProvider2.sortCriteria}}",
                    "subPanelContext": "{{props.subPanelContext.provider}}"
                }
            },
            "outputData": {
                "dataProviders.occDataProvider2.columnConfig": "result.treeLoadResult.columnConfig",
                "dataProviders.occDataProvider2.scrollPosition": "{{function:clearCurrentExpandBelowBufferVmo}}"
            },
            "events": {
                "success": [ {
                    "name": "occDataLoadedEvent",
                    "eventData": {
                        "contextKey": "{{props.subPanelContext.contextKey}}",
                        "dataProviderActionType": "previousAction"
                    }
                } ]
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "loadOccProperties": {
            "actionType": "JSFunctionAsync",
            "method": "loadTreeTableProperties",
            "inputData": {
                "methodArgument": {
                    "propertyLoadInput": "request.propertyLoadInput",
                    "propertyLoadContext": {
                        "clientName": "AWClient",
                        "clientScopeURI": "{{data.dataProviders.occDataProvider2.objectSetUri}}",
                        "typesForArrange": "{{data.dataProviders.occDataProvider2.columnConfig.typesForArrange}}"
                    },
                    "contextKey": "{{props.subPanelContext.provider.contextKey}}",
                    "declViewModel": "{{data}}",
                    "uwDataProvider": "{{data.dataProviders.occDataProvider2}}",
                    "subPanelContext": "{{props.subPanelContext.provider}}"
                }
            },
            "outputData": {
                "dataProviders.occDataProvider2.columnConfig": "result.propertyLoadResult.columnConfig",
                "ctx.searchResponseInfo.columnConfig": "result.propertyLoadResult.columnConfig",
                "dataProviders.occDataProvider2.scrollPosition": "{{function:clearCurrentPropBufferVmo}}"
            },
            "deps": "js/occmgmtTreeTableDataService",
            "events": {
                "success": [ {
                    "name": "occMgmt.visibilityStateChanged",
                    "eventData": {
                        "viewToReact": "{{props.subPanelContext.provider.contextKey}}",
                        "sourceGridId": "occTreeTable2"
                    }
                } ]
            }
        },
        "loadOccColumns": {
            "actionType": "JSFunctionAsync",
            "method": "loadTreeTableColumns",
            "inputData": {
                "dataProvider": "{{data.dataProviders.occDataProvider2}}",
                "columnProvider": "{{data.columnProviders.occColumnProvider2}}"
            },
            "outputData": {
                "dataProviders.occDataProvider2.columnConfig": "columnConfig"
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "addNodeToExpansionState": {
            "actionType": "JSFunction",
            "method": "addNodeToExpansionState",
            "inputData": {
                "node": "{{data.eventData.nodeToExpand}}",
                "data": "{{data}}"
            },
            "deps": "js/occmgmtTreeTableStateService"
        },
        "updateTreeNodeStates":{
            "actionType": "JSFunction",
            "method": "updateTreeNodeStates",
            "inputData": {
                "vmNodes": "{{data.dataProviders.occDataProvider2.viewModelCollection.loadedVMObjects}}",
                "data": "{{data}}",
                "subPanelContext": "{{props.subPanelContext.provider}}"
            },
            "deps": "js/occmgmtTreeTableStateService"
        },
        "addNodeToCollapsedState": {
            "actionType": "JSFunction",
            "method": "addNodeToCollapsedState",
            "inputData": {
                "data": "{{data}}",
                "row": "{{data.eventData}}"
            },
            "deps": "js/occmgmtTreeTableStateService"
        },
        "resetColumnConfig": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2022-06-UiConfig",
            "method": "getOrResetUIColumnConfigs3",
            "inputData": {
                "getOrResetUiConfigsIn": [ {
                    "scope": "LoginUser",
                    "scopeName": "",
                    "clientName": "AWClient",
                    "resetColumnConfig": true,
                    "columnConfigQueryInfos": [ {
                        "clientScopeURI": "{{data.dataProviders.occDataProvider2.objectSetUri}}",
                        "operationType": "union",
                        "typeNames": "{{data.dataProviders.occDataProvider2.columnConfig.typesForArrange}}",
                        "columnsToExclude": "{{ctx.occmgmtContext2.columnsToExclude}}"
                    } ],
                    "businessObjects": [ {} ]
                } ]
            },
            "outputData": {
                "dataProviders.occDataProvider2.columnConfig": "{{function:postResetFunction}}",
                "newColumnConfig": "columnConfigurations[0].columnConfigurations[0]"
            },
            "events": {
                "success": [ {
                    "name": "occTreeTable2.updateOccMgmtSplitTreeColumns"
                } ]
            },
            "deps": "js/tcarrange.service"
        },
        "saveColumnConfigLoadData": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2016-03-UiConfig",
            "method": "saveUIColumnConfigs",
            "inputData": {
                "columnConfigurations": [ {
                    "clientScopeURI": "{{data.dataProviders.occDataProvider2.objectSetUri}}",
                    "columnConfigId": "{{data.dataProviders.occDataProvider2.columnConfig.columnConfigId}}",
                    "columns": "{{data.dataProviders.occDataProvider2.newColumns}}",
                    "scope": "LoginUser",
                    "scopeName": ""
                } ]
            },
            "outputData": {},
            "events": {
                "success": [ {
                    "name": "occmgmtColumnConfig.saved"
                } ]
            }
        },
        "saveColumnConfigData": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2016-03-UiConfig",
            "method": "saveUIColumnConfigs",
            "inputData": {
                "columnConfigurations": [ {
                    "clientScopeURI": "{{data.dataProviders.occDataProvider2.objectSetUri}}",
                    "columnConfigId": "{{data.dataProviders.occDataProvider2.columnConfig.columnConfigId}}",
                    "columns": "{{data.dataProviders.occDataProvider2.newColumns}}",
                    "scope": "LoginUser",
                    "scopeName": ""
                } ]
            },
            "outputData": {}
        },
        "updateDisplayNames": {
            "actionType": "JSFunction",
            "method": "updateDisplayNames",
            "inputData": {
                "loadedVMObjects": "{{data.dataProviders.occDataProvider2.viewModelCollection.loadedVMObjects}}",
                "eventData": "{{data.eventData}}"
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "setOccVisibility": {
            "actionType": "JSFunction",
            "method": "setOccVisibility",
            "inputData": {
                "loadedVMObjects": "{{data.dataProviders.occDataProvider2.viewModelCollection.loadedVMObjects}}",
                "contextKey": "{{props.subPanelContext.provider.contextKey}}",
                "gridId": "occTreeTable2"
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "swaTabChange": {
            "actionType": "JSFunction",
            "method": "swaTabChange",
            "inputData": {
                "subPanelContext": "{{props.subPanelContext.provider}}"
            },
            "deps": "js/aceSwaService"
        },
        "processVMC": {
            "actionType": "JSFunction",
            "method": "processViewModelCollectionEvent",
            "inputData": {
                "vmc": "{{data.dataProviders.occDataProvider2.viewModelCollection}}",
                "eventInfo": "{{data}}"
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "applyCellRenderers": {
            "actionType": "JSFunction",
            "method": "resetpropHighLightForCompare",
            "inputData": {
                "eventInfo": "{{data.dataProviders.occDataProvider2.cols}}"
            },
            "deps": "js/occmgmtCellRenderingService"
        },
        "applyInContextOverrideStatesOnNewlyLoadedObjectsInTree": {
            "actionType": "JSFunction",
            "method": "applyInContextOverrideStatesOnNewlyLoadedObjectsInTree",
            "inputData": {
                "contextKey": "{{props.subPanelContext.provider.contextKey}}",
                "eventData": "{{data.eventData}}"
            },
            "deps": "js/aceInContextOverrideService"
        },
        "publishClientRefreshEventForPlTable": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "occTreeTable2.plTable.clientRefresh"
                } ]
            }
        },
        "updateOccMgmtSplitTreeColumns": {
            "actionType": "JSFunction",
            "method": "updateOccMgmtTreeTableColumns",
            "inputData": {
                "data": "{{data}}",
                "dataProvider": "{{data.dataProviders.occDataProvider2}}",
                "subPanelContext": "{{props.subPanelContext.provider}}"
            },
            "outputData": {
                "newColumnConfig": "result.newColumnConfig",
                "dataProviders.occDataProvider2.columnConfig": "result.columnConfig"
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "bufferExtraPages": {
            "actionType": "JSFunction",
            "method": "bufferExtraPages",
            "inputData": {
                "gridId": "occTreeTable2",
                "uwDataProvider": "{{data.dataProviders.occDataProvider2}}",
                "scrollEventData": "{{data.eventData}}",
                "subPanelContext": "{{props.subPanelContext.provider}}"
            },
            "outputData": {
                "dataProviders.occDataProvider2.scrollPosition": ""
            },
            "deps": "js/occmgmtTreeTableBufferService"
        },
        "multiSelectModeActionBatchJob": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "setShowCheckBoxValue"
                },
                {
                    "action": "multiSelectActionForPWA"
                },
                {
                    "action": "publishClientRefreshEventForPlTable"
                }
            ]
        },
        "setShowCheckBoxValue": {
            "actionType": "JSFunction",
            "method": "setShowCheckBoxValue",
            "inputData": {
                "eventData": "{{data.eventData}}"
            },
            "outputData": {
                "showCheckBox": ""
            },
            "deps": "js/awDataNavigatorService"
        },
        "multiSelectActionForPWA": {
            "actionType": "JSFunction",
            "method": "multiSelectActionForPWA",
            "inputData": {
                "pwaSelectionModel": "{{data.eventData.pwaSelectionModel}}",
                "eventData": "{{data.eventData}}"
            },
            "deps": "js/awDataNavigatorService"
        }
    },
    "data": {

    },
    "i18n": {

    },
    "functions": {
        "clearCurrentPropBufferVmo": {
            "functionName": "clearCurrentPropBufferVmo",
            "parameters": [
                "{{dataProviders.occDataProvider2.scrollPosition}}"
            ]
        },
        "clearCurrentExpandBelowBufferVmo": {
            "functionName": "clearCurrentExpandBelowBufferVmo",
            "parameters": [
                "{{dataProviders.occDataProvider2.scrollPosition}}"
            ]
        },
        "postResetFunction": {
            "functionName": "postResetFunction",
            "parameters": [
                "{{data.dataProviders.occDataProvider2.columnConfig}}"
            ]
        }
    },
    "dataProviders": {
        "occDataProvider2": {
            "initializeAction": "loadInitialOccurrences",
            "nextAction": "loadNextOccurrences",
            "previousAction": "loadPreviousOccurrences",
            "focusAction": "loadOccurrencesWithFocus",
            "editContext": "{{subPanelContext.provider.editContext}}",
            "treeLoadResult": "action.result.treeLoadResult",
            "selectionModelMode": "multiple",
            "treePageSize": 250,
            "cacheCollapse": true,
            "inputData": {
                "selectionModel": "{{subPanelContext.selectionModel}}",
                "accessMode": "tree",
                "topNodeUid": "{{ctx.aceActiveContext.context.currentState.uid}}"
            }
        },
        "occPropertyProvider2": {
            "action": "loadOccProperties",
            "propertyLoadResult": "action.result.propertyLoadResult"
        }
    },

    "columnProviders": {
        "occColumnProvider2": {
            "loadColumnAction": "loadOccColumns",
            "columns": "{{data.columns}}",
            "saveColumnAction": "saveColumnConfigData",
            "saveColumnAndLoadAction": "saveColumnConfigLoadData",
            "resetColumnAction": "resetColumnConfig"
        }
    },
    "grids": {
        "occTreeTable2": {
            "dataProvider": "occDataProvider2",
            "propertyProvider": "occPropertyProvider2",
            "columnProvider": "occColumnProvider2",
            "enableArrangeMenu": true,
            "addIconColumn": false,
            "gridOptions": {
                "useStaticFirstCol": true
            }
        }
    },
    "lifecycleHooks": {
        "onUpdate": [ {
            "action": "swaTabChange",
            "observers": [ "props.subPanelContext.provider.pageContext.sublocationState.secondaryActiveTabId" ]
        },
        {
            "action": "updateTreeNodeStates",
            "observers": [ "props.subPanelContext.provider.occContext.transientRequestPref.updateTreeNodeStates" ]
        },
        {
            "action": "updateTreeNodeStates",
            "observers": [ "viewModel.dataProviders.occDataProvider2.viewModelCollection.loadedVMObjects" ]
        } ]
    },
    "onEvent": [ {
            "eventId": "columnArrange",
            "cacheEventData": true,
            "action": "doArrangeEvent",
            "condition": "name === 'occTreeTable2' || ( name === 'occTreeTable' && ( ctx.occmgmtContext.sublocation.clientScopeURI === ctx.occmgmtContext2.sublocation.clientScopeURI ) )"
        },
        {
            "eventId": "occmgmtColumnConfig.saved",
            "cacheEventData": true,
            "action": "loadDataForSavedColumnConfig",
            "condition": "!ctx.editInProgress"
        },
        {
            "eventId": "ace.groupObjectCategoryChanged",
            "action": "groupObjectsByProperties",
            "condition": "ctx.decoratorToggle"
        },
        {
            "eventId": "occDataProvider2.modelObjectsUpdated",
            "action": "groupObjectsByProperties",
            "condition": "ctx.decoratorToggle"
        },
        {
            "eventId": "occDataProvider2.modelObjectsUpdated",
            "cacheEventData": true,
            "action": "updateDisplayNames"
        },
        {
            "eventId": "occDataProvider2.toggleTreeNodeHierarchy",
            "cacheEventData": true,
            "action": "toggleTreeNodeHierarchy"
        },
        {
            "eventId": "occDataProvider2.addNodeToExpansionState",
            "cacheEventData": true,
            "action": "addNodeToExpansionState"
        },
        {
            "eventId": "occDataProvider2.addNodeToCollapsedState",
            "cacheEventData": true,
            "action": "addNodeToCollapsedState"
        },
        {
            "eventId": "occMgmt.visibilityStateChanged",
            "condition": "viewToReact ? viewToReact === 'occmgmtContext2' : true",
            "action": "setOccVisibility"
        },
        {
            "eventId": "vmc.modified.occDataProvider2",
            "cacheEventData": true,
            "action": "updateDisplayNames"
        },
        {
            "eventId": "vmc.modified.occDataProvider2",
            "cacheEventData": true,
            "action": "processVMC"
        },
        {
            "eventId": "reRenderTableOnClient",
            "condition": "ctx.aceActiveContext.key === 'occmgmtContext2' || refreshAllViews === true",
            "action": "publishClientRefreshEventForPlTable"
        },
        {
            "eventId": "occDataProvider2.treeNodesLoaded",
            "cacheEventData": true,
            "condition": "ctx.occmgmtContext2.currentState.incontext_uid !== undefined && ctx.occmgmtContext2.currentState.incontext_uid !== null",
            "action": "applyInContextOverrideStatesOnNewlyLoadedObjectsInTree"
        },
        {
            "eventId": "refreshCellRenderersForCompare",
            "action": "applyCellRenderers"
        },
        {
            "eventId": "occTreeTable2.updateOccMgmtSplitTreeColumns",
            "action": "updateOccMgmtSplitTreeColumns"
        },
        {
            "eventId": "primaryWorkarea.multiSelectModeAction",
            "condition": "ctx.aceActiveContext.key === 'occmgmtContext2'",
            "cacheEventData": true,
            "action": "multiSelectModeActionBatchJob"
        },
        {
            "eventId": "occTreeTable2.plTable.loadMorePages",
            "condition": "data.subPanelContext.provider.occContext.LoadTreePropsTimerDebug === 'false'",
            "cacheEventData": true,
            "action": "bufferExtraPages"
        }
    ]
}
