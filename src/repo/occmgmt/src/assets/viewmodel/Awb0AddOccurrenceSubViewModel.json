{
    "schemaVersion": "1.0.0",
    "actions": {
        "initialize": {
            "actionType": "JSFunction",
            "method": "updateStateAddElement",
            "inputData": {
                "data" : "{{data}}",
                "subPanelContext" : "{{props.subPanelContext}}"
            },
            "outputData": {},
            "deps": "js/addElementService"
        },
        "processAddElementInput": {
            "actionType": "JSFunction",
            "method": "processAddElementInput",
            "inputData": {},
            "outputData": {},
            "deps": "js/addElementService"
        },
        "getInfoForAddElementAction": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-ActiveWorkspaceBom-2021-06-OccurrenceManagement",
            "method": "getInfoForAddElement4",
            "inputData": {
                "getInfoForElementIn": {
                    "parentElement": "{{props.subPanelContext.addElementState.parentToLoadAllowedTypes}}",
                    "fetchAllowedOccRevTypes": true
                }
            },
            "outputData": {
                "allowedTypeInfo": "{{function:extractAllowedTypesInfoFromResponse}}"
            },
            "events": {
                "success": [ {
                    "name": "getInfoForAddElement.ensureTypesLoaded"
                } ]
            },
            "deps": "js/addElementService"
        },
        "getRevisionData": {
            "actionType": "JSFunction",
            "method": "getRevisionData",
            "inputData": {
                "createdObject": "{{eventData.createdObject}}",
                "sourceObjects": "{{eventData.sourceObjects}}"
            },
            "outputData": {
                "totalFound": "totalFound",
                "searchResults": "searchResults"
            },
            "deps": "js/addRevOccService"
        },
        "getChildRevision": {
            "actionType": "dataProvider",
            "method": "getChildRevisionDataProvider"
        },
        "clearCreatedElementField": {
            "actionType": "JSFunction",
            "method": "clearCreatedElementField",
            "inputData": {
                "data": "{{data}}"
            },
            "events": {
                "success": [ {
                    "name": "addElement.closePanel"
                } ]
            },
            "deps": "js/addElementService"
        },
        "addUsagePropertiesAndSetCreateInputContext": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "initializePanelProperties"
                },
                {
                    "action": "revOccSetElementCreateInput"
                },
                {
                    "action": "loadCreatedObjects"
                },
                {
                    "action": "revOccAddElementsWithCreateInput"
                }
            ]
        },
        "initializePanelProperties": {
            "actionType": "JSFunction",
            "method": "initializePanelProperties",
            "inputData": {
                "value": "{{addPanelState}}"
            },
            "outputData": {
                "createSubType": "createSubType",
                "numberOfElements" : "numberOfElements"
            },
            "deps": "js/addRevOccService"
        },
        "revOccSetElementCreateInput": {
            "actionType": "JSFunction",
            "method": "buildElementCreateInputAndUpdateState",
            "inputData": {
                "value": "{{data}}",
                "subPanelContext": "{{props.subPanelContext}}"
            },
            "outputData": {},
            "deps": "js/addElementService"
        },
        "loadCreatedObjects": {
            "actionType": "JSFunction",
            "method": "loadCreatedObjects",
            "inputData": {
                "data": "{{data}}",
                "addPanelState": "{{addPanelState}}"
            },
            "outputData": {
                "addPanelState": ""
            },
            "deps": "js/addRevOccService"
        },
        "revOccAddElementsWithCreateInput": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-ActiveWorkspaceBom-2021-06-OccurrenceManagement",
            "method": "addObject3",
            "inputData": {
                "input": {
                    "objectsToBeAdded": "{{function:getElementsToAdd}}",
                    "parentElement": "{{props.subPanelContext.addElementState.parent}}",
                    "siblingElement": "{{props.subPanelContext.addElementState.siblingElement}}",
                    "inputCtxt": {
                        "productContext": "{{props.subPanelContext.occContext.productContextInfo}}"
                    },
                    "sortCriteria": {
                        "propertyName": "{{ctx.aceActiveContext.context.sortCriteria[0].fieldName}}",
                        "sortingOrder": "{{ctx.aceActiveContext.context.sortCriteria[0].sortDirection}}"
                    },
                    "addObjectIntent": "",
                    "fetchPagedOccurrences": "{{props.subPanelContext.addElementState.fetchPagedOccurrences}}",
                    "requestPref": {
                        "displayMode": [ "{{function:getDisplayMode}}" ],
                        "structExpanded": [ "{{function:getExpandedValue}}" ]
                    },
                    "numberOfElements": 1,
                    "createInputs": [
                        "{{props.subPanelContext.addElementState.elementCreateInput[0].createData}}"
                    ]
                }
            },
            "outputData": {
                "addElementResponse": "",
                "totalObjectsAdded": "{{function:getTotalNumberOfChildrenAdded}}"
            },
            "events": {
                "success": [
                    {
                        "name": "acePwa.reset",
                        "condition": "conditions.areNewElementsAdded && conditions.isPanelPinned && !conditions.isTreeMode"
                    },
                    {
                        "name": "addElement.elementsAdded",
                        "eventData": {
                            "objectsToSelect": "{{function:getNewlyAddedChildElements}}",
                            "addElementResponse": "{{data.addElementResponse}}",
                            "viewToReact": "{{props.subPanelContext.provider.contextKey}}",
                            "updatedParentElement" : "{{props.subPanelContext.addElementState.parent}}"
                        },
                        "condition": "conditions.areNewElementsAdded"
                    },
                    {
                        "name": "aceElementsSelectionUpdatedEvent",
                        "eventData": {
                            "objectsToSelect": "{{function:getNewlyAddedChildElements}}"
                        },
                        "condition": "conditions.isSelectionUpdateEventApplicable"
                    },
                    {
                        "name": "aceElementsSelectionUpdatedEvent",
                        "eventData": {
                            "objectsToSelect": "{{function:getNewlyAddedChildElements}}"
                        },
                        "condition": "conditions.areNewElementsAdded && !conditions.isPanelPinned && conditions.addingToOpenedElement && !conditions.isTreeMode"
                    },
                    {
                        "name": "acePwa.reset",
                        "condition": "conditions.areNewElementsAdded && !conditions.isPanelPinned && conditions.addingToOpenedElement && !conditions.isTreeMode && !conditions.onlyOneElementAdded"
                    },
                    {
                        "name": "addElement.updateSelectionInPWA",
                        "eventData": {
                            "objectToSelect": "{{props.subPanelContext.addElementState.parent.uid}}"
                        },
                        "condition": "conditions.areNewElementsAdded && props.subPanelContext.addElementState.parentElement.uid !== props.subPanelContext.addElementState.parent.uid"
                    },
                    {
                        "name": "addElement.clearCreatedElementField"
                    }
                ],
                "failure": [ {
                        "name": "addElement.clearCreatedElementField"
                    },
                    {
                        "name": "acePwa.reset",
                        "condition": "conditions.areNewElementsAdded && conditions.isPanelPinned && !conditions.isTreeMode"
                    },
                    {
                        "name": "addElement.elementsAdded",
                        "eventData": {
                            "objectsToSelect": "{{function:getNewlyAddedChildElements}}",
                            "addElementResponse": "{{data.addElementResponse}}",
                            "viewToReact": "{{props.subPanelContext.provider.contextKey}}",
                            "updatedParentElement" : "{{props.subPanelContext.addElementState.parent}}"
                        },
                        "condition": "conditions.areNewElementsAdded"
                    },
                    {
                        "name": "aceElementsSelectionUpdatedEvent",
                        "eventData": {
                            "objectsToSelect": "{{function:getNewlyAddedChildElements}}"
                        },
                        "condition": "conditions.isSelectionUpdateEventApplicable"
                    },
                    {
                        "name": "aceElementsSelectionUpdatedEvent",
                        "eventData": {
                            "objectsToSelect": "{{function:getNewlyAddedChildElements}}"
                        },
                        "condition": "conditions.areNewElementsAdded && !conditions.isPanelPinned && conditions.addingToOpenedElement && !conditions.isTreeMode"
                    },
                    {
                        "name": "acePwa.reset",
                        "condition": "conditions.areNewElementsAdded && !conditions.isPanelPinned && conditions.addingToOpenedElement && !conditions.isTreeMode && !conditions.onlyOneElementAdded"
                    },
                    {
                        "name": "addElement.updateSelectionInPWA",
                        "eventData": {
                            "objectToSelect": "{{props.subPanelContext.addElementState.parent.uid}}"
                        },
                        "condition": "conditions.areNewElementsAdded && props.subPanelContext.addElementState.parentElement.uid !== props.subPanelContext.addElementState.parent.uid"
                    }
                ]
            },
            "actionMessages": {
                "failure": [ {
                    "message": "genericAddRevOccFailure"
                } ]
            },
            "deps": "js/addElementService"
        },
        "createAndAddElementWithUsage": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "awb0Element.addUsageProperties"
                    },
                    {
                        "name": "awPanel.loadNextValues",
                        "condition": "conditions.isPanelPinned"
                    }
                ]
            }
        },
        "closePanel": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "complete",
                    "condition": "!data._internal.isDestroyed && (!conditions.isPanelPinned || conditions.isPwaSelectionChanged)",
                    "eventData": {
                        "source": "toolAndInfoPanel"
                    }
                } ]
            }
        },
        "setActiveView": {
            "actionType": "JSFunction",
            "method": "resetActiveView",
            "inputData": {
                "stateName": "{{data.activeState}}",
                "destPanelId": "AddObjectPrimarySub"
            },
            "outputData": {
                "activeState": ""
            },
            "deps": "js/addObjectUtils"
        }
    },
    "messages": {
        "genericAddRevOccFailure": {
            "messageType": "ERROR",
            "messageText": "{{errorCode}}"
        }
    },
    "lifecycleHooks": {
        "onMount": "initialize"
    },
    "onEvent": [
        {
            "eventId": "awb0Element.addUsageProperties",
            "action": "addUsagePropertiesAndSetCreateInputContext"
        },
        {
            "eventId": "addRevOccService.processAddElementInput",
            "action": "processAddElementInput"
        },
        {
            "eventId": "addElement.getInfoForAddElementAction",
            "action": "getInfoForAddElementAction"
        },
        {
            "eventId": "addElement.clearCreatedElementField",
            "action": "clearCreatedElementField"
        },
        {
            "eventId": "addObject.revisionCreated",
            "cacheEventData": true,
            "action": "getChildRevision"
        },
        {
            "eventId": "awb0RemoveRevisionFromListEvent",
            "cacheEventData": true,
            "action": "getChildRevision"
        },
        {
            "eventId": "addElement.closePanel",
            "action": "closePanel"
        },
        {
            "eventId": "gwt.SubLocationContentSelectionChangeEvent",
            "action": "closePanel"
        }
    ],
    "data": {
        "addRevision": "aw_addRevision",
        "addPanelState": {
            "initialValues": {
                "creationType": "",
                "createdObject": "",
                "createdPartObject": "",
                "sourceObjects": "",
                "selectedTab": ""
            },
            "meta": {}
        },
        "activeState": {
            "initialValues": {
                "activeView": "AddObjectPrimarySub",
                "context": {}
            },
            "meta": {}
        },
        "xrtState": {
            "initialValues": {},
            "meta": {
                "xrtVMO": {
                    "field": "true",
                    "type": "viewModelObject"
                }
            }
        }
    },
    "editHandlers": {
        "addPanelEditHandler": {
            "context": "CREATE_PANEL_CONTEXT",
            "dataSource": {
                "xrtVMO": "{{data.xrtState}}"
            }
        }
    },
    "functions": {
        "getElementsToAdd": {
            "functionName": "getElementsToAdd",
            "parameters": [
                "",
                "{{addPanelState.createdPartObject}}",
                ""
            ]
        },
        "getNewlyAddedChildElements": {
            "functionName": "getNewlyAddedChildElements",
            "parameters": [
                "{{data}}"
            ]
        },
        "extractAllowedTypesInfoFromResponse": {
            "functionName": "extractAllowedTypesInfoFromResponse",
            "parameters": []
        },
        "getDisplayMode": {
            "functionName": "getDisplayMode",
            "parameters": []
        },
        "getExpandedValue": {
            "functionName": "getExpandedValue",
            "parameters": [ "{{props.subPanelContext.occContext}}" ]
        },
        "getTotalNumberOfChildrenAdded": {
            "functionName": "getTotalNumberOfChildrenAdded",
            "parameters": [ "{{data}}" ]
        }
    },
    "i18n": {
        "toTitle": [
            "OccmgmtRevOccConstants"
        ],
        "part": [
            "OccmgmtRevOccConstants"
        ],
        "addElementBtn": [
            "OccmgmtRevOccConstants"
        ],
        "addRevisionTitle": [
            "OccmgmtRevOccConstants"
        ]
    },
    "conditions": {
        "isSelectedTypeEmpty": {
            "expression": "data.selectedType.dbValue =='' "
        },
        "isRevisionDataPopulated": {
            "expression": "data.dataProviders.getChildRevisionDataProvider.viewModelCollection.loadedVMObjects.length >= 1"
        },
        "areNewElementsAdded": {
            "expression": "data.totalObjectsAdded>0"
        },
        "isTreeMode": {
            "expression": "ctx.ViewModeContext && (ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView')"
        },
        "addingToOpenedElement": {
            "expression": "ctx.aceActiveContext.context.openedElement.uid === props.subPanelContext.addElementState.parent.uid"
        },
        "isPanelPinned": {
            "expression": "subPanelContext.panelPinned"
        },
        "isPanelUnpinned": {
            "expression": "!subPanelContext.panelPinned"
        },
        "isPwaSelectionChanged": {
            "expression": "props.subPanelContext.addElementState.previousSelectionUid !== ctx.selected.uid"
        },
        "isSelectionUpdateEventApplicable": {
            "expression": {
                "$and": [
                    {
                        "$source": "data.totalObjectsAdded",
                        "$query": {
                            "$gt": 0
                        }
                    },
                    {
                        "$source": "subPanelContext.panelPinned",
                        "$query": {
                            "$eq": false
                        }
                    },
                    {
                        "$source": "ctx.ViewModeContext.ViewModeContext",
                        "$query": {
                            "$in": [
                                "TreeView",
                                "TreeSummaryView"
                            ]
                        }
                    }
                ]
            }
        }
    },
    "dataProviders": {
        "getChildRevisionDataProvider": {
            "action": "getRevisionData",
            "response": "{{data.searchResults}}",
            "totalFound": "{{data.totalFound}}",
            "preSelection": false,
            "selectionModelMode": "single",
            "policy": {
                "types": [ {
                        "name": "ItemRevision",
                        "properties": [
                            { "name": "object_desc" }
                        ]
                    },
                    {
                        "name": "Part Revision",
                        "properties": [
                            { "name": "object_desc" }
                        ]
                    }
                ]
            }
        }
    }
}
