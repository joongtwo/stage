{
    "schemaVersion": "1.0.0",
    "data":
    {
        "triggerCreate": {
            "dbValue": false,
            "type": "BOOLEAN"
        },
        "addPanelState": {
            "initialValues": {
                "creationType": "",
                "createdObject": "",
                "sourceObjects": "",
                "selectedTab": ""
            },
            "meta": {}
        },
        "activeState": {
            "initialValues": {
                "activeView": "AddObjectPrimarySub",
                "context": {}
            },
            "meta": {}
        },
        "projectState": {
            "initialValues": {
                "selectedProjects": [],
                "triggerAssign": false
            },
            "meta": {
                "selectedProjects": {
                    "field": "true",
                    "type": "OBJECT"
                },
                "triggerAssign": {
                    "field": "true",
                    "type": "BOOLEAN"
                }
            }
        },
        "xrtState": {
            "initialValues": {},
            "meta": {
                "xrtVMO": {
                    "field": "true",
                    "type": "viewModelObject"
                }
            }
        }
    },
    "editHandlers": {
        "addPanelEditHandler": {
            "context": "CREATE_PANEL_CONTEXT",
            "dataSource": {
                "xrtVMO": "{{data.xrtState}}"
            }
        }
    },
    "actions":
    {

        "createAndInsertElement": {
            "actionType": "JSFunction",
            "method": "updateCreateTrigger",
            "inputData": {
                "triggerCreate": "{{data.triggerCreate}}",
                "value": true
            },
            "outputData": {
                "triggerCreate": "triggerCreate"
            },
            "deps": "js/addObjectUtils"
        },
        "insertElements":{
            "actionType": "TcSoaService",
            "serviceName": "Internal-ActiveWorkspaceBom-2020-12-OccurrenceManagement",
            "method": "insertLevel2",
            "inputData":{
                "insertLevelInput":{
                    "elements":"{{ctx.aceActiveContext.context.insertLevelInput.selectedElements}}",
                    "objectToBeInserted":"{{function:getParentElementToInsertLevel}}",
                    "productContext":"{{props.subPanelContext.occContext.productContextInfo}}",
                    "sortCriteria":{
                        "propertyName": "{{ctx.aceActiveContext.context.sortCriteria[0].fieldName}}",
                        "sortingOrder": "{{ctx.aceActiveContext.context.sortCriteria[0].sortDirection}}"
                    }
                }
            },
            "outputData": {
                "insertElementResponse":""
            },
            "events":{
                "success":[
                {
                    "name": "insertLevel.elementsInserted",
                    "eventData": {
                        "insertElementResponse": "{{data.insertElementResponse}}",
                        "viewToReact": "{{props.subPanelContext.contextKey}}"
                    }
                }
            ],
            "failure": [ {
                "name": "insertElement.clearCreatedElementField"
            }]
            },
            "actionMessages": {
                "success": [ {
                        "message": "oneelementInsertSuccessfulMessage",
                        "condition": "ctx.aceActiveContext.context.insertLevelInput.selectedElements.length===1"
                    },
                    {
                        "message": "multipleelementsInsertSuccessfulMessage",
                        "condition": "ctx.aceActiveContext.context.insertLevelInput.selectedElements.length>1"
                    }
                ],
                "failure": [ {
                    "message": "insertLevelFailure"
                }]
            },
            "deps": "js/insertElementService"
        },
        "newElementCreatedPostProcessing": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                        "name": "insertElement.insertObjectToSelectedElement",
                        "condition": "conditions.isObjectCreated"
                    }
                ]
            }
        },
        "clearCreatedElementField": {
            "actionType": "JSFunction",
            "method": "clearCreatedElementField",
            "inputData": { },
            "outputData": {
                "createdObject" : ""
            },
            "events": {
                "success": [ {
                    "name": "insertElement.closePanel"
                } ]
            },
            "deps": "js/addElementService"
        },
        "closePanel": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "complete",
                    "eventData": {
                        "source": "toolAndInfoPanel"
                    }
                } ]
            }
        },
        "autoAssignProperty": {
            "actionType": "JSFunction",
            "method": "autoAssignProperty",
            "inputData": {
                "prop": "{{data.eventData.prop}}",
                "operationType": "CREATE",
                "pattern": "{{data.eventData.newPattern}}",
                "selectedObj": "{{}}",
                "hasRevRule": "{{data.hasRevRuleAttached}}"
            },

            "deps": "js/autoAssignService"
        },
        "elementsInserted":{
            "actionType": "JSFunction",
            "method": "elementsInserted",
            "inputData": {
                "data": "{{data}}"
            },
            "outputData":{
                "newParent" : "newParent",
                "addElementResponseForNewParent" : "addElementResponseForNewParent",
                "oldParentElement" : "oldParentElement",
                "addElementResponseForOldParent" : "addElementResponseForOldParent"
            },
            "events": {
                "success": [ {
                    "name": "addElement.elementsAdded",
                    "eventData": {
                        "updatedParentElement":"{{oldParentElement}}",
                        "addElementResponse": "{{addElementResponseForOldParent}}",
                        "viewToReact": "{{props.subPanelContext.contextKey}}"
                    }
                },
                {
                    "name": "addElement.elementsAdded",
                    "eventData": {
                        "updatedParentElement":"{{newParent}}",
                        "addElementResponse": "{{addElementResponseForNewParent}}",
                        "viewToReact": "{{props.subPanelContext.contextKey}}"
                    }
                },
                {
                    "name": "aceElementsSelectionUpdatedEvent",
                    "eventData": {
                        "objectsToSelect": ["{{newParent}}"]
                    }
                },
                {
                    "name": "insertElement.clearCreatedElementField"
                }
             ]
            },
            "deps": "js/insertElementService"
        },
        "setActiveView":{
            "actionType": "JSFunction",
            "method": "resetActiveView",
            "inputData": {
                "stateName": "{{data.activeState}}",
                "destPanelId": "AddObjectPrimarySub"
            },
            "outputData": {
                "activeState": ""
            },
            "deps": "js/addObjectUtils"
        }
    },

    "dataProviders": {

    },

    "lifecycleHooks": {
        "onUpdate": {
            "action": "newElementCreatedPostProcessing",
            "observers": [ "viewModel.atomicData.addPanelState.createdObject" ]
        }
    },

    "onEvent":
    [
        {
            "eventId": "insertElement.insertObjectToSelectedElement",
            "action": "insertElements"
        },
        {
            "eventId": "addObject.addOprfailed",
            "action": "closePanel"
        },
        {
            "eventId": "insertElement.clearCreatedElementField",
            "action": "clearCreatedElementField"
        },
        {
            "eventId": "insertElement.closePanel",
            "action": "closePanel"
        },
        {
            "eventId": "insertElement.updateSelectionInPWA",
            "cacheEventData": true,
            "action": "updateSelectionInPWA"
        },
        {
            "eventId": "insertLevel.elementsInserted",
            "cacheEventData": true,
            "action": "elementsInserted"
        },
        {
            "eventId": "awPattern.newPatternSelected",
            "cacheEventData": true,
            "action": "autoAssignProperty"
        },
        {
            "eventId": "appCtx.register",
            "condition": "conditions.isSelectionChangeEventTriggered",
            "action": "closePanel"
        }
    ],

    "functions":
    {
        "getParentElementToInsertLevel": {
            "functionName": "getParentElementToInsertLevel",
            "parameters": [
                "{{data}}",
                "{{addPanelState.createdObject}}",
                "{{addPanelState.sourceObjects}}"
            ]
        }
    },

    "conditions":
    {
        "isNewTabInsertButtonVisible": {
            "expression": "addPanelState.selectedTab.view==='NewTabPageSub' && addPanelState.creationType"
        },
        "isPaletteTabAddButtonVisible": {
            "expression": "addPanelState.selectedTab.view==='PaletteTabPageSub' && addPanelState.sourceObjects.length === 1"
        },
        "isSearchTabAddButtonVisible": {
            "expression": "addPanelState.selectedTab.view==='SearchTabPageSub' && addPanelState.sourceObjects.length  === 1"
        },
        "isSelectionChangeEventTriggered": {
            "expression": "name == 'selected'"
        },
        "isObjectCreated": {
            "expression": "addPanelState.createdObject"
        }
    },

    "messages":
    {
        "oneelementInsertSuccessfulMessage": {
            "messageType": "INFO",
            "messageText": "{{i18n.elementInsertSuccessful}}",
            "messageTextParams": [
                "{{data.insertElementResponse.newParent.props.object_string.uiValues[0]}}",
                "{{ctx.aceActiveContext.context.insertLevelInput.selectedElements[0].props.object_string.dbValues[0]}}"
            ]
        },
        "multipleelementsInsertSuccessfulMessage": {
            "messageType": "INFO",
            "messageText": "{{i18n.multipleelementsInsertSuccessful}}",
            "messageTextParams": [
                "{{data.insertElementResponse.newParent.props.object_string.uiValues[0]}}"
            ]
        },
        "insertLevelFailure": {
            "messageType": "ERROR",
            "messageText": "{{data.insertElementResponse.ServiceData.partialErrors[0].errorValues[0].message}}"
        }
    },

    "i18n":
    {
        "insertNewLevelBtn":
        [
            "OccurrenceManagementConstants"
        ],
        "elementInsertSuccessful":
        [
            "OccurrenceManagementMessages"
        ],
        "multipleelementsInsertSuccessful":
        [
            "OccurrenceManagementMessages"
        ],
        "BACK_BUTTON_TITLE": [
            "BaseMessages"
        ]
    },
    "props": {
        "sub-panel-context": {
            "type": "object"
        }
    }
}
