{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-splm-table.directive",
        "js/exist-when.directive",
        "js/visible-when.directive"
    ],
    "conditions": {
        "isTableEmpty": {
            "expression": "data.isDataLoadDone && dataProviders.usedInStructuresTopLevelDataProvider.viewModelCollection.loadedVMObjects.length === 0"
        },
        "isTableEmpty2": {
            "expression": "data.isDataLoadDone && dataProviders.usedInStructuresTopLevelDataProvider2.viewModelCollection.loadedVMObjects.length === 0"
        },
        "validateTCVersion": {
            "expression": "ctx.tcSessionData && ( ctx.tcSessionData.tcMajorVersion > 14 || ( ctx.tcSessionData.tcMajorVersion === 14 && ctx.tcSessionData.tcMinorVersion > 1 ))"
        }
    },
    "data": {
        "revisionRuleLabel": {
            "displayName": "{{i18n.revisionRuleLabel}}",
            "type": "STRING",
            "isEditable": "false",
            "dbValue": "RevisionRuleLabel",
            "dispValue": "{{ctx.userSession.props.awp0RevRule.uiValue}}"
        },
        "notUsedInAnyStructure": {
            "dispValue": "{{i18n.selectionNotUsedInAnyIndexedStructure}}",
            "type": "STRING",
            "isEditable": "false",
            "labelPosition": "NO_PROPERTY_LABEL"
        },
        "configureStructureTopLevel": {
            "type": "BOOLEAN",
            "labelPosition": "PROPERTY_LABEL_AT_RIGHT",
            "isEditable": "true",
            "dbValue": true,
            "displayName": "{{i18n.toggleOn}}"
        },
        "configureStructureTopLevel2": {
            "type": "BOOLEAN",
            "labelPosition": "PROPERTY_LABEL_AT_RIGHT",
            "isEditable": "true",
            "dbValue": true,
            "displayName": "{{i18n.toggleOn}}"
        }
    },
    "actions": {
        "loadWhereUsed": {
            "actionType": "JSFunctionAsync",
            "method": "loadWhereUsedTree",
            "inputData": {
                "treeLoadInput": "request.treeLoadInput",
                "subPanelContext": "{{props.subPanelContext}}",
                "configureParent": "{{data.data.configureStructureTopLevel.dbValue}}",
                "level": "TOP_LEVEL_PARENTS"
            },
            "outputData": {
                "response": "tableSummaries",
                "isDataLoadDone": true,
                "dataProviders.usedInStructuresTopLevelDataProvider.columnConfig": "result.treeLoadResult.columnConfig",
                "clientScopeURI": "result.clientScopeURI",
                "dataProviders.usedInStructuresTopLevelDataProvider.objectSetUri": "result.objectSetUri"
            },
            "deps": "js/usedInStructuresService"
        },
        "loadWhereUsed2": {
            "actionType": "JSFunctionAsync",
            "method": "loadWhereUsedTree",
            "inputData": {
                "treeLoadInput": "request.treeLoadInput",
                "subPanelContext": "{{props.subPanelContext}}",
                "configureParent": "{{data.data.configureStructureTopLevel2.dbValue}}",
                "level": "TOP_LEVEL_PARENTS"
            },
            "outputData": {
                "response": "tableSummaries",
                "isDataLoadDone": true,
                "dataProviders.usedInStructuresTopLevelDataProvider2.columnConfig": "result.treeLoadResult.columnConfig",
                "clientScopeURI": "result.clientScopeURI",
                "dataProviders.usedInStructuresTopLevelDataProvider2.objectSetUri": "result.objectSetUri"
            },
            "deps": "js/usedInStructuresService"
        },
        "loadNextWhereUsed": {
            "actionType": "JSFunctionAsync",
            "method": "loadNextWhereUsedTree",
            "inputData": {
                "treeLoadInput": "request.treeLoadInput",
                "subPanelContext": "{{props.subPanelContext}}",
                "configureParent": "{{data.data.configureStructureTopLevel.dbValue}}",
                "level": "TOP_LEVEL_PARENTS"
            },
            "outputData": {},
            "deps": "js/usedInStructuresService"
        },
        "loadNextWhereUsed2": {
            "actionType": "JSFunctionAsync",
            "method": "loadNextWhereUsedTree",
            "inputData": {
                "treeLoadInput": "request.treeLoadInput",
                "subPanelContext": "{{props.subPanelContext}}",
                "configureParent": "{{data.data.configureStructureTopLevel2.dbValue}}",
                "level": "TOP_LEVEL_PARENTS"
            },
            "outputData": {},
            "deps": "js/usedInStructuresService"
        },
        "saveColumnConfigLoadData": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2016-03-UiConfig",
            "method": "saveUIColumnConfigs",
            "inputData": {
                "columnConfigurations": [
                    {
                        "clientScopeURI": "{{data.clientScopeURI}}",
                        "columnConfigId": "{{data.dataProviders.usedInStructuresTopLevelDataProvider.columnConfig.columnConfigId}}",
                        "columns": "{{data.dataProviders.usedInStructuresTopLevelDataProvider.newColumns}}",
                        "scope": "LoginUser",
                        "scopeName": ""
                    }
                ]
            },
            "outputData": {}
        },
        "saveColumnConfigLoadData2": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2016-03-UiConfig",
            "method": "saveUIColumnConfigs",
            "inputData": {
                "columnConfigurations": [
                    {
                        "clientScopeURI": "{{data.clientScopeURI}}",
                        "columnConfigId": "{{data.dataProviders.usedInStructuresTopLevelDataProvider2.columnConfig.columnConfigId}}",
                        "columns": "{{data.dataProviders.usedInStructuresTopLevelDataProvider2.newColumns}}",
                        "scope": "LoginUser",
                        "scopeName": ""
                    }
                ]
            },
            "outputData": {}
        },
        "resetColumnConfig": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2022-06-UiConfig",
            "method": "getOrResetUIColumnConfigs3",
            "inputData": {
                "getOrResetUiConfigsIn": [
                    {
                        "scope": "LoginUser",
                        "scopeName": "",
                        "clientName": "AWClient",
                        "resetColumnConfig": true,
                        "columnConfigQueryInfos": [
                            {
                                "clientScopeURI": "{{data.clientScopeURI}}",
                                "operationType": "configured",
                                "columnsToExclude": []
                            }
                        ],
                        "businessObjects": [
                            {}
                        ]
                    }
                ]
            },
            "outputData": {
                "dataProviders.usedInStructuresTopLevelDataProvider.columnConfig": "columnConfigurations[0].columnConfigurations[0]"
            }
        },
        "resetColumnConfig2": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2022-06-UiConfig",
            "method": "getOrResetUIColumnConfigs3",
            "inputData": {
                "getOrResetUiConfigsIn": [
                    {
                        "scope": "LoginUser",
                        "scopeName": "",
                        "clientName": "AWClient",
                        "resetColumnConfig": true,
                        "columnConfigQueryInfos": [
                            {
                                "clientScopeURI": "{{data.clientScopeURI}}",
                                "operationType": "configured",
                                "columnsToExclude": []
                            }
                        ],
                        "businessObjects": [
                            {}
                        ]
                    }
                ]
            },
            "outputData": {
                "dataProviders.usedInStructuresTopLevelDataProvider2.columnConfig": "columnConfigurations[0].columnConfigurations[0]"
            }
        },
        "doArrangeEvent": {
            "actionType": "JSFunctionAsync",
            "method": "arrangeColumns",
            "inputData": {
                "declViewModel": "{{data}}",
                "eventData": "{{data.eventData}}"
            },
            "deps": "js/columnArrangeService"
        },
        "updateTopLevelToggleLabel": {
            "actionType": "JSFunctionAsync",
            "method": "updateToggleLabel",
            "inputData": {
                "configureParent": "{{data.configureStructureTopLevel.dbValue}}"
            },
            "outputData": {
                "configureStructureTopLevel.propertyDisplayName": ""
            },
            "deps": "js/usedInStructuresService"
        },
        "updateTopLevelToggleLabel2": {
            "actionType": "JSFunctionAsync",
            "method": "updateToggleLabel",
            "inputData": {
                "configureParent": "{{data.configureStructureTopLevel2.dbValue}}"
            },
            "outputData": {
                "configureStructureTopLevel2.propertyDisplayName": ""
            },
            "deps": "js/usedInStructuresService"
        },
        "resetUsedInStructuresTopLevelTreeData": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "resetUsedInStructuresTopLevelData"
                },
                {
                    "action": "reloadUsedInStructuresTopLevelGrid"
                },
                {
                    "action": "updateTopLevelToggleLabel"
                }
            ]
        },
        "resetUsedInStructuresTopLevelTreeData2": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "resetUsedInStructuresTopLevelData2"
                },
                {
                    "action": "reloadUsedInStructuresTopLevelGrid2"
                },
                {
                    "action": "updateTopLevelToggleLabel2"
                }
            ]
        },
        "resetUsedInStructuresTopLevelData": {
            "actionType": "JSFunction",
            "method": "resetUsedInStructuresData",
            "inputData": {},
            "outputData": {
                "isDataLoadDone": false,
                "configureStructureTopLevel.dbValue": true,
                "configureStructureTopLevel.propertyDisplayName": "{{i18n.toggleOn}}",
                "revisionRuleLabel.uiValue": "result.revisionRuleLabelValue"
            },
            "deps": "js/usedInStructuresService"
        },
        "resetUsedInStructuresTopLevelData2": {
            "actionType": "JSFunction",
            "method": "resetUsedInStructuresData",
            "inputData": {},
            "outputData": {
                "isDataLoadDone": false,
                "configureStructureTopLevel2.dbValue": true,
                "configureStructureTopLevel2.propertyDisplayName": "{{i18n.toggleOn}}",
                "revisionRuleLabel.uiValue": "result.revisionRuleLabelValue"
            },
            "deps": "js/usedInStructuresService"
        },
        "updateToggleLableAndReloadUsedInStructuresTopLevelGrid": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "reloadUsedInStructuresTopLevelGrid"
                },
                {
                    "action": "updateTopLevelToggleLabel"
                }
            ]
        },
        "updateToggleLableAndReloadUsedInStructuresTopLevelGrid2": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "reloadUsedInStructuresTopLevelGrid2"
                },
                {
                    "action": "updateTopLevelToggleLabel2"
                }
            ]
        },
        "reloadUsedInStructuresTopLevelGrid": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [
                    {
                        "name": "usedInStructuresTopLevelGrid.plTable.reload"
                    }
                ]
            }
        },
        "reloadUsedInStructuresTopLevelGrid2": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [
                    {
                        "name": "usedInStructuresTopLevelGrid2.plTable.reload"
                    }
                ]
            }
        }
    },
    "onEvent": [
        {
            "eventId": "columnArrange",
            "cacheEventData": true,
            "action": "doArrangeEvent"
        },
        {
            "eventId": "updateTopLevelToggleLabel",
            "action": "updateTopLevelToggleLabel"
        },
        {
            "eventId": "aw.revisionRuleChangeEvent",
            "action": "resetUsedInStructuresTopLevelTreeData"
        },
        {
            "eventId": "aw.revisionRuleChangeEvent",
            "action": "resetUsedInStructuresTopLevelTreeData2"
        }
    ],
    "columnProviders": {
        "usedInStructuresTopLevelColumnProvider": {
            "columns": [
                {}
            ],
            "saveColumnAndLoadAction": "saveColumnConfigLoadData",
            "resetColumnAction": "resetColumnConfig",
            "sortCriteria": []
        },
        "usedInStructuresTopLevelColumnProvider2": {
            "columns": [
                {}
            ],
            "saveColumnAndLoadAction": "saveColumnConfigLoadData2",
            "resetColumnAction": "resetColumnConfig2",
            "sortCriteria": []
        }

    },
    "dataProviders": {
        "usedInStructuresTopLevelDataProvider": {
            "initializeAction": "loadWhereUsed",
            "nextAction": "loadNextWhereUsed",
            "previousAction": "loadWhereUsed",
            "cacheCollapse": false,
            "treeLoadResult": "action.result.treeLoadResult",
            "editContext": "TABLE_CONTEXT",
            "inputData": {
                "accessMode": "tree",
                "selectionData": "{{subPanelContext.selectionData}}"
            },
            "response": "data.response",
            "selectionModelMode": "multiple",
            "commandsAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectCellListActionCommands"
        },
        "usedInStructuresTopLevelDataProvider2": {
            "initializeAction": "loadWhereUsed2",
            "nextAction": "loadNextWhereUsed2",
            "previousAction": "loadWhereUsed2",
            "cacheCollapse": false,
            "treeLoadResult": "action.result.treeLoadResult",
            "editContext": "TABLE_CONTEXT",
            "inputData": {
                "accessMode": "tree",
                "selectionData": "{{subPanelContext.selectionData}}"
            },
            "response": "data.response",
            "selectionModelMode": "multiple",
            "commandsAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectCellListActionCommands"
        }
    },
    "grids": {
        "usedInStructuresTopLevelGrid": {
            "dataProvider": "usedInStructuresTopLevelDataProvider",
            "columnProvider": "usedInStructuresTopLevelColumnProvider",
            "enableArrangeMenu": true,
            "addIconColumn": false,
            "gridOptions": {
                "enableSorting": false,
                "useStaticFirstCol": false,
                "enableExpansionStateCaching": false,
                "enableExpandAndPaginationInEdit": true,
                "maxRowsToShow": 10
            },
            "deps": "js/usedInStructuresService"
        },
        "usedInStructuresTopLevelGrid2": {
            "dataProvider": "usedInStructuresTopLevelDataProvider2",
            "columnProvider": "usedInStructuresTopLevelColumnProvider2",
            "enableArrangeMenu": true,
            "addIconColumn": false,
            "gridOptions": {
                "enableSorting": false,
                "useStaticFirstCol": false,
                "enableExpansionStateCaching": false,
                "enableExpandAndPaginationInEdit": true,
                "maxRowsToShow": 10
            },
            "deps": "js/usedInStructuresService"
        }
    },
    "i18n": {
        "revisionRuleLabel": [
            "OccurrenceManagementConstants"
        ],
        "selectionNotUsedInAnyIndexedStructure": [
            "OccurrenceManagementConstants"
        ],
        "toggleOn": [
            "OccurrenceManagementConstants"
        ]
    }
}