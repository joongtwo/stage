{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-splm-table.directive",
        "js/aw-button.directive",
        "js/aw-guidance-message.directive",
        "js/aw-i18n.directive",
        "js/exist-when.directive",
        "js/aw-include.directive"
    ],
    "data": {},
    "actions": {
        "doArrangeEvent": {
            "actionType": "JSFunctionAsync",
            "method": "arrangeColumns",
            "inputData": {
                "declViewModel": "{{data}}",
                "eventData": {
                    "name": "occTreeTable",
                    "arrangeType": "{{data.eventData.arrangeType}}",
                    "columns": "{{data.eventData.columns}}",
                    "operationType": "{{data.eventData.operationType}}",
                    "objectSetUri": "{{data.eventData.objectSetUri}}"
                }
            },
            "deps": "js/columnArrangeService"
        },
        "groupObjectsByProperties": {
            "actionType": "JSFunction",
            "method": "groupObjectsByProperties",
            "deps": "js/aceColorDecoratorService",
            "inputData": {
                "vmos": "{{data.dataProviders.occDataProvider.viewModelCollection.loadedVMObjects}}"
            }
        },
        "toggleTreeNodeHierarchy": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "toggleTreeNodeHierarchy",
                    "eventData": {
                        "data": "{{data}}",
                        "row": "{{data.eventData}}"
                    }
                } ]
            }
        },
        "loadDataForSavedColumnConfig": {
            "actionType": "JSFunctionAsync",
            "method": "getTableViewModelProperties",
            "deps": "js/tcViewModelObjectService",
            "inputData": {
                "vmNodes": "{{data.dataProviders.occDataProvider.viewModelCollection.loadedVMObjects}}",
                "context": {
                    "clientScopeURI": "{{data.dataProviders.occDataProvider.objectSetUri}}",
                    "clientName": "AWClient",
                    "columnsToExclude": "{{ctx.occmgmtContext.columnsToExclude}}",
                    "operationType": "{{eventData.operationType}}"
                }
            },
            "outputData": {
                "newColumnConfig": "result.output.columnConfig"
            },
            "events": {
                "success": [ {
                    "name": "occTreeTable.updateOccMgmtTreeColumns"
                } ]
            }
        },
        "loadTreeTablePropertiesOnInitialLoad": {
            "actionType": "JSFunctionAsync",
            "method": "loadTreeTablePropertiesOnInitialLoad",
            "deps": "js/occmgmtTreeTableDataService",
            "inputData": {
                "vmNodes": "{{data.dataProviders.occDataProvider.viewModelCollection.loadedVMObjects}}",
                "declViewModel": "{{data}}",
                "uwDataProvider": "{{data.dataProviders.occDataProvider}}",
                "context": {
                    "clientName": "AWClient",
                    "clientScopeURI": "{{data.dataProviders.occDataProvider.objectSetUri}}",
                    "typesForArrange": "{{data.dataProviders.occDataProvider.columnConfig.typesForArrange}}"
                },
                "contextKey": "{{props.subPanelContext.provider.contextKey}}",
                "subPanelContext": "{{props.subPanelContext.provider}}"
            },
            "outputData": {
                "dataProviders.occDataProvider.columnConfig": "result.propertyLoadResult.columnConfig",
                "ctx.searchResponseInfo.columnConfig": "result.propertyLoadResult.columnConfig"
            }
        },
        "loadInitialOccurrences": {
            "actionType": "JSFunctionAsync",
            "method": "loadTreeTableData",
            "inputData": {
                "methodArgument": {
                    "treeLoadInput": "request.treeLoadInput",
                    "dataProviderActionType": "initializeAction",
                    "loadIDs": "request.loadIDs",
                    "grid": "{{data.grids.occTreeTable}}",
                    "uwDataProvider": "{{data.dataProviders.occDataProvider}}",
                    "declViewModel": "{{data}}",
                    "sortCriteria": "{{data.columnProviders.occColumnProvider.sortCriteria}}",
                    "subPanelContext": "{{props.subPanelContext.provider}}"
                }
            },
            "outputData": {
                "ctx.locationContext.modelObject": "result.treeLoadResult.baseModelObject",
                "ctx.objectQuotaContext.useObjectQuota": "result.treeLoadResult.useObjectQuotatoUnload",
                "ctx.isRedLineMode": "result.treeLoadResult.isRedLineMode",
                "ctx.changeContext": "result.treeLoadResult.changeContext",
                "ctx.occmgmtContext.modelObject": "result.treeLoadResult.baseModelObject",
                "ctx.occmgmtContext.productContextInfo": "result.treeLoadResult.productContextInfo",
                "ctx.occmgmtContext.serializedRevRule": "result.treeLoadResult.serializedRevRule",
                "ctx.occmgmtContext.openedElement": "result.treeLoadResult.openedModelObject",
                "ctx.occmgmtContext.topElement": "result.treeLoadResult.topModelObject",
                "ctx.occmgmtContext.sublocationAttributes": "result.treeLoadResult.sublocationAttributes",
                "ctx.occmgmtContext.searchFilterCategories": "result.treeLoadResult.filter.searchFilterCategories",
                "ctx.occmgmtContext.searchFilterMap": "result.treeLoadResult.filter.searchFilterMap",
                "ctx.occmgmtContext.recipe": "result.treeLoadResult.filter.recipe",
                "ctx.occmgmtContext.elementToPCIMap": "result.treeLoadResult.elementToPCIMap",
                "ctx.occmgmtContext.isChangeEnabled": "result.treeLoadResult.isChangeEnabled",
                "ctx.occmgmtContext.sublocation.clientScopeURI":"result.treeLoadResult.productContextInfo.props.awb0ClientScopeUri.dbValues[0]",
                "ctx.decoratorToggle": "result.treeLoadResult.decoratorToggle",
                "ctx.supportsColorToggleCommand":"result.treeLoadResult.supportsColorToggleCommand",
                "grids.occTreeTable": "result.treeLoadResult.grid",
                "dataProviders.occDataProvider.ttState": "result.treeLoadResult.ttstate",
                "dataProviders.occDataProvider.topTreeNode": "result.treeLoadResult.newTopNode",
                "dataProviders.occDataProvider.topNodeUid": "result.treeLoadResult.newTopNode.uid",
                "dataProviders.occDataProvider.objectSetUri":"result.treeLoadResult.productContextInfo.props.awb0ClientScopeUri.dbValues[0]",
                "dataProviders.occDataProvider.columnConfig": "result.treeLoadResult.columnConfig"
            },
            "events": {
                "success": [ {
                        "name": "occDataLoadedEvent",
                        "eventData": {
                            "contextKey": "{{props.subPanelContext.provider.contextKey}}",
                            "dataProviderActionType": "initializeAction",
                            "occContext": "{{props.subPanelContext.provider.occContext}}"
                        }
                    },
                    {
                        "condition": "!ctx.aceActiveContext.context.vmc || ctx.aceActiveContext.key === props.subPanelContext.provider.contextKey",
                        "name": "updateActiveContextEvent",
                        "eventData": {
                            "contextKey": "{{props.subPanelContext.provider.contextKey}}"
                        }
                    },
                    {
                        "name": "occMgmt.visibilityStateChanged",
                        "eventData": {
                            "viewToReact": "occmgmtContext",
                            "sourceGridId": "occTreeTable"
                        }
                    }
                ]
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "loadOccurrencesWithFocus": {
            "actionType": "JSFunctionAsync",
            "method": "loadOccurrencesWithFocusInTreeTable",
            "inputData": {
                "methodArgument": {
                    "treeLoadInput": "request.treeLoadInput",
                    "dataProviderActionType": "focusAction",
                    "loadIDs": "request.loadIDs",
                    "grid": "{{data.grids.occTreeTable}}",
                    "uwDataProvider": "{{data.dataProviders.occDataProvider}}",
                    "declViewModel": "{{data}}",
                    "sortCriteria": "{{data.columnProviders.occColumnProvider.sortCriteria}}",
                    "subPanelContext": "{{props.subPanelContext.provider}}"
                }
            },
            "outputData": {
                "dataProviders.occDataProvider.columnConfig": "result.treeLoadResult.columnConfig"
            },
            "events": {
                "success": [ {
                        "name": "occDataLoadedEvent",
                        "eventData": {
                            "contextKey": "{{props.subPanelContext.provider.contextKey}}",
                            "dataProviderActionType": "focusAction",
                            "occContext": "{{props.subPanelContext.provider.occContext}}"
                        }
                    }
                ]
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "loadNextOccurrences": {
            "actionType": "JSFunctionAsync",
            "method": "loadNextOccurrencesInTreeTable",
            "inputData": {
                "methodArgument": {
                    "treeLoadInput": "request.treeLoadInput",
                    "dataProviderActionType": "nextAction",
                    "loadIDs": "request.loadIDs",
                    "grid": "{{data.grids.occTreeTable}}",
                    "uwDataProvider": "{{data.dataProviders.occDataProvider}}",
                    "declViewModel": "{{data}}",
                    "sortCriteria": "{{data.columnProviders.occColumnProvider.sortCriteria}}",
                    "subPanelContext": "{{props.subPanelContext.provider}}"
                }
            },
            "outputData": {
                "ctx.occmgmtContext.serializedRevRule": "result.treeLoadResult.serializedRevRule",
                "ctx.occmgmtContext.elementToPCIMap": "result.treeLoadResult.elementToPCIMap",
                "ctx.occmgmtContext.productContextInfo": "result.treeLoadResult.productContextInfo",
                "ctx.occmgmtContext.recipe": "result.treeLoadResult.filter.recipe",
                "ctx.occmgmtContext.requestPref": "result.treeLoadResult.requestPref",
                "dataProviders.occDataProvider.columnConfig": "result.treeLoadResult.columnConfig",
                "dataProviders.occDataProvider.scrollPosition": "{{function:clearCurrentExpandBelowBufferVmo}}"
            },
            "events": {
                "success": [ {
                        "name": "occDataLoadedEvent",
                        "eventData": {
                            "contextKey": "{{props.subPanelContext.provider.contextKey}}",
                            "dataProviderActionType": "nextAction",
                            "occContext": "{{props.subPanelContext.provider.occContext}}"
                        }
                    },
                    {
                        "condition": "!ctx.aceActiveContext.context.vmc || ctx.aceActiveContext.key === props.subPanelContext.provider.contextKey",
                        "name": "updateActiveContextEvent",
                        "eventData": {
                            "contextKey": "{{props.subPanelContext.provider.contextKey}}"
                        }
                    }
                ]
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "loadPreviousOccurrences": {
            "actionType": "JSFunctionAsync",
            "method": "loadPreviousOccurrencesInTreeTable",
            "inputData": {
                "methodArgument": {
                    "treeLoadInput": "request.treeLoadInput",
                    "dataProviderActionType": "previousAction",
                    "loadIDs": "request.loadIDs",
                    "grid": "{{data.grids.occTreeTable}}",
                    "uwDataProvider": "{{data.dataProviders.occDataProvider}}",
                    "declViewModel": "{{data}}",
                    "sortCriteria": "{{data.columnProviders.occColumnProvider.sortCriteria}}",
                    "subPanelContext": "{{props.subPanelContext.provider}}"
                }
            },
            "outputData": {
                "ctx.occmgmtContext.recipe": "result.treeLoadResult.filter.recipe",
                "ctx.occmgmtContext.requestPref": "result.treeLoadResult.requestPref",
                "dataProviders.occDataProvider.columnConfig": "result.treeLoadResult.columnConfig",
                "dataProviders.occDataProvider.scrollPosition": "{{function:clearCurrentExpandBelowBufferVmo}}"
            },
            "events": {
                "success": [ {
                        "name": "occDataLoadedEvent",
                        "eventData": {
                            "contextKey": "{{props.subPanelContext.provider.contextKey}}",
                            "dataProviderActionType": "previousAction",
                            "occContext": "{{props.subPanelContext.provider.occContext}}"
                        }
                    },
                    {
                        "condition": "!ctx.aceActiveContext.context.vmc || ctx.aceActiveContext.key === props.subPanelContext.provider.contextKey",
                        "name": "updateActiveContextEvent",
                        "eventData": {
                            "contextKey": "{{props.subPanelContext.provider.contextKey}}"
                        }
                    }
                ]
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "loadOccProperties": {
            "actionType": "JSFunctionAsync",
            "method": "loadTreeTableProperties",
            "inputData": {
                "methodArgument": {
                    "propertyLoadInput": "request.propertyLoadInput",
                    "propertyLoadContext": {
                        "clientName": "AWClient",
                        "clientScopeURI": "{{data.dataProviders.occDataProvider.objectSetUri}}",
                        "typesForArrange": "{{data.dataProviders.occDataProvider.columnConfig.typesForArrange}}"
                    },
                    "contextKey": "{{props.subPanelContext.provider.contextKey}}",
                    "declViewModel": "{{data}}",
                    "uwDataProvider": "{{data.dataProviders.occDataProvider}}",
                    "subPanelContext": "{{props.subPanelContext.provider}}"
                }
            },
            "outputData": {
                "dataProviders.occDataProvider.columnConfig": "result.propertyLoadResult.columnConfig",
                "ctx.searchResponseInfo.columnConfig": "result.propertyLoadResult.columnConfig",
                "dataProviders.occDataProvider.scrollPosition": "{{function:clearCurrentPropBufferVmo}}"
            },
            "deps": "js/occmgmtTreeTableDataService",
            "events": {
                "success": [ {
                    "name": "occMgmt.visibilityStateChanged",
                    "eventData": {
                        "viewToReact": "occmgmtContext",
                        "sourceGridId": "occTreeTable"
                    }
                } ]
            }
        },
        "loadOccColumns": {
            "actionType": "JSFunctionAsync",
            "method": "loadTreeTableColumns",
            "inputData": {
                "dataProvider": "{{data.dataProviders.occDataProvider}}",
                "columnProvider": "{{data.columnProviders.occColumnProvider}}"
            },
            "outputData": {
                "dataProviders.occDataProvider.columnConfig": "columnConfig"
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "addNodeToExpansionState": {
            "actionType": "JSFunction",
            "method": "addNodeToExpansionState",
            "inputData": {
                "node": "{{data.eventData.nodeToExpand}}",
                "data": "{{data}}"
            },
            "deps": "js/occmgmtTreeTableStateService"
        },
        "updateTreeNodeStates":{
            "actionType": "JSFunction",
            "method": "updateTreeNodeStates",
            "inputData": {
                "vmNodes": "{{data.dataProviders.occDataProvider.viewModelCollection.loadedVMObjects}}",
                "data": "{{data}}",
                "subPanelContext": "{{props.subPanelContext.provider}}"
            },
            "deps": "js/occmgmtTreeTableStateService"
        },
        "resetColumnConfig": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2022-06-UiConfig",
            "method": "getOrResetUIColumnConfigs3",
            "inputData": {
                "getOrResetUiConfigsIn": [ {
                    "scope": "LoginUser",
                    "scopeName": "",
                    "clientName": "AWClient",
                    "resetColumnConfig": true,
                    "columnConfigQueryInfos": [ {
                        "clientScopeURI": "{{data.dataProviders.occDataProvider.objectSetUri}}",
                        "operationType": "union",
                        "typeNames": "{{data.dataProviders.occDataProvider.columnConfig.typesForArrange}}",
                        "columnsToExclude": "{{ctx.occmgmtContext.columnsToExclude}}"
                    } ],
                    "businessObjects": [
                        {}
                    ]
                } ]
            },
            "outputData": {
                "dataProviders.occDataProvider.columnConfig": "{{function:postResetFunction}}",
                "newColumnConfig": "columnConfigurations[0].columnConfigurations[0]"
            },
            "events": {
                "success": [ {
                    "name": "occTreeTable.updateOccMgmtTreeColumns"
                } ]
            },
            "deps": "js/tcarrange.service"
        },
        "saveColumnConfigLoadData": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2016-03-UiConfig",
            "method": "saveUIColumnConfigs",
            "inputData": {
                "columnConfigurations": [ {
                    "clientScopeURI": "{{data.dataProviders.occDataProvider.objectSetUri}}",
                    "columnConfigId": "{{data.dataProviders.occDataProvider.columnConfig.columnConfigId}}",
                    "columns": "{{data.dataProviders.occDataProvider.newColumns}}",
                    "scope": "LoginUser",
                    "scopeName": ""
                } ]
            },
            "outputData": {},
            "events": {
                "success": [ {
                    "name": "occmgmtColumnConfig.saved"
                } ]
            }
        },
        "saveColumnConfigData": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2016-03-UiConfig",
            "method": "saveUIColumnConfigs",
            "inputData": {
                "columnConfigurations": [ {
                    "clientScopeURI": "{{data.dataProviders.occDataProvider.objectSetUri}}",
                    "columnConfigId": "{{data.dataProviders.occDataProvider.columnConfig.columnConfigId}}",
                    "columns": "{{data.dataProviders.occDataProvider.newColumns}}",
                    "scope": "LoginUser",
                    "scopeName": ""
                } ]
            },
            "outputData": {}
        },
        "updateDisplayNames": {
            "actionType": "JSFunction",
            "method": "updateDisplayNames",
            "inputData": {
                "loadedVMObjects": "{{data.dataProviders.occDataProvider.viewModelCollection.loadedVMObjects}}",
                "eventData": "{{data.eventData}}"
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "processProductInteraction": {
            "actionType": "JSFunction",
            "method": "processProductInteraction",
            "inputData": {
                "occContext": "{{props.subPanelContext.provider.occContext}}"
            },
            "deps": "js/aceRestoreBWCStateService"
        },
        "swaTabChange": {
            "actionType": "JSFunction",
            "method": "swaTabChange",
            "inputData": {
                "subPanelContext": "{{props.subPanelContext.provider}}"
            },
            "deps": "js/aceSwaService"
        },
        "restoreProduct": {
            "actionType": "JSFunction",
            "method": "restoreProduct",
            "inputData": {
                "subPanelContext": "{{props.subPanelContext.provider}}"
            },
            "outputData": {
                "dataProviders.occDataProvider.ttState": "ttState"
            },
            "deps": "js/aceRestoreBWCStateService"
        },
        "setOccVisibility": {
            "actionType": "JSFunction",
            "method": "setOccVisibility",
            "inputData": {
                "loadedVMObjects": "{{data.dataProviders.occDataProvider.viewModelCollection.loadedVMObjects}}",
                "contextKey": "occmgmtContext",
                "gridId": "occTreeTable"
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "loadColumnConfigForInteractiveDuplicate": {
            "actionType": "JSFunctionAsync",
            "method": "getTableViewModelProperties",
            "deps": "js/tcViewModelObjectService",
            "inputData": {
                "vmNodes": "{{data.eventData.vmos}}",
                "context": {
                    "clientScopeURI": "{{data.dataProviders.occDataProvider.objectSetUri}}",
                    "clientName": "AWClient",
                    "columnsToExclude": "{{ctx.occmgmtContext.columnsToExclude}}"
                }
            },
            "outputData": {
                "newColumnConfig": "result.output.columnConfig"
            },
            "events": {
                "success": [ {
                    "name": "occTreeTable.updateOccMgmtTreeColumns"
                } ]
            }
        },
        "applyInContextOverrideStatesOnNewlyLoadedObjectsInTree": {
            "actionType": "JSFunction",
            "method": "applyInContextOverrideStatesOnNewlyLoadedObjectsInTree",
            "inputData": {
                "subPanelContext": "{{props.subPanelContext.provider}}",
                "eventData": "{{data.eventData}}"
            },
            "deps": "js/aceInContextOverrideService"
        },
        "updateOccMgmtTreeColumns": {
            "actionType": "JSFunction",
            "method": "updateOccMgmtTreeTableColumns",
            "inputData": {
                "data": "{{data}}",
                "dataProvider": "{{data.dataProviders.occDataProvider}}",
                "subPanelContext": "{{props.subPanelContext.provider}}"
            },
            "outputData": {
                "newColumnConfig": "result.newColumnConfig",
                "dataProviders.occDataProvider.columnConfig": "result.columnConfig"
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "processVMC": {
            "actionType": "JSFunction",
            "method": "processViewModelCollectionEvent",
            "inputData": {
                "vmc": "{{data.dataProviders.occDataProvider.viewModelCollection}}",
                "eventInfo": "{{data}}"
            },
            "deps": "js/occmgmtTreeTableDataService"
        },
        "applyCellRenderers": {
            "actionType": "JSFunction",
            "method": "resetpropHighLightForCompare",
            "inputData": {
                "eventInfo": "{{data.dataProviders.occDataProvider.cols}}"
            },
            "deps": "js/occmgmtCellRenderingService"
        },
        "publishClientRefreshEventForPlTable": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "occTreeTable.plTable.clientRefresh"
                } ]
            }
        },
        "startEditForNewVmos": {
            "actionType": "JSFunction",
            "method": "startEditForNewVmos",
            "inputData": {
                "editContext": "{{data.dataProviders.occDataProvider.json.editContext}}"
            },
            "deps": "js/editEventsService"
        },
        "invokeSaveEditsCommand": {
            "actionType": "Command",
            "inputData": {
                "commandId": "Awp0SaveEditsPWA",
                "commandContext": "{{subPanelContext.provider}}"
            }
        },
        "updateActiveContext": {
            "actionType": "JSFunction",
            "method": "updateActiveContext",
            "inputData": {
                "contextKey": "{{props.subPanelContext.provider.contextKey}}"
            },
            "deps": "js/contextStateMgmtService"
        },
        "updateObjectSetUri": {
            "actionType": "JSFunction",
            "method": "updateObjectSetUri",
            "inputData": {
                "subPanelContext": "{{props.subPanelContext.provider}}"
            },
            "outputData": {
                "dataProviders.occDataProvider.objectSetUri": "objectSetUri"
            },
            "deps": "js/saveWorkingContextService"
        },
        "multiSelectModeActionBatchJob": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "setShowCheckBoxValue"
                },
                {
                    "action": "multiSelectActionForPWA"
                },
                {
                    "action": "publishClientRefreshEventForPlTable"
                }
            ]
        },
        "setShowCheckBoxValue": {
            "actionType": "JSFunction",
            "method": "setShowCheckBoxValue",
            "inputData": {
                "eventData": "{{data.eventData}}"
            },
            "outputData": {
                "showCheckBox": ""
            },
            "deps": "js/awDataNavigatorService"
        },
        "multiSelectActionForPWA": {
            "actionType": "JSFunction",
            "method": "multiSelectActionForPWA",
            "inputData": {
                "pwaSelectionModel": "{{data.eventData.pwaSelectionModel}}",
                "eventData": "{{data.eventData}}"
            },
            "deps": "js/awDataNavigatorService"
        },
        "bufferExtraPages": {
            "actionType": "JSFunction",
            "method": "bufferExtraPages",
            "inputData": {
                "gridId": "occTreeTable",
                "uwDataProvider": "{{data.dataProviders.occDataProvider}}",
                "scrollEventData": "{{data.eventData}}",
                "subPanelContext": "{{props.subPanelContext.provider}}"
            },
            "outputData": {
                "dataProviders.occDataProvider.scrollPosition": ""
            },
            "deps": "js/occmgmtTreeTableBufferService"

        }
    },
    "functions": {
        "clearCurrentPropBufferVmo": {
            "functionName": "clearCurrentPropBufferVmo",
            "parameters": [
                "{{dataProviders.occDataProvider.scrollPosition}}"
            ]
        },
        "clearCurrentExpandBelowBufferVmo": {
            "functionName": "clearCurrentExpandBelowBufferVmo",
            "parameters": [
                "{{dataProviders.occDataProvider.scrollPosition}}"
            ]
        },
        "postResetFunction": {
            "functionName": "postResetFunction",
            "parameters": [
                "{{data.dataProviders.occDataProvider.columnConfig}}"
            ]
        }
    },
    "i18n": {
        "cancel": [
            "OccurrenceManagementConstants"
        ],
        "stay": [
            "OccurrenceManagementConstants"
        ],
        "discard": [
            "OccurrenceManagementConstants"
        ],
        "save": [
            "TCUICommandPanelsMessages"
        ],
        "restore": [
            "OccurrenceManagementConstants"
        ],
        "defaultOpenStateMessage": [
            "OccurrenceManagementMessages"
        ]
    },
    "dataProviders": {
        "occDataProvider": {
            "initializeAction": "loadInitialOccurrences",
            "nextAction": "loadNextOccurrences",
            "previousAction": "loadPreviousOccurrences",
            "focusAction": "loadOccurrencesWithFocus",
            "editContext": "{{subPanelContext.provider.editContext}}",
            "treeLoadResult": "action.result.treeLoadResult",
            "selectionModelMode": "multiple",
            "treePageSize": 250,
            "cacheCollapse": true,
            "enablePropEdit": true,
            "inputData": {
                "selectionModel": "{{subPanelContext.selectionModel}}",
                "accessMode": "tree",
                "topNodeUid": "{{ctx.aceActiveContext.context.currentState.uid}}"
            },
            "commandsAnchor": "occmgmt_tree_cell_commands"
        },
        "occPropertyProvider": {
            "action": "loadOccProperties",
            "propertyLoadResult": "action.result.propertyLoadResult"
        }
    },
    "columnProviders": {
        "occColumnProvider": {
            "loadColumnAction": "loadOccColumns",
            "columns": "{{data.columns}}",
            "saveColumnAction": "saveColumnConfigData",
            "saveColumnAndLoadAction": "saveColumnConfigLoadData",
            "resetColumnAction": "resetColumnConfig"
        }
    },
    "grids": {
        "occTreeTable": {
            "dataProvider": "occDataProvider",
            "propertyProvider": "occPropertyProvider",
            "columnProvider": "occColumnProvider",
            "enableArrangeMenu": true,
            "addIconColumn": false,
            "gridOptions": {
                "useStaticFirstCol": true,
                "enableExpandAndPaginationInEdit": true
            }
        }
    },
    "messages": {
        "defaultOpenStateMessage": {
            "messageType": "INFO",
            "messageText": "{{i18n.defaultOpenStateMessage}}",
            "messageTextParams": [
                "{{ctx.occmgmtContext.defaultOpenStateMessageTime}}"
            ]
        }
    },
    "lifecycleHooks": {
        "onUpdate": [ {
            "action": "swaTabChange",
            "observers": [ "props.subPanelContext.provider.pageContext.sublocationState.secondaryActiveTabId" ]
        },
        {
            "action": "updateObjectSetUri",
            "observers": [ "props.subPanelContext.provider.occContext.objectSetUri" ]
        },
        {
            "action": "updateTreeNodeStates",
            "observers": [ "props.subPanelContext.provider.occContext.transientRequestPref.updateTreeNodeStates" ]
        },
        {
            "action": "updateTreeNodeStates",
            "observers": [ "viewModel.dataProviders.occDataProvider.viewModelCollection.loadedVMObjects" ]
        } ]
    },
    "onEvent": [ {
            "eventId": "columnArrange",
            "cacheEventData": true,
            "action": "doArrangeEvent",
            "condition": "name === 'occTreeTable' || ( name === 'occTreeTable2' && ( ctx.occmgmtContext.sublocation.clientScopeURI === ctx.occmgmtContext2.sublocation.clientScopeURI ) )"
        },
        {
            "eventId": "occmgmtColumnConfig.saved",
            "cacheEventData": true,
            "action": "loadDataForSavedColumnConfig",
            "condition": "!ctx.editInProgress"
        },
        {
            "eventId": "ace.groupObjectCategoryChanged",
            "action": "groupObjectsByProperties",
            "condition": "ctx.decoratorToggle"
        },
        {
            "eventId": "occDataProvider.modelObjectsUpdated",
            "action": "groupObjectsByProperties",
            "condition": "ctx.decoratorToggle"
        },
        {
            "eventId": "occMgmt.interaction",
            "cacheEventData": true,
            "action": "processProductInteraction"
        },
        {
            "eventId": "occDataProvider.modelObjectsUpdated",
            "cacheEventData": true,
            "action": "updateDisplayNames"
        },
        {
            "eventId": "vmc.modified.occDataProvider",
            "cacheEventData": true,
            "action": "updateDisplayNames"
        },
        {
            "eventId": "occDataProvider.toggleTreeNodeHierarchy",
            "cacheEventData": true,
            "action": "toggleTreeNodeHierarchy"
        },
        {
            "eventId": "occDataProvider.addNodeToExpansionState",
            "cacheEventData": true,
            "action": "addNodeToExpansionState"
        },
        {
            "eventId": "occMgmt.visibilityStateChanged",
            "condition": "viewToReact ? viewToReact === 'occmgmtContext' : true",
            "action": "setOccVisibility"
        },
        {
            "eventId": "occmgmtInteractiveDuplicateColumnConfig.load",
            "cacheEventData": true,
            "action": "loadColumnConfigForInteractiveDuplicate",
            "condition": "ctx.aceActiveContext.key === 'occmgmtContext'"
        },
        {
            "eventId": "occTreeTable.updateOccMgmtTreeColumns",
            "action": "updateOccMgmtTreeColumns"
        },
        {
            "eventId": "vmc.modified.occDataProvider",
            "cacheEventData": true,
            "action": "processVMC"
        },
        {
            "eventId": "reRenderTableOnClient",
            "condition": "ctx.aceActiveContext.key === 'occmgmtContext' || refreshAllViews === true",
            "action": "publishClientRefreshEventForPlTable"
        },
        {
            "eventId": "occDataProvider.treeNodesLoaded",
            "cacheEventData": true,
            "condition": "ctx.occmgmtContext.currentState.incontext_uid !== undefined && ctx.occmgmtContext.currentState.incontext_uid !== null",
            "action": "applyInContextOverrideStatesOnNewlyLoadedObjectsInTree"
        },
        {
            "eventId": "refreshCellRenderersForCompare",
            "action": "applyCellRenderers"
        },
        {
            "eventId": "primaryWorkarea.multiSelectActionForAce",
            "condition": "ctx.aceActiveContext.key === 'occmgmtContext'",
            "action": "publishClientRefreshEventForPlTable"
        },
        {
            "eventId": "primaryWorkarea.multiSelectAction",
            "condition": "ctx.aceActiveContext.key === 'occmgmtContext'",
            "action": "publishClientRefreshEventForPlTable"
        },
        {
            "eventId": "primaryWorkarea.multiSelectModeAction",
            "condition": "ctx.aceActiveContext.key === 'occmgmtContext'",
            "cacheEventData": true,
            "action": "multiSelectModeActionBatchJob"
        },
        {
            "eventId": "occDataProvider.startEditForNewVmosRequested",
            "action": "startEditForNewVmos"
        },
        {
            "eventId": "saveEditsRequested",
            "action": "invokeSaveEditsCommand"
        },
        {
            "eventId": "occTreeTable.plTable.loadMorePages",
            "condition": "data.subPanelContext.provider.occContext.LoadTreePropsTimerDebug === 'false'",
            "cacheEventData": true,
            "action": "bufferExtraPages"
        },
        {
            "eventId": "updateActiveContextEvent",
            "cacheEventData": true,
            "condition": "contextKey === props.subPanelContext.provider.contextKey",
            "action": "updateActiveContext"
        },
        {
            "eventId": "occmgmt.restoreProduct",
            "cacheEventData": true,
            "action": "restoreProduct"
        }
    ]
}
