{
    "schemaVersion" : "1.0.0",
    "imports": [],
    "data":{
        "option":
        {
            "type": "STRING",
            "hasLov": true,
            "dbValue": ""
        },
        "tableLoaded": false
    },
    "actions": {
        "initSearch": {
            "actionType": "JSFunction",
            "method": "initSearch",
            "inputData": {
                "data": "{{data.actions}}",
                "actionName": "doGridDataProvider",
                "tableLoaded": "{{data.tableLoaded}}"
            },
            "deps": "js/awSearchService"
        },
        "doGridDataProvider": {
            "actionType": "dataProvider",
            "method": "gridDataProvider"
        },
        "setSelectedProgramViewsOption":
        {
            "actionType": "JSFunction",
            "method": "setSelectedProgramViewsOption",
            "inputData":
            {
                "data": "{{data}}"
            },
            "deps": "js/Saw1ProgramViewsService"
        },
        "getProgramViewsOptions":
        {
            "actionType": "JSFunction",
            "method": "getProgramViewsOptions",
            "inputData": {
                "data": "{{data}}"
            },
            "outputData": {
                "optionList" : "optionList"
            },
            "deps": "js/Saw1ProgramViewsService"
        },
        "saveColumnConfigLoadData": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2019-06-Finder",
            "method": "performSearchViewModel4",
            "inputData": {
                "columnConfigInput": {
                    "clientName": "AWClient",
                    "operationType": "as_arranged",
                    "clientScopeURI": "{{subPanelContext.provider.clientScopeURI}}"
                },
                "saveColumnConfigData": {
                    "clientScopeURI" : "{{subPanelContext.provider.clientScopeURI}}",
                    "columnConfigId" : "{{data.dataProviders.gridDataProvider.columnConfig.columnConfigId}}",
                    "columns": "{{data.dataProviders.gridDataProvider.newColumns}}",
                    "scope" : "LoginUser",
                    "scopeName": ""
                },
                "searchInput": {
                    "attributesToInflate": "{{subPanelContext.searchState.tableViewProperties}}",
                    "maxToLoad": "{{subPanelContext.searchState.maxToLoad}}",
                    "maxToReturn": "{{subPanelContext.searchState.maxToReturn}}",
                    "providerName": "{{subPanelContext.searchState.provider}}",
                    "searchCriteria": "{{function:getProgramViewsSearchCriteria}}",
                    "searchFilterFieldSortType": "{{subPanelContext.searchState.sortType}}",
                    "searchFilterMap6": "{{subPanelContext.searchState.activeFilterMap}}",
                    "searchSortCriteria": "{{data.columnProviders.clientScopeUI.sortCriteria}}",
                    "startIndex": "{{data.dataProviders.gridDataProvider.startIndex}}"
                },
                "inflateProperties": true
            },
            "outputData": {
                "totalFound": "totalFound",
                "tableLoaded": true,
                "searchResults": "{{json:searchResultsJSON}}",
                "dataProviders.gridDataProvider.columnConfig": "columnConfig",
                "output": "{{function:processOutput}}"
            },
            "deps": "js/Saw1ProgramViewsService"
        },
        "resetColumnConfig" : {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2022-06-UiConfig",
            "method": "getOrResetUIColumnConfigs3",
            "inputData": {
                "getOrResetUiConfigsIn": [{
                    "scope": "LoginUser",
                    "scopeName": "",
                    "clientName": "AWClient",
                    "resetColumnConfig": true,
                    "columnConfigQueryInfos":
                        [{
                            "clientScopeURI": "{{subPanelContext.provider.clientScopeURI}}",
                            "operationType": "configured",
                            "typeNames": ["WorkspaceObject"],
                            "columnsToExclude": []
                        }],
                    "businessObjects": [{}]
                }]
            },
            "outputData": {
                "dataProviders.gridDataProvider.columnConfig": "columnConfigurations[0].columnConfigurations[0]"
            }
        },
        "loadData": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2019-06-Finder",
            "method": "performSearchViewModel4",
            "inputData": {
                "columnConfigInput": {
                    "clientName": "AWClient",
                    "clientScopeURI": "{{subPanelContext.provider.clientScopeURI}}"
                },
                "searchInput": {
                    "attributesToInflate": "{{subPanelContext.searchState.tableViewProperties}}",
                    "maxToLoad": "{{subPanelContext.searchState.maxToLoad}}",
                    "maxToReturn": "{{subPanelContext.searchState.maxToReturn}}",
                    "providerName": "{{subPanelContext.searchState.provider}}",
                    "searchCriteria": "{{function:getProgramViewsSearchCriteria}}",
                    "searchFilterFieldSortType": "{{subPanelContext.searchState.sortType}}",
                    "searchFilterMap6": "{{subPanelContext.searchState.activeFilterMap}}",
                    "searchSortCriteria": "{{data.columnProviders.clientScopeUI.sortCriteria}}",
                    "startIndex": "{{data.dataProviders.gridDataProvider.startIndex}}"
                },
                "inflateProperties": true
            },
            "outputData": {
                "totalFound": "totalFound",
                "tableLoaded": true,
                "searchResults": "{{json:searchResultsJSON}}",
                "dataProviders.gridDataProvider.columnConfig": "columnConfig",
                "output": "{{function:processOutput}}"
            },
            "deps": "js/Saw1ProgramViewsService"
        },
        "doArrangeEvent" : {
            "actionType": "JSFunctionAsync",
            "method": "arrangeColumns",
            "inputData": {
                "declViewModel": "{{data}}",
                "eventData": "{{data.eventData}}"
            },
            "deps": "js/columnArrangeService"
        }
    },
    "functions":
    {
        "getProgramViewsSearchCriteria":
        {
            "functionName": "getProgramViewsSearchCriteria",
            "parameters": [
                "{{data.option.dbValue}}",
                "{{subPanelContext.searchState.criteria}}"
            ]
        },
        "processOutput": {
            "functionName": "processOutput",
            "parameters": [
                "{{data}}",
                "{{subPanelContext.searchState}}"
            ]
        }
    },
    "dataProviders": {
        "gridDataProvider": {
            "action": "loadData",
            "editContext": "TABLE_CONTEXT",
            "response": "{{data.searchResults}}",
            "totalFound": "{{data.totalFound}}",
            "inputData": {
                "selectionModel": "{{subPanelContext.selectionModel}}"
            },
            "commandsAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectCellListActionCommands"
        }
    },
    "columnProviders": {
        "clientScopeUI": {
            "saveColumnAndLoadAction" : "saveColumnConfigLoadData",
            "resetColumnAction" : "resetColumnConfig",
            "sortCriteria": []
        }
    },
    "grids": {
        "gridView": {
            "dataProvider": "gridDataProvider",
            "columnProvider": "clientScopeUI",
            "enableArrangeMenu": true,
            "gridOptions": {
                "enableGridMenu": true,
                "enableSorting": false
            }
        }
    },
    "onEvent": [
        {
            "eventId": "columnArrange",
            "cacheEventData": true,
            "action": "doArrangeEvent"
        },
        {
            "eventId": "programViewsTable.contentLoaded",
            "action": "getProgramViewsOptions"
        }
    ],
    "i18n": {
        "myProgramViews": [
            "ScheduleManagerMessages"
        ],
        "allProgramViews": [
            "ScheduleManagerMessages"
        ]
    },
    "lifecycleHooks": {
        "onUpdate": {
            "action": "initSearch",
            "observers": [
                "props.subPanelContext.searchState.criteria.searchString",
                "props.subPanelContext.searchState.filterString"
            ]
        }
    }
}
