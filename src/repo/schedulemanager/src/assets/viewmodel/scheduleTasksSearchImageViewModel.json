{
    "schemaVersion" : "1.0.0",
    "imports":[],
    "data":{
        "additionalContext":
        {
            "type": "STRING",
            "hasLov": true,
            "displayName": "",
            "dbValue": ""
        }
    },
    "actions":
    {
        "setSelectedContext":
        {
            "actionType": "JSFunction",
            "method": "setSelectedContext",
            "inputData":
            {
                "data": "{{data}}"
            },
            "deps": "js/Saw1SearchFilterService"
        },
        "reveal":
        {
            "actionType": "dataProvider",
            "method": "imageDataProvider"
        },
        "loadData":
        {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2019-06-Finder",
            "method": "performSearchViewModel4",
            "inputData":
            {
                "searchInput":
                {
                    "maxToLoad": "{{subPanelContext.searchState.maxToLoad}}",
                    "maxToReturn": "{{subPanelContext.searchState.maxToReturn}}",
                    "providerName": "{{subPanelContext.searchState.provider}}",
                    "searchCriteria": "{{function:getSchedulesSearchCriteria}}",
                    "searchFilterFieldSortType": "{{subPanelContext.searchState.sortType}}",
                    "startIndex": "{{data.dataProviders.imageDataProvider.startIndex}}",
                    "searchFilterMap6": "{{subPanelContext.searchState.activeFilterMap}}",
                    "searchSortCriteria": "{{subPanelContext.searchState.sortCriteria}}"
                }
            },
            "deps": "js/Saw1SearchFilterService",
            "policy":
            {
                "types":
                [
                    {
                        "name": "BusinessObject",
                        "properties":
                        [
                            {
                                "name": "awp0CellProperties"
                            }
                        ]
                    }
                ]
            },
            "outputData":
            {
                "totalFound": "totalFound",
                "searchResults": "{{json:searchResultsJSON}}",
                "output": "{{function:processOutput}}"
            },
            "actionMessages": {
                "failure": [
                    {
                        "message": "schTaskSearchImageErrorMsg"
                    }
                ]
            }
        },
        "loadSubscribedResourcePools":
        {
            "actionType": "TcSoaService",
            "serviceName": "Query-2014-11-Finder",
            "method": "performSearch",
            "inputData":
            {
                "searchInput": {
                    "maxToLoad": 1000,
                    "maxToReturn": 1000,
                    "providerName": "Saw1TaskSearchProvider",
                    "searchCriteria":
                    {
                        "searchContentType": "SubscribedResourcePools"
                    },
                    "startIndex": 0
                }
            },
            "policy":
            {
                "types":
                [
                    {
                        "name": "ResourcePool",
                        "properties":
                        [
                            {
                                "name": "object_string"
                            }
                        ]
                    }
                ]
            },
            "outputData": {
                "totalResourcePools": "totalFound",
                "resourcePoolSearchResults": "searchResults",
                "resourcePoolModelObjects": "ServiceData.modelObjects"
            },
            "events":
            {
                "success":
                [
                    {
                        "name": "scheduleTasksSearchImage.processSubscribedResourcePoolSearchResponse"
                    }
                ]
            },
            "actionMessages": {
                "failure": [
                    {
                        "message": "schTaskSearchImageErrorMsg"
                    }
                ]
            }
        },
        "prepareAdditionalContextList":
        {
            "actionType": "JSFunction",
            "method": "prepareAdditionalContextList",
            "inputData": {
                "data": "{{data}}"
            },
            "outputData": {
                "additionalContextList" : "additionalContextList",
                "additionalContext" : "additionalContext"
            },
            "deps": "js/Saw1SearchFilterService"
        }
    },
    "dataProviders":
    {
        "imageDataProvider":
        {
            "action": "loadData",
            "response": "{{data.searchResults}}",
            "totalFound": "{{data.totalFound}}",
            "inputData": {
                "selectionModel": "{{subPanelContext.selectionModel}}"
            },
            "commandsAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectCellListActionCommands"
        }
    },
    "functions": {
        "getSchedulesSearchCriteria": {
            "functionName": "getSchedulesSearchCriteria",
            "parameters": [
                "{{data.additionalContext.dbValue}}",
                "{{subPanelContext.searchState.criteria}}"
            ]
        },
        "processOutput": {
            "functionName": "processOutput",
            "parameters": [
                "{{data}}",
                "{{subPanelContext.searchState}}"
            ]
        }
    },
    "onEvent": [
        {
            "eventId": "scheduleTasksSearchImage.contentLoaded",
            "action": "loadSubscribedResourcePools"
        },
        {
            "eventId": "scheduleTasksSearchImage.processSubscribedResourcePoolSearchResponse",
            "action": "prepareAdditionalContextList"
        }
    ],
    "messages": {
        "schTaskSearchImageErrorMsg": {
            "messageType": "ERROR",
            "messageText": "{{errorCode}}"
        }
    },
    "i18n": {
        "allTeams": [ "ScheduleManagerMessages" ]
    },
    "lifecycleHooks": {
        "onUpdate": {
            "action": "reveal",
            "observers": [
                "props.subPanelContext.searchState.criteria.searchString",
                "props.subPanelContext.searchState.filterString"
            ]
        }
    }
}
