{
  "commands": {
    "Saw1AddDeliverable": {
      "iconId": "cmdAssignDeliverable",
      "isGroup": true,
      "title": "{{i18n.assignDeliverable}}"
    },
    "Saw1AddTaskDeliverable": {
      "iconId": "cmdAssignDeliverable",
      "isGroup": false,
      "title": "{{i18n.assignTaskdeliverable}}"
    },
    "Saw1AddScheduleDeliverable": {
      "iconId": "cmdAssignDeliverable",
      "isGroup": false,
      "title": "{{i18n.assignScheduledeliverable}}"
    },
    "Saw1ChangeOwner": {
      "iconId": "cmdChangeOwner",
      "isGroup": false,
      "title": "{{i18n.Saw1ChangeOwner}}",
      "description": "{{i18n.Awp0ChangeOwner}}"
    },
    "Saw1AddTemplateSectionCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.Add}}"
    },
    "Saw1RemoveTemplateSectionCmd": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.saw1remove}}"
    },
    "Saw1SetPin": {
      "iconId": "cmdPin",
      "isGroup": false,
      "title": "{{i18n.saw1PinButtonToolTip}}",
      "description": "{{i18n.panelPinButtonDesc}}"
    },
    "Saw1SetUnPin": {
      "iconId": "cmdUnpin",
      "isGroup": false,
      "title": "{{i18n.saw1UnpinButtonToolTip}}",
      "description": "{{i18n.panelUnPinButtonDesc}}"
    },
    "Saw1AssignResourceToTasks": {
      "iconId": "cmdChangeOwner",
      "isGroup": false,
      "title": "{{i18n.AssignOrUnassignResource}}",
      "description": "{{i18n.Saw1AssignResourceDesc}}"
    },
    "Saw1ReplaceRevisionGroup": {
      "iconId": "cmdReplace",
      "isGroup": true,
      "title": "{{i18n.saw1Replace}}"
    },
    "Saw1ReplaceRevision": {
      "iconId": "cmdReplace",
      "isGroup": false,
      "title": "{{i18n.saw1ReplaceRevisionCommandTitle}}"
    },
    "Saw1ReplaceLatestRevision": {
      "iconId": "cmdReplaceLatestRevision",
      "isGroup": false,
      "title": "{{i18n.saw1ReplaceLatestRevisionCommandTitle}}"
    },
    "Saw1CreateProgramView": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.createProgramView}}",
      "description": "{{i18n.Saw1CreateProgramViewDesc}}"
    },
    "Saw1ProgramViewFilter": {
      "iconId": "cmdfilter",
      "isGroup": false,
      "title": "{{i18n.filters}}",
      "description": "{{i18n.Saw1ProgramViewFilterDesc}}"
    },
    "Saw1ProgramViewAddRemoveSchedules": {
      "iconId": "cmdChangeSchedule",
      "isGroup": false,
      "title": "{{i18n.saw1_ChangeSchedules}}",
      "description": "{{i18n.Saw1EditProgramViewCellCommandDesc}}"
    },
    "Saw1DesignatedDiscipline": {
      "iconId": "cmdChangeOwner",
      "isGroup": false,
      "title": "{{i18n.DesignateDiscipline}}",
      "description": "{{i18n.Saw1DesignatedDisciplineDesc}}"
    },
    "Saw1RevertToDiscipline": {
      "iconId": "cmdChangeOwner",
      "isGroup": false,
      "title": "{{i18n.RevertToDiscipline}}",
      "description": "{{i18n.Saw1RevertToDisciplineDesc}}"
    },
    "Saw1RevertToDisciplineMember": {
      "iconId": "cmdChangeOwner",
      "isGroup": false,
      "title": "{{i18n.RevertToDiscipline}}",
      "description": "{{i18n.Saw1RevertToDisciplineDesc}}"
    },
    "Saw1DeliverablesGroup": {
      "iconId": "cmdAssignDeliverable",
      "isGroup": true,
      "title": "{{i18n.deliverables}}"
    },
    "Saw1AddUserCellCommand": {
      "iconId": "cmdAdd",
      "title": "{{i18n.add}}",
      "description": "{{i18n.Saw1AddUserCellCommandDesc}}"
    },
    "Saw1AddScheduleCellCommand": {
      "iconId": "cmdAdd",
      "title": "{{i18n.add}}"
    },
    "Saw1RemoveScheduleCellCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.saw1remove}}"
    },
    "Saw1ResGraphCellCommand": {
      "iconId": "cmdUserAvailability",
      "title": "{{i18n.saw1ResLoadCommandTitle}}",
      "description": "{{i18n.Saw1ResGraphCellCommandDesc}}"
    },
    "Saw1ResGraphPeoplePickerCellCommand": {
      "iconId": "cmdUserAvailability",
      "title": "{{i18n.saw1ResLoadCommandTitle}}",
      "description": "{{i18n.Saw1ResGraphCellCommandDesc}}"
    },
    "Saw1RemoveUserCellCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.saw1remove}}",
      "description": "{{i18n.Saw1UnassignResourceDesc}}"
    },
    "Saw1RemoveUserFromTaskAssignmentCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.saw1remove}}",
      "description": "{{i18n.Saw1UnassignResourceDesc}}"
    },
    "Saw1AddDisciplineCellCommand": {
      "iconId": "cmdAdd",
      "title": "{{i18n.add}}",
      "description": "{{i18n.Saw1AddDisciplineCellCommandDesc}}"
    },
    "Saw1RemovePrivilegedUserCellCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.saw1remove}}",
      "description": "{{i18n.Saw1RemovePrivilegedUserDesc}}"
    },
    "Saw1RemoveWorkflowOwnerCellCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.saw1remove}}",
      "description": "{{i18n.Saw1RemoveWorkflowOwnerDesc}}"
    },
    "Saw1RemoveDisciplineCellCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.saw1remove}}",
      "description": "{{i18n.Saw1RemoveDisciplineCellCommandDesc}}"
    },
    "Saw1AddResourcePoolCellCommand": {
      "iconId": "cmdAdd",
      "title": "{{i18n.add}}",
      "description": "{{i18n.Saw1AddResourcePoolCellCommandDesc}}"
    },
    "Saw1AddBaselineCellCommand": {
      "iconId": "cmdAdd",
      "title": "{{i18n.assignBaseline}}",
      "description": "{{i18n.Saw1AddBaselineCellCommandDesc}}"
    },
    "Saw1ReplaceBaselineCellCommand": {
      "iconId": "cmdReplace",
      "title": "{{i18n.replaceBaseline}}",
      "description": "{{i18n.Saw1ReplaceBaselineCellCommandDesc}}"
    },
    "Saw1RemoveBaselineCellCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.unassignBaseline}}",
      "description": "{{i18n.Saw1RemoveBaselineCellCommandDesc}}"
    },
    "Saw1RemoveResourcePoolCellCommand": {
      "iconId": "cmdRemove",
      "title": "{{i18n.saw1remove}}",
      "description": "{{i18n.Saw1RemoveResourcePoolCellCommandDesc}}"
    },
    "Saw1WorkflowTasks": {
      "iconId": "cmdSubmitToWorkflow",
      "title": "{{i18n.WorkflowTasks}}",
      "description": "{{i18n.Saw1WorkflowTasksDesc}}"
    },
    "Saw1WorkflowTasksOnGantt": {
      "iconId": "cmdSubmitToWorkflow",
      "title": "{{i18n.WorkflowTasks}}",
      "description": "{{i18n.Saw1WorkflowTasksDesc}}"
    },
    "Saw1RemoveWorkflowOwner": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeUser}}",
      "description": "{{i18n.Saw1RemoveWorkflowOwnerDesc}}"
    },
    "Saw1RemovePrivilegedUser": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeUser}}",
      "description": "{{i18n.Saw1RemovePrivilegedUserDesc}}"
    },
    "Saw1RemoveSchDeliverable": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeSchDeliverable}}",
      "description": "{{i18n.Saw1RemoveSchDeliverableDesc}}"
    },
    "Saw1StartWhatIf": {
      "iconId": "cmdWhatIfAnalysis",
      "title": "{{i18n.StartWhatIfAnalysis}}",
      "description": "{{i18n.Saw1StartWhatIfDesc}}"
    },
    "Saw1PromoteWhatIf": {
      "iconId": "cmdSaveWhatIf",
      "title": "{{i18n.promote}}",
      "description": "{{i18n.Saw1PromoteWhatIfDesc}}"
    },
    "Saw1CancelWhatIf": {
      "iconId": "cmdCancelWhatIf",
      "title": "{{i18n.cancel}}",
      "description": "{{i18n.Saw1CancelWhatIfDesc}}"
    },
    "Saw1CreateSchedule": {
      "iconId": "cmdCreateSchedule",
      "isGroup": false,
      "title": "{{i18n.createScheduleTitle}}",
      "description": "{{i18n.Saw1CreateScheduleDesc}}"
    },
    "Saw1InsertSubSchedule": {
      "iconId": "cmdInsert",
      "isGroup": false,
      "title": "{{i18n.insertSubSchedule}}",
      "description": "{{i18n.Saw1InsertSubScheduleDesc}}"
    },
    "Saw1InsertSubScheduleOnGantt": {
      "iconId": "cmdInsert",
      "isGroup": false,
      "title": "{{i18n.insertSubSchedule}}",
      "description": "{{i18n.Saw1InsertSubScheduleDesc}}"
    },
    "Saw1WhatIfGroup": {
      "iconId": "cmdWhatIfAnalysis",
      "isGroup": true,
      "title": "{{i18n.saw1WhatIf}}",
      "description": "{{i18n.saw1WhatIfCmdDesc}}"
    },
    "Saw1GanttZoomLevelGroup": {
      "iconId": "cmdZoom",
      "isGroup": true,
      "title": "{{i18n.saw1GanttSetZoom}}",
      "description": "{{i18n.setZoomGanttGroup}}"
    },
    "Saw1GanttZoomLevelDay": {
      "iconId": "cmdZoomToDay",
      "isGroup": false,
      "title": "{{i18n.saw1GanttZoomLevelDay}}",
      "description": "{{i18n.setZoomGanttDay}}"
    },
    "Saw1GanttZoomLevelWeek": {
      "iconId": "cmdZoomToWeek",
      "isGroup": false,
      "title": "{{i18n.saw1GanttZoomLevelWeek}}",
      "description": "{{i18n.setZoomGanttWeek}}"
    },
    "Saw1GanttZoomLevelMonth": {
      "iconId": "cmdZoomToMonth",
      "isGroup": false,
      "title": "{{i18n.saw1GanttZoomLevelMonth}}",
      "description": "{{i18n.setZoomGanttMonth}}"
    },
    "Saw1GanttZoomLevelYear": {
      "iconId": "cmdZoomToYear",
      "isGroup": false,
      "title": "{{i18n.saw1GanttZoomLevelYear}}",
      "description": "{{i18n.setZoomGanttYear}}"
    },
    "Saw1GanttZoomLevelDefault": {
      "isGroup": false,
      "title": "{{i18n.saw1GanttZoomLevelDefault}}",
      "description": "{{i18n.setZoomGanttUnitOfTime}}"
    },
    "Saw1RemoveAssignments": {
      "iconId": "cmdRemoveAssignment",
      "isGroup": false,
      "title": "{{i18n.removeAssignmentsCommandTitle}}",
      "description": "{{i18n.Saw1RemoveAssignmentsDesc}}"
    },
    "Saw1ReplaceMember": {
      "iconId": "cmdChangeOwner",
      "isGroup": false,
      "title": "{{i18n.reassignTask}}",
      "description": "{{i18n.Saw1ReplaceMemberDesc}}"
    },
    "Saw1ResourcesGroupToMembers": {
      "iconId": "cmdChangeOwner",
      "isGroup": true,
      "title": "{{i18n.resources}}",
      "description": "{{i18n.Saw1ResourcesGroupToMembers}}"
    },
    "Saw1ReplaceMemberGroup": {
      "iconId": "cmdChangeOwner",
      "isGroup": false,
      "title": "{{i18n.reassignTask}}"
    },
    "Saw1DesignateDisciplineToMembers": {
      "iconId": "cmdChangeOwner",
      "isGroup": false,
      "title": "{{i18n.DesignateDiscipline}}",
      "description": "{{i18n.Saw1DesignateDisciplineToMembersDesc}}"
    },
    "Saw1UnassignResource": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.unassignResourceCommandTitle}}",
      "description": "{{i18n.Saw1UnassignResourceDesc}}"
    },
    "Saw1CreateSchTask": {
      "iconId": "cmdAddScheduleTask",
      "title": "{{i18n.addTaskCommandTitle}}",
      "description": "{{i18n.Saw1CreateSchTaskDesc}}"
    },
    "Saw1MirrorAsProxyTask": {
      "iconId": "cmdMirrorAsProxy",
      "title": "{{i18n.mirrorAsProxyCommandTitle}}",
      "description": "{{i18n.Saw1MirrorAsProxyTaskDesc}}"
    },
    "Saw1ShiftSchedule": {
      "iconId": "cmdShiftDate",
      "isGroup": false,
      "title": "{{i18n.Shift}}",
      "description": "{{i18n.Saw1ShiftScheduleDesc}}"
    },
    "Saw1CreateProxyTask": {
      "iconId": "cmdAddProxyTask",
      "title": "{{i18n.addProxyTaskCommandTitle}}",
      "description": "{{i18n.Saw1CreateProxyTaskDesc}}"
    },
    "Saw1RemoveSchMember": {
      "iconId": "cmdRemove",
      "title": "{{i18n.removeMemberCommandTitle}}",
      "description": "{{i18n.Saw1RemoveSchMemberDesc}}"
    },
    "Saw1IndentTask": {
      "iconId": "cmdDemote",
      "title": "{{i18n.indentTaskCmdTitle}}",
      "description": "{{i18n.Saw1IndentTaskDesc}}"
    },
    "Saw1ShowSplitPanelGroup": {
      "iconId": "cmdShowTable",
      "isGroup": true,
      "title": "{{i18n.saw1InterfaceDetails}}"
    },
    "Saw1ShowSplitPanelRight": {
      "iconId": "cmdShowPanelRight",
      "isGroup": false,
      "title": "{{i18n.saw1IntDetailsRight}}"
    },
    "Saw1ShowSplitPanelBottom": {
      "iconId": "cmdShowPanelBottom",
      "isGroup": false,
      "title": "{{i18n.saw1IntDetailsBottom}}"
    },
    "Saw1ShowSplitPanelOff": {
      "iconId": "cmdShowPanelOff",
      "isGroup": false,
      "title": "{{i18n.saw1IntDetailsOff}}"
    },
    "Saw1ResourceChartGoTo": {
      "iconId": "cmdGoTo",
      "title": "{{i18n.saw1GoTo}}",
      "description": "{{i18n.saw1GoTo}}"
    },
    "Saw1ResourceChartAllSchedules": {
      "iconId": "cmdSchedules",
      "isGroup": false,
      "title": "{{i18n.saw1AllSchedules}}",
      "description": "{{i18n.saw1AllSchedulesDesc}}"
    },
    "Saw1ResourceChartNextTwoWeeks": {
      "iconId": "cmdForwardButton",
      "isGroup": false,
      "title": "{{i18n.saw1Next}}",
      "description": "{{i18n.saw1NextTwoWeeks}}"
    },
    "Saw1ResourceChartPreviousTwoWeeks": {
      "iconId": "cmdBackwardButton",
      "isGroup": false,
      "title": "{{i18n.saw1Previous}}",
      "description": "{{i18n.saw1PreviousTwoWeeks}}"
    },
    "Saw1ResourceChartToday": {
      "iconId": "cmdJumpToToday",
      "isGroup": false,
      "title": "{{i18n.Saw1Today}}",
      "description": "{{i18n.Saw1TodayExtendedTooltip}}"
    },
    "Saw1OutdentTask": {
      "iconId": "cmdPromote",
      "title": "{{i18n.outdentTaskCmdTitle}}",
      "description": "{{i18n.Saw1OutdentTaskDesc}}"
    },
    "Saw1DeleteDependency": {
      "iconId": "cmdDelete",
      "title": "{{i18n.deleteDependencyCommandTitle}}",
      "description": "{{i18n.Saw1DeleteDependencyDesc}}"
    },
    "Saw1DeleteSchedule": {
      "iconId": "cmdDelete",
      "title": "{{i18n.deleteSchedules}}",
      "description": "{{i18n.Saw1DeleteScheduleDesc}}"
    },
    "Saw1DeleteTask": {
      "iconId": "cmdDelete",
      "title": "{{i18n.deleteTasks}}",
      "description": "{{i18n.Saw1DeleteTaskDesc}}"
    },
    "Saw1DeleteTaskOnGantt": {
      "iconId": "cmdDelete",
      "title": "{{i18n.deleteTasks}}",
      "description": "{{i18n.Saw1DeleteTaskDesc}}"
    },
    "Saw1CreateDependency": {
      "iconId": "cmdDependency",
      "isGroup": false,
      "title": "{{i18n.createDependency}}",
      "description": "{{i18n.Saw1CreateDependencyDesc}}"
    },
    "Saw1CreateDependencyOnGantt": {
      "iconId": "cmdDependency",
      "isGroup": false,
      "title": "{{i18n.createDependency}}",
      "description": "{{i18n.Saw1CreateDependencyDesc}}"
    },
    "Saw1RemoveTaskDeliverable": {
      "iconId": "cmdRemove",
      "title": "{{i18n.saw1remove}}",
      "description": "{{i18n.Saw1RemoveTaskDeliverableDesc}}"
    },
    "Saw1SearchFilters": {
      "iconId": "cmdfilter",
      "isGroup": false,
      "title": "{{i18n.Saw1SearchFiltersTitle}}",
      "description": "{{i18n.Saw1SearchFiltersDesc}}"
    },
    "Saw1RoleSelect": {
      "iconId": "cmdSetPrivilegedUser",
      "isGroup": true,
      "title": "{{i18n.Saw1RoleTitle}}",
      "description": "{{i18n.Saw1RoleDesc}}"
    },
    "Saw1RoleCoordinator": {
      "isGroup": false,
      "title": "{{i18n.Saw1RoleCoordinatorTitle}}",
      "description": "{{i18n.Saw1RoleCoordinatorDesc}}"
    },
    "Saw1RoleParticipant": {
      "isGroup": false,
      "title": "{{i18n.Saw1RoleParticipantTitle}}",
      "description": "{{i18n.Saw1RoleParticipantDesc}}"
    },
    "Saw1RoleObserver": {
      "isGroup": false,
      "title": "{{i18n.Saw1RoleObserverTitle}}",
      "description": "{{i18n.Saw1RoleObserverDesc}}"
    },
    "Saw1AddSchDeliverable": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addDeliverableCommandTitle}}",
      "description": "{{i18n.Saw1AddSchDeliverableDesc}}"
    },
    "Saw1LaunchWorkflow": {
      "iconId": "cmdLaunchWorkflow",
      "isGroup": false,
      "title": "{{i18n.launchWorkflow}}",
      "description": "{{i18n.Saw1LaunchWorkflowDesc}}"
    },
    "Saw1ShowTaskProperties": {
      "iconId": "cmdShowGanttInfo",
      "isGroup": false,
      "title": "{{i18n.Saw1ShowTaskProperties}}",
      "description": "{{i18n.Saw1ShowTaskPropertiesDesc}}"
    },
    "Saw1ShowHideCriticalPath": {
      "iconId": "cmdCriticalPath",
      "isGroup": false,
      "title": "{{i18n.showCriticalPath}}",
      "selected": {
        "title": "{{i18n.hideCriticalPath}}"
      },
      "description": "{{i18n.Saw1ShowHideCriticalPathDesc}}"
    },
    "Saw1AssignScheduleDeliverable": {
      "iconId": "cmdAssignDeliverable",
      "isGroup": false,
      "title": "{{i18n.assignScheduledeliverable}}",
      "description": "{{i18n.Saw1AssignScheduleDeliverableDesc}}"
    },
    "Saw1AssignTaskDeliverable": {
      "iconId": "cmdAssignDeliverable",
      "isGroup": false,
      "title": "{{i18n.assignTaskdeliverable}}",
      "description": "{{i18n.Saw1AssignTaskDeliverableDesc}}"
    },
    "Saw1ProjectSectionAddCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addProjectButtonTitle}}",
      "description": "{{i18n.uiwidgetAddcmdDesc}}"
    },
    "Saw1ProgramFiltersAddCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addButtonText}}",
      "description": "{{i18n.Saw1ProgramFiltersAddCmdDesc}}"
    },
    "Saw1TemplateProjectSectionAddCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addProjectButtonTitle}}"
    },
    "Saw1UserSectionAddCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addPrivilegedUser}}",
      "description": "{{i18n.Saw1UserSectionAddCmdDesc}}"
    },
    "Saw1OwnerSectionAddCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addWorkflowOwner}}",
      "description": "{{i18n.Saw1OwnerSectionAddCmdDesc}}"
    },
    "Saw1CreateScheduleTask": {
      "iconId": "cmdAdd",
      "title": "{{i18n.addTaskCommandTitle}}",
      "description": "{{i18n.Saw1CreateScheduleTask}}"
    },
    "Saw1AssignResource": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.AssignOrUnassignResource}}",
      "description": "{{i18n.Saw1AssignResourceDesc}}"
    },
    "Saw1AssignResourceOnGantt": {
      "iconId": "cmdChangeOwner",
      "isGroup": false,
      "title": "{{i18n.AssignOrUnassignResource}}",
      "description": "{{i18n.Saw1AssignResourceDesc}}"
    },
    "Saw1AddMember": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.add}}",
      "description": "{{i18n.Saw1AddMemberDesc}}"
    },
    "Saw1CreateBaseline": {
      "iconId": "cmdBaselineSchedule",
      "isGroup": false,
      "title": "{{i18n.saw1CreateBaseline}}",
      "description": "{{i18n.Saw1CreateBaselineDesc}}"
    },
    "Saw1ViewBaselineSchedule": {
      "iconId": "cmdBaselineSchedule",
      "isGroup": false,
      "title": "{{i18n.viewBaseline}}",
      "description": "{{i18n.Saw1ViewBaselineScheduleDesc}}"
    },
    "Saw1GanttFilters": {
      "iconId": "cmdfilter",
      "isGroup": false,
      "title": "{{i18n.Saw1SearchFiltersTitle}}",
      "description": "{{i18n.Saw1GanttFiltersDesc}}"
    },
    "Saw1SaveAsSchedule": {
      "iconId": "cmdSaveAs",
      "isGroup": false,
      "title": "{{i18n.Saw1SaveAsCmdTitle}}",
      "description": "{{i18n.Saw1SaveAsScheduleDesc}}"
    },
    "Saw1Recalculate": {
      "iconId": "cmdUpdateSchedule",
      "isGroup": false,
      "title": "{{i18n.saw1Recalculate}}",
      "description": "{{i18n.Saw1RecalculateDesc}}"
    },
    "Saw1RecalculateOnGantt": {
      "iconId": "cmdUpdateSchedule",
      "isGroup": false,
      "title": "{{i18n.saw1Recalculate}}",
      "description": "{{i18n.Saw1RecalculateOnGanttDesc}}"
    },
    "Saw1EnterTime": {
      "iconId": "cmdEnterTime",
      "isGroup": false,
      "title": "{{i18n.enterTimeTitle}}",
      "description": "{{i18n.Saw1EnterTimeDesc}}"
    },
    "Saw1AddTimesheetEntry": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addTimesheetEntry}}",
      "description": "{{i18n.Saw1AddTimesheetEntryDesc}}"
    },
    "Saw1AddSchedulesProgramView": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.saw1_add}}"
    },
    "Saw1EditTimesheetEntryCellCommand": {
      "iconId": "cmdEdit",
      "title": "{{i18n.edit}}",
      "description": "{{i18n.Saw1EditTimesheetEntryCellCommandDesc}}"
    },
    "Saw1DeleteTimesheetEntryCellCommand": {
      "iconId": "cmdDelete",
      "title": "{{i18n.delete}}",
      "description": "{{i18n.Saw1DeleteTimesheetEntryCellCommandDesc}}"
    },
    "Saw1EditProgramViewCellCommand": {
      "iconId": "cmdEdit",
      "title": "{{i18n.edit}}",
      "description": "{{i18n.Saw1EditProgramViewCellCommandDesc}}"
    },
    "Saw1DeleteProgramViewCellCommand": {
      "iconId": "cmdDelete",
      "title": "{{i18n.Saw1Delete}}",
      "description": "{{i18n.Saw1DeleteProgramViewCellCommandDesc}}"
    },
    "Saw1OpenSchTemplateInNewTabCellCommand": {
      "iconId": "cmdOpenInNewTab",
      "title": "{{i18n.Awp0OpenInNewTabTitle}}",
      "description": "{{i18n.Awp0OpenInNewTab}}"
    },
    "Saw1QuickCreateTask": {
      "iconId": "cmdAddScheduleTask",
      "isGroup": false,
      "title": "{{i18n.quickTaskCommandTitle}}",
      "description": "{{i18n.Saw1QuickCreateTaskDesc}}"
    },
    "Saw1QuickCreateMilestone": {
      "iconId": "cmdAddEventMilestone",
      "isGroup": false,
      "title": "{{i18n.quickMilestoneCommandTitle}}",
      "description": "{{i18n.Saw1QuickCreateMilestoneDesc}}"
    },
    "Awp0GoSchedules": {
      "iconId": "cmdSchedules",
      "title": "{{i18n.schedulesTitle}}",
      "description": "{{i18n.Awp0GoSchedulesDesc}}"
    },
    "Awp0GoScheduleTasks": {
      "iconId": "cmdScheduleTasks",
      "title": "{{i18n.scheduleTasksTitle}}",
      "description": "{{i18n.Awp0GoScheduleTasksDesc}}"
    },
    "Saw1ClaimTask": {
      "title": "{{i18n.saw1ClaimTask}}",
      "description": "{{i18n.Saw1ClaimTaskDesc}}"
    },
    "Saw1KanbanDisplayLimit": {
      "iconId": "cmdDisplayLimit",
      "title": "{{i18n.Saw1KanbanDisplayLimit}}",
      "description": "{{i18n.Saw1KanbanDisplayLimitDesc}}"
    },
    "Saw1Expand": {
      "iconId": "cmdExpandBelow",
      "title": "{{i18n.Saw1Expand}}",
      "isGroup": true,
      "description": "{{i18n.Saw1ExpandDesc}}"
    },
    "Saw1ExpandBelow": {
      "iconId": "cmdExpandBelow",
      "title": "{{i18n.Saw1ExpandBelow}}",
      "isGroup": false,
      "description": "{{i18n.Saw1ExpandBelowDesc}}"
    },
    "Saw1CollapseBelow": {
      "iconId": "cmdCollapseBelow",
      "title": "{{i18n.Saw1CollapseBelow}}",
      "isGroup": false,
      "description": "{{i18n.Saw1CollapseBelowDesc}}"
    },
    "Saw1ManageBaselinesSchedule": {
      "iconId": "cmdBaselineSchedule",
      "isGroup": false,
      "title": "{{i18n.manageBaselines}}",
      "description": "{{i18n.Saw1ManageBaselinesDesc}}"
    },
    "Saw1EditBaselineCellCommand": {
      "iconId": "cmdEdit",
      "title": "{{i18n.editBaseline}}",
      "description": "{{i18n.Saw1EditBaselineCellCommandDesc}}"
    },
    "Saw1DeleteBaselineCellCommand": {
      "iconId": "cmdDelete",
      "title": "{{i18n.deleteBaseline}}",
      "description": "{{i18n.Saw1DeleteBaselineCellCommandDesc}}"
    },
    "Saw1SetBaselineActiveCellCommand": {
      "iconId": "cmdSetBaselineActive",
      "title": "{{i18n.setBaselineActive}}",
      "description": "{{i18n.Saw1SetBaselineActiveCellCommandDesc}}"
    },
    "Saw1ShowSchTaskDeliverablesCommand": {
      "iconId": "cmdViewDeliverables",
      "isGroup": false,
      "title": "{{i18n.showSchTaskDeliverables}}",
      "description": "{{i18n.Saw1ShowSchTaskDeliverablesCellCommandDesc}}"
    },
    "Saw1ExportToExcelTCBCommand": {
      "iconId": "cmdExport",
      "title": "{{i18n.Awp0ExportToExcelTitle}}",
      "description": "{{i18n.Awp0ExportToExcelDesc}}"
    },
    "Saw1OpenInScheduleContextCommand": {
      "iconId": "cmdOpenScheduleContext",
      "title": "{{i18n.cmdOpenInScheduleContextTitle}}",
      "description": "{{i18n.cmdOpenInScheduleContextDesc}}"
    },
    "Saw1GanttChartToggleCommand": {
      "iconId": "cmdShowHideGantt",
      "isGroup": false,
      "title": "{{i18n.Saw1GanttChart}}",
      "description": "{{i18n.Saw1GanttChartToggleDesc}}"
    },
    "Saw1FullScreenCommand": {
      "iconId": "cmdFullScreen",
      "title": "{{i18n.taskbarFullScreen}}",
      "description": "{{i18n.Awp0TaskbarFullScreenDesc}}"
    },
    "Saw1AddFollower": {
      "iconId": "cmdAdd",
      "title": "{{i18n.saw1_add}}"
    },
    "Saw1RemoveFollower": {
      "iconId": "cmdRemove",
      "title": "{{i18n.saw1remove}}"
    },
    "Saw1AddSubscription": {
      "iconId": "cmdAdd",
      "title": "{{i18n.addSubscriptionCmd}}",
      "description": "{{i18n.addSubscriptionToolTip}}"
    },
    "Saw1DeactivateSubscription": {
      "iconId": "cmdDeactivate",
      "title": "{{i18n.deActivateSubscriptionCmd}}",
      "description": "{{i18n.deActivateSubscriptionToolTip}}"
    },
    "Saw1DeactivateSubscriptionAsDummy": {
      "iconId": "cmdDeactivate",
      "title": "{{i18n.deActivateSubscriptionCmd}}",
      "description": "{{i18n.deActivateSubscriptionToolTip}}"
    },
    "Saw1ActivateSubscription": {
      "iconId": "cmdDeactivate",
      "title": "{{i18n.ActivateSubscriptionCmd}}",
      "description": "{{i18n.activateSubscriptionToolTip}}"
    },
    "Saw1DeleteSubscription": {
      "iconId": "cmdDelete",
      "title": "{{i18n.deleteSubscriptionCmd}}",
      "description": "{{i18n.deleteSubscriptionToolTip}}"
    },
    "Saw1EditSubscription": {
      "iconId": "cmdEdit",
      "title": "{{i18n.editSubscriptionCmd}}",
      "description": "{{i18n.editSubscriptionToolTip}}"
    },
    "Saw1EventAddCellCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addEventTitle}}"
    },
    "Saw1EventRemoveCellCmd": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeEventTitle}}"
    },
    "Saw1UserAssignmentFromPeoplePicker": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addButtonText}}",
      "description": "{{i18n.Saw1AssignResourceDesc}}"
    },
    "Saw1PasteResourceFromPeoplePickerCmd": {
      "iconId": "cmdAssignUsers",
      "isGroup": false,
      "title": "{{i18n.addButtonText}}",
      "description": "{{i18n.Saw1AssignResourceDesc}}"
    },
    "Saw1AddSchMemberCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addSchMemberTitle}}"
    },
    "Saw1RemoveSchMemberCmd": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeSchMemberTitle}}"
    },
    "Saw1PasteSchMemberFromPeoplePickerCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addSchMemberTitle}}"
    }
  },
  "commandHandlers": {
    "Saw1AssignDeliverableGroupCommandHandler": {
      "id": "Saw1AddDeliverable",
      "activeWhen": true
    },
    "Saw1AddTaskDeliverableGrpCommandHandler": {
      "id": "Saw1AddTaskDeliverable",
      "action": "assignTaskDeliverable",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.saw1AssignDeliverableGrpCmdVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.Saw1GroupCommandVisibility"
      }
    },
    "Saw1AssignSchDeliverableGrpCommandHandler": {
      "id": "Saw1AddScheduleDeliverable",
      "action": "openAssignScheduleDeliverablePanel",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.saw1AssignDeliverableGrpCmdVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.Saw1GroupCommandVisibility"
      }
    },
    "disableWrapTextCommand": {
      "id": "toggleDynamicRowHeight",
      "activeWhen": {
        "condition": "conditions.isScheduleNavigationTreeGrid"
      },
      "visibleWhen": false
    },
    "Saw1GanttChartToggleCommandHandler": {
      "id": "Saw1GanttChartToggleCommand",
      "action": "toggleGanttChart",
      "activeWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "selectWhen": {
        "condition": "conditions.isGanttChartVisible"
      }
    },
    "Saw1ExportToExcelTCBHandler": {
      "id": "Saw1ExportToExcelTCBCommand",
      "action": "activateExportToExcelFilePanelTCB",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1ManageBaselinesCommandHandler": {
      "id": "Saw1ManageBaselinesSchedule",
      "action": "getManageBaselinesPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1BaselineScheduleCommandVisibility"
      }
    },
    "Saw1EditBaselineCellCommandHandler": {
      "id": "Saw1EditBaselineCellCommand",
      "action": "getEditBaselinePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1BaselineScheduleCommandVisibility"
      }
    },
    "Saw1DeleteBaselineCellCommandHandler": {
      "id": "Saw1DeleteBaselineCellCommand",
      "action": "confirmDeleteBaseline",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1BaselineScheduleCommandVisibility"
      }
    },
    "Saw1SetBaselineActiveCellCommandHandler": {
      "id": "Saw1SetBaselineActiveCellCommand",
      "action": "setBaselineActiveSOA",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1SetActiveBaselineCommandVisibility"
      }
    },
    "saw1ChangeOwnerCommandHandler": {
      "id": "Saw1ChangeOwner",
      "action": "saw1OpenChangeOwnerPanel",
      "activeWhen": {
        "condition": "conditions.isPageVisibility"
      },
      "visibleWhen": true
    },
    "Saw1AddTemplateSectionCmdHandler": {
      "id": "Saw1AddTemplateSectionCmd",
      "action": "Saw1AddTemplateAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1AddTemplateSectionCmdVisibility"
      }
    },
    "Saw1RemoveTemplateSectionCmdHandler": {
      "id": "Saw1RemoveTemplateSectionCmd",
      "action": "Saw1RemoveTemplateAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1RemoveTemplateSectionCmdVisibility"
      }
    },
    "Saw1AssignOrUnassignResourcesCommandHandler": {
      "id": "Saw1AssignResourceToTasks",
      "action": "getAssignResourcePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1AssignOrUnassignResourcesCommandVisible"
      }
    },
    "Saw1ReplaceRevisionGroupCommandHandler": {
      "id": "Saw1ReplaceRevisionGroup",
      "activeWhen": true
    },
    "Saw1ReplaceRevisionCommandHandler": {
      "id": "Saw1ReplaceRevision",
      "action": "replaceSchTaskDelRevisionAction",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.Saw1ReplaceRevisionCmdVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.Saw1GroupCommandVisibility"
      }
    },
    "Saw1ReplaceLatestRevisionCommandHandler": {
      "id": "Saw1ReplaceLatestRevision",
      "action": "replaceLatestSchTaskDelRevisionConfimationAction",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.Saw1ReplaceLatestRevisionCmdVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.Saw1GroupCommandVisibility"
      }
    },
    "Saw1CreateProgramViewCommandHandler": {
      "id": "Saw1CreateProgramView",
      "action": "getCreateProgramViewPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1CreateProgramViewVisibility"
      }
    },
    "Saw1ProgramViewFilterCommandHandler": {
      "id": "Saw1ProgramViewFilter",
      "action": "getProgramViewFilterPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1ProgramViewFilterVisibility"
      }
    },
    "Saw1ProgramViewAddRemoveSchedulesCommandHandler": {
      "id": "Saw1ProgramViewAddRemoveSchedules",
      "action": "AddSchedulesProgramView",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1DesignatedDisciplineCommandHandler": {
      "id": "Saw1DesignatedDiscipline",
      "action": "getDesignateDisciplinePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1DesignatedDisciplineCommandVisible"
      }
    },
    "Saw1RevertToDisciplineCommandHandler": {
      "id": "Saw1RevertToDiscipline",
      "action": "getRevertToDisciplinePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1RevertToDisciplineCommandVisible"
      }
    },
    "Saw1RevertToDisciplineMemberCommandHandler": {
      "id": "Saw1RevertToDisciplineMember",
      "action": "getRevertToDisciplineMember",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1RevertToDisciplineMemberCommandVisible"
      }
    },
    "Saw1DeliverablesGroupCommandHandler": {
      "id": "Saw1DeliverablesGroup",
      "activeWhen": true
    },
    "RemoveSchDeliverableCommandHandler": {
      "id": "Saw1RemoveSchDeliverable",
      "action": "removeSchDeliverable",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.removeDeliverablesVisibility"
      }
    },
    "Saw1StartWhatIfCommandHandler": {
      "id": "Saw1StartWhatIf",
      "action": "startWhatIfStarted",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "enableWhen": {
        "condition": "conditions.startWhatIfVisibility"
      }
    },
    "Saw1PromoteWhatIfCommandHandler": {
      "id": "Saw1PromoteWhatIf",
      "action": "promoteWhatIfStarted",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "enableWhen": {
        "condition": "conditions.promoteWhatIfVisibility"
      }
    },
    "Saw1CancelWhatIfCommandHandler": {
      "id": "Saw1CancelWhatIf",
      "action": "cancelWhatIf",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "enableWhen": {
        "condition": "conditions.cancelWhatIfVisibility"
      }
    },
    "CreateScheduleCommandHandler": {
      "id": "Saw1CreateSchedule",
      "action": "openCreateSchedulePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.createScheduleCommandVisibility"
      }
    },
    "AddScheduleDeliverableCommandHandler": {
      "id": "Saw1AddSchDeliverable",
      "action": "openAddScheduleDeliverablePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.AddScheduleDeliverableCommandVisible"
      }
    },
    "InsertSubScheduleCommandHandler": {
      "id": "Saw1InsertSubSchedule",
      "action": "getInsertSubSchedulePanel",
      "activeWhen": {
        "condition": "conditions.insertSubScheduleCommandActive"
      },
      "visibleWhen": {
        "condition": "conditions.insertSubScheduleCommandVisibility"
      }
    },
    "Saw1InsertSubScheduleOnGanttCommandHandler": {
      "id": "Saw1InsertSubScheduleOnGantt",
      "action": "getInsertSubSchedulePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "enableWhen": {
        "condition": "conditions.isSaw1InsertSubScheduleOnGanttCmdEnabled"
      }
    },
    "Saw1GanttZoomLevelDayCommandHandler": {
      "id": "Saw1GanttZoomLevelDay",
      "action": "setZoomToDay",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isGanttChartVisible"
      },
      "enableWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "selectWhen": {
        "condition": "conditions.isDaySelected"
      }
    },
    "Saw1GanttZoomLevelWeekCommandHandler": {
      "id": "Saw1GanttZoomLevelWeek",
      "action": "setZoomToWeek",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isGanttChartVisible"
      },
      "enableWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "selectWhen": {
        "condition": "conditions.isWeekSelected"
      }
    },
    "Saw1GanttZoomLevelMonthCommandHandler": {
      "id": "Saw1GanttZoomLevelMonth",
      "action": "setZoomToMonth",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isGanttChartVisible"
      },
      "enableWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "selectWhen": {
        "condition": "conditions.isMonthSelected"
      }
    },
    "Saw1GanttZoomLevelYearCommandHandler": {
      "id": "Saw1GanttZoomLevelYear",
      "action": "setZoomToYear",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isGanttChartVisible"
      },
      "enableWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "selectWhen": {
        "condition": "conditions.isYearSelected"
      }
    },
    "Saw1GanttZoomLevelDefaultCommandHandler": {
      "id": "Saw1GanttZoomLevelDefault",
      "action": "setZoomToDefault",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isGanttChartVisible"
      },
      "enableWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "selectWhen": {
        "condition": "conditions.isDefaultSelected"
      }
    },
    "RemoveAssignmentsCommandHandler": {
      "id": "Saw1RemoveAssignments",
      "action": "confirmationMessage",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.removeAssignmentsCommandVisibility"
      }
    },
    "openBaselineObjectCellCommandHandler": {
      "id": "Awp0ShowObjectCellForObjectNavigation",
      "action": "openBaselineObjectCellAction",
      "activeWhen": {
        "condition": "conditions.openBaselineObjectCellActive"
      },
      "visibleWhen": {
        "condition": "conditions.openBaselineObjectCellActive"
      }
    },
    "openBaselineShowObjectCellCommandHandler": {
      "id": "Awp0ShowObjectCell",
      "action": "openBaselineObjectCellAction",
      "activeWhen": {
        "condition": "conditions.openBaselineObjectCellActive"
      },
      "visibleWhen": {
        "condition": "conditions.openBaselineObjectCellActive"
      }
    },
    "openProgramViewCellCommandHandler": {
      "id": "Awp0ShowObjectCell",
      "action": "openProgramViewShowObjectAction",
      "activeWhen": {
        "condition": "conditions.openProgramViewCellActive"
      },
      "visibleWhen": {
        "condition": "conditions.openProgramViewCellActive"
      }
    },
    "openBaselineShowObjectCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "openBaselineShowObjectAction",
      "activeWhen": {
        "condition": "conditions.openBaselineShowObjectActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdOpenInNewTabCommandActive"
      }
    },
    "openBaselineInNewTabCommandHandler": {
      "id": "Awp0OpenInNewTab",
      "action": "openBaselineInNewTabAction",
      "activeWhen": {
        "condition": "conditions.openBaselineInNewTabActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdOpenInNewTabCommandActive"
      }
    },
    "openBaselineInNewWindowCommandHandler": {
      "id": "Awp0OpenInNewWindow",
      "action": "openBaselineInNewWindowAction",
      "activeWhen": {
        "condition": "conditions.openBaselineInNewWindowActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdOpenInNewTabCommandActive"
      }
    },
    "Saw1MirrorAsProxyTaskCommandHandler": {
      "id": "Saw1MirrorAsProxyTask",
      "action": "getMirrorAsProxyTaskPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.createMirrorAsProxyTaskCmdVisibility"
      }
    },
    "Saw1CreateSchTaskCommandHandler": {
      "id": "Saw1CreateSchTask",
      "action": "createScheduleTask",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.createSchTaskCmdVisibility"
      }
    },
    "ShiftScheduleCommandHandler": {
      "id": "Saw1ShiftSchedule",
      "action": "openShiftSchedulePanel",
      "activeWhen": {
        "condition": "conditions.shiftScheduleCommandVisibility"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.shiftScheduleCommandVisibility"
      }
    },
    "Saw1CreateProxyTaskCommandHandler": {
      "id": "Saw1CreateProxyTask",
      "action": "getCreateProxyTaskPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.createProxySchTaskCmdVisibility"
      }
    },
    "RemoveSchMemberCommandHandler": {
      "id": "Saw1RemoveSchMember",
      "action": "removeSchMemberFunction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.removeSchMemberCmdVisibility"
      }
    },
    "Saw1ShowSplitPanelRightCommandHandler": {
      "id": "Saw1ShowSplitPanelRight",
      "action": "saw1ChangeSplitPanelRight",
      "activeWhen": true,
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.saw1ShowSplitPanelRightCond"
      }
    },
    "Saw1ShowSplitPanelBottomCommandHandler": {
      "id": "Saw1ShowSplitPanelBottom",
      "action": "saw1ChangeSplitPanelBottom",
      "activeWhen": true,
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.saw1ShowSplitPanelBottomCond"
      }
    },
    "Saw1ShowSplitPanelOffCommandHandler": {
      "id": "Saw1ShowSplitPanelOff",
      "action": "saw1ChangeSplitPanelOff",
      "activeWhen": true,
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.saw1ShowSplitPanelOffCond"
      }
    },
    "Saw1ResourceChartGoToCommandHandler": {
      "id": "Saw1ResourceChartGoTo",
      "action": "goToGivenDate",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1ResourceChartAllSchedulesHandler": {
      "id": "Saw1ResourceChartAllSchedules",
      "action": "toggleToAllSchedules",
      "activeWhen": true,
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.toggleToAllSchedulesSelectCondition"
      }
    },
    "Saw1ResourceChartNextTwoWeeksCommandHandler": {
      "id": "Saw1ResourceChartNextTwoWeeks",
      "action": "jumpToNextWeek",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1ResourceChartPreviousTwoWeeksCommandHandler": {
      "id": "Saw1ResourceChartPreviousTwoWeeks",
      "action": "jumpToPreviousWeek",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1ResourceChartTodayCommandHandler": {
      "id": "Saw1ResourceChartToday",
      "action": "jumpToToday",
      "activeWhen": true,
      "visibleWhen": true
    },
    "IndentTaskCommandHandler": {
      "id": "Saw1IndentTask",
      "action": "loadPropertiesAndIndentTask",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "enableWhen": {
        "condition": "conditions.isSaw1IndentTaskCmdEnabled"
      }
    },
    "OutdentTaskCommandHandler": {
      "id": "Saw1OutdentTask",
      "action": "OutdentValidation",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "enableWhen": {
        "condition": "conditions.isSaw1OutdentTaskCmdEnabled"
      }
    },
    "Saw1TemporaryTransferNotificationCommandHide": {
      "id": "Sub0TemporaryTransferNotification",
      "activeWhen": {
        "condition": "conditions.isEventHandlerSchedMgmtNotification"
      },
      "visibleWhen": false
    },
    "followCommandDelegateHandlerHide": {
      "id": "Sub0Subscribe",
      "action": "Saw1SubscribeObject",
      "activeWhen": {
        "condition": "conditions.saw1FollowCommandActive"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "followCommandDelegateHandlerForCustom": {
      "id": "Sub0Subscribe",
      "action": "Saw1SubscribeObject",
      "activeWhen": {
        "condition": "conditions.saw1FollowCommandActiveForTaskAndSchActive"
      },
      "visibleWhen": {
        "condition": "conditions.saw1FollowCommandActiveForTaskAndSchVisible"
      },
      "enableWhen": true
    },
    "effectivityCommandDelegateHandler": {
      "id": "ApsEffectivity",
      "activeWhen": {
        "condition": "conditions.effectivityVisibilityDelegate"
      },
      "enableWhen": false,
      "visibleWhen": false
    },
    "deleteDependencyCommandHandler": {
      "id": "Saw1DeleteDependency",
      "action": "getScheduleTaskProperties",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.deleteDependencyVisibility"
      }
    },
    "DeleteScheduleCommandHandler": {
      "id": "Saw1DeleteSchedule",
      "action": "getConfirmationForDeleteSchedule",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.deleteScheduleCommandVisibility"
      }
    },
    "deleteTaskCommandHandler": {
      "id": "Saw1DeleteTask",
      "action": "deleteTasks",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.deleteTaskVisibility"
      }
    },
    "Saw1DeleteTaskOnGanttCommandHandler": {
      "id": "Saw1DeleteTaskOnGantt",
      "action": "deleteTasksOrTaskDependency",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "enableWhen": {
        "condition": "conditions.isSaw1DeleteTaskOnGanttCmdEnabled"
      }
    },
    "Saw1ReplaceMemberCommandHandler": {
      "id": "Saw1ReplaceMember",
      "action": "getReplaceMemberPanel",
      "activeWhen": {
        "condition": "conditions.saw1ReplaceMemberCommandActive"
      },
      "visibleWhen": {
        "condition": "conditions.saw1ReplaceMemberCommandVisible"
      }
    },
    "Saw1ResourcesGroupToMembersCommandHandler": {
      "id": "Saw1ResourcesGroupToMembers",
      "activeWhen": true
    },
    "Saw1ReplaceMemberGroupCommandHandler": {
      "id": "Saw1ReplaceMemberGroup",
      "action": "getReplaceMemberPanel",
      "activeWhen": {
        "condition": "conditions.saw1ReplaceMemberGroupCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.saw1ReplaceMemberGroupCommandVisible"
      }
    },
    "Saw1DesignateDisciplineToMembersCommandHandler": {
      "id": "Saw1DesignateDisciplineToMembers",
      "action": "getDesignateDisciplineToMembersPanel",
      "activeWhen": {
        "condition": "conditions.Saw1DesignateDisciplineToMembersCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.Saw1DesignateDisciplineToMembersCommandVisible"
      }
    },
    "Saw1OpenInNewTabCommandHandler": {
      "id": "Awp0OpenInNewTab",
      "action": "openDeliverableInNewTabAction",
      "activeWhen": {
        "condition": "conditions.openInNewTabActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdOpenInNewTabCommandActive"
      }
    },
    "Saw1OpenInNewWindowCommandHandler": {
      "id": "Awp0OpenInNewWindow",
      "action": "openDeliverableInNewWindowAction",
      "activeWhen": {
        "condition": "conditions.openInNewWindowActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdOpenInNewTabCommandActive"
      }
    },
    "Saw1UnassignResourceCommandHandler": {
      "id": "Saw1UnassignResource",
      "action": "getScheduleTagFromScheduleTask",
      "activeWhen": {
        "condition": "conditions.saw1UnassignResourceCommandActive"
      },
      "visibleWhen": {
        "condition": "conditions.saw1UnassignResourceCommandVisible"
      }
    },
    "CreateDependencyCommandHandler": {
      "id": "Saw1CreateDependency",
      "action": "createDependencyBatchJob",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.createDependency"
      }
    },
    "Saw1CreateDependencyOnGanttCommandHandler": {
      "id": "Saw1CreateDependencyOnGantt",
      "action": "createDependencyBatchJob",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "enableWhen": {
        "condition": "conditions.isSaw1CreateDependencyOnGanttCmdEnabled"
      }
    },
    "RemoveTaskDeliverableCommandHandler": {
      "id": "Saw1RemoveTaskDeliverable",
      "action": "rmvDeliverable",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.removeTaskDeliverableCommandVisibility"
      }
    },
    "Saw1SearchFiltersCommandHandler": {
      "id": "Saw1SearchFilters",
      "action": "saw1SearchFilterPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1ShowFilterCommandVisibility"
      }
    },
    "Saw1RoleSelectCommandHandler": {
      "id": "Saw1RoleSelect",
      "activeWhen": true,
      "enableWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1RoleSelectCommandVisibility"
      }
    },
    "Saw1RoleCoordinatorCommandHandler": {
      "id": "Saw1RoleCoordinator",
      "action": "setSelectedPrivilegeSharedDataCoordinator",
      "activeWhen": true,
      "enableWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1RoleSelectCommandVisibility"
      },
      "selectWhen": {
        "condition": "conditions.isCoordinatorRoleSelected"
      }
    },
    "Saw1Saw1RoleParticipantCommandHandler": {
      "id": "Saw1RoleParticipant",
      "action": "setSelectedPrivilegeSharedDataParticipant",
      "activeWhen": true,
      "enableWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1RoleSelectCommandVisibility"
      },
      "selectWhen": {
        "condition": "conditions.isParticipantRoleSelected"
      }
    },
    "Saw1Saw1RoleObserverCommandHandler": {
      "id": "Saw1RoleObserver",
      "action": "setSelectedPrivilegeSharedDataObserver",
      "activeWhen": true,
      "enableWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1RoleSelectCommandVisibility"
      },
      "selectWhen": {
        "condition": "conditions.isObserverRoleSelected"
      }
    },
    "LaunchWorkFlowCommandHandler": {
      "id": "Saw1LaunchWorkflow",
      "action": "validateWFLauchOperation",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1LaunchWorkflowCommandVisibility"
      }
    },
    "ShowHideCriticalPathCommandHandler": {
      "id": "Saw1ShowHideCriticalPath",
      "action": "showHideCriticalPath",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isGanttChartVisible"
      },
      "selectWhen": {
        "condition": "conditions.canShowCriticalPath"
      },
      "enableWhen": {
        "condition": "conditions.isGanttChartVisible"
      }
    },
    "ShowTaskPropertiesCommandHandler": {
      "id": "Saw1ShowTaskProperties",
      "action": "toggleTaskInfoInGantt",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isGanttChartVisible"
      },
      "enableWhen": {
        "condition": "conditions.isShowTaskPropertiesCmdEnabled"
      },
      "selectWhen": {
        "condition": "conditions.canShowGanttTaskInfo"
      }
    },
    "WorkflowTasksCommandHandler": {
      "id": "Saw1WorkflowTasks",
      "action": "getWorkflowPanel",
      "activeWhen": {
        "condition": "conditions.insertSubScheduleCommandActive"
      },
      "visibleWhen": {
        "condition": "conditions.workflowTasksCommandVisibility"
      }
    },
    "WorkflowTasksOnGanttCommandHandler": {
      "id": "Saw1WorkflowTasksOnGantt",
      "action": "getWorkflowPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "enableWhen": {
        "condition": "conditions.isSaw1WorkflowTasksOnGanttCmdEnabled"
      }
    },
    "Saw1AddUserCellCommandHandler": {
      "id": "Saw1AddUserCellCommand",
      "action": "addUserCellCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1AddScheduleCellCommandHandler": {
      "id": "Saw1AddScheduleCellCommand",
      "action": "addScheduleCellCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1RemoveScheduleCellCommandHandler": {
      "id": "Saw1RemoveScheduleCellCommand",
      "action": "removeScheduleCellCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1ResGraphCellCommandHandler": {
      "id": "Saw1ResGraphCellCommand",
      "action": "openResourceGraphPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.saw1ResGraphCommandVisibility"
      }
    },
    "Saw1ResGraphPeoplePickerCellCommandHandler": {
      "id": "Saw1ResGraphPeoplePickerCellCommand",
      "action": "openResourceGraphPanelFromPeoplePicker",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.saw1ResGraphCommandVisibility"
      }
    },
    "Saw1RemoveUserCellCommandHandler": {
      "id": "Saw1RemoveUserCellCommand",
      "action": "removeUserCellCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1RemoveUserFromTaskAssignmentCommandHandler": {
      "id": "Saw1RemoveUserFromTaskAssignmentCommand",
      "action": "removeUserCellCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1RemoveUserFromTaskAssignmentCommandVisibility"
      }
    },
    "Saw1AddDisciplineCellCommandHandler": {
      "id": "Saw1AddDisciplineCellCommand",
      "action": "addDisciplineCellCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1RemoveOwnerCellCommandHandler": {
      "id": "Saw1RemoveWorkflowOwnerCellCommand",
      "action": "removeWorkflowOwnerCellCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1RemovePrivilegedUserCellCommandHandler": {
      "id": "Saw1RemovePrivilegedUserCellCommand",
      "action": "removePrivilegedUserCellCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1RemoveDisciplineCellCommandHandler": {
      "id": "Saw1RemoveDisciplineCellCommand",
      "action": "removeDisciplineCellCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1AddResourcePoolCellCommandHandler": {
      "id": "Saw1AddResourcePoolCellCommand",
      "action": "addResourcePoolCellCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1AddBaselineCellCommandHandler": {
      "id": "Saw1AddBaselineCellCommand",
      "action": "addBaselineCellCommand",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.Saw1AddBaselineCellCmdVisivibility"
      }
    },
    "Saw1ReplaceBaselineCellCommandHandler": {
      "id": "Saw1ReplaceBaselineCellCommand",
      "action": "replaceBaselineCellCommand",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.Saw1ReplaceBaselineCellCmdVisivibility"
      }
    },
    "Saw1RemoveBaselineCellCommandHandler": {
      "id": "Saw1RemoveBaselineCellCommand",
      "action": "removeBaselineCellCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1RemoveResourceCellCommandHandler": {
      "id": "Saw1RemoveResourcePoolCellCommand",
      "action": "removeResourcePoolCellCommand",
      "activeWhen": true,
      "visibleWhen": true
    },
    "AssignScheduleDeliverableCommandHandler": {
      "id": "Saw1AssignScheduleDeliverable",
      "action": "openAssignScheduleDeliverablePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1AssignScheduleDeliverableCommandVisibility"
      }
    },
    "AssignTaskDeliverableCommandHandler": {
      "id": "Saw1AssignTaskDeliverable",
      "action": "assignTaskDeliverable",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1AssignTaskDeliverableCommandVisibility"
      }
    },
    "Saw1CopyCommandDelegateHandler": {
      "id": "Awp0Copy",
      "action": "copyObjectDelegate",
      "activeWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.Saw1CopyCommandDelegateVisible"
      }
    },
    "Saw1CopyCtxMenuCommandDelegateHandler": {
      "id": "Awp0CopyContextMenu",
      "action": "copyObjectDelegate",
      "activeWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "visibleWhen": {
        "condition": "conditions.Saw1CopyCommandDelegateVisible"
      }
    },
    "Saw1PasteCommandDelegateHandler": {
      "id": "Awp0Paste",
      "action": "validateScheduleTaskPaste",
      "activeWhen": {
        "condition": "conditions.Saw1ActiveWhenCondition"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.Saw1PasteCommandDelegateVisible"
      }
    },
    "Saw1PasteCtxMenuCommandDelegateHandler": {
      "id": "Awp0PasteContextMenu",
      "action": "validateScheduleTaskPaste",
      "activeWhen": {
        "condition": "conditions.Saw1ActiveWhenCondition"
      },
      "visibleWhen": {
        "condition": "conditions.Saw1PasteCommandDelegateVisible"
      }
    },
    "Saw1ProjectSectionAddCmdHandler": {
      "id": "Saw1ProjectSectionAddCmd",
      "action": "Saw1ProjectSectionAddCmdAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1ProgramFiltersAddCmdHandler": {
      "id": "Saw1ProgramFiltersAddCmd",
      "action": "Saw1ProgramFiltersAddCmdAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1TemplateProjectSectionAddCmdHandler": {
      "id": "Saw1TemplateProjectSectionAddCmd",
      "action": "Saw1ProjectSectionAddCmdAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1UserSectionAddCmdHandler": {
      "id": "Saw1UserSectionAddCmd",
      "action": "Saw1UserSectionAddCmdAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1OwnerSectionAddCmdHandler": {
      "id": "Saw1OwnerSectionAddCmd",
      "action": "Saw1OwnerSectionAddCmdAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1CreateScheduleTaskCommandHandler": {
      "id": "Saw1CreateScheduleTask",
      "action": "createScheduleTask",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1CreateScheduleTaskCommandVisibility"
      }
    },
    "AssignResourceCommandHandler": {
      "id": "Saw1AssignResource",
      "action": "getAssignResourcePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.assignResourceCommandVisibility"
      }
    },
    "AssignResourceOnGanttCommandHandler": {
      "id": "Saw1AssignResourceOnGantt",
      "action": "getAssignResourcePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.assignResourceOnGanttCommandVisibility"
      }
    },
    "AddMemberCommandHandler": {
      "id": "Saw1AddMember",
      "action": "addMemberOpenPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.addMemberCommandVisibility"
      }
    },
    "Saw1GanttFiltersCommandHandler": {
      "id": "Saw1GanttFilters",
      "action": "ganttFilterPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "enableWhen": {
        "condition": "conditions.Saw1GanttFiltersCommandVisibility"
      }
    },
    "Saw1CreateBaselineCommandHandler": {
      "id": "Saw1CreateBaseline",
      "action": "getCreateBaselinePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1BaselineScheduleCommandVisibility"
      }
    },
    "Saw1ViewBaselineCommandHandler": {
      "id": "Saw1ViewBaselineSchedule",
      "action": "getViewBaselinePanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1ViewBaselineCommandVisibility"
      }
    },
    "Saw1CutCommandHandlerDelegate": {
      "id": "Awp0Cut",
      "activeWhen": {
        "condition": "conditions.Saw1CutCommandDelegateActive"
      },
      "enableWhen": false
    },
    "Saw1CutCtxMenuCommandHandlerDelegate": {
      "id": "Awp0CutContextMenu",
      "activeWhen": {
        "condition": "conditions.Saw1CutCommandDelegateActive"
      },
      "visibleWhen": false
    },
    "Saw1SaveAsScheduleCmdHandler": {
      "id": "Saw1SaveAsSchedule",
      "action": "getSaveAsPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1SaveAsScheduleCmdVisibility"
      }
    },
    "recalculateCommandHandler": {
      "id": "Saw1Recalculate",
      "action": "recalculateSchAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.recalculateCommandVisibility"
      }
    },
    "recalculateOnGanttCommandHandler": {
      "id": "Saw1RecalculateOnGantt",
      "action": "recalculateSchAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "enableWhen": {
        "condition": "conditions.recalculateOnGanttCommandVisibility"
      }
    },
    "Saw1ExpandBelowGanttCommandHandler": {
      "id": "Saw1ExpandBelow",
      "action": "expandBelow",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "enableWhen": {
        "condition": "conditions.expandCommandVisiblity"
      }
    },
    "Saw1CollapseBelowGanttCommandHandler": {
      "id": "Saw1CollapseBelow",
      "action": "collapseBelow",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "enableWhen": {
        "condition": "conditions.expandCommandVisiblity"
      }
    },
    "Saw1EditTimesheetEntryCellCommandHandler": {
      "id": "Saw1EditTimesheetEntryCellCommand",
      "action": "timesheetEntryCellCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.timesheetEntryCellCommandVisibility"
      }
    },
    "Saw1DeleteTimesheetEntryCellCommandHandler": {
      "id": "Saw1DeleteTimesheetEntryCellCommand",
      "action": "showConfirmMsgDeleteTimesheetEntry",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.timesheetEntryCellCommandVisibility"
      }
    },
    "EnterTimeCommandHandler": {
      "id": "Saw1EnterTime",
      "action": "getEnterTimePanelAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.enterTimeCommandVisibility"
      }
    },
    "AddTimesheetEntryCommandHandler": {
      "id": "Saw1AddTimesheetEntry",
      "action": "addTimesheetEntryPanelAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1AddSchedulesProgramViewCommandHandler": {
      "id": "Saw1AddSchedulesProgramView",
      "action": "addSchedulesPanelAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1OpenSchTemplateCellCommandHandler": {
      "id": "Saw1OpenSchTemplateInNewTabCellCommand",
      "action": "saw1OpenInNewTab",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1EditProgramViewCellCommandHandler": {
      "id": "Saw1EditProgramViewCellCommand",
      "action": "editProgramViewCondition",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1DeleteProgramViewCellCommandHandler": {
      "id": "Saw1DeleteProgramViewCellCommand",
      "action": "deleteProgramViewCondition",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1QuickCreateTaskHandler": {
      "id": "Saw1QuickCreateTask",
      "action": "Saw1QuickCreateTaskAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "enableWhen": {
        "condition": "conditions.isSaw1QuickCreateCmdEnabled"
      }
    },
    "Saw1QuickCreateMilestoneHandler": {
      "id": "Saw1QuickCreateMilestone",
      "action": "Saw1QuickCreateMilestoneAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isScheduleNavigationSublocation"
      },
      "enableWhen": {
        "condition": "conditions.isSaw1QuickCreateCmdEnabled"
      }
    },
    "Awp0GoSchedulesHandler": {
      "id": "Awp0GoSchedules",
      "action": "showSchedules",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0GoScheduleTasksHandler": {
      "id": "Awp0GoScheduleTasks",
      "action": "showScheduleTasks",
      "activeWhen": true,
      "visibleWhen": true
    },
    "ClaimTaskCommandHandler": {
      "id": "Saw1ClaimTask",
      "action": "confirmClaimTask",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.claimTaskCommandVisibility"
      }
    },
    "Saw1KanbanDisplayLimit": {
      "id": "Saw1KanbanDisplayLimit",
      "action": "saw1OpenKanbanDisplayLimitPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Saw1KanbanDisplayLimitVisibility"
      }
    },
    "Saw1ShowSchTaskDeliverablesCommandHandler": {
      "id": "Saw1ShowSchTaskDeliverablesCommand",
      "action": "saw1SchTaskDeliverablesAction",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.showSchTaskDeliverablesCommandVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.showSchTaskDeliverablesCommandVisibility"
      }
    },
    "Saw1OpenInScheduleContextCommandHandler": {
      "id": "Saw1OpenInScheduleContextCommand",
      "action": "saw1OpenInScheduleContextAction",
      "activeWhen": true,
      "enableWhen": false,
      "visibleWhen": false
    },
    "Saw1FullScreenCommandHandler": {
      "id": "Saw1FullScreenCommand",
      "action": "AwFullScreenToggleAction",
      "activeWhen": {
        "condition": "conditions.Saw1FullScreenCmdCondition"
      },
      "visibleWhen": {
        "condition": "conditions.Saw1FullScreenCmdCondition"
      }
    },
    "Saw1AddFollowerCommandHandler": {
      "id": "Saw1AddFollower",
      "action": "Saw1AddFollowers",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1RemoveFollowerCommandHandler": {
      "id": "Saw1RemoveFollower",
      "action": "Saw1RemoveFollower",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isSaw1RemoveFollowerCmdVisible"
      }
    },
    "Saw1AddSubscriptionCommandHandler": {
      "id": "Saw1AddSubscription",
      "action": "Saw1AddSubscription",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1DeactivateSubscriptionCommandHandler": {
      "id": "Saw1DeactivateSubscription",
      "action": "Saw1DeactivateSubscription",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isDeActivateSubscriptionCommandActivate"
      },
      "enableWhen": {
        "condition": "conditions.isDeActivateSubscriptionCommandActivate"
      }
    },
    "Saw1DeactivateSubscriptionAsDummyCommandHandler": {
      "id": "Saw1DeactivateSubscriptionAsDummy",
      "action": "Saw1DeactivateSubscription",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isDeActivateSubscriptionCommandDummyVisible"
      },
      "enableWhen": false
    },
    "Saw1ActivateSubscriptionCommandHandler": {
      "id": "Saw1ActivateSubscription",
      "action": "Saw1ActivateSubscription",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isActivateSubscriptionCommandActivate"
      },
      "enableWhen": {
        "condition": "conditions.isActivateSubscriptionCommandActivate"
      }
    },
    "Saw1DeleteSubscriptionCommandHandler": {
      "id": "Saw1DeleteSubscription",
      "action": "Saw1DeleteSubscriptionAction",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isDeleteSubscriptionCommandEnabled"
      }
    },
    "Saw1EditSubscriptionCommandHandler": {
      "id": "Saw1EditSubscription",
      "action": "Saw1EditSubscriptionAction",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isEditSubscriptionCommandEnabled"
      }
    },
    "Saw1ShowEventAddCellCommandHandler": {
      "id": "Saw1EventAddCellCmd",
      "action": "Saw1EventAddCellCmdAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1ShowEventRemoveCellCommandHandler": {
      "id": "Saw1EventRemoveCellCmd",
      "action": "Saw1EventRemoveCellCmdAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Saw1UserAssignmentFromPeoplePickerCommandHandler": {
      "id": "Saw1UserAssignmentFromPeoplePicker",
      "action": "saw1OpenPeoplePickerForTaskAssignment",
      "activeWhen": {
        "condition": "conditions.Saw1IsAddUsersNarrowMode"
      },
      "visibleWhen": {
        "condition": "conditions.Saw1IsAddUsersNarrowMode"
      }
    },
    "Saw1PasteResourceFromPeoplePickerCmdCommandHandler": {
      "id": "Saw1PasteResourceFromPeoplePickerCmd",
      "action": "Saw1PasteResourceFromPeoplePickerAction",
      "activeWhen": {
        "condition": "conditions.Saw1PasteResourceFromPeoplePickerCommandVisible"
      },
      "visibleWhen": {
        "condition": "conditions.Saw1PasteResourceFromPeoplePickerCommandVisibility"
      }
    },
    "Saw1AddSchMemberCmdHandler": {
      "id": "Saw1AddSchMemberCmd",
      "action": "openAddSchMemberPeoplePickerPanel",
      "activeWhen": {
        "condition": "conditions.Saw1IsAddUsersNarrowMode"
      },
      "visibleWhen": {
        "condition": "conditions.Saw1IsAddUsersNarrowMode"
      }
    },
    "Saw1RemoveSchMemberCmdHandler": {
      "id": "Saw1RemoveSchMemberCmd",
      "action": "removeUsersSchMemberAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isRemoveSchMembersCommandVisible"
      }
    },
    "Saw1PasteSchMemberFromPeoplePickerCmdHandler": {
      "id": "Saw1PasteSchMemberFromPeoplePickerCmd",
      "action": "Saw1PasteSchMemberFromPeoplePickerAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isPasteSchMembersFromPeoplePickerCmdVisible"
      }
    },
    "Saw1SubscriptionChangeOwnerHandler": {
      "id": "Awp0ChangeOwner",
      "action": "openScheduleSubscriptionChangeOwnerPanel",
      "activeWhen": {
        "condition": "conditions.saw1SubscriptionChangeOwnerCommandActive"
      },
      "visibleWhen": {
        "condition": "conditions.saw1SubscriptionChangeOwnerCommandVisible"
      }
    }
  },
  "commandPlacements": {
    "Saw1AssignDeliverableGroupCommandPlacement": {
      "id": "Saw1AddDeliverable",
      "priority": 250
    },
    "Saw1AssignTaskDeliverableCommandPlacement": {
      "id": "Saw1AddTaskDeliverable",
      "priority": 250,
      "parentGroupId": "Saw1AddDeliverable"
    },
    "Saw1AssignSceduleDeliverableCommandPlacement": {
      "id": "Saw1AddScheduleDeliverable",
      "priority": 350,
      "parentGroupId": "Saw1AddDeliverable"
    },
    "saw1ChangeOwner": {
      "id": "Saw1ChangeOwner",
      "uiAnchor": "aw_rightWall",
      "priority": 630,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Saw1AddTemplateSectionCmdPlacement": {
      "id": "Saw1AddTemplateSectionCmd",
      "uiAnchor": "saw1_templateSectionCommands",
      "priority": 0
    },
    "Saw1RemoveTemplateSectionCmdPlacement": {
      "id": "Saw1RemoveTemplateSectionCmd",
      "uiAnchor": "saw1_templateSectionCommands",
      "priority": 0
    },
    "Saw1ReplaceRevisionGroupCommandPlacement": {
      "id": "Saw1ReplaceRevisionGroup",
      "priority": 300
    },
    "Saw1ReplaceRevisionCommandPlacement": {
      "id": "Saw1ReplaceRevision",
      "priority": 300,
      "parentGroupId": "Saw1ReplaceRevisionGroup"
    },
    "Saw1ReplaceLatestRevisionCommandPlacement": {
      "id": "Saw1ReplaceLatestRevision",
      "priority": 300,
      "parentGroupId": "Saw1ReplaceRevisionGroup"
    },
    "Saw1CreateProgramViewPlacement": {
      "id": "Saw1CreateProgramView",
      "uiAnchor": "aw_rightWall",
      "priority": 100,
      "parentGroupId": "Awp0NewGroup"
    },
    "Saw1ProgramViewAddRemoveSchedulesPlacement": {
      "id": "Saw1ProgramViewAddRemoveSchedules",
      "uiAnchor": "aw_programGanttViewer",
      "priority": 102
    },
    "Saw1ProgramViewFilterPlacement": {
      "id": "Saw1ProgramViewFilter",
      "uiAnchor": "aw_programGanttViewer",
      "priority": 100
    },
    "Saw1AssignResourceToTasks": {
      "id": "Saw1AssignResourceToTasks",
      "uiAnchor": "aw_rightWall",
      "priority": 360,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Saw1DesignatedDiscipline": {
      "id": "Saw1DesignatedDiscipline",
      "uiAnchor": "aw_rightWall",
      "priority": 370,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Saw1RevertToDiscipline": {
      "id": "Saw1RevertToDiscipline",
      "uiAnchor": "aw_rightWall",
      "priority": 380,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Saw1RevertToDisciplineMember": {
      "id": "Saw1RevertToDisciplineMember",
      "uiAnchor": "aw_rightWall",
      "priority": 380,
      "parentGroupId": "Awp0ManageGroup"
    },
    "removeSchDeliverable": {
      "id": "Saw1RemoveSchDeliverable",
      "uiAnchor": "aw_rightWall",
      "priority": 313,
      "parentGroupId": "Awp0EditGroup"
    },
    "Saw1CreateSchedule": {
      "id": "Saw1CreateSchedule",
      "uiAnchor": "aw_rightWall",
      "priority": 440,
      "parentGroupId": "Awp0NewGroup"
    },
    "Saw1InsertSubSchedule": {
      "id": "Saw1InsertSubSchedule",
      "uiAnchor": "aw_rightWall",
      "priority": 600,
      "parentGroupId": "Awp0EditGroup"
    },
    "RemoveAssignmentsOneStep": {
      "id": "Saw1RemoveAssignments",
      "uiAnchor": "aw_rightWall",
      "priority": 310,
      "parentGroupId": "Awp0EditGroup"
    },
    "removeSchmembers": {
      "id": "Saw1RemoveSchMember",
      "uiAnchor": "aw_rightWall",
      "priority": 322,
      "parentGroupId": "Awp0EditGroup"
    },
    "Saw1DeleteDependency": {
      "id": "Saw1DeleteDependency",
      "uiAnchor": "aw_rightWall",
      "priority": 525,
      "parentGroupId": "Awp0EditGroup"
    },
    "Saw1DeleteSchedule": {
      "id": "Saw1DeleteSchedule",
      "uiAnchor": "aw_rightWall",
      "priority": 550,
      "parentGroupId": "Awp0EditGroup"
    },
    "Saw1DesignateDisciplineToMembers": {
      "id": "Saw1DesignateDisciplineToMembers",
      "uiAnchor": "aw_rightWall",
      "priority": 590,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Saw1ReplaceMember": {
      "id": "Saw1ReplaceMember",
      "uiAnchor": "aw_rightWall",
      "priority": 580,
      "parentGroupId": "Awp0ManageGroup"
    },
    "unassignResourceCommandTitle": {
      "id": "Saw1UnassignResource",
      "uiAnchor": "aw_rightWall",
      "priority": 750,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Saw1DeleteTask": {
      "id": "Saw1DeleteTask",
      "uiAnchor": "aw_rightWall",
      "priority": 380,
      "parentGroupId": "Awp0EditGroup"
    },
    "createDependency": {
      "id": "Saw1CreateDependency",
      "uiAnchor": "aw_rightWall",
      "priority": 200,
      "parentGroupId": "Awp0NewGroup"
    },
    "removeTaskDeliverable": {
      "id": "Saw1RemoveTaskDeliverable",
      "uiAnchor": "aw_rightWall",
      "priority": 300,
      "parentGroupId": "Awp0EditGroup"
    },
    "searchFilters": {
      "id": "Saw1SearchFilters",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 1210
    },
    "roleSelectCommandPlacement": {
      "id": "Saw1RoleSelect",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 1211
    },
    "coordinatorCommandPlacement": {
      "id": "Saw1RoleCoordinator",
      "priority": 1211,
      "parentGroupId": "Saw1RoleSelect"
    },
    "participantCommandPlacement": {
      "id": "Saw1RoleParticipant",
      "priority": 1212,
      "parentGroupId": "Saw1RoleSelect"
    },
    "observerCommandPlacement": {
      "id": "Saw1RoleObserver",
      "priority": 1213,
      "parentGroupId": "Saw1RoleSelect"
    },
    "LaunchWorkFlow": {
      "id": "Saw1LaunchWorkflow",
      "uiAnchor": "aw_rightWall",
      "priority": 450,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Saw1WorkflowTasks": {
      "id": "Saw1WorkflowTasks",
      "uiAnchor": "aw_rightWall",
      "priority": 450,
      "parentGroupId": "Awp0EditGroup"
    },
    "Saw1RemovePrivilegedUser": {
      "id": "Saw1RemovePrivilegedUser",
      "areas": [
        "com.siemens.splm.clientfx.ui.modelObjectListActionCommands"
      ],
      "priority": 100,
      "displayOption": "ON_HOVER_AND_SELECTION",
      "position": "TOP_RIGHT"
    },
    "Saw1RemoveWorkflowOwner": {
      "id": "Saw1RemoveWorkflowOwner",
      "areas": [
        "com.siemens.splm.clientfx.ui.modelObjectListActionCommands"
      ],
      "priority": 100,
      "displayOption": "ON_HOVER_AND_SELECTION",
      "position": "TOP_RIGHT"
    },
    "Saw1AddUserCellCommandPlacement": {
      "id": "Saw1AddUserCellCommand",
      "uiAnchor": "aw_addUserCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1AddScheduleCellCommandPlacement": {
      "id": "Saw1AddScheduleCellCommand",
      "uiAnchor": "aw_addScheduleCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1RemoveScheduleCellCommandPlacement": {
      "id": "Saw1RemoveScheduleCellCommand",
      "uiAnchor": "aw_removeScheduleCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1ResGraphPeoplePickerCellCommandPlacement": {
      "id": "Saw1ResGraphPeoplePickerCellCommand",
      "uiAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectCellListActionCommands",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "BOTTOM_RIGHT",
        "selected": true
      }
    },
    "Saw1ResGraphCellUserAssignedCommandPlacement": {
      "id": "Saw1ResGraphCellCommand",
      "uiAnchor": "aw_removeUserCellCommand",
      "priority": 20,
      "cellDisplay": {
        "hover": true,
        "position": "BOTTOM_RIGHT",
        "selected": true
      }
    },
    "Saw1RemoveUserCellCommandPlacemment": {
      "id": "Saw1RemoveUserCellCommand",
      "uiAnchor": "aw_removeUserCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1AddDisciplineCellCommandPlacement": {
      "id": "Saw1AddDisciplineCellCommand",
      "uiAnchor": "aw_addDisciplineCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1RemovePrivilegedUserCellCommandPlacement": {
      "id": "Saw1RemovePrivilegedUserCellCommand",
      "uiAnchor": "saw1_RemovePrivilegeUserCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1RemoveOwnerCellCommandPlacemment": {
      "id": "Saw1RemoveWorkflowOwnerCellCommand",
      "uiAnchor": "saw1_RemoveWorkflowOwnerCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1RemoveDisciplineCellCommandPlacemment": {
      "id": "Saw1RemoveDisciplineCellCommand",
      "uiAnchor": "aw_removeDisciplineCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1AddResourcePoolCellCommandPlacement": {
      "id": "Saw1AddResourcePoolCellCommand",
      "uiAnchor": "aw_addResourcePoolCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1AddBaselineCellCommandPlacement": {
      "id": "Saw1AddBaselineCellCommand",
      "uiAnchor": "aw_baselineCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1ReplaceBaselineCellCommandPlacement": {
      "id": "Saw1ReplaceBaselineCellCommand",
      "uiAnchor": "aw_baselineCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "BOTTOM_RIGHT",
        "selected": true
      }
    },
    "Saw1RemoveBaselineCellCommandPlacement": {
      "id": "Saw1RemoveBaselineCellCommand",
      "uiAnchor": "aw_removeBaselineCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1RemoveResourcePoolCellCommandPlacemment": {
      "id": "Saw1RemoveResourcePoolCellCommand",
      "uiAnchor": "aw_removeResourcePoolCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1ShowSplitPanelGroupPlacement": {
      "id": "Saw1ShowSplitPanelGroup",
      "uiAnchor": "aw_resourceChart",
      "priority": 5
    },
    "Saw1ShowSplitPanelRightPlacement": {
      "id": "Saw1ShowSplitPanelRight",
      "uiAnchor": "aw_resourceChart",
      "priority": 310,
      "parentGroupId": "Saw1ShowSplitPanelGroup",
      "showGroupSelected": true
    },
    "Saw1ShowSplitPanelBottomPlacement": {
      "id": "Saw1ShowSplitPanelBottom",
      "uiAnchor": "aw_resourceChart",
      "priority": 270,
      "parentGroupId": "Saw1ShowSplitPanelGroup",
      "showGroupSelected": false,
      "isSelected": true
    },
    "Saw1ShowSplitPanelOffPlacement": {
      "id": "Saw1ShowSplitPanelOff",
      "uiAnchor": "aw_resourceChart",
      "priority": 340,
      "parentGroupId": "Saw1ShowSplitPanelGroup",
      "showGroupSelected": true
    },
    "Saw1ResourceChartGoToCommandPlacement": {
      "id": "Saw1ResourceChartGoTo",
      "uiAnchor": "aw_resourceChart",
      "priority": 160
    },
    "Saw1ResourceChartAllSchedulesPlacement": {
      "id": "Saw1ResourceChartAllSchedules",
      "uiAnchor": "aw_resourceChart",
      "priority": 12
    },
    "Saw1ResourceChartPreviousTwoWeeksPlacement": {
      "id": "Saw1ResourceChartPreviousTwoWeeks",
      "uiAnchor": "aw_resourceChart",
      "priority": 20
    },
    "Saw1ResourceChartTodayPlacement": {
      "id": "Saw1ResourceChartToday",
      "uiAnchor": "aw_resourceChartGoToGroup",
      "priority": 30
    },
    "Saw1ResourceChartNextTwoWeeksPlacement": {
      "id": "Saw1ResourceChartNextTwoWeeks",
      "uiAnchor": "aw_resourceChart",
      "priority": 30
    },
    "AssignScheduleDeliverable": {
      "id": "Saw1AssignScheduleDeliverable",
      "uiAnchor": "aw_rightWall",
      "priority": 340,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Saw1AssignTaskDeliverable": {
      "id": "Saw1AssignTaskDeliverable",
      "uiAnchor": "aw_rightWall",
      "priority": 350,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Saw1DeliverablesGroup": {
      "id": "Saw1DeliverablesGroup",
      "uiAnchor": "saw1_NewGroup",
      "priority": 200
    },
    "Saw1ProgramFiltersAddCmdPlacement": {
      "id": "Saw1ProgramFiltersAddCmd",
      "uiAnchor": "saw1_programViewAddFiltersCommand",
      "priority": 100
    },
    "Saw1ProjectSectionAddCmdPlacement": {
      "id": "Saw1ProjectSectionAddCmd",
      "uiAnchor": "saw1_projectSectionCommands",
      "priority": 100
    },
    "Saw1TemplateProjectSectionAddCmdPlacement": {
      "id": "Saw1TemplateProjectSectionAddCmd",
      "uiAnchor": "saw1_templateProjectSectionCommands",
      "priority": 100
    },
    "Saw1UserSectionAddCmdPlacement": {
      "id": "Saw1UserSectionAddCmd",
      "uiAnchor": "saw1_userSectionCommands",
      "priority": 100
    },
    "Saw1OwnerSectionAddCmdPlacement": {
      "id": "Saw1OwnerSectionAddCmd",
      "uiAnchor": "saw1_ownerSectionCommands",
      "priority": 100
    },
    "Saw1CreateBaselineCmdPlacement": {
      "id": "Saw1CreateBaseline",
      "uiAnchor": "aw_rightWall",
      "priority": 100,
      "parentGroupId": "Awp0NewGroup"
    },
    "Saw1ViewBaselineScheduleCmdPlacement": {
      "id": "Saw1ViewBaselineSchedule",
      "uiAnchor": "aw_rightWall",
      "priority": 230,
      "parentGroupId": "Awp0ViewGroup"
    },
    "Saw1SaveAsScheduleCmdPlacement": {
      "id": "Saw1SaveAsSchedule",
      "uiAnchor": "aw_rightWall",
      "priority": 350,
      "parentGroupId": "Awp0NewGroup"
    },
    "Saw1RecalculateCmdPlacement": {
      "id": "Saw1Recalculate",
      "uiAnchor": "aw_rightWall",
      "priority": 620,
      "parentGroupId": "Awp0EditGroup"
    },
    "Saw1EnterTime": {
      "id": "Saw1EnterTime",
      "uiAnchor": "aw_rightWall",
      "priority": 260,
      "parentGroupId": "Awp0NewGroup"
    },
    "Saw1CreateSchTask": {
      "id": "Saw1CreateSchTask",
      "uiAnchor": "aw_rightWall",
      "priority": 100,
      "parentGroupId": "Awp0NewGroup"
    },
    "Saw1CreateProxyTaskCmdPlacement": {
      "id": "Saw1CreateProxyTask",
      "uiAnchor": "aw_rightWall",
      "priority": 100,
      "parentGroupId": "Awp0NewGroup"
    },
    "Saw1MirrorAsProxyTask": {
      "id": "Saw1MirrorAsProxyTask",
      "uiAnchor": "aw_rightWall",
      "priority": 100,
      "parentGroupId": "Awp0NewGroup"
    },
    "Saw1AddTimesheetEntry": {
      "id": "Saw1AddTimesheetEntry",
      "uiAnchor": "saw1_addTimesheetEntry",
      "priority": 100
    },
    "Saw1AddSchedulesProgramView": {
      "id": "Saw1AddSchedulesProgramView",
      "uiAnchor": "saw1_add",
      "priority": 200
    },
    "Saw1AssignResourceOnGantt": {
      "id": "Saw1AssignResourceOnGantt",
      "uiAnchor": "aw_rightWall",
      "priority": 355,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Saw1EditTimesheetEntryCellCommandPlacement": {
      "id": "Saw1EditTimesheetEntryCellCommand",
      "uiAnchor": "aw_TimesheetEntryCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1DeleteTimesheetEntryCellCommandPlacemment": {
      "id": "Saw1DeleteTimesheetEntryCellCommand",
      "uiAnchor": "aw_TimesheetEntryCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "BOTTOM_RIGHT",
        "selected": true
      }
    },
    "Saw1EditProgramViewCellCommandPlacement": {
      "id": "Saw1EditProgramViewCellCommand",
      "uiAnchor": "aw_ProgramViewCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1DeleteProgramViewCellCommandPlacemment": {
      "id": "Saw1DeleteProgramViewCellCommand",
      "uiAnchor": "aw_ProgramViewCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "BOTTOM_RIGHT",
        "selected": true
      }
    },
    "Saw1OpenSchTemplateInNewTabCellCommandPlacement": {
      "id": "Saw1OpenSchTemplateInNewTabCellCommand",
      "uiAnchor": "aw_schTemplateCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1KanbanDisplayLimit": {
      "id": "Saw1KanbanDisplayLimit",
      "uiAnchor": "aw_rightWall",
      "priority": 100,
      "parentGroupId": "Awp0ViewGroup"
    },
    "Saw1GanttChartToggleCommandPlacement": {
      "id": "Saw1GanttChartToggleCommand",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 12
    },
    "Saw1ShowTaskProperties": {
      "id": "Saw1ShowTaskProperties",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 14
    },
    "Saw1QuickCreateTaskCmdPlacement": {
      "id": "Saw1QuickCreateTask",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 16
    },
    "Saw1QuickCreateMilestoneCmdPlacement": {
      "id": "Saw1QuickCreateMilestone",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 18
    },
    "Saw1InsertSubScheduleOnGantt": {
      "id": "Saw1InsertSubScheduleOnGantt",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 20
    },
    "Saw1CreateDependencyOnGantt": {
      "id": "Saw1CreateDependencyOnGantt",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 22
    },
    "Saw1DeleteTaskOnGantt": {
      "id": "Saw1DeleteTaskOnGantt",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 24
    },
    "IndentTaskOneStep": {
      "id": "Saw1IndentTask",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 26
    },
    "OutdentTaskOneStep": {
      "id": "Saw1OutdentTask",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 28
    },
    "ganttFilters": {
      "id": "Saw1GanttFilters",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 30
    },
    "Saw1GanttZoomLevelGroupCommandPlacement": {
      "id": "Saw1GanttZoomLevelGroup",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 32,
      "showGroupSelected": false
    },
    "Saw1GanttZoomLevelDayCommandPlacement": {
      "id": "Saw1GanttZoomLevelDay",
      "priority": 1,
      "parentGroupId": "Saw1GanttZoomLevelGroup",
      "showGroupSelected": false
    },
    "Saw1GanttZoomLevelWeekCommandPlacement": {
      "id": "Saw1GanttZoomLevelWeek",
      "priority": 2,
      "parentGroupId": "Saw1GanttZoomLevelGroup",
      "showGroupSelected": false
    },
    "Saw1GanttZoomLevelMonthCommandPlacement": {
      "id": "Saw1GanttZoomLevelMonth",
      "priority": 3,
      "parentGroupId": "Saw1GanttZoomLevelGroup",
      "showGroupSelected": false
    },
    "Saw1GanttZoomLevelYearCommandPlacement": {
      "id": "Saw1GanttZoomLevelYear",
      "priority": 4,
      "parentGroupId": "Saw1GanttZoomLevelGroup",
      "showGroupSelected": false
    },
    "Saw1GanttZoomLevelDefaultCommandPlacement": {
      "id": "Saw1GanttZoomLevelDefault",
      "priority": 5,
      "parentGroupId": "Saw1GanttZoomLevelGroup",
      "showGroupSelected": false
    },
    "Saw1ExpandCommandPlacement": {
      "id": "Saw1Expand",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 34
    },
    "Saw1ExpandBelowCommandPlacement": {
      "id": "Saw1ExpandBelow",
      "priority": 1,
      "parentGroupId": "Saw1Expand"
    },
    "Saw1CollapseBelowCommandPlacement": {
      "id": "Saw1CollapseBelow",
      "priority": 2,
      "parentGroupId": "Saw1Expand"
    },
    "Saw1RecalculateOnGanttCmdPlacement": {
      "id": "Saw1RecalculateOnGantt",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 36
    },
    "ShowHideCriticalPath": {
      "id": "Saw1ShowHideCriticalPath",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 38
    },
    "Saw1WhatIfGroupCommandPlacement": {
      "id": "Saw1WhatIfGroup",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 40,
      "showGroupSelected": false
    },
    "Saw1StartWhatIf": {
      "id": "Saw1StartWhatIf",
      "priority": 1,
      "parentGroupId": "Saw1WhatIfGroup",
      "showGroupSelected": false
    },
    "Saw1PromoteWhatIf": {
      "id": "Saw1PromoteWhatIf",
      "priority": 2,
      "parentGroupId": "Saw1WhatIfGroup",
      "showGroupSelected": false
    },
    "Saw1CancelWhatIf": {
      "id": "Saw1CancelWhatIf",
      "priority": 3,
      "parentGroupId": "Saw1WhatIfGroup",
      "showGroupSelected": false
    },
    "Saw1WorkflowTasksOnGantt": {
      "id": "Saw1WorkflowTasksOnGantt",
      "uiAnchor": "aw_primaryWorkArea_com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation",
      "priority": 42
    },
    "Saw1ShiftScheduleCmdPlacement": {
      "id": "Saw1ShiftSchedule",
      "uiAnchor": "aw_rightWall",
      "priority": 630,
      "parentGroupId": "Awp0EditGroup"
    },
    "Saw1FullScreenCmdPlacement": {
      "id": "Saw1FullScreenCommand",
      "uiAnchor": "aw_workArea_right",
      "priority": 1
    },
    "Saw1QuickCreateTaskCtxMenuCmdPlacement": {
      "id": "Saw1QuickCreateTask",
      "uiAnchor": "aw_contextMenu2",
      "priority": 1
    },
    "Saw1QuickCreateMilestoneCtxMenuCmdPlacement": {
      "id": "Saw1QuickCreateMilestone",
      "uiAnchor": "aw_contextMenu2",
      "priority": 2
    },
    "Saw1IndentCtxMenuCmdPlacement": {
      "id": "Saw1IndentTask",
      "uiAnchor": "aw_contextMenu2",
      "priority": 3
    },
    "Saw1OutdentCtxMenuCmdPlacement": {
      "id": "Saw1OutdentTask",
      "uiAnchor": "aw_contextMenu2",
      "priority": 4
    },
    "Saw1DeleteTaskCtxMenuCmdPlacement": {
      "id": "Saw1DeleteTaskOnGantt",
      "uiAnchor": "aw_contextMenu2",
      "priority": 5
    },
    "Awp0GoSchedulesGlobalNavigationbar": {
      "id": "Awp0GoSchedules",
      "uiAnchor": "aw_globalNavigationbar",
      "priority": 90
    },
    "Awp0GoScheduleTasksGlobalNavigationbar": {
      "id": "Awp0GoScheduleTasks",
      "uiAnchor": "aw_globalNavigationbar",
      "priority": 100
    },
    "Saw1ClaimTask": {
      "id": "Saw1ClaimTask",
      "uiAnchor": "aw_rightWall",
      "priority": 130,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Saw1EditBaselineCellCommandPlacement": {
      "id": "Saw1EditBaselineCellCommand",
      "uiAnchor": "aw_manageBaselineCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1DeleteBaselineCellCommandPlacement": {
      "id": "Saw1DeleteBaselineCellCommand",
      "uiAnchor": "aw_manageBaselineCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "BOTTOM_RIGHT",
        "selected": true
      }
    },
    "Saw1ManageBaselinesScheduleCmdPlacement": {
      "id": "Saw1ManageBaselinesSchedule",
      "uiAnchor": "aw_rightWall",
      "priority": 0,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Saw1SetBaselineActiveCellCommandPlacement": {
      "id": "Saw1SetBaselineActiveCellCommand",
      "uiAnchor": "aw_manageBaselineCellCommand",
      "priority": 10,
      "cellDisplay": {
        "hover": true,
        "position": "MIDDLE_RIGHT",
        "selected": true
      }
    },
    "Saw1ShowSchTaskDeliverablesCommandPlacement": {
      "id": "Saw1ShowSchTaskDeliverablesCommand",
      "uiAnchor": "aw_rightWall",
      "priority": 770,
      "parentGroupId": "Awp0ViewGroup"
    },
    "Saw1ExportToExcelTCBPlacement": {
      "id": "Saw1ExportToExcelTCBCommand",
      "uiAnchor": "schedulemanager_table_toolbar_right",
      "priority": 10
    },
    "Saw1OpenInScheduleContextCommandPlacement": {
      "id": "Saw1OpenInScheduleContextCommand",
      "uiAnchor": "aw_rightWall",
      "priority": 2,
      "parentGroupId": "Awp0OpenGroup"
    },
    "Saw1AddFollowerCommandPlacement": {
      "id": "Saw1AddFollower",
      "uiAnchor": "saw1_addFollowerCommands",
      "priority": 101
    },
    "Saw1RemoveFollowerCommandPlacement": {
      "id": "Saw1RemoveFollower",
      "uiAnchor": "saw1_addFollowerCommands",
      "priority": 101
    },
    "Saw1AddSubscriptionCommandPlacement": {
      "id": "Saw1AddSubscription",
      "uiAnchor": "saw1_subscriptionCommands",
      "priority": 101
    },
    "Saw1DeactivateSubscriptionPlacement": {
      "id": "Saw1DeactivateSubscription",
      "uiAnchor": "saw1_subscriptionCommands",
      "priority": 102
    },
    "Saw1DeactivateSubscriptionAsDummyPlacement": {
      "id": "Saw1DeactivateSubscriptionAsDummy",
      "uiAnchor": "saw1_subscriptionCommands",
      "priority": 102
    },
    "Saw1ActivateSubscriptionPlacement": {
      "id": "Saw1ActivateSubscription",
      "uiAnchor": "saw1_subscriptionCommands",
      "priority": 102
    },
    "Saw1DeleteSubscriptionPlacement": {
      "id": "Saw1DeleteSubscription",
      "uiAnchor": "saw1_subscriptionCommands",
      "priority": 103
    },
    "Saw1EditSubscriptionPlacement": {
      "id": "Saw1EditSubscription",
      "uiAnchor": "saw1_subscriptionCommands",
      "priority": 104
    },
    "Saw1EventAddCellCmdCommandPlacement": {
      "id": "Saw1EventAddCellCmd",
      "uiAnchor": "saw1_eventAddCellCommandAction",
      "areas": [
        "com.siemens.splm.clientfx.ui.modelObjectListActionCommands"
      ],
      "priority": 300,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1EventRemoveCellCmdCommandPlacement": {
      "id": "Saw1EventRemoveCellCmd",
      "uiAnchor": "saw1_eventRemoveCellCommandAction",
      "areas": [
        "com.siemens.splm.clientfx.ui.modelObjectListActionCommands"
      ],
      "priority": 300,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Saw1UserAssignmentFromPeoplePickerPlacement": {
      "id": "Saw1UserAssignmentFromPeoplePicker",
      "uiAnchor": "saw1_taskAssigneeSection",
      "priority": 0
    },
    "Saw1PasteResourceFromPeoplePickerCmdPlacement": {
      "id": "Saw1PasteResourceFromPeoplePickerCmd",
      "uiAnchor": "saw1_taskAssigneeSection",
      "priority": 0
    },
    "Saw1RemoveUserAssignmentPlacement": {
      "id": "Saw1RemoveUserFromTaskAssignmentCommand",
      "uiAnchor": "saw1_taskAssigneeSection",
      "priority": 0
    },
    "Saw1AddSchMemberCmdDisplay": {
      "id": "Saw1AddSchMemberCmd",
      "uiAnchor": "saw1_scheduleMembersSectionCommands",
      "priority": -1
    },
    "Saw1RemoveSchMemberCmdDisplay": {
      "id": "Saw1RemoveSchMemberCmd",
      "uiAnchor": "saw1_scheduleMembersSectionCommands",
      "priority": -1
    },
    "Saw1PasteSchMemberFromPeoplePickerCmdDisplay": {
      "id": "Saw1PasteSchMemberFromPeoplePickerCmd",
      "uiAnchor": "saw1_scheduleMembersSectionCommands",
      "priority": -1
    }
  },
  "actions": {
    "toggleGanttChart": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "deps": "js/appCtxService",
      "inputData": {
        "name": "preferences.AW_SubLocation_ScheduleNavigationSubLocation_ShowGanttChart",
        "value": [
          "{{!conditions.isGanttChartVisible}}"
        ]
      },
      "events": {
        "success": [
          {
            "name": "scheduleNavigationTree.updateSWAInfoToSchedule"
          }
        ]
      }
    },
    "saw1OpenChangeOwnerPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Saw1ChangeOwner",
        "location": "aw_toolsAndInfo",
        "context": "{{commandContext}}"
      }
    },
    "Saw1AddTemplateAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "awPanel.navigate",
            "eventData": {
              "destPanelId": "Saw1AddTemplate",
              "title": "{{i18n.saw1AddTemplate}}",
              "recreatePanel": true,
              "supportGoBack": true
            }
          }
        ]
      }
    },
    "Saw1RemoveTemplateAction": {
      "actionType": "JSFunction",
      "method": "removeTemplateFromProvider",
      "deps": "js/Saw1CreateScheduleFromTemplateService",
      "inputData": {
        "commandContext": "{{commandContext}}"
      }
    },
    "dataRefresh": {
      "actionType": "JSFunction",
      "method": "refreshGanttData",
      "deps": "js/SchGanttUtils"
    },
    "addUserCellCommand": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/Saw1AddUserCommandHandler",
      "inputData": {
        "selectedCell": "{{commandContext.vmo}}"
      }
    },
    "addScheduleCellCommand": {
      "actionType": "JSFunction",
      "method": "addSchedule",
      "deps": "js/Saw1CreateProgramViewDatasetService",
      "inputData": {
        "selectedCell": "{{commandContext.vmo}}"
      }
    },
    "removeScheduleCellCommand": {
      "actionType": "JSFunction",
      "method": "removeSchedule",
      "deps": "js/Saw1CreateProgramViewDatasetService",
      "inputData": {
        "selectedCell": "{{commandContext.vmo}}"
      }
    },
    "addBaselineCellCommand": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/Saw1AddBaselineCellCommandHandler",
      "inputData": {
        "selectedCell": "{{commandContext.vmo}}"
      }
    },
    "replaceBaselineCellCommand": {
      "actionType": "JSFunction",
      "method": "replaceBaseline",
      "deps": "js/Saw1ReplaceBaselineCellCommandHandler",
      "inputData": {
        "selection": "{{commandContext.vmo}}",
        "getBaselinesProvider": "{{data.dataProviders.getBaselines}}",
        "selectedBaselinesProvider": "{{data.dataProviders.selectedBaseline}}"
      }
    },
    "removeBaselineCellCommand": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/Saw1RemoveBaselineCellCommandHandler",
      "inputData": {
        "selectedCell": "{{commandContext.vmo}}"
      }
    },
    "removeUserCellCommand": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/Saw1RemoveUserCommandHandler",
      "inputData": {
        "selectedCell": "{{commandContext.vmo}}"
      }
    },
    "addDisciplineCellCommand": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/Saw1AddDisciplineCommandHandler",
      "inputData": {
        "selectedCell": "{{commandContext.vmo}}"
      }
    },
    "removePrivilegedUserCellCommand": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/removePrivilegedUserCommandHandler"
    },
    "removeWorkflowOwnerCellCommand": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/removeWorkflowOwnerCommandHandler"
    },
    "removeDisciplineCellCommand": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/Saw1RemoveDisciplineCommandHandler",
      "inputData": {
        "selectedCell": "{{commandContext.vmo}}"
      }
    },
    "addResourcePoolCellCommand": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/Saw1AddResourcePoolCommandHandler",
      "inputData": {
        "selectedCell": "{{commandContext.vmo}}"
      }
    },
    "removeResourcePoolCellCommand": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/Saw1RemoveResourcePoolCommandHandler",
      "inputData": {
        "selectedCell": "{{commandContext.vmo}}"
      }
    },
    "saw1OpenInNewTab": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{commandContext.vmo}}",
          "path": "uid",
          "isFullyAdapted": true
        }
      },
      "navigateIn": "newTab"
    },
    "startWhatIfStarted": {
      "actionType": "JSFunction",
      "method": "setFlagForWhatIf",
      "deps": "js/uiGanttManager",
      "inputData": {
        "whatIfMode": true
      },
      "events": {
        "success": [
          {
            "name": "SOAForStartWhatIf"
          }
        ]
      }
    },
    "promoteWhatIfStarted": {
      "actionType": "JSFunction",
      "method": "setFlagForWhatIf",
      "deps": "js/uiGanttManager",
      "inputData": {
        "whatIfMode": false
      },
      "events": {
        "success": [
          {
            "name": "SOAForPromoteWhatIf"
          }
        ]
      }
    },
    "getAssignResourcePanel": {
      "actionType": "JSFunction",
      "method": "getAssignResourcePanel",
      "deps": "js/AssignResourceAndGetReplaceMemberService",
      "inputData": {
        "commandId": "Saw1TaskAssignmentCommandPanel",
        "location": "aw_toolsAndInfo"
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "errorCode=='ScheduleTaskTypeError'",
            "message": "ScheduleTaskTypeError"
          }
        ]
      }
    },
    "replaceSchTaskDelRevisionAction": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Saw1SchTaskDeliverableReplaceRevision",
        "location": "aw_toolsAndInfo",
        "context": {
          "targetObject": "{{ctx.selected}}",
          "parentSelection": "{{ctx.pselected}}"
        }
      }
    },
    "replaceLatestSchTaskDelRevisionConfimationAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {}
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "replaceSingleLatestSchTaskDelRevisionConfirmationMsg",
            "condition": "ctx.mselected.length === 1"
          },
          {
            "message": "replaceLatestSchTaskDelRevisionConfirmationMsg",
            "condition": "ctx.mselected.length > 1"
          }
        ]
      }
    },
    "getLatestSchTaskDelRevision": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "objects": "{{function:getPropertiesInputUIDs}}",
        "attributes": [
          "revision_list",
          "fnd0DeliverableInstance",
          "SchTaskDeliverable"
        ]
      },
      "events": {
        "success": [
          {
            "name": "replaceLatestSchTaskDelRevisionEvent"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "deps": "js/Saw1SchTaskDeliverableReplaceRevision"
    },
    "replaceLatestSchTaskDelRevisionAction": {
      "actionType": "JSFunction",
      "method": "replaceLatestSchTaskDelRevision",
      "inputData": {
        "ctx": "{{ctx}}",
        "localizationKeys": "{{data.i18n}}"
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "deps": "js/Saw1SchTaskDeliverableReplaceRevision"
    },
    "getCreateProgramViewPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Saw1CreateProgramViewDataset",
        "location": "aw_toolsAndInfo"
      }
    },
    "getProgramViewFilterPanel": {
      "actionType": "JSFunction",
      "method": "getProgramViewFilterPanel",
      "deps": "js/Saw1ProgramViewFilterService",
      "inputData": {
        "commandId": "Saw1ProgramViewFilter",
        "location": "aw_navigation",
        "commandContext": "{{commandContext}}"
      }
    },
    "AddSchedulesProgramView": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Saw1ProgramViewChangeSchedules",
        "location": "aw_toolsAndInfo",
        "context": {
          "programViewConfigurations": "{{commandContext.programViewConfigurations}}"
        }
      }
    },
    "getDesignateDisciplinePanel": {
      "actionType": "JSFunction",
      "method": "getAssignResourcePanel",
      "deps": "js/AssignResourceAndGetReplaceMemberService",
      "inputData": {
        "commandId": "Saw1DesignatedDiscipline",
        "location": "aw_toolsAndInfo"
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "errorCode=='ScheduleTaskTypeError'",
            "message": "ScheduleTaskTypeError"
          }
        ]
      }
    },
    "getRevertToDisciplinePanel": {
      "actionType": "JSFunction",
      "method": "getAssignResourcePanel",
      "deps": "js/AssignResourceAndGetReplaceMemberService",
      "inputData": {
        "commandId": "Saw1RevertToDiscipline",
        "location": "aw_toolsAndInfo"
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "errorCode=='ScheduleTaskTypeError'",
            "message": "ScheduleTaskTypeError"
          }
        ]
      }
    },
    "getRevertToDisciplineMember": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagementAw-2018-12-ScheduleManagementAw",
      "method": "designateDiscipline",
      "inputData": {
        "schedule": "{{ctx.pselected}}",
        "discipline": "",
        "user": "{{function:getUser}}",
        "revert": true,
        "runInBackground": true
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "deps": "js/AssignResourceAndGetReplaceMemberService"
    },
    "removeSchDeliverable": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "schDeliverable.removeDeliverable",
            "condition": ""
          }
        ]
      }
    },
    "rmvDeliverable": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2007-01-ScheduleManagement",
      "method": "deleteSchedulingObjects",
      "inputData": {
        "scheduleObjDeleteContainer": "{{function:getObjectsContainer}}"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{ctx.pselected}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "deps": "js/RemoveSchMemberService"
    },
    "openResourceGraphPanel": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "taskAssignment.openResourceLoadPanel",
            "eventData": {
              "selectedResources": "{{commandContext.vmo}}",
              "commandContext": "{{commandContext}}",
              "previousPanelId": "Saw1TaskAssignment"
            }
          }
        ]
      }
    },
    "openResourceGraphPanelFromPeoplePicker": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "taskAssignment.openResourceLoadPanel",
            "eventData": {
              "selectedResources": "{{commandContext.vmo}}",
              "commandContext": "{{commandContext}}",
              "previousPanelId": "AwPeoplePicker"
            }
          }
        ]
      }
    },
    "openCreateSchedulePanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Saw1CreateSchedule",
        "location": "aw_toolsAndInfo",
        "context": {
          "visibleTabs": "new"
        },
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "openBaselineDelegate": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{commandContext.vmo.props.activeschbaseline_tag}}",
          "path": "dbValues[0]"
        }
      }
    },
    "openBaselineOneStepDelegate": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{ctx.selected.props.activeschbaseline_tag}}",
          "path": "dbValues[0]"
        }
      }
    },
    "openBaselineInNewTabDelegate": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{ctx.selected.props.activeschbaseline_tag}}",
          "path": "dbValues[0]"
        }
      },
      "navigateIn": "newTab"
    },
    "openBaselineInNewWindowDelegate": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{ctx.selected.props.activeschbaseline_tag}}",
          "path": "dbValues[0]"
        }
      },
      "navigateIn": "newWindow"
    },
    "openTaskDelInNewTabDelegate": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{ctx.selected.props.fnd0DeliverableInstance}}",
          "path": "dbValues[0]"
        }
      },
      "navigateIn": "newTab"
    },
    "openSchDelInNewTabDelegate": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{ctx.selected.props.deliverable_inst}}",
          "path": "dbValues[0]"
        }
      },
      "navigateIn": "newTab"
    },
    "openDelInNewTabDelegate": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{ctx.selected}}",
          "path": "uid"
        }
      },
      "navigateIn": "newTab"
    },
    "openTaskDelInNewWindowDelegate": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{ctx.selected.props.fnd0DeliverableInstance}}",
          "path": "dbValues[0]"
        }
      },
      "navigateIn": "newWindow"
    },
    "openSchDelInNewWindowDelegate": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{ctx.selected.props.deliverable_inst}}",
          "path": "dbValues[0]"
        }
      },
      "navigateIn": "newWindow"
    },
    "openDelInNewWindowDelegate": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{ctx.selected}}",
          "path": "uid"
        }
      },
      "navigateIn": "newWindow"
    },
    "getInsertSubSchedulePanel": {
      "actionType": "JSFunction",
      "method": "getInsertSubSchedulePanel",
      "deps": "js/Saw1InsertSubScheduleService",
      "inputData": {
        "commandId": "Saw1InsertSubSchedule",
        "location": "aw_toolsAndInfo"
      },
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.object.masterScheduleTask === null",
            "message": "insertSubScheduleMessage"
          }
        ]
      }
    },
    "setZoomToDay": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "deps": "js/appCtxService",
      "inputData": {
        "name": "preferences.AWC_SM_Gantt_Zoom_Level",
        "value": [
          "day"
        ]
      }
    },
    "setZoomToWeek": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "deps": "js/appCtxService",
      "inputData": {
        "name": "preferences.AWC_SM_Gantt_Zoom_Level",
        "value": [
          "week"
        ]
      }
    },
    "setZoomToMonth": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "deps": "js/appCtxService",
      "inputData": {
        "name": "preferences.AWC_SM_Gantt_Zoom_Level",
        "value": [
          "month"
        ]
      }
    },
    "setZoomToYear": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "deps": "js/appCtxService",
      "inputData": {
        "name": "preferences.AWC_SM_Gantt_Zoom_Level",
        "value": [
          "year"
        ]
      }
    },
    "setZoomToDefault": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "deps": "js/appCtxService",
      "inputData": {
        "name": "preferences.AWC_SM_Gantt_Zoom_Level",
        "value": [
          "unit_of_time_measure"
        ]
      }
    },
    "activateInsertSubSchedulePanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Saw1InsertSubSchedule",
        "location": "aw_toolsAndInfo"
      }
    },
    "confirmationMessage": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "removeAssignments.showMessage",
            "condition": ""
          }
        ]
      }
    },
    "openBaselineObjectCellAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "openBaselineObjectCell.showMessage",
            "condition": ""
          }
        ]
      }
    },
    "openBaselineShowObjectAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "openBaselineShowObject.showMessage",
            "condition": ""
          }
        ]
      }
    },
    "openBaselineInNewTabAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "openBaselineInNewTab.showMessage",
            "condition": ""
          }
        ]
      }
    },
    "openBaselineInNewWindowAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "openBaselineInNewWindow.showMessage",
            "condition": ""
          }
        ]
      }
    },
    "assignmentsToRemove": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagementAw-2016-12-ScheduleManagementAw",
      "method": "removeAssignments",
      "inputData": {
        "membersToRemoveAssignments": "{{ctx.mselected}}",
        "runInBackground": true
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      }
    },
    "getCreateProxyTaskPanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Saw1CreateProxyTask",
        "location": "aw_toolsAndInfo",
        "ctx": "{{ctx}}",
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "getMirrorAsProxyTaskPanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Saw1MirrorAsProxyTask",
        "location": "aw_toolsAndInfo",
        "ctx": "{{ctx}}"
      }
    },
    "openShiftSchedulePanel": {
      "actionType": "JSFunction",
      "method": "getShiftSchedulePanel",
      "deps": "js/ShiftSchedulePanel",
      "inputData": {
        "commandId": "Saw1ShiftSchedule",
        "location": "aw_toolsAndInfo",
        "ctx": "{{ctx}}"
      }
    },
    "removeSchMemberFunction": {
      "actionType": "JSFunction",
      "method": "getSelectedNames",
      "inputData": {
        "ctx": "{{ctx}}"
      },
      "outputData": {
        "memberNames": ""
      },
      "actionMessages": {
        "success": [
          {
            "message": "removeMemberConfirmationMessage"
          }
        ]
      },
      "deps": "js/RemoveSchMemberService"
    },
    "removeSchMemberSOA": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2007-01-ScheduleManagement",
      "method": "deleteSchedulingObjects",
      "inputData": {
        "scheduleObjDeleteContainer": "{{function:getObjectsContainer}}"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{ctx.pselected}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "deps": "js/RemoveSchMemberService"
    },
    "getSaveAsPanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Saw1SaveAsSchedule",
        "location": "aw_toolsAndInfo"
      }
    },
    "getCreateScheduleFromTemplatePanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Saw1AddTemplateAndCreateSchedule",
        "location": "aw_toolsAndInfo"
      }
    },
    "IndentTask": {
      "actionType": "JSFunction",
      "method": "getIndentValidation",
      "deps": "js/IndentTaskService",
      "inputData": {
        "pwaSelection": "{{commandContext.searchState.pwaSelection}}"
      },
      "outputData": {
        "moveRequests": ""
      },
      "events": {
        "success": [
          {
            "name": "callMoveRequst"
          }
        ]
      }
    },
    "callMoveRequstSOA": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2012-02-ScheduleManagement",
      "method": "moveTasks",
      "inputData": {
        "schedule": {
          "type": "{{ctx.pselected.type}}",
          "uid": "{{ctx.pselected.uid}}"
        },
        "moveRequests": "{{data.moveRequests}}"
      },
      "outputData": {
        "MoveTaskResponse": ""
      },
      "events": {
        "success": [
          {
            "name": "updateTaskTreeNodePositionEvent"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "ScheduleTask",
            "properties": [
              {
                "name": "child_task_taglist",
                "modifiers": [
                  {
                    "name": "withProperties",
                    "Value": "false"
                  }
                ]
              }
            ]
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      }
    },
    "OutdentValidation": {
      "actionType": "JSFunction",
      "method": "getOutdentValidation",
      "deps": "js/OutdentTaskService",
      "inputData": {
        "pwaSelection": "{{commandContext.searchState.pwaSelection}}"
      },
      "outputData": {
        "moveRequests": ""
      },
      "events": {
        "success": [
          {
            "name": "callMoveRequst"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "errorCode === 'cannotBeOutdented'",
            "message": "cannotBeOutdentedMessage"
          },
          {
            "condition": "errorCode === 'noContinousSelection'",
            "message": "noContinousSelectionMessage"
          }
        ]
      }
    },
    "unAssignResources": {
      "actionType": "JSFunction",
      "method": "unAssignResources",
      "deps": "js/userListService",
      "inputData": {
        "schedule": {
          "uid": "{{function:getScheduleUid}}",
          "type": "Schedule"
        }
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{ctx.pselected}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      }
    },
    "cutTaskOperationDelegate": {
      "actionType": "JSFunction",
      "method": "cutTaskOperation",
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.mselected.length==1",
            "message": "cutSuccessfulInfoMsg"
          },
          {
            "condition": "ctx.mselected.length>1",
            "message": "cutMultipleSuccessfulInfoMsg"
          }
        ]
      },
      "outputData": {
        "scheduleName": ""
      },
      "deps": "js/userListService"
    },
    "deleteDependencySoaAction": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2012-02-ScheduleManagement",
      "method": "deleteDependencies",
      "inputData": {
        "schedule": "{{function:getSchedule}}",
        "dependencyDeletes": "{{function:getDependencies}}"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{ctx.pselected}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "deps": "js/userListService"
    },
    "getScheduleTaskProperties": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "objects": [
          "{{ctx.pselected}}"
        ],
        "attributes": [
          "schedule_tag",
          "fnd0ParentTask"
        ]
      },
      "policy": {
        "types": [
          {
            "name": "ScheduleTask",
            "properties": [
              {
                "name": "schedule_tag"
              },
              {
                "name": "fnd0ParentTask"
              },
              {
                "name": "fnd0WhatIfMode"
              },
              {
                "name": "fnd0WhatIfData"
              }
            ]
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "dependencies.deleteDependencyOperation"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      }
    },
    "loadPropertiesAndIndentTask": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "objects": [
          "{{function:getParentTaskObject}}"
        ],
        "attributes": [
          "child_task_taglist"
        ]
      },
      "events": {
        "success": [
          {
            "name": "saw1IndentSchTask"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "deps": "js/IndentTaskService"
    },
    "getConfirmationForDeleteSchedule": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "sch.deleteSchedule",
            "condition": ""
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.mselected.length==1",
            "message": "deleteScheduleSingle"
          },
          {
            "condition": "ctx.mselected.length>1",
            "message": "deleteScheduleMultiple"
          }
        ]
      }
    },
    "deleteSchedule": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteObjects",
      "inputData": {
        "objects": "{{function:getSelectedObjects}}"
      },
      "events": {
        "success": [
          {
            "name": "primaryWorkarea.reset"
          },
          {
            "name": "unRegisterCommandContextEvent"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "deps": "js/userListService"
    },
    "openProgramViewShowObjectAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{ctx.selected.uid}}"
      }
    },
    "getReplaceMemberPanel": {
      "actionType": "JSFunction",
      "method": "getReplaceMemberPanel",
      "deps": "js/AssignResourceAndGetReplaceMemberService",
      "inputData": {
        "commandId": "Saw1ReplaceMember",
        "location": "aw_toolsAndInfo"
      }
    },
    "getDesignateDisciplineToMembersPanel": {
      "actionType": "JSFunction",
      "method": "getDesignateDisciplineToMembersPanel",
      "deps": "js/AssignResourceAndGetReplaceMemberService",
      "inputData": {
        "commandId": "Saw1DesignateDisciplineToMembers",
        "location": "aw_toolsAndInfo"
      }
    },
    "getScheduleTagFromScheduleTask": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "objects": [
          "{{ctx.pselected}}"
        ],
        "attributes": [
          "schedule_tag"
        ]
      },
      "policy": {
        "type": [
          {
            "properties": [
              {
                "name": "schedule_tag"
              }
            ]
          }
        ]
      },
      "outputData": {
        "scheduleTag": "{{function:getScheduleTag}}"
      },
      "events": {
        "success": [
          {
            "name": "scheduleTagPropertyLoaded"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "deps": "js/Saw1CreatePanelService"
    },
    "processSelectionAndDelete": {
      "actionType": "JSFunction",
      "method": "processSelectedTasksToDelete",
      "outputData": {
        "subSchedules": "subSchedules",
        "tasksToBeDeleted": "tasksToBeDeleted"
      },
      "events": {
        "success": [
          {
            "condition": "data.subSchedules.length > 0",
            "name": "tasks.detachSubSchedule"
          },
          {
            "condition": "data.subSchedules.length === 0 && data.tasksToBeDeleted.length > 0",
            "name": "tasks.deleteSelectedTasks"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "errorCode ==='invalidScheduleSummaryTaskDelete'",
            "message": "invalidScheduleSummaryTaskDelete"
          }
        ]
      },
      "deps": "js/userListService"
    },
    "deleteSelectedDependencies": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2012-02-ScheduleManagement",
      "method": "deleteDependencies",
      "inputData": {
        "schedule": "{{commandContext.openedObject}}",
        "dependencyDeletes": "{{commandContext.searchState.pwaSelection}}"
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      }
    },
    "detachSubScheduleAction": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2014-10-ScheduleManagement",
      "method": "detachSchedule",
      "inputData": {
        "detachScheduleContainer": "{{function:getDetachScheduleContainer}}"
      },
      "events": {
        "success": [
          {
            "condition": "data.tasksToBeDeleted.length > 0",
            "name": "tasks.deleteSelectedTasks"
          },
          {
            "condition": "data.tasksToBeDeleted.length <= 0 && (ctx.locationContext['ActiveWorkspace:SubLocation'] === 'com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation')",
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{ctx.locationContext.modelObject}}"
              ]
            }
          },
          {
            "condition": "data.tasksToBeDeleted.length === 0 && (commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Tasks' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Tasks')",
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{ctx.pselected}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "deps": "js/userListService"
    },
    "deleteTasksAction": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2012-02-ScheduleManagement",
      "method": "deleteTasks",
      "inputData": {
        "schedule": "{{ctx.pselected}}",
        "deleteTasks": "{{data.tasksToBeDeleted}}"
      },
      "outputData": {
        "deletedObjects": ""
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": false,
              "isPinnedFlag": false,
              "relations": "",
              "relatedModified": [
                "{{commandContext.openedObject}}"
              ],
              "createdObjects": "{{data.createdMainObject.createdObjects}}"
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "deps": "js/userListService"
    },
    "deleteTasksOrTaskDependency": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "deleteTasksEvent",
            "condition": "ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Fnd0ProxyTask') > -1"
          },
          {
            "name": "deleteDependencyEvent",
            "condition": "ctx.selected.modelType.typeHierarchyArray.indexOf('TaskDependency') > -1"
          }
        ]
      }
    },
    "openDeliverableInNewTabAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "openTaskDelInNewTabEvent",
            "condition": "(ctx.selected.props.fnd0DeliverableInstance.dbValues[0] !== '' && ctx.selected.modelType.typeHierarchyArray.indexOf('SchTaskDeliverable') > -1)"
          },
          {
            "name": "openSchDelInNewTabEvent",
            "condition": "(ctx.selected.props.deliverable_inst.dbValues[0] !== '' && ctx.selected.modelType.typeHierarchyArray.indexOf('SchDeliverable') > -1)"
          },
          {
            "name": "openDelInNewTabEvent",
            "condition": "((ctx.selected.props.deliverable_inst.dbValues[0] === '' && ctx.selected.modelType.typeHierarchyArray.indexOf('SchDeliverable') > -1) || (ctx.selected.props.fnd0DeliverableInstance.dbValues[0] === '' && ctx.selected.modelType.typeHierarchyArray.indexOf('SchTaskDeliverable') > -1))"
          }
        ]
      }
    },
    "openDeliverableInNewWindowAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "openTaskDelInNewWindowEvent",
            "condition": "(ctx.selected.props.fnd0DeliverableInstance.dbValues[0] !== '' && ctx.selected.modelType.typeHierarchyArray.indexOf('SchTaskDeliverable') > -1)"
          },
          {
            "name": "openSchDelInNewWindowEvent",
            "condition": "(ctx.selected.props.deliverable_inst.dbValues[0] !== '' && ctx.selected.modelType.typeHierarchyArray.indexOf('SchDeliverable') > -1)"
          },
          {
            "name": "openDelInNewWindowEvent",
            "condition": "((ctx.selected.props.deliverable_inst.dbValues[0] === '' && ctx.selected.modelType.typeHierarchyArray.indexOf('SchDeliverable') > -1) || (ctx.selected.props.fnd0DeliverableInstance.dbValues[0] === '' && ctx.selected.modelType.typeHierarchyArray.indexOf('SchTaskDeliverable') > -1))"
          }
        ]
      }
    },
    "deleteDependencyAction": {
      "actionType": "JSFunction",
      "method": "deleteDependency",
      "deps": "js/SchGanttUtils",
      "inputData": {
        "dependencyToDelete": "{{ctx.selected}}"
      }
    },
    "deleteTasks": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "deleteTask.showMessage",
            "condition": ""
          }
        ]
      }
    },
    "deleteDependencies": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "deleteDependency.confirmAndDelete",
            "condition": ""
          }
        ]
      }
    },
    "createDependencyBatchJob": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "prepareDependencyCreateInput"
        },
        {
          "action": "createDependency",
          "condition": "conditions.hasDependencyCreateInput"
        }
      ]
    },
    "createDependency": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2012-02-ScheduleManagement",
      "method": "createDependencies",
      "inputData": {
        "schedule": "{{ctx.pselected}}",
        "newDependencies": "{{data.dependencyCreateInfo.newDependencies}}"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{ctx.selected}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "dependencyCreated"
          }
        ],
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      }
    },
    "openAddScheduleDeliverablePanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Saw1AddSchDeliverable",
        "location": "aw_toolsAndInfo"
      }
    },
    "prepareDependencyCreateInput": {
      "actionType": "JSFunction",
      "method": "getDependencyCreateInput",
      "deps": "js/Dependencies",
      "inputData": {
        "ctx": "{{ctx}}"
      },
      "outputData": {
        "dependencyCreateInfo": ""
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "errorCode==='createDependencyErrorMsg'",
            "message": "createDependencyErrorMsg"
          }
        ]
      }
    },
    "saw1SearchFilterPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0SearchFilter",
        "location": "aw_navigation"
      }
    },
    "startWhatIf": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2017-11-ScheduleManagement",
      "method": "whatIfAnalysis",
      "inputData": {
        "schedule": "{{ctx.selected}}",
        "whatIfOption": "Start"
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      }
    },
    "promoteWhatIf": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2017-11-ScheduleManagement",
      "method": "whatIfAnalysis",
      "inputData": {
        "schedule": "{{ctx.selected}}",
        "whatIfOption": "SaveAndExit"
      },
      "events": {
        "success": [
          {
            "name": "refreshGantt"
          },
          {
            "name": "scheduleNavigationTree.updateWhatIfProperties"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      }
    },
    "cancelWhatIf": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2017-11-ScheduleManagement",
      "method": "whatIfAnalysis",
      "inputData": {
        "schedule": "{{ctx.selected}}",
        "whatIfOption": "CancelAndExit"
      },
      "events": {
        "success": [
          {
            "name": "scheduleNavigationTree.plTable.reload"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      }
    },
    "launchWorkFlow": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2012-02-ScheduleManagement",
      "method": "launchScheduledWorkflow",
      "inputData": {
        "tasks": "{{ctx.mselected}}"
      },
      "events": {},
      "actionMessages": {
        "success": [
          {
            "message": "launchWorkFlowSuccessMsg"
          }
        ],
        "failure": [
          {
            "message": "launchWorkFlowFailure"
          }
        ]
      }
    },
    "getConfirmationForlaunchWorkflow": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "launchWorkFlow.showMessage",
            "condition": ""
          }
        ]
      }
    },
    "toggleTaskInfoInGantt": {
      "actionType": "JSFunction",
      "method": "updateCtx",
      "deps": "js/appCtxService",
      "inputData": {
        "name": "showGanttTaskInfo",
        "value": "{{!conditions.canShowGanttTaskInfo}}"
      }
    },
    "showHideCriticalPath": {
      "actionType": "JSFunction",
      "method": "updatePartialCtx",
      "deps": "js/appCtxService",
      "inputData": {
        "name": "preferences.SM_View_CriticalPath",
        "value": [
          "{{!conditions.canShowCriticalPath}}"
        ]
      }
    },
    "getWorkflowPanel": {
      "actionType": "JSFunction",
      "method": "getWorkflowPanel",
      "deps": "js/Saw1WorkflowTasks",
      "inputData": {
        "commandId": "Saw1WorkflowTasks",
        "location": "aw_toolsAndInfo",
        "ctx": "{{ctx}}"
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "errorCode=='workflowTaskTypeError'",
            "message": "workflowTaskTypeError"
          }
        ]
      }
    },
    "validateWFLauchOperation": {
      "actionType": "JSFunction",
      "method": "isValidToLauchWorkflow",
      "deps": "js/Saw1WorkflowTasks",
      "inputData": {
        "ctx": "{{ctx}}"
      },
      "events": {
        "success": [
          {
            "name": "getConfirmationForlaunchWorkflow"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "errorCode=='templateUnpublisedSchWFLaunchError'",
            "message": "templateUnpublisedSchWFLaunchError"
          },
          {
            "condition": "errorCode=='launchWorkflowTaskTypeError'",
            "message": "launchWorkflowTaskTypeError"
          }
        ]
      }
    },
    "openAssignScheduleDeliverablePanel": {
      "actionType": "JSFunction",
      "method": "openAssignScheduleDeliverablePanel",
      "deps": "js/Saw1AssignScheduleDeliverableService",
      "inputData": {
        "commandId": "Saw1AssignScheduleDeliverable",
        "location": "aw_toolsAndInfo",
        "ctx": "{{ctx}}",
        "data": "{{data}}"
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "errorCode=='deliverableDiffSchError'",
            "message": "deliverableDiffSchError"
          },
          {
            "condition": "errorCode=='deliverableWorkflowError'",
            "message": "deliverableWorkflowError"
          },
          {
            "condition": "errorCode=='deliverableTaskTypeError'",
            "message": "deliverableTaskTypeError"
          }
        ]
      }
    },
    "assignTaskDeliverable": {
      "actionType": "JSFunction",
      "method": "addTaskDeliverablePanel",
      "deps": "js/Saw1AssignTaskDeliverableService",
      "inputData": {
        "commandId": "Saw1AssignTaskDeliverable",
        "location": "aw_toolsAndInfo",
        "commandContext": "{{commandContext}}"
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "errorCode=='deliverableDiffSchError'",
            "message": "deliverableDiffSchError"
          },
          {
            "condition": "errorCode=='deliverableWorkflowError'",
            "message": "deliverableWorkflowError"
          },
          {
            "condition": "errorCode=='deliverableTaskTypeError'",
            "message": "deliverableTaskTypeError"
          }
        ]
      }
    },
    "setSelectedPrivilegeSharedDataCoordinator": {
      "actionType": "JSFunction",
      "method": "updateSchedulesSearchCriteria",
      "inputData": {
        "newPrivilege": "coordinator",
        "searchState": "{{commandContext.searchState}}"
      },
      "deps": "js/Saw1SearchFilterService"
    },
    "setSelectedPrivilegeSharedDataParticipant": {
      "actionType": "JSFunction",
      "method": "updateSchedulesSearchCriteria",
      "inputData": {
        "newPrivilege": "participant",
        "searchState": "{{commandContext.searchState}}"
      },
      "deps": "js/Saw1SearchFilterService"
    },
    "setSelectedPrivilegeSharedDataObserver": {
      "actionType": "JSFunction",
      "method": "updateSchedulesSearchCriteria",
      "inputData": {
        "newPrivilege": "observer",
        "searchState": "{{commandContext.searchState}}"
      },
      "deps": "js/Saw1SearchFilterService"
    },
    "pasteTaskOperation": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-ProjectManagement-2014-10-ScheduleManagement",
      "method": "pasteTasks",
      "inputData": {
        "inputs": "{{function:pasteScheduleTasks}}"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{ctx.pselected}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "errorCode=='errMsgForPasteOperation'",
            "message": "errMsgForPasteOperation"
          },
          {
            "condition": "errorCode=='errMsgForSchSummaryTask'",
            "message": "errMsgForSchSummaryTask"
          },
          {
            "condition": "errorCode!='errMsgForPasteOperation' && errorCode!='errMsgForSchSummaryTask' ",
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "deps": "js/userListService"
    },
    "Saw1ProjectSectionAddCmdAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "awPanel.navigate",
            "eventData": {
              "destPanelId": "AssignProjectSub",
              "title": "{{i18n.addProjectButtonTitle}}",
              "recreatePanel": true,
              "supportGoBack": true
            }
          }
        ]
      }
    },
    "Saw1ProgramFiltersAddCmdAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "saw1AddFilter.openAddFiltersPanel"
          }
        ]
      }
    },
    "Saw1UserSectionAddCmdAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "saw1UserSectionAddEvent"
          }
        ]
      }
    },
    "Saw1OwnerSectionAddCmdAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "saw1OwnerSectionAddEvent"
          }
        ]
      }
    },
    "createScheduleTask": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Saw1CreateScheduleTask",
        "location": "aw_toolsAndInfo",
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "assignResourceOpenPanel": {
      "actionType": "JSFunction",
      "method": "assignResourcePanel",
      "deps": "js/Saw1AssignResourceService",
      "inputData": {
        "commandId": "Saw1AssignResource",
        "location": "aw_toolsAndInfo",
        "ctx": "{{ctx}}"
      }
    },
    "addMemberOpenPanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Saw1AddMember",
        "location": "aw_toolsAndInfo",
        "context": {
          "selectedSchedule": "{{ctx.selected}}"
        }
      }
    },
    "getCreateBaselinePanel": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "loadActiveBaselineTag"
        },
        {
          "action": "loadSaw1BaselineSchedulePanel"
        }
      ]
    },
    "loadActiveBaselineTag": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "objects": [
          "{{ctx.selected}}"
        ],
        "attributes": [
          "activeschbaseline_tag"
        ]
      }
    },
    "loadSaw1BaselineSchedulePanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Saw1BaselineSchedule",
        "location": "aw_toolsAndInfo",
        "context": {
          "selectedSchedule": "{{ctx.selected}}"
        },
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "getViewBaselinePanel": {
      "actionType": "JSFunction",
      "method": "openCreateBaselinePanel",
      "deps": "js/Saw1BaselineScheduleService",
      "inputData": {
        "commandId": "Saw1ViewBaselineSchedule",
        "location": "aw_toolsAndInfo"
      }
    },
    "getManageBaselinesPanel": {
      "actionType": "JSFunction",
      "method": "openCreateBaselinePanel",
      "deps": "js/Saw1BaselineScheduleService",
      "inputData": {
        "commandId": "Saw1ManageBaselinesSchedule",
        "location": "aw_toolsAndInfo"
      }
    },
    "getEditBaselinePanel": {
      "actionType": "JSFunction",
      "method": "navigateEditPanel",
      "inputData": {
        "hoverCell": "{{commandContext.vmo}}",
        "destPanelId": "Saw1EditBaseline",
        "title": "{{i18n.edit}}"
      },
      "deps": "js/Saw1BaselineCellCommandsHandler"
    },
    "setBaselineActiveSOA": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2012-02-ScheduleManagement",
      "method": "updateSchedules",
      "inputData": {
        "scheduleUpdates": [
          {
            "object": {
              "uid": "{{ctx.selected.uid}}",
              "type": "Schedule"
            },
            "updates": [
              {
                "attrName": "activeschbaseline_tag",
                "attrValue": "{{commandContext.vmo.uid}}",
                "attrType": 1
              }
            ]
          }
        ]
      },
      "outputData": {
        "partialErorrs": "partialErrors"
      },
      "actionMessages": {
        "success": [
          {
            "message": "createSuccess"
          }
        ],
        "failure": [
          {
            "condition": "partialErorrs[0].errorValues[0].code==230045",
            "message": "displayError"
          },
          {
            "condition": "partialErorrs[0].errorValues[0].code!=230045",
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "updateDataProvidersEvent"
          }
        ]
      }
    },
    "deleteBaselineCellCommand": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2007-01-ScheduleManagement",
      "method": "deleteSchedulingObjects",
      "inputData": {
        "scheduleObjDeleteContainer": [
          {
            "object": "{{commandContext.vmo}}"
          }
        ]
      },
      "outputData": {
        "partialErorrs": "partialErrors"
      },
      "events": {
        "success": [
          {
            "name": "deleteBaselineEvent"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "partialErorrs[0].errorValues[0].code==230035",
            "message": "displayError"
          },
          {
            "condition": "partialErorrs[0].errorValues[0].code!=230035",
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "deps": "js/Saw1BaselineCellCommandsHandler"
    },
    "confirmDeleteBaseline": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "sch.deleteSchedule",
            "condition": ""
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "deleteBaselineConfirm"
          }
        ]
      }
    },
    "deleteBaselineAction": {
      "actionType": "JSFunction",
      "method": "postDeleteBaselineAction",
      "inputData": {
        "vmo": "{{commandContext.vmo}}"
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "deps": "js/Saw1BaselineCellCommandsHandler"
    },
    "updateDataProvidersAction": {
      "actionType": "JSFunction",
      "method": "updateDataProviders",
      "inputData": {
        "vmo": "{{commandContext.vmo}}"
      },
      "deps": "js/Saw1BaselineCellCommandsHandler"
    },
    "ganttFilterPanel": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "fetchGanttSearchFilters"
        },
        {
          "action": "openSearchFilterPanel"
        }
      ]
    },
    "fetchGanttSearchFilters": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-AWS2-2019-06-Finder",
      "method": "performSearchViewModel4",
      "inputData": {
        "searchInput": {
          "maxToLoad": 50,
          "maxToReturn": 50,
          "providerName": "Saw1TaskSearchProvider",
          "searchCriteria": {
            "sublocationToken": "ScheduleGantt",
            "searchContentType": "ScheduleTask",
            "topScheduleUid": "{{commandContext.baseSelection.uid}}",
            "includeProxies": "true",
            "loadFiltersOnly": "true"
          },
          "searchFilterFieldSortType": "{{commandContext.searchState.sortType}}",
          "searchFilterMap6": "{{commandContext.searchState.activeFilterMap}}",
          "columnFilters": "{{commandContext.scheduleNavigationContext.columnFilters}}"
        }
      },
      "outputData": {
        "output": "{{function:processFilterSearchOutput}}"
      },
      "deps": "js/awSearchService"
    },
    "openSearchFilterPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0SearchFilter",
        "location": "aw_navigation"
      }
    },
    "recalculateSchAction": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagementAw-2018-12-ScheduleManagementAw",
      "method": "recalculateSchedules",
      "inputData": {
        "recalculateInputs": [
          {
            "schedule": "{{commandContext.openedObject}}",
            "recalcType": -1
          }
        ],
        "runInBackground": true
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      }
    },
    "showConfirmMsgDeleteTimesheetEntry": {
      "actionType": "JSFunction",
      "method": "populateDeleteMsgInput",
      "inputData": {
        "vmo": "{{commandContext.vmo}}"
      },
      "outputData": {
        "deleteTimesheetEntry": ""
      },
      "actionMessages": {
        "success": [
          {
            "message": "confirmDeleteTimesheetEntryMessage"
          }
        ]
      },
      "deps": "js/Saw1TimesheetEntryCellCommandsHandler"
    },
    "deleteTimesheetEntry": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteObjects",
      "inputData": {
        "objects": [
          "{{data.deleteTimesheetEntry}}"
        ]
      },
      "events": {
        "success": [
          {
            "name": "updateTimesheetEntryDataProviderEvent"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      }
    },
    "updateTimesheetEntryDataProviderAction": {
      "actionType": "JSFunction",
      "method": "updateTimesheetEntryDataProvider",
      "inputData": {
        "deletedVMO": "{{data.vmo}}"
      },
      "deps": "js/Saw1TimesheetEntryCellCommandsHandler"
    },
    "getEnterTimePanelAction": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Saw1EnterTime",
        "location": "aw_toolsAndInfo"
      }
    },
    "addTimesheetEntryPanelAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "awPanel.navigate",
            "eventData": {
              "destPanelId": "Saw1AddTimesheetEntry",
              "title": "{{i18n.addTimesheetEntry}}",
              "recreatePanel": true,
              "supportGoBack": true
            }
          }
        ]
      }
    },
    "timesheetEntryCellCommand": {
      "actionType": "JSFunction",
      "method": "execute",
      "inputData": {
        "hoverCell": "{{commandContext.vmo}}",
        "destPanelId": "Saw1EditTimesheetEntry",
        "title": "{{i18n.editTimesheetEntry}}"
      },
      "deps": "js/Saw1TimesheetEntryCellCommandsHandler"
    },
    "editProgramViewCondition": {
      "actionType": "JSFunction",
      "method": "editProgramViewCondition",
      "deps": "js/Saw1ProgramViewFilterService",
      "inputData": {
        "vmo": "{{commandContext.vmo}}",
        "data": "{{data}}",
        "openInEditMode": false
      }
    },
    "deleteProgramViewCondition": {
      "actionType": "JSFunction",
      "method": "deleteProgramViewCondition",
      "deps": "js/Saw1ProgramViewFilterService",
      "inputData": {
        "vmo": "{{commandContext.vmo}}"
      }
    },
    "Saw1QuickCreateTaskAction": {
      "actionType": "JSFunction",
      "method": "getQuickCreateInput",
      "deps": "js/Saw1QuickCreateService",
      "inputData": {
        "ctx": "{{ctx}}",
        "isMilestone": false
      },
      "outputData": {
        "createInput": ""
      },
      "events": {
        "success": [
          {
            "name": "quickCreateTaskEvent"
          }
        ]
      }
    },
    "Saw1QuickCreateMilestoneAction": {
      "actionType": "JSFunction",
      "method": "getQuickCreateInput",
      "deps": "js/Saw1QuickCreateService",
      "inputData": {
        "ctx": "{{ctx}}",
        "isMilestone": true
      },
      "outputData": {
        "createInput": ""
      },
      "events": {
        "success": [
          {
            "name": "quickCreateTaskEvent"
          }
        ]
      }
    },
    "quickCreateTaskSOA": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2012-02-ScheduleManagement",
      "method": "createTasks",
      "inputData": {
        "schedule": "{{data.createInput.schedule}}",
        "createContainers": "{{data.createInput.createContainers}}"
      },
      "outputData": {
        "createdMainObject": ""
      },
      "policy": {
        "types": [
          {
            "name": "ScheduleTask",
            "properties": [
              {
                "name": "fnd0WhatIfMode"
              },
              {
                "name": "fnd0WhatIfData"
              }
            ]
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "addObjectToRecentList"
          },
          {
            "name": "assignProjects"
          },
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": false,
              "isPinnedFlag": false,
              "relations": "",
              "relatedModified": [
                "{{ctx.locationContext.modelObject}}"
              ],
              "createdObjects": "{{data.createdMainObject.createdObjects}}"
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      }
    },
    "showSchedules": {
      "actionType": "Navigate",
      "navigateTo": "notStarted",
      "navigationParams": {}
    },
    "showScheduleTasks": {
      "actionType": "Navigate",
      "navigateTo": "SMTasksKanbanBoard",
      "navigationParams": {}
    },
    "confirmClaimTask": {
      "actionType": "JSFunction",
      "method": "getTeamName",
      "deps": "js/Saw1ClaimTaskService",
      "inputData": {
        "param": "{{ctx}}"
      },
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.mselected.length === 1 && ctx.state.params.team !== 'allTeams' ",
            "message": "singleClaimTaskMessage"
          },
          {
            "condition": "ctx.mselected.length > 1 && ctx.state.params.team !== 'allTeams'",
            "message": "multipleClaimTasksMessage"
          },
          {
            "condition": "ctx.mselected.length === 1 && ctx.state.params.team === 'allTeams'",
            "message": "singleClaimTaskForAllTeamsMessage"
          },
          {
            "condition": "ctx.mselected.length > 1 &&  ctx.state.params.team === 'allTeams'",
            "message": "multipleClaimTasksForAllTeamsMessage"
          }
        ]
      }
    },
    "claimTaskAction": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagementAw-2019-06-ScheduleManagementAw",
      "method": "claimAssignments",
      "inputData": {
        "claimAssignmentsData": "{{function:getClaimAssignments}}"
      },
      "events": {
        "success": [
          {
            "name": "primaryWorkarea.reset"
          },
          {
            "name": "unRegisterConext"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "schSoaErrorFailureMsg"
          }
        ]
      },
      "deps": "js/Saw1ClaimTaskService"
    },
    "saw1SchTaskDeliverablesAction": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Saw1SchTaskDeliverables",
        "location": "aw_toolsAndInfo",
        "context": null,
        "push": false,
        "closeWhenCommandHidden": false,
        "config": {
          "width": "WIDE"
        }
      }
    },
    "unRegisterCommandContext": {
      "actionType": "JSFunction",
      "method": "unRegisterCommandContext",
      "deps": "js/Saw1ClaimTaskService"
    },
    "saw1OpenKanbanDisplayLimitPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Saw1KanbanDisplayLimit",
        "location": "aw_toolsAndInfo"
      }
    },
    "copyObjectDelegate": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "getViewModelObjectsToCopy"
        },
        {
          "action": "copyObjectsToClipboard"
        }
      ]
    },
    "getViewModelObjectsToCopy": {
      "actionType": "JSFunction",
      "method": "getSelectedObjects",
      "deps": "js/userListService",
      "outputData": {
        "objectsToCopy": ""
      }
    },
    "copyObjectsToClipboard": {
      "actionType": "Copy",
      "method": "copyUrlToClipboard",
      "inputData": {
        "objectToCopy": "{{data.objectsToCopy}}",
        "copyType": "Object"
      },
      "actionMessages": {
        "success": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "copySingleTaskSuccessful"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "copyMultipleTasksSuccessful"
          }
        ]
      }
    },
    "validateScheduleTaskPaste": {
      "actionType": "JSFunction",
      "method": "checkScheduleTask",
      "deps": "js/Saw1CommandHelper",
      "inputData": {
        "ctx": "{{ctx}}"
      },
      "events": {
        "success": [
          {
            "name": "pasteScheduleTaskOperation"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "errorCode=='errMsgForScheduleTask'",
            "message": "scheduleTaskErrorMessage"
          },
          {
            "condition": "errorCode=='errMsgForSchSummaryTask'",
            "message": "errMsgForSchSummaryTask"
          }
        ]
      }
    },
    "addSchedulesPanelAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "saw1AddRemoveSchedulesProgramView.openAddSchPrgViewPanel"
          }
        ]
      }
    },
    "goToGivenDate": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "Saw1ResourceChartGoTo",
          "clickOutsideToClose": false,
          "placement": "bottom-start",
          "hasCloseButton": true
        }
      }
    },
    "toggleToAllSchedules": {
      "actionType": "JSFunction",
      "method": "toggleToAllSchedules",
      "deps": "js/Saw1ResourceChartService",
      "inputData": {
        "ctx": "{{ctx}}",
        "data": "{{data}}"
      },
      "outputData": {
        "ctx.isAllSchedules": ""
      },
      "events": {
        "success": [
          {
            "name": "Saw1ResourceChart.ApplyDate",
            "eventData": {
              "newStartDate": "{{ctx.twoWeeksDate}}",
              "radioSelection": "{{data.workloadRadio.dbValue}}"
            }
          }
        ]
      }
    },
    "saw1ChangeSplitPanelOff": {
      "actionType": "JSFunction",
      "method": "changeSplitPanelLocation",
      "deps": "js/Saw1SplitPanelService",
      "inputData": {
        "location": "off",
        "commandContext": "{{commandContext}}"
      },
      "events": {
        "success": [
          {
            "name": "Saw1ResourceChart.ReloadResourceChartByTwoWeeksEvent"
          }
        ]
      }
    },
    "saw1ChangeSplitPanelBottom": {
      "actionType": "JSFunction",
      "method": "changeSplitPanelLocation",
      "deps": "js/Saw1SplitPanelService",
      "inputData": {
        "location": "bottom",
        "commandContext": "{{commandContext}}"
      },
      "events": {
        "success": [
          {
            "name": "Saw1ResourceChart.ReloadResourceChartByTwoWeeksEvent"
          }
        ]
      }
    },
    "saw1ChangeSplitPanelRight": {
      "actionType": "JSFunction",
      "method": "changeSplitPanelLocation",
      "deps": "js/Saw1SplitPanelService",
      "inputData": {
        "location": "right",
        "commandContext": "{{commandContext}}"
      },
      "events": {
        "success": [
          {
            "name": "Saw1ResourceChart.ReloadResourceChartByTwoWeeksEvent"
          }
        ]
      }
    },
    "jumpToNextWeek": {
      "actionType": "JSFunction",
      "method": "setTwoWeeksDate",
      "deps": "js/Saw1ResourceChartService",
      "inputData": {
        "ctx": "{{ctx}}",
        "isNextWeek": true
      },
      "outputData": {
        "ctx.twoWeeksDate": ""
      },
      "events": {
        "success": [
          {
            "name": "Saw1ResourceChart.ReloadResourceChartByTwoWeeksEvent"
          }
        ]
      }
    },
    "jumpToPreviousWeek": {
      "actionType": "JSFunction",
      "method": "setTwoWeeksDate",
      "deps": "js/Saw1ResourceChartService",
      "inputData": {
        "ctx": "{{ctx}}",
        "isPreviouseWeek": false
      },
      "outputData": {
        "ctx.twoWeeksDate": ""
      },
      "events": {
        "success": [
          {
            "name": "Saw1ResourceChart.ReloadResourceChartByTwoWeeksEvent"
          }
        ]
      }
    },
    "jumpToToday": {
      "actionType": "JSFunction",
      "method": "setTwoWeeksDate",
      "deps": "js/Saw1ResourceChartService",
      "inputData": {
        "ctx": "{{ctx}}"
      },
      "outputData": {
        "ctx.twoWeeksDate": ""
      },
      "events": {
        "success": [
          {
            "name": "Saw1ResourceChart.ReloadResourceChartByTwoWeeksEvent"
          },
          {
            "name": "hideGoToOptionsPopup"
          }
        ]
      }
    },
    "activateExportToExcelFilePanelTCB": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0ExportToExcel",
        "location": "aw_toolsAndInfo",
        "context": {
          "providerName": "{{data.commandContext.tableDataProviderName}}",
          "dataProvider": "{{data.commandContext.dataProvider}}",
          "columnProvider": "{{data.commandContext.clientScopeURI}}",
          "searchCriteria": "{{data.commandContext.searchCriteria}}",
          "displayTitle": "{{data.commandContext.displayTitle}}"
        }
      }
    },
    "expandBelow": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "scheduleNavigationTree.expandBelow",
            "eventData": {
              "node": "{{commandContext.searchState.pwaSelection[0]}}"
            }
          }
        ]
      }
    },
    "collapseBelow": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "scheduleNavigationTree.collapseBelow",
            "eventData": {
              "node": "{{commandContext.searchState.pwaSelection[0]}}"
            }
          }
        ]
      }
    },
    "saw1OpenInScheduleContextAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{ctx.selected}}",
          "path": "props.schedule_tag.dbValues[0]"
        },
        "c_uid": {
          "$adapt": "{{ctx.selected}}",
          "path": "uid"
        },
        "pageId": "tc_xrt_ScheduleGantt"
      }
    },
    "updateTaskTreeNodePositionAction": {
      "actionType": "JSFunction",
      "method": "updateTaskTreeNodePosition",
      "inputData": {
        "moveRequests": "{{data.moveRequests}}"
      },
      "deps": "js/scheduleNavigationTreeEditService"
    },
    "Saw1SubscribeObject": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Saw1SubscribeSingleObjectEvent",
            "condition": "(ctx.mselected && ctx.mselected.length === 1)"
          },
          {
            "name": "Saw1SubscribeMultipleObjectEvent",
            "condition": "(ctx.mselected && ctx.mselected.length > 1)"
          }
        ]
      }
    },
    "Saw1subscribeSingleObject": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-Notification-2015-03-SubscriptionManagement",
      "method": "findSubscriptions",
      "inputData": {
        "input": {
          "target": {
            "uid": "{{ctx.selected.uid}}",
            "type": "{{ctx.selected.type}}"
          }
        }
      },
      "outputData": {
        "subscriptions": "{{function:getExistingSubscription}}"
      },
      "events": {
        "success": [
          {
            "name": "Saw1ListSubscriptions",
            "condition": "subscriptions.length>0"
          },
          {
            "name": "Saw1ActivateCreatePanel",
            "condition": "subscriptions.length <= 0"
          }
        ]
      },
      "deps": "js/Saw1NotificationService"
    },
    "Saw1ListExistingSubscription": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Saw1Subscribe",
        "location": "aw_toolsAndInfo",
        "context": {
          "activeView": "Saw1SubscribeSub"
        },
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "Saw1LoadSubscriptionCreatePanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Saw1Subscribe",
        "location": "aw_toolsAndInfo",
        "context": {
          "activeView": "Saw1CreateSubscription"
        },
        "config": {
          "isPinUnpinEnabled": true
        }
      }
    },
    "Saw1AddFollowers": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "addFollowers.openUserPickerPanel"
          }
        ]
      }
    },
    "Saw1RemoveFollower": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Saw1RemoveFollowerCmdActionEvent"
          }
        ]
      }
    },
    "Saw1AddSubscription": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "awPanel.navigate",
            "eventData": {
              "destPanelId": "Saw1CreateSubscription",
              "isolateMode": false,
              "recreatePanel": true,
              "supportGoBack": false
            }
          }
        ]
      }
    },
    "Saw1DeactivateSubscription": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2022-06-ScheduleManagement",
      "method": "createOrUpdateNotificationRules",
      "deps": "js/Saw1NotificationService",
      "inputData": {
        "notificationRuleInfos": "{{function:getDeActivateCommandInput}}"
      },
      "outputData": {
        "partialErorrs": "partialErrors"
      },
      "events": {
        "success": [
          {
            "name": "clearSelectionFromExistingSubscriptions"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "subScriptionErrorMessage",
            "condition": "data.partialErorrs"
          }
        ]
      }
    },
    "Saw1ActivateSubscription": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2022-06-ScheduleManagement",
      "method": "createOrUpdateNotificationRules",
      "deps": "js/Saw1NotificationService",
      "inputData": {
        "notificationRuleInfos": "{{function:getActivateCommandInput}}"
      },
      "events": {
        "success": [
          {
            "name": "clearSelectionFromExistingSubscriptions"
          }
        ]
      },
      "outputData": {
        "partialErorrs": "partialErrors"
      },
      "actionMessages": {
        "failure": [
          {
            "message": "subScriptionErrorMessage",
            "condition": "data.partialErorrs"
          }
        ]
      }
    },
    "Saw1DeleteSubscriptionAction": {
      "actionType": "TcSoaService",
      "serviceName": "ProjectManagement-2007-06-ScheduleManagement",
      "method": "deleteNotificationRules",
      "deps": "js/Saw1NotificationService",
      "inputData": {
        "notificationRuleContainer": "{{function:getDeleteNotificationSOAInput}}"
      },
      "events": {
        "success": [
          {
            "name": "clearSelectionFromExistingSubscriptions"
          }
        ]
      },
      "outputData": {
        "partialErorrs": "partialErrors"
      },
      "actionMessages": {
        "failure": [
          {
            "message": "subScriptionErrorMessage",
            "condition": "data.partialErorrs"
          }
        ]
      }
    },
    "Saw1EditSubscriptionAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "awPanel.navigate",
            "eventData": {
              "destPanelId": "Saw1CreateSubscription",
              "isolateMode": false,
              "recreatePanel": true,
              "supportGoBack": false,
              "subscriptionVMOToUpdate": "{{commandContext.dataProviders.existingSubscription.selectedObjects[0]}}"
            }
          }
        ]
      }
    },
    "Saw1EventAddCellCmdAction": {
      "actionType": "JSFunction",
      "method": "addToEventConfig",
      "deps": "js/Saw1NotificationService"
    },
    "Saw1EventRemoveCellCmdAction": {
      "actionType": "JSFunction",
      "method": "removeFromEventConfig",
      "deps": "js/Saw1NotificationService"
    },
    "clearSelectionFromExistingSubscriptions": {
      "actionType": "JSFunction",
      "method": "clearSelectionFromExistingSubscriptions",
      "inputData": {
        "commandContext": "{{commandContext}}"
      },
      "deps": "js/Saw1NotificationService"
    },
    "saw1OpenPeoplePickerForTaskAssignment": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "taskAssignment.openUserPickerPanel",
            "eventData": {
              "selectedProfile": "{{commandContext.vmo}}",
              "commandContext": "{{commandContext}}"
            }
          }
        ]
      }
    },
    "Saw1PasteResourceFromPeoplePickerAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "saw1.addTaskAssignment",
            "eventData": {
              "commandContext": "{{commandContext}}",
              "selected": "{{commandContext.selectedUsers}}"
            }
          }
        ]
      }
    },
    "removeUsersSchMemberAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "removeScheduleMembers.removeUsers"
          }
        ]
      }
    },
    "openAddSchMemberPeoplePickerPanel": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "addScheduleMembers.openUserPickerPanel"
          }
        ]
      }
    },
    "Saw1PasteSchMemberFromPeoplePickerAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "saw1.pasteSchedueMembersFromPeoplePicker",
            "eventData": {
              "commandContext": "{{commandContext}}"
            }
          }
        ]
      }
    },
    "openScheduleSubscriptionChangeOwnerPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Saw1SubscriptionChangeOwner",
        "location": "aw_toolsAndInfo",
        "context": "{{commandContext}}"
      }
    }
  },
  "functions": {
    "getObjectsContainer": {
      "functionName": "getObjects",
      "parameters": [
        "{{ctx}}"
      ]
    },
    "cutTaskOperation": {
      "functionName": "cutTaskOperation",
      "parameters": []
    },
    "getDependencies": {
      "functionName": "getDependencies",
      "parameters": []
    },
    "getSchedule": {
      "functionName": "getSchedule",
      "parameters": []
    },
    "processSelectedTasksToDelete": {
      "functionName": "processSelectedTasksToDelete",
      "parameters": []
    },
    "getDetachScheduleContainer": {
      "functionName": "getDetachScheduleContainer",
      "parameters": [
        "{{data}}"
      ]
    },
    "getSelectedTasks": {
      "functionName": "getSelectedTasks",
      "parameters": []
    },
    "getSelectedObjects": {
      "functionName": "getSelectedObjects",
      "parameters": []
    },
    "getScheduleUid": {
      "functionName": "getScheduleUid",
      "parameters": []
    },
    "pasteScheduleTasks": {
      "functionName": "pasteScheduleTasks",
      "parameters": [
        "{{ctx}}"
      ]
    },
    "getParentTaskObject": {
      "functionName": "getParentTaskObject",
      "parameters": [
        "{{commandContext.searchState.pwaSelection}}"
      ]
    },
    "getUser": {
      "functionName": "getUser",
      "parameters": []
    },
    "getClaimAssignments": {
      "functionName": "getClaimAssignments",
      "parameters": [
        "{{ctx}}"
      ]
    },
    "getProgramViewConfig": {
      "functionName": "getProgramViewConfig",
      "parameters": [
        "{{ctx}}"
      ]
    },
    "parseProgramViewSOAResponse": {
      "functionName": "parseProgramViewSOAResponse",
      "parameters": [
        "{{ctx}}",
        "{{data}}"
      ]
    },
    "getReferenceTaskUid": {
      "functionName": "getReferenceTaskUid",
      "parameters": [
        "{{data.eventData}}"
      ]
    },
    "getParentTaskUid": {
      "functionName": "getParentTaskUid",
      "parameters": [
        "{{data.eventData}}",
        "{{ctx}}"
      ]
    },
    "getProgramViewObject": {
      "functionName": "getProgramViewObject",
      "parameters": [
        "{{ctx}}"
      ]
    },
    "getPropertiesInputUIDs": {
      "functionName": "getPropertiesInputUIDs",
      "parameters": [
        "{{ctx.mselected}}"
      ]
    },
    "getSetPropertiesInputData": {
      "functionName": "getSetPropertiesInputData",
      "parameters": [
        "{{ctx}}"
      ]
    },
    "getStartDate": {
      "functionName": "getStartDate",
      "parameters": [
        "{{ctx.resourceLoadTableData}}",
        "{{ctx}}"
      ]
    },
    "getWorkload": {
      "functionName": "getWorkload",
      "parameters": [
        "{{ctx.resourceLoadTableData}}",
        "{{ctx}}"
      ]
    },
    "loadTableData": {
      "functionName": "loadTableData",
      "parameters": [
        "{{ctx.resourceLoadTableData}}",
        "{{ctx}}"
      ]
    },
    "getDeActivateCommandInput": {
      "functionName": "getActivateDeActivateCommandInput",
      "parameters": [
        "{{commandContext.dataProviders.existingSubscription.selectedObjects}}",
        "DeActivate"
      ]
    },
    "getActivateCommandInput": {
      "functionName": "getActivateDeActivateCommandInput",
      "parameters": [
        "{{commandContext.dataProviders.existingSubscription.selectedObjects}}",
        "Activate"
      ]
    },
    "getDeleteNotificationSOAInput": {
      "functionName": "getDeleteNotificationSOAInput",
      "parameters": [
        "{{commandContext.dataProviders.existingSubscription.selectedObjects}}"
      ]
    },
    "processFilterSearchOutput": {
      "functionName": "processOutput",
      "parameters": [
        "{{data}}",
        "{{commandContext.searchState}}"
      ]
    }
  },
  "ctx": {
    "locationContext": null,
    "mselected": null,
    "pselected": null,
    "selected": null,
    "awClipBoardProvider": null,
    "sublocation.clientScopeURI": null,
    "tcSessionData": null,
    "visibleServerCommands": null
  },
  "conditions": {
    "saw1AssignDeliverableGrpCmdVisibility": {
      "expression": "ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1 "
    },
    "isShowTaskPropertiesCmdEnabled": {
      "expression": "conditions.isScheduleNavigationSublocation && commandContext.scheduleNavigationContext.baselineUids.length === 0"
    },
    "Saw1AddBaselineCellCmdVisivibility": {
      "expression": "ctx.scheduleNavigationCtx && ctx.scheduleNavigationCtx.selectedBaselines &&  ctx.scheduleNavigationCtx.selectedBaselines.length !== 2"
    },
    "Saw1ReplaceBaselineCellCmdVisivibility": {
      "expression": "ctx.scheduleNavigationCtx && ctx.scheduleNavigationCtx.selectedBaselines &&  ctx.scheduleNavigationCtx.selectedBaselines.length > 0"
    },
    "hasDependencyCreateInput": {
      "expression": "data.dependencyCreateInfo"
    },
    "isScheduleNavigationTreeGrid": {
      "expression": "commandContext.gridId === 'scheduleNavigationTree'"
    },
    "isScheduleNavigationSublocation": {
      "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'com.siemens.splm.client.schmgt:ScheduleNavigationSubLocation'"
    },
    "isPlanNavigationSublocation": {
      "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'com.siemens.splm.client.prgplanning:PlanNavigationSubLocation'"
    },
    "isStructureEditSupported": {
      "expression": "commandContext.scheduleNavigationContext.value.isStructureEditSupported === true"
    },
    "isGanttChartVisible": {
      "expression": "!(ctx.preferences.AW_SubLocation_ScheduleNavigationSubLocation_ShowGanttChart && ctx.preferences.AW_SubLocation_ScheduleNavigationSubLocation_ShowGanttChart[0] === 'false')"
    },
    "isNothingSelectedInTree": {
      "expression": "( !commandContext.searchState.pwaSelection || commandContext.searchState.pwaSelection.length === 0 ) && ctx.mselected.length === 1 && ctx.mselected[0].uid === commandContext.openedObject.uid"
    },
    "isSingleSelectionInTree": {
      "expression": "commandContext.searchState.pwaSelection.length === 1 && ctx.pselected.uid === commandContext.openedObject.uid && commandContext.searchState.pwaSelection[0].levelNdx >= 0"
    },
    "isMultiSelectionInTree": {
      "expression": "commandContext.searchState.pwaSelection.length >= 1 && ctx.pselected.uid === commandContext.openedObject.uid && commandContext.searchState.pwaSelection[0].levelNdx >= 0"
    },
    "isTopScheduleSummaryNodeNotSelected": {
      "expression": {
        "$source": {
          "$adapt": "commandContext.searchState.pwaSelection"
        },
        "$query": {
          "$all": {
            "$source": "uid",
            "$query": {
              "$ne": "{{commandContext.openedObject.props.fnd0SummaryTask.dbValue}}"
            }
          }
        }
      }
    },
    "isMultiSelectScheduleTaskInTree": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.searchState.pwaSelection.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": {
              "$adapt": "commandContext.searchState.pwaSelection"
            },
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "ScheduleTask"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "isSaw1QuickCreateCmdEnabled": {
      "expression": "conditions.isStructureEditSupported && (conditions.isNothingSelectedInTree || (conditions.isSingleSelectionInTree && ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1 ))"
    },
    "createSchTaskCmdVisibility": {
      "expression": "conditions.isScheduleNavigationSublocation && conditions.isStructureEditSupported && (conditions.isNothingSelectedInTree || (conditions.isSingleSelectionInTree && ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1 ))"
    },
    "isSaw1IndentTaskCmdEnabled": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isStructureEditSupported",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isMultiSelectionInTree",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isMultiSelectScheduleTaskInTree",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": {
              "$adapt": "ctx.mselected"
            },
            "$query": {
              "$all": {
                "$source": "props.task_type.dbValues[0]",
                "$query": {
                  "$ne": "6"
                }
              }
            }
          }
        ]
      }
    },
    "isSaw1OutdentTaskCmdEnabled": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isStructureEditSupported",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isMultiSelectionInTree",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isMultiSelectScheduleTaskInTree",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": {
              "$adapt": "ctx.mselected"
            },
            "$query": {
              "$all": {
                "$source": "props.task_type.dbValues[0]",
                "$query": {
                  "$ne": "6"
                }
              }
            }
          }
        ]
      }
    },
    "isSaw1WorkflowTasksOnGanttCmdEnabled": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isMultiSelectionInTree",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "conditions.isMultiSelectScheduleTaskInTree",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": {
              "$adapt": "ctx.mselected"
            },
            "$query": {
              "$all": {
                "$source": "props.task_type.dbValues[0]",
                "$query": {
                  "$notin": [
                    "2",
                    "3",
                    "6"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "isSaw1InsertSubScheduleOnGanttCmdEnabled": {
      "expression": "conditions.isStructureEditSupported && conditions.isSingleSelectionInTree && ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1"
    },
    "isSaw1DeleteTaskOnGanttCmdEnabled": {
      "expression": {
        "$or": [
          {
            "$and": [
              {
                "$source": "conditions.isStructureEditSupported",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isMultiSelectionInTree",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "conditions.isTopScheduleSummaryNodeNotSelected",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": {
                  "$adapt": "commandContext.searchState.pwaSelection"
                },
                "$query": {
                  "$all": {
                    "$source": "modelType.typeHierarchyArray",
                    "$query": {
                      "$in": [
                        "ScheduleTask",
                        "Fnd0ProxyTask"
                      ]
                    }
                  }
                }
              }
            ]
          },
          {
            "$source": {
              "$adapt": "commandContext.searchState.pwaSelection"
            },
            "$query": {
              "$all": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "TaskDependency"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "expandCommandVisiblity": {
      "expression": "conditions.isScheduleNavigationSublocation && conditions.isStructureEditSupported && conditions.isSingleSelectionInTree && ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1 && (ctx.selected.props.task_type.dbValues[0] === '2' || ctx.selected.props.task_type.dbValues[0] === '3' || ctx.selected.props.task_type.dbValues[0] === '6')"
    },
    "createProxySchTaskCmdVisibility": {
      "expression": "conditions.isScheduleNavigationSublocation && conditions.isStructureEditSupported && (conditions.isNothingSelectedInTree || (conditions.isSingleSelectionInTree && ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1 ))"
    },
    "createMirrorAsProxyTaskCmdVisibility": {
      "expression": "conditions.isScheduleNavigationSublocation && conditions.isStructureEditSupported && conditions.isSingleSelectionInTree && ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1 && ctx.scheduleNavigationCtx.selectedTaskSchedule.props.schedule_type.dbValues[0] !== '2' && ctx.scheduleNavigationCtx.selectedTaskSchedule.props.schedule_type.dbValues[0] !== '0'"
    },
    "isPageVisibility": {
      "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf('Schedule') > -1 && ( ctx.mselected.length > 1 || (ctx.mselected.length === 1 && (ctx.selected.props.owning_user.dbValues[0] === ctx.userSession.props.user.dbValues[0] ))))"
    },
    "isDaySelected": {
      "expression": "ctx.preferences.AWC_SM_Gantt_Zoom_Level[0] ==='day'"
    },
    "isWeekSelected": {
      "expression": "ctx.preferences.AWC_SM_Gantt_Zoom_Level[0] ==='week'"
    },
    "isMonthSelected": {
      "expression": "ctx.preferences.AWC_SM_Gantt_Zoom_Level[0] ==='month'"
    },
    "isYearSelected": {
      "expression": "ctx.preferences.AWC_SM_Gantt_Zoom_Level[0] ==='year'"
    },
    "isDefaultSelected": {
      "expression": "!ctx.preferences.AWC_SM_Gantt_Zoom_Level[0] || ctx.preferences.AWC_SM_Gantt_Zoom_Level[0] === 'unit_of_time_measure'"
    },
    "startWhatIfVisibility": {
      "expression": "conditions.isScheduleNavigationSublocation && ( ctx.selected.props.fnd0Schmgt_Lock.dbValues[0] === null || ctx.selected.props.fnd0Schmgt_Lock.dbValues[0] === '' ) && (ctx.selected.modelType.typeHierarchyArray.indexOf('Schedule') > -1 && ctx.selected.props.checked_out.dbValues[0] !== 'Y')"
    },
    "promoteWhatIfVisibility": {
      "expression": "conditions.isScheduleNavigationSublocation && ctx.selected.props.fnd0Schmgt_Lock && ctx.selected.props.fnd0Schmgt_Lock.dbValues[0] === ctx.user.uid"
    },
    "cancelWhatIfVisibility": {
      "expression": "conditions.isScheduleNavigationSublocation && ctx.selected.props.fnd0Schmgt_Lock && ctx.selected.props.fnd0Schmgt_Lock.dbValues[0] === ctx.user.uid"
    },
    "Saw1FullScreenCmdCondition": {
      "expression": "conditions.isScheduleNavigationSublocation && ctx.ViewModeContext.ViewModeContext === 'TreeView' && !ctx.fullscreenDisabled && !ctx.hostingFullscreenDisabled && conditions.AwFullScreenEnterCmdCondition"
    },
    "Saw1AssignOrUnassignResourcesCommandVisible": {
      "expression": "!conditions.isScheduleNavigationSublocation && (commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1 && (commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Tasks'  || commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Tasks' ) || ( conditions.assignResourceCommandVisibility ) )"
    },
    "Saw1DesignatedDisciplineCommandVisible": {
      "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1 && (ctx.state.params.pageId === 'tc_xrt_Tasks' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Tasks' || conditions.isScheduleNavigationSublocation))"
    },
    "Saw1RevertToDisciplineCommandVisible": {
      "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1 && (ctx.state.params.pageId === 'tc_xrt_Tasks' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Tasks' || conditions.isScheduleNavigationSublocation))"
    },
    "Saw1RevertToDisciplineMemberCommandVisible": {
      "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleMember') > -1 && (ctx.state.params.pageId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview' ) && ctx.mselected.length === 1) && ctx.selected.props.fnd0MemberTypeString.uiValues[0] === data.i18n.user"
    },
    "removeDeliverablesVisibility": {
      "expression": "ctx.visibleServerCommands.Saw1RemoveSchDeliverable && (commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview')"
    },
    "createScheduleCommandVisibility": {
      "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'mySchedules' && !ctx.selected && ctx.locationContext['ActiveWorkspace:SubLocation'] !== 'programViews'"
    },
    "createScheduleFromTemplateCmdVisibility": {
      "expression": "ctx.visibleServerCommands.Saw1CreateScheduleFromTemplate && ctx.locationContext['ActiveWorkspace:SubLocation'] !== 'programViews'"
    },
    "createScheduleCommandActive": {
      "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'mySchedules' && ctx.locationContext['ActiveWorkspace:SubLocation'] !== 'programViews'"
    },
    "insertSubScheduleCommandVisibility": {
      "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf( 'ScheduleTask' ) > -1 && (ctx.state.params.pageId === 'tc_xrt_Tasks' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Tasks')) && ctx.mselected.length === 1"
    },
    "workflowTasksCommandVisibility": {
      "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf( 'ScheduleTask' ) > -1 && (ctx.state.params.pageId === 'tc_xrt_Tasks' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Tasks'))"
    },
    "insertSubScheduleCommandActive": {
      "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf( 'ScheduleTask' ) > -1 && (ctx.state.params.pageId === 'tc_xrt_Tasks' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Tasks'))"
    },
    "removeAssignmentsCommandVisibility": {
      "expression": "(ctx.locationContext.modelObject.modelType.typeHierarchyArray.indexOf('Schedule') > -1 && ctx.selected.type === 'ScheduleMember' && ctx.state.params.pageId === 'tc_xrt_Overview' || (commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview') && ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleMember') > -1 )"
    },
    "shiftScheduleCommandVisibility": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('Schedule') > -1"
    },
    "removeSchMemberCmdVisibility": {
      "expression": "ctx.pselected.modelType.typeHierarchyArray.indexOf('Schedule') > -1 && ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleMember') > -1 && (ctx.state.params.pageId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview')"
    },
    "effectivityVisibilityDelegate": {
      "expression": "conditions.Saw1KanbanDisplayLimitVisibility && ctx.visibleServerCommands.Aps1Effectivity"
    },
    "deleteDependencyVisibility": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('TaskDependency') > -1 && (commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview')"
    },
    "deleteScheduleCommandVisibility": {
      "expression": "ctx.visibleServerCommands.Saw1DeleteSchedule && ctx.locationContext['ActiveWorkspace:SubLocation'] === 'notStarted'"
    },
    "saw1OpenConditionVisible": {
      "expression": "conditions.cmdOpenBaseVisibleCondition && ( ctx.selected.type === 'SchDeliverable' || ctx.selected.type ==='SchTaskDeliverable' || ctx.selected.modelType.typeHierarchyArray.indexOf('SchDeliverable') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('SchTaskDeliverable') > -1 )"
    },
    "saw1OpenConditionActive": {
      "expression": "( (ctx.selected.type === 'SchDeliverable' && ctx.selected.props.deliverable_inst.dbValues[0] !== '') || (ctx.selected.type ==='SchTaskDeliverable' && ctx.selected.props.fnd0DeliverableInstance.dbValues[0] !== '') || (ctx.selected.modelType.typeHierarchyArray.indexOf('SchDeliverable') > -1 && ctx.selected.props.deliverable_inst.dbValues[0] !== '') || (ctx.selected.modelType.typeHierarchyArray.indexOf('SchTaskDeliverable') > -1 && ctx.selected.props.fnd0DeliverableInstance.dbValues[0] !== '') )"
    },
    "openBaselineObjectCellActive": {
      "expression": "conditions.cmdAwp0ShowObjectCellForObjectNavigationBaseVisibleCondition && ( commandContext.vmo.props.activeschbaseline_tag.dbValues[0] !== '' && commandContext.vmo.props.is_baseline.dbValues[0] === '1')"
    },
    "openProgramViewCellActive": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'ProgramView' ) > -1"
    },
    "openBaselineShowObjectActive": {
      "expression": "conditions.cmdOpenInNewTabCommandActive && ( ctx.selected.props.activeschbaseline_tag.dbValues[0] !== '' && ctx.selected.props.is_baseline.dbValues[0] === '1')"
    },
    "openBaselineInNewTabActive": {
      "expression": "conditions.cmdOpenInNewTabCommandActive && ( ctx.selected.props.activeschbaseline_tag.dbValues[0] !== '' && ctx.selected.props.is_baseline.dbValues[0] === '1')"
    },
    "openBaselineInNewWindowActive": {
      "expression": "conditions.cmdOpenInNewTabCommandActive && ( ctx.selected.props.activeschbaseline_tag.dbValues[0] !== '' && ctx.selected.props.is_baseline.dbValues[0] === '1')"
    },
    "openInNewTabActive": {
      "expression": "conditions.cmdOpenInNewTabCommandActive && (ctx.selected.props.fnd0DeliverableInstance.dbValues[0] !== '' || ctx.selected.props.deliverable_inst.dbValues[0] !== '') && ( ctx.selected.modelType.typeHierarchyArray.indexOf('SchDeliverable') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('SchTaskDeliverable') > -1 ) "
    },
    "openInNewWindowActive": {
      "expression": "conditions.cmdOpenInNewTabCommandActive && (ctx.selected.props.fnd0DeliverableInstance.dbValues[0] !== '' || ctx.selected.props.deliverable_inst.dbValues[0] !== '') && ( ctx.selected.modelType.typeHierarchyArray.indexOf('SchDeliverable') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('SchTaskDeliverable') > -1 ) "
    },
    "isEventHandlerSchedMgmtNotification": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.selected.type",
            "$query": {
              "$eq": "ImanSubscription"
            }
          },
          {
            "$source": "ctx.mselected.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": {
              "$adapt": "ctx.mselected"
            },
            "$query": {
              "$and": [
                {
                  "$source": "modelType.typeHierarchyArray",
                  "$query": {
                    "$in": [
                      "ImanSubscription"
                    ]
                  }
                },
                {
                  "$source": "props.event_handler.uiValue",
                  "$query": {
                    "$in": [
                      "TC_SCHMGT_Notifications"
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "Saw1RoleSelectCommandVisibility": {
      "expression": "(ctx.locationContext['ActiveWorkspace:SubLocation'] === 'notStarted' || ctx.locationContext['ActiveWorkspace:SubLocation'] === 'inProgress' || ctx.locationContext['ActiveWorkspace:SubLocation'] === 'lateStart' || ctx.locationContext['ActiveWorkspace:SubLocation'] === 'lateFinish' || ctx.locationContext['ActiveWorkspace:SubLocation'] === 'upcoming' || ctx.locationContext['ActiveWorkspace:SubLocation'] === 'complete' || ctx.locationContext['ActiveWorkspace:SubLocation'] === 'closedAborted' || ctx.locationContext['ActiveWorkspace:SubLocation'] === 'allSch') && (conditions.isSchedulesSearchLocation)"
    },
    "isCoordinatorRoleSelected": {
      "expression": "commandContext.searchState.criteria.privilege === undefined || commandContext.searchState.criteria.privilege === 'coordinator'"
    },
    "isParticipantRoleSelected": {
      "expression": "commandContext.searchState.criteria.privilege === 'participant'"
    },
    "isObserverRoleSelected": {
      "expression": "commandContext.searchState.criteria.privilege === 'observer'"
    },
    "saw1FollowCommandActiveForTaskAndSchActive": {
      "expression": {
        "$and": [
          {
            "$or": [
              {
                "$source": "ctx.selected",
                "$query": {
                  "$all": {
                    "$source": "modelType.typeHierarchyArray",
                    "$query": {
                      "$in": [
                        "Schedule",
                        "ScheduleTask"
                      ]
                    }
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "saw1FollowCommandActiveForTaskAndSchVisible": {
      "expression": "(ctx.tcSessionData.tcMajorVersion > 14 || (ctx.tcSessionData.tcMajorVersion === 14 && (ctx.tcSessionData.tcMinorVersion >= 1)))"
    },
    "saw1FollowCommandActive": {
      "expression": {
        "$and": [
          {
            "$or": [
              {
                "$source": "ctx.selected",
                "$query": {
                  "$all": {
                    "$source": "modelType.typeHierarchyArray",
                    "$query": {
                      "$in": [
                        "SchDeliverable",
                        "SchTaskDeliverable",
                        "ScheduleMember",
                        "ResourceAssignment",
                        "TaskDependency",
                        "Fnd0ProxyTask"
                      ]
                    }
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "saw1UnassignResourceCommandVisible": {
      "expression": "ctx.pselected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1 && ((ctx.selected.modelType.typeHierarchyArray.indexOf('User') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Discipline') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Group') > -1  || ctx.selected.modelType.typeHierarchyArray.indexOf('Role') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('ResourcePool') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('ResourceAssignment') > -1) && (commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview' || conditions.isScheduleNavigationSublocation))"
    },
    "saw1UnassignResourceCommandActive": {
      "expression": "ctx.pselected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1 && ((ctx.selected.modelType.typeHierarchyArray.indexOf('User') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Discipline') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Group') > -1  || ctx.selected.modelType.typeHierarchyArray.indexOf('Role') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('ResourcePool') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('ResourceAssignment') > -1) && (commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview' || conditions.isScheduleNavigationSublocation))"
    },
    "deleteTaskVisibility": {
      "expression": "((ctx.selected.modelType.typeHierarchyArray.indexOf( 'ScheduleTask' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Fnd0ProxyTask') > -1)  && (commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Tasks' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Tasks'))"
    },
    "createDependency": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'ScheduleTask' ) > -1 && ctx.awClipBoardProvider.length > 0 && (ctx.state.params.pageId === 'tc_xrt_Tasks' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Tasks')"
    },
    "isSaw1CreateDependencyOnGanttCmdEnabled": {
      "expression": "conditions.isStructureEditSupported && ctx.selected.modelType.typeHierarchyArray.indexOf( 'ScheduleTask' ) > -1 && ctx.awClipBoardProvider.length > 0"
    },
    "removeTaskDeliverableCommandVisibility": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'SchTaskDeliverable' ) > -1 && ((commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview') || conditions.isScheduleNavigationSublocation)"
    },
    "Saw1GroupCommandVisibility": {
      "expression": "ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf( 'ScheduleTask' ) > -1"
    },
    "Saw1ReplaceRevisionCmdVisibility": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('SchTaskDeliverable') > -1 && ctx.pselected && ctx.mselected.length === 1"
    },
    "Saw1ReplaceLatestRevisionCmdVisibility": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('SchTaskDeliverable') > -1 && ctx.pselected"
    },
    "Saw1ProgramViewFilterVisibility": {
      "expression": "ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf( 'ProgramView' ) > -1"
    },
    "Saw1CreateProgramViewVisibility": {
      "expression": "ctx.state.params.option === 'myProgramViews' || ctx.state.params.option === 'allProgramViews'"
    },
    "saw1ReplaceMemberCommandVisible": {
      "expression": "!conditions.Saw1DesignateDisciplineToMembersCommandVisible && ctx.visibleServerCommands.Saw1ReplaceMember && (commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview')"
    },
    "saw1ReplaceMemberCommandActive": {
      "expression": "!conditions.Saw1DesignateDisciplineToMembersCommandVisible && ctx.visibleServerCommands.Saw1ReplaceMember && (commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview')"
    },
    "Saw1DesignateDisciplineToMembersCommandVisible": {
      "expression": "ctx.visibleServerCommands.Saw1ReplaceMember && ( commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview' ) && ctx.mselected.length === 1 && ctx.selected.props.fnd0MemberTypeString.dbValues[0] === 'Discipline'"
    },
    "saw1ReplaceMemberGroupCommandVisible": {
      "expression": "ctx.visibleServerCommands.Saw1ReplaceMember && ( commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview' ) && ctx.mselected.length === 1 && ctx.selected.props.fnd0MemberTypeString.dbValues[0] === 'Discipline'"
    },
    "Saw1ShowFilterCommandVisibility": {
      "expression": "commandContext.searchState.totalFound > 0 && ( conditions.isSchedulesSearchLocation || conditions.isScheduleTasksSearchLocation ) && ctx.locationContext['ActiveWorkspace:SubLocation'] !== 'programViews' && ctx.locationContext['ActiveWorkspace:SubLocation'] !== 'SMTasksKanbanBoard'"
    },
    "isSchedulesSearchLocation": {
      "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'mySchedules'"
    },
    "isScheduleTasksSearchLocation": {
      "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'myScheduleTasksLocation'"
    },
    "AddScheduleDeliverableCommandVisible": {
      "expression": "ctx.visibleServerCommands.Saw1AddSchDeliverable && (commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview')"
    },
    "Saw1LaunchWorkflowCommandVisibility": {
      "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf( 'ScheduleTask' ) > -1 && (ctx.state.params.pageId === 'tc_xrt_Tasks' || ctx.state.params.pageId === 'tc_xrt_Tasks' || conditions.isScheduleNavigationSublocation))"
    },
    "canShowGanttTaskInfo": {
      "expression": "ctx.showGanttTaskInfo === 'true'"
    },
    "canShowCriticalPath": {
      "expression": "ctx.preferences.SM_View_CriticalPath[0] === 'true'"
    },
    "Saw1AssignScheduleDeliverableCommandVisibility": {
      "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1) && (ctx.state.params.pageId === 'tc_xrt_Tasks' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Tasks' || conditions.isScheduleNavigationSublocation)"
    },
    "Saw1AssignTaskDeliverableCommandVisibility": {
      "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1) && (ctx.state.params.pageId === 'tc_xrt_Tasks' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Tasks' || conditions.isScheduleNavigationSublocation || ctx.sublocation.clientScopeURI === 'SMTasksKanbanBoard')"
    },
    "Saw1NotScheduleTaskCondition": {
      "expression": "(ctx.awClipBoardProvider.length === 1 && !(ctx.awClipBoardProvider[0].modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1))"
    },
    "Saw1ActiveWhenCondition": {
      "expression": "(conditions.isScheduleNavigationSublocation || commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Tasks' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Tasks')"
    },
    "Saw1PasteCommandDelegateVisible": {
      "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1) && ctx.mselected.length === 1 && ctx.awClipBoardProvider.length >= 1 && !(conditions.Saw1NotScheduleTaskCondition)"
    },
    "Saw1CopyCommandDelegateVisible": {
      "expression": "conditions.isScheduleNavigationSublocation && ctx.visibleServerCommands.Awp0Copy && ctx.sublocation.nameToken !== ctx.defaultRoutePath && ctx.mselected && ctx.mselected.length > 0"
    },
    "Saw1CreateScheduleTaskCommandVisibility": {
      "expression": "ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf('Schedule') > -1 && ( commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Tasks' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Tasks' ) && ctx.mselected.length === 1 && ctx.selected.modelType.typeHierarchyArray.indexOf('Fnd0ProxyTask') === -1"
    },
    "assignResourceCommandVisibility": {
      "expression": "(commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview' ||commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview')  &&  ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1"
    },
    "assignResourceOnGanttCommandVisibility": {
      "expression": "conditions.isScheduleNavigationSublocation &&  ctx.selected.modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1"
    },
    "addMemberCommandVisibility": {
      "expression": "((commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Overview' || commandContext.pageContext.secondaryActiveTabId === 'tc_xrt_Overview') && ctx.selected.modelType.typeHierarchyArray.indexOf('Schedule') > -1)"
    },
    "Saw1BaselineScheduleCommandVisibility": {
      "expression": "conditions.isScheduleNavigationSublocation && commandContext.openedObject.modelType.typeHierarchyArray.indexOf('Schedule') > -1 && commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Schedule') > -1"
    },
    "Saw1GanttFiltersCommandVisibility": {
      "expression": "ctx.scheduleNavigationCtx.canShowGanttFilter === true"
    },
    "Saw1SetActiveBaselineCommandVisibility": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('Schedule') > -1 && commandContext.vmo.uid !== ctx.selected.props.activeschbaseline_tag.dbValues[ 0 ]"
    },
    "toggleToAllSchedulesSelectCondition": {
      "expression": "ctx.isAllSchedules"
    },
    "Saw1ViewBaselineCommandVisibility": {
      "expression": "conditions.isScheduleNavigationSublocation && conditions.isGanttChartVisible && commandContext.openedObject.modelType.typeHierarchyArray.indexOf('Schedule') > -1 && commandContext.selectionData.selected[0].modelType.typeHierarchyArray.indexOf('Schedule') > -1"
    },
    "Saw1CutCommandDelegateActive": {
      "expression": "conditions.cutVisibility && ( conditions.isTasksSublocation || conditions.isResourceAssignmentObjectSet || conditions.isTaskDependencyInObjectSet || ctx.selected.modelType.typeHierarchyArray.indexOf( 'SchDeliverable' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'SchTaskDeliverable' ) > -1 )"
    },
    "isResourceAssignmentObjectSet": {
      "expression": "ctx.relationContext && ctx.relationContext.relationInfo && ctx.relationContext.relationInfo[0].relationType === 'ResourceAssignment'"
    },
    "isTaskDependencyInObjectSet": {
      "expression": "ctx.relationContext && ctx.relationContext.relationInfo && ( ctx.relationContext.relationInfo[0].relationType === 'saw1SuccessorDependency' || ctx.relationContext.relationInfo[0].relationType === 'saw1PredecessorDependency')"
    },
    "isTasksSublocation": {
      "expression": "ctx.state.params.pageId === 'tc_xrt_Tasks'|| ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Tasks'"
    },
    "Saw1SaveAsScheduleCmdVisibility": {
      "expression": "ctx.visibleServerCommands.Saw1CreateScheduleFromTemplate"
    },
    "recalculateCommandVisibility": {
      "expression": "commandContext.pageContext.primaryActiveTabId === 'tc_xrt_Tasks' && ctx.selected.modelType.typeHierarchyArray.indexOf('Schedule') > -1 "
    },
    "recalculateOnGanttCommandVisibility": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('Schedule') > -1 "
    },
    "enterTimeCommandVisibility": {
      "expression": "ctx.mselected && ctx.mselected.length === 1 && ctx.mselected[0].modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1  && ( ctx.sublocation.clientScopeURI === 'Saw1NotStartedScheduleTasks'  || ctx.sublocation.clientScopeURI === 'Saw1InProgressScheduleTasks' || ctx.sublocation.clientScopeURI === 'SMTasksKanbanBoard')"
    },
    "timesheetEntryCellCommandVisibility": {
      "expression": "commandContext.vmo.props.process_stage_list.dbValues.length === 0 && commandContext.vmo.props.release_status_list.dbValues.length === 0"
    },
    "saw1ResGraphCommandVisibility": {
      "expression": "ctx.mselected && ctx.mselected.length === 1 && ctx.mselected[0].modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1 && commandContext.vmo.modelType.typeHierarchyArray.indexOf('User') > -1 && ctx.preferences.SM_RESOURCE_GRAPH_VIEWER_ROLE.indexOf(ctx.userSession.props.role_name.dbValues[0]) > -1 && ctx.activeToolsAndInfoCommand.commandId === 'Saw1TaskAssignmentCommandPanel'"
    },
    "Saw1RemoveUserFromTaskAssignmentCommandVisibility": {
      "expression": "ctx.mselected && ctx.mselected.length === 1 && ctx.mselected[0].modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1 && commandContext.vmo.length > 0"
    },
    "claimTaskCommandVisibility": {
      "expression": "ctx.mselected && ctx.mselected.length > 0  && ctx.sublocation.clientScopeURI === 'Saw1TeamScheduleTasks'"
    },
    "Saw1KanbanDisplayLimitVisibility": {
      "expression": "ctx.sublocation.clientScopeURI === 'SMTasksKanbanBoard'"
    },
    "showSchTaskDeliverablesCommandVisibility": {
      "expression": "ctx.mselected.length === 1 && (conditions.isScheduleNavigationSublocation || conditions.isPlanNavigationSublocation) && ((ctx.mselected[0].modelType.typeHierarchyArray.indexOf('ScheduleTask') > -1 && ctx.mselected[0].props.task_type.dbValues[0] !== '6' && ctx.mselected[0].props.saw1DeliverablesCount.dbValues[0] > 0) || ctx.mselected[0].modelType.typeHierarchyArray.indexOf('Fnd0ProxyTask') > -1)"
    },
    "Saw1AddTemplateSectionCmdVisibility": {
      "expression": "commandContext.dataProviders.selectedSchedules.viewModelCollection.loadedVMObjects.length === 0"
    },
    "Saw1RemoveTemplateSectionCmdVisibility": {
      "expression": "commandContext.dataProviders.selectedSchedules.selectedObjects.length === 1"
    },
    "saw1ShowSplitPanelBottomCond": {
      "expression": "commandContext.tasksLocation.value.location === 'bottom'"
    },
    "saw1ShowSplitPanelRightCond": {
      "expression": "commandContext.tasksLocation.value.location === 'right'"
    },
    "saw1ShowSplitPanelOffCond": {
      "expression": "commandContext.tasksLocation.value.location === 'off'"
    },
    "isSaw1RemoveFollowerCmdVisible": {
      "expression": "commandContext.dataProviders.followers_provider.selectedObjects.length> 0 "
    },
    "isActivateSubscriptionCommandActivate": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.dataProviders.existingSubscription.selectedObjects.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "commandContext.dataProviders.existingSubscription.selectedObjects",
            "$query": {
              "$all": {
                "$source": "props.expiration_date.dbValue",
                "$query": {
                  "$gt": 0
                }
              }
            }
          }
        ]
      }
    },
    "isDeActivateSubscriptionCommandActivate": {
      "expression": {
        "$and": [
          {
            "$source": "commandContext.dataProviders.existingSubscription.selectedObjects.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "commandContext.dataProviders.existingSubscription.selectedObjects",
            "$query": {
              "$all": {
                "$source": "props.expiration_date.dbValue",
                "$query": {
                  "$eq": 0
                }
              }
            }
          }
        ]
      }
    },
    "isEditSubscriptionCommandEnabled": {
      "expression": "commandContext.dataProviders.existingSubscription.selectedObjects.length === 1 "
    },
    "isDeleteSubscriptionCommandEnabled": {
      "expression": "commandContext.dataProviders.existingSubscription.selectedObjects.length> 0 "
    },
    "isDeActivateSubscriptionCommandDummyVisible": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.isActivateSubscriptionCommandActivate",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "conditions.isDeActivateSubscriptionCommandActivate",
            "$query": {
              "$eq": false
            }
          }
        ]
      }
    },
    "Saw1IsAddUsersNarrowMode": {
      "expression": "commandContext.sidenavMode === 'mobile'"
    },
    "Saw1PasteResourceFromPeoplePickerCommandVisible": {
      "expression": "conditions.Saw1PasteResourceFromPeoplePickerCommandVisibility && !conditions.Saw1IsAddUsersNarrowMode"
    },
    "Saw1PasteResourceFromPeoplePickerCommandVisibility": {
      "expression": "commandContext.selectedUsers.length> 0"
    },
    "isRemoveSchMembersCommandVisible": {
      "expression": "commandContext.selectedObjects && commandContext.selectedObjects.length > 0"
    },
    "isPasteSchMembersFromPeoplePickerCmdVisible": {
      "expression": "commandContext.selectedUsers && commandContext.selectedUsers.length > 0 && !conditions.Saw1IsAddUsersNarrowMode"
    },
    "saw1SubscriptionChangeOwnerCommandActive": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.mselected.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": {
              "$adapt": "ctx.mselected"
            },
            "$query": {
              "$and": [
                {
                  "$source": "modelType.typeHierarchyArray",
                  "$query": {
                    "$in": [
                      "ImanSubscription"
                    ]
                  }
                },
                {
                  "$source": "props.event_handler.uiValue",
                  "$query": {
                    "$in": [
                      "TC_SCHMGT_Notifications"
                    ]
                  }
                }
              ]
            }
          },
          {
            "$source": "conditions.Awp0ChangeOwnerVisibleCondition",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "saw1SubscriptionChangeOwnerCommandVisible": {
      "expression": {
        "$and": [
          {
            "$source": "conditions.saw1SubscriptionChangeOwnerCommandActive",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": {
              "$adapt": "ctx.mselected"
            },
            "$query": {
              "$all": {
                "$source": "props.subscriber.dbValue",
                "$query": {
                  "$eq": "{{ctx.user.uid}}"
                }
              }
            }
          }
        ]
      }
    }
  },
  "messages": {
    "schSoaErrorFailureMsg": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "launchWorkFlowFailure": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "removeDeliverable": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeDeliverableConfirmation}}",
      "messageTextParams": [
        "{{ctx.selected.cellHeader1}}",
        "{{ctx.pselected.cellHeader1}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "Remove",
          "text": "{{i18n.saw1remove}}",
          "action": "rmvDeliverable"
        }
      ]
    },
    "insertSubScheduleMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.insertSubScheduleErrorMessage}}",
      "navigationOptions": [
        {
          "option": "Yes",
          "text": "{{i18n.confirmYes}}",
          "action": "activateInsertSubSchedulePanel"
        },
        {
          "option": "No",
          "text": "{{i18n.confirmNo}}",
          "action": ""
        }
      ]
    },
    "removeAssignmentsConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeAssignmentConfirmationMsg}}",
      "messageTextParams": [
        "{{ctx.mselected}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}",
          "action": ""
        },
        {
          "option": "Remove",
          "text": "{{i18n.saw1remove}}",
          "action": "assignmentsToRemove"
        }
      ]
    },
    "openBaselineObjectCellMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.openBaselineWarningMessage}}",
      "messageTextParams": [
        "{{ctx.mselected}}"
      ],
      "navigationOptions": [
        {
          "option": "Yes",
          "text": "{{i18n.confirmYes}}",
          "action": "openBaselineDelegate"
        },
        {
          "option": "No",
          "text": "{{i18n.confirmNo}}",
          "action": ""
        }
      ]
    },
    "openBaselineShowObjectMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.openBaselineWarningMessage}}",
      "messageTextParams": [
        "{{ctx.mselected}}"
      ],
      "navigationOptions": [
        {
          "option": "Yes",
          "text": "{{i18n.confirmYes}}",
          "action": "openBaselineOneStepDelegate"
        },
        {
          "option": "No",
          "text": "{{i18n.confirmNo}}",
          "action": ""
        }
      ]
    },
    "openBaselineInNewTabMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.openBaselineWarningMessage}}",
      "messageTextParams": [
        "{{ctx.mselected}}"
      ],
      "navigationOptions": [
        {
          "option": "Yes",
          "text": "{{i18n.confirmYes}}",
          "action": "openBaselineInNewTabDelegate"
        },
        {
          "option": "No",
          "text": "{{i18n.confirmNo}}",
          "action": ""
        }
      ]
    },
    "openBaselineInNewWindowMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.openBaselineWarningMessage}}",
      "messageTextParams": [
        "{{ctx.mselected}}"
      ],
      "navigationOptions": [
        {
          "option": "Yes",
          "text": "{{i18n.confirmYes}}",
          "action": "openBaselineInNewWindowDelegate"
        },
        {
          "option": "No",
          "text": "{{i18n.confirmNo}}",
          "action": ""
        }
      ]
    },
    "removeMemberConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeMemberConfirmationMsg}}",
      "messageTextParams": [
        "{{data.memberNames}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "Remove",
          "text": "{{i18n.saw1remove}}",
          "action": "removeSchMemberSOA"
        }
      ]
    },
    "cannotBeIndentedMessage": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}",
      "messageTextParams": []
    },
    "noContinousSelectionMessage": {
      "messageType": "ERROR",
      "messageText": "{{i18n.noContinousSelectionErrorMessage}}",
      "messageTextParams": []
    },
    "cannotBeOutdentedMessage": {
      "messageType": "ERROR",
      "messageText": "{{i18n.invalidOutdentErrorMsg}}",
      "messageTextParams": []
    },
    "cutSuccessfulInfoMsg": {
      "messageType": "INFO",
      "messageText": "{{i18n.cutSuccessful}}",
      "messageTextParams": [
        "{{ctx.selected.props.object_string.dbValues[0]}}",
        "{{data.scheduleName}}"
      ]
    },
    "cutMultipleSuccessfulInfoMsg": {
      "messageType": "INFO",
      "messageText": "{{i18n.cutMultipleSuccessful}}",
      "messageTextParams": [
        "{{ctx.mselected.length}}",
        "{{data.scheduleName}}"
      ]
    },
    "deleteScheduleSingle": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deleteScheduleConfirmation}}",
      "messageTextParams": [
        "{{ctx.mselected[0].props.object_string.dbValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "Remove",
          "text": "{{i18n.delete}}",
          "action": "deleteSchedule"
        }
      ]
    },
    "deleteScheduleMultiple": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deleteScheduleConfirmationForMultiple}}",
      "messageTextParams": [
        "{{ctx.mselected.length}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "Remove",
          "text": "{{i18n.delete}}",
          "action": "deleteSchedule"
        }
      ]
    },
    "confirmDelete": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deleteScheduleTaskConfirmation}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "Delete",
          "text": "{{i18n.delete}}",
          "action": "processSelectionAndDelete"
        }
      ]
    },
    "confirmDependencyDelete": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeSchDependencyMessageConfirmation}}",
      "messageTextParams": [
        "{{commandContext.searchState.pwaSelection[0].props.saw1Name.uiValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "Delete",
          "text": "{{i18n.delete}}",
          "action": "deleteSelectedDependencies"
        }
      ]
    },
    "deleteBaselineConfirm": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deleteScheduleConfirmation}}",
      "messageTextParams": [
        "{{commandContext.vmo}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "Remove",
          "text": "{{i18n.delete}}",
          "action": "deleteBaselineCellCommand"
        }
      ]
    },
    "displayError": {
      "messageType": "ERROR",
      "messageText": "{{data.partialErorrs[0].errorValues[0].message}}"
    },
    "dependencyCreated": {
      "messageType": "INFO",
      "messageText": "{{i18n.taskDependencyCreated}}",
      "messageTextParams": [
        "{{data.dependencyCreateInfo.selectedObjectNames}}",
        "{{data.dependencyCreateInfo.otherSideObjectNames}}"
      ]
    },
    "createDependencyErrorMsg": {
      "messageType": "ERROR",
      "messageText": "{{i18n.createDependencyErrorMsg}}"
    },
    "launchWorkFlowSuccessMsg": {
      "messageType": "INFO",
      "messageText": "{{i18n.launchWorkFlowSuccessMsg}}"
    },
    "confirmlaunchWorkFlow": {
      "messageType": "WARNING",
      "messageText": "{{i18n.launchWorkFlowConfirmation}}",
      "navigationOptions": [
        {
          "option": "No",
          "text": "{{i18n.confirmNo}}",
          "action": ""
        },
        {
          "option": "Yes",
          "text": "{{i18n.confirmYes}}",
          "action": "launchWorkFlow"
        }
      ]
    },
    "templateUnpublisedSchWFLaunchError": {
      "messageType": "ERROR",
      "messageText": "{{i18n.templateUnpublisedSchWFLaunchError}}"
    },
    "launchWorkflowTaskTypeError": {
      "messageType": "ERROR",
      "messageText": "{{i18n.launchWorkflowTaskTypeError}}"
    },
    "confirmDeleteTimesheetEntryMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deleteTimesheetEntryConfirmationText}}",
      "messageTextParams": [
        "{{data.deleteTimesheetEntry.props.object_desc.dbValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.CancelText}}"
        },
        {
          "option": "Delete",
          "text": "{{i18n.delete}}",
          "action": "deleteTimesheetEntry"
        }
      ]
    },
    "ScheduleTaskTypeError": {
      "messageType": "ERROR",
      "messageText": "{{i18n.scheduleTaskTypeError}}"
    },
    "workflowTaskTypeError": {
      "messageType": "ERROR",
      "messageText": "{{i18n.workflowTaskTypeError}}"
    },
    "deliverableDiffSchError": {
      "messageType": "ERROR",
      "messageText": "{{i18n.deliverableDiffSchError}}"
    },
    "deliverableWorkflowError": {
      "messageType": "ERROR",
      "messageText": "{{i18n.deliverableWorkflowError}}"
    },
    "deliverableTaskTypeError": {
      "messageType": "ERROR",
      "messageText": "{{i18n.deliverableTaskTypeError}}"
    },
    "errMsgForPasteOperation": {
      "messageType": "ERROR",
      "messageText": "{{i18n.errMsgForPasteOperation}}"
    },
    "errMsgForSchSummaryTask": {
      "messageType": "ERROR",
      "messageText": "{{i18n.errMsgForSchSummaryTask}}"
    },
    "invalidScheduleSummaryTaskDelete": {
      "messageType": "ERROR",
      "messageText": "{{i18n.invalidScheduleSummaryTaskDelete}}"
    },
    "singleClaimTaskMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.singleClaimTaskConfirmation}}",
      "messageTextParams": [
        "{{ctx.mselected[0].props.object_string.dbValues[0]}}",
        "{{ctx.selectedTeamName}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.CancelText}}",
          "action": "unRegisterCommandContext"
        },
        {
          "option": "Claim",
          "text": "{{i18n.claimText}}",
          "action": "claimTaskAction"
        }
      ]
    },
    "multipleClaimTasksMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.multipleClaimTasksConfirmation}}",
      "messageTextParams": [
        "{{ctx.mselected}}",
        "{{ctx.selectedTeamName}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "Claim",
          "text": "{{i18n.claimText}}",
          "action": "claimTaskAction"
        }
      ]
    },
    "singleClaimTaskForAllTeamsMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.singleClaimTaskConfirmationForAllTeams}}",
      "messageTextParams": [
        "{{ctx.mselected[0].props.object_string.dbValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.CancelText}}",
          "action": "unRegisterCommandContext"
        },
        {
          "option": "Claim",
          "text": "{{i18n.claimText}}",
          "action": "claimTaskAction"
        }
      ]
    },
    "multipleClaimTasksForAllTeamsMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.multipleClaimTasksConfirmationForAllTeams}}",
      "messageTextParams": [
        "{{ctx.mselected}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "Claim",
          "text": "{{i18n.claimText}}",
          "action": "claimTaskAction"
        }
      ]
    },
    "scheduleTaskErrorMessage": {
      "messageType": "ERROR",
      "messageText": "{{i18n.scheduleTaskErrorMsg}}"
    },
    "copySingleTaskSuccessful": {
      "messageType": "INFO",
      "messageText": "{{i18n.copySingleSuccessful}}",
      "messageTextParams": [
        "{{ctx.mselected[0].props.object_string.uiValues[0]}}"
      ]
    },
    "copyMultipleTasksSuccessful": {
      "messageType": "INFO",
      "messageText": "{{i18n.copyMultipleSuccessful}}",
      "messageTextParams": [
        "{{ctx.mselected.length}}"
      ]
    },
    "replaceSingleLatestSchTaskDelRevisionConfirmationMsg": {
      "messageType": "WARNING",
      "messageText": "{{i18n.saw1SingleReplacewithLatestRevisionConfirmationMessage}}",
      "messageTextParams": [
        "{{ctx.mselected[0].cellHeader1}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "Replace",
          "text": "{{i18n.saw1Replace}}",
          "action": "getLatestSchTaskDelRevision"
        }
      ]
    },
    "replaceLatestSchTaskDelRevisionConfirmationMsg": {
      "messageType": "WARNING",
      "messageText": "{{i18n.saw1ReplacewithLatestRevisionConfirmationMessage}}",
      "messageTextParams": [
        "{{ctx.mselected.length}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.CancelText}}",
          "action": ""
        },
        {
          "option": "Replace",
          "text": "{{i18n.saw1Replace}}",
          "action": "getLatestSchTaskDelRevision"
        }
      ]
    },
    "subScriptionErrorMessage": {
      "messageType": "ERROR",
      "messageText": "{{i18n.subScriptionFailure}}",
      "messageTextParams": [
        "{{data.partialErorrs[0].errorValues[0].message}}"
      ]
    },
    "createSuccess": {
      "messageType": "INFO",
      "messageText": "{{i18n.setActiveBaselineMsg}}",
      "messageTextParams": [
        "{{commandContext.vmo.cellHeader1}}"
      ]
    }
  },
  "onEvent": [
    {
      "eventId": "deleteTasksEvent",
      "action": "deleteTasks"
    },
    {
      "eventId": "deleteDependencyEvent",
      "action": "deleteDependencies"
    },
    {
      "eventId": "schDeliverable.removeDeliverable",
      "message": "removeDeliverable"
    },
    {
      "eventId": "removeAssignments.showMessage",
      "message": "removeAssignmentsConfirmationMessage"
    },
    {
      "eventId": "openBaselineObjectCell.showMessage",
      "message": "openBaselineObjectCellMessage"
    },
    {
      "eventId": "openBaselineShowObject.showMessage",
      "message": "openBaselineShowObjectMessage"
    },
    {
      "eventId": "openBaselineInNewTab.showMessage",
      "message": "openBaselineInNewTabMessage"
    },
    {
      "eventId": "openBaselineInNewWindow.showMessage",
      "message": "openBaselineInNewWindowMessage"
    },
    {
      "eventId": "callMoveRequst",
      "action": "callMoveRequstSOA"
    },
    {
      "eventId": "dependencies.deleteDependencyOperation",
      "action": "deleteDependencySoaAction"
    },
    {
      "eventId": "scheduleTagPropertyLoaded",
      "action": "unAssignResources"
    },
    {
      "eventId": "tasks.deleteSelectedTasks",
      "action": "deleteTasksAction"
    },
    {
      "eventId": "deleteTask.showMessage",
      "message": "confirmDelete"
    },
    {
      "eventId": "deleteDependency.confirmAndDelete",
      "message": "confirmDependencyDelete"
    },
    {
      "eventId": "tasks.detachSubSchedule",
      "action": "detachSubScheduleAction"
    },
    {
      "eventId": "launchWorkFlow.showMessage",
      "message": "confirmlaunchWorkFlow"
    },
    {
      "eventId": "SOAForStartWhatIf",
      "action": "startWhatIf"
    },
    {
      "eventId": "SOAForPromoteWhatIf",
      "action": "promoteWhatIf"
    },
    {
      "eventId": "refreshGantt",
      "action": "dataRefresh"
    },
    {
      "eventId": "saw1IndentSchTask",
      "action": "IndentTask"
    },
    {
      "eventId": "updateTimesheetEntryDataProviderEvent",
      "action": "updateTimesheetEntryDataProviderAction"
    },
    {
      "eventId": "quickCreateTaskEvent",
      "action": "quickCreateTaskSOA"
    },
    {
      "eventId": "unRegisterCommandContextEvent",
      "action": "unRegisterCommandContext"
    },
    {
      "eventId": "getConfirmationForlaunchWorkflow",
      "action": "getConfirmationForlaunchWorkflow"
    },
    {
      "eventId": "pasteScheduleTaskOperation",
      "action": "pasteTaskOperation"
    },
    {
      "eventId": "replaceLatestSchTaskDelRevisionEvent",
      "action": "replaceLatestSchTaskDelRevisionAction"
    },
    {
      "eventId": "deleteBaselineEvent",
      "action": "deleteBaselineAction"
    },
    {
      "eventId": "updateDataProvidersEvent",
      "action": "updateDataProvidersAction"
    },
    {
      "eventId": "updateTaskTreeNodePositionEvent",
      "cacheEventData": true,
      "action": "updateTaskTreeNodePositionAction"
    },
    {
      "eventId": "Saw1SubscribeSingleObjectEvent",
      "action": "Saw1subscribeSingleObject"
    },
    {
      "eventId": "Saw1SubscribeMultipleObjectEvent",
      "action": "Saw1LoadSubscriptionCreatePanel"
    },
    {
      "eventId": "Saw1ListSubscriptions",
      "action": "Saw1ListExistingSubscription"
    },
    {
      "eventId": "Saw1ActivateCreatePanel",
      "action": "Saw1LoadSubscriptionCreatePanel"
    },
    {
      "eventId": "clearSelectionFromExistingSubscriptions",
      "action": "clearSelectionFromExistingSubscriptions"
    },
    {
      "eventId": "openTaskDelInNewTabEvent",
      "action": "openTaskDelInNewTabDelegate"
    },
    {
      "eventId": "openSchDelInNewTabEvent",
      "action": "openSchDelInNewTabDelegate"
    },
    {
      "eventId": "openDelInNewTabEvent",
      "action": "openDelInNewTabDelegate"
    },
    {
      "eventId": "openTaskDelInNewWindowEvent",
      "action": "openTaskDelInNewWindowDelegate"
    },
    {
      "eventId": "openSchDelInNewWindowEvent",
      "action": "openSchDelInNewWindowDelegate"
    },
    {
      "eventId": "openDelInNewWindowEvent",
      "action": "openDelInNewWindowDelegate"
    }
  ],
  "i18n": {
    "Saw1ChangeOwner": [
      "ScheduleManagerMessages"
    ],
    "saw1AddTemplate": [
      "ScheduleManagerMessages"
    ],
    "saw1_templateSectionCommands": [
      "ScheduleManagerMessages"
    ],
    "AssignOrUnassignResource": [
      "ScheduleManagerMessages"
    ],
    "saw1GoTo": [
      "ScheduleManagerMessages"
    ],
    "saw1AllSchedules": [
      "ScheduleManagerMessages"
    ],
    "saw1AllSchedulesDesc": [
      "ScheduleManagerMessages"
    ],
    "removeSchDeliverable": [
      "ScheduleManagerMessages"
    ],
    "removeDeliverableConfirmation": [
      "ScheduleManagerMessages"
    ],
    "CancelText": [
      "ScheduleManagerMessages"
    ],
    "saw1remove": [
      "ScheduleManagerMessages"
    ],
    "addDeliverableCommandTitle": [
      "ScheduleManagerMessages"
    ],
    "deliverables": [
      "ScheduleManagerMessages"
    ],
    "createScheduleTitle": [
      "ScheduleManagerMessages"
    ],
    "insertSubSchedule": [
      "ScheduleManagerMessages"
    ],
    "cutSuccessful": [
      "ScheduleManagerMessages"
    ],
    "cutMultipleSuccessful": [
      "ScheduleManagerMessages"
    ],
    "addTaskCommandTitle": [
      "ScheduleManagerMessages"
    ],
    "addProxyTaskCommandTitle": [
      "ScheduleManagerMessages"
    ],
    "mirrorAsProxyCommandTitle": [
      "ScheduleManagerMessages"
    ],
    "deleteDependencyCommandTitle": [
      "ScheduleManagerMessages"
    ],
    "removeAssignmentsCommandTitle": [
      "ScheduleManagerMessages"
    ],
    "cancel": [
      "ScheduleManagerMessages"
    ],
    "removeAssignmentConfirmationMsg": [
      "ScheduleManagerMessages"
    ],
    "saw1InterfaceDetails": [
      "ScheduleManagerMessages"
    ],
    "saw1IntDetailsRight": [
      "ScheduleManagerMessages"
    ],
    "saw1IntDetailsBottom": [
      "ScheduleManagerMessages"
    ],
    "saw1IntDetailsOff": [
      "ScheduleManagerMessages"
    ],
    "saw1Settings": [
      "ScheduleManagerMessages"
    ],
    "saw1Next": [
      "ScheduleManagerMessages"
    ],
    "saw1NextTwoWeeks": [
      "ScheduleManagerMessages"
    ],
    "saw1Previous": [
      "ScheduleManagerMessages"
    ],
    "saw1PreviousTwoWeeks": [
      "ScheduleManagerMessages"
    ],
    "Saw1Today": [
      "ScheduleManagerMessages"
    ],
    "deleteSchedules": [
      "ScheduleManagerMessages"
    ],
    "setZoomGanttGroup": [
      "ScheduleManagerMessages"
    ],
    "setZoomGanttDay": [
      "ScheduleManagerMessages"
    ],
    "setZoomGanttWeek": [
      "ScheduleManagerMessages"
    ],
    "setZoomGanttMonth": [
      "ScheduleManagerMessages"
    ],
    "setZoomGanttYear": [
      "ScheduleManagerMessages"
    ],
    "setZoomGanttUnitOfTime": [
      "ScheduleManagerMessages"
    ],
    "saw1GanttSetZoom": [
      "ScheduleManagerMessages"
    ],
    "saw1GanttZoomLevelDay": [
      "ScheduleManagerMessages"
    ],
    "saw1GanttZoomLevelWeek": [
      "ScheduleManagerMessages"
    ],
    "saw1GanttZoomLevelMonth": [
      "ScheduleManagerMessages"
    ],
    "saw1GanttZoomLevelYear": [
      "ScheduleManagerMessages"
    ],
    "saw1GanttZoomLevelDefault": [
      "ScheduleManagerMessages"
    ],
    "Shift": [
      "ScheduleManagerMessages"
    ],
    "removeMemberConfirmationMsg": [
      "ScheduleManagerMessages"
    ],
    "deleteScheduleConfirmation": [
      "ScheduleManagerMessages"
    ],
    "deleteScheduleConfirmationForMultiple": [
      "ScheduleManagerMessages"
    ],
    "indentTaskCmdTitle": [
      "ScheduleManagerMessages"
    ],
    "ganttTitle": [
      "ScheduleManagerMessages"
    ],
    "Saw1GanttChart": [
      "ScheduleManagerMessages"
    ],
    "Saw1GanttChartToggleDesc": [
      "ScheduleManagerMessages"
    ],
    "invalidIndentErrorMsg": [
      "ScheduleManagerMessages"
    ],
    "noContinousSelectionErrorMessage": [
      "ScheduleManagerMessages"
    ],
    "outdentTaskCmdTitle": [
      "ScheduleManagerMessages"
    ],
    "invalidOutdentErrorMsg": [
      "ScheduleManagerMessages"
    ],
    "removeMemberCommandTitle": [
      "ScheduleManagerMessages"
    ],
    "delete": [
      "ScheduleManagerMessages"
    ],
    "Saw1Delete": [
      "ScheduleManagerMessages"
    ],
    "createScheduleFromTemplateTitle": [
      "ScheduleManagerMessages"
    ],
    "reassignTask": [
      "ScheduleManagerMessages"
    ],
    "tasks": [
      "ScheduleManagerMessages"
    ],
    "unassignResourceCommandTitle": [
      "ScheduleManagerMessages"
    ],
    "members": [
      "ScheduleManagerMessages"
    ],
    "deleteTasks": [
      "ScheduleManagerMessages"
    ],
    "deleteScheduleTaskConfirmation": [
      "ScheduleManagerMessages"
    ],
    "createDependency": [
      "ScheduleManagerMessages"
    ],
    "taskDependencyCreated": [
      "ScheduleManagerMessages"
    ],
    "createDependencyErrorMsg": [
      "ScheduleManagerMessages"
    ],
    "Saw1SearchFiltersTitle": [
      "ScheduleManagerMessages"
    ],
    "saw1WhatIf": [
      "ScheduleManagerMessages"
    ],
    "saw1WhatIfCmdDesc": [
      "ScheduleManagerMessages"
    ],
    "StartWhatIfAnalysis": [
      "ScheduleManagerMessages"
    ],
    "promote": [
      "ScheduleManagerMessages"
    ],
    "launchWorkFlowSuccessMsg": [
      "ScheduleManagerMessages"
    ],
    "launchWorkflow": [
      "ScheduleManagerMessages"
    ],
    "launchWorkFlowConfirmation": [
      "ScheduleManagerMessages"
    ],
    "confirmYes": [
      "ScheduleManagerMessages"
    ],
    "confirmNo": [
      "ScheduleManagerMessages"
    ],
    "showCriticalPath": [
      "ScheduleManagerMessages"
    ],
    "hideCriticalPath": [
      "ScheduleManagerMessages"
    ],
    "WorkflowTasks": [
      "ScheduleManagerMessages"
    ],
    "workflowTaskTypeError": [
      "ScheduleManagerMessages"
    ],
    "resources": [
      "ScheduleManagerMessages"
    ],
    "removeUser": [
      "ScheduleManagerMessages"
    ],
    "DesignateDiscipline": [
      "ScheduleManagerMessages"
    ],
    "RevertToDiscipline": [
      "ScheduleManagerMessages"
    ],
    "scheduleTaskTypeError": [
      "ScheduleManagerMessages"
    ],
    "assignScheduledeliverable": [
      "ScheduleManagerMessages"
    ],
    "assignScheduledeliverableTitle": [
      "ScheduleManagerMessages"
    ],
    "assignTaskdeliverable": [
      "ScheduleManagerMessages"
    ],
    "assignTaskdeliverableTitle": [
      "ScheduleManagerMessages"
    ],
    "deliverableDiffSchError": [
      "ScheduleManagerMessages"
    ],
    "deliverableWorkflowError": [
      "ScheduleManagerMessages"
    ],
    "deliverableTaskTypeError": [
      "ScheduleManagerMessages"
    ],
    "copySingleSuccessful": [
      "ZeroCompileCommandMessages"
    ],
    "copyMultipleSuccessful": [
      "ZeroCompileCommandMessages"
    ],
    "paste": [
      "ScheduleManagerMessages"
    ],
    "addProjectButtonTitle": [
      "awAddDirectiveMessages"
    ],
    "addPrivilegedUser": [
      "ScheduleManagerMessages"
    ],
    "errMsgForPasteOperation": [
      "ScheduleManagerMessages"
    ],
    "errMsgForSchSummaryTask": [
      "ScheduleManagerMessages"
    ],
    "addWorkflowOwner": [
      "ScheduleManagerMessages"
    ],
    "assignResourceCommandTitle": [
      "ScheduleManagerMessages"
    ],
    "invalidScheduleSummaryTaskDelete": [
      "ScheduleManagerMessages"
    ],
    "assignDiscilpine": [
      "ScheduleManagerMessages"
    ],
    "unassignDiscipline": [
      "ScheduleManagerMessages"
    ],
    "assignResourcePool": [
      "ScheduleManagerMessages"
    ],
    "baseline": [
      "ScheduleManagerMessages"
    ],
    "viewBaseline": [
      "ScheduleManagerMessages"
    ],
    "unassignBaseline": [
      "ScheduleManagerMessages"
    ],
    "assignBaseline": [
      "ScheduleManagerMessages"
    ],
    "replaceBaseline": [
      "ScheduleManagerMessages"
    ],
    "unassignResourcePool": [
      "ScheduleManagerMessages"
    ],
    "saw1Recalculate": [
      "ScheduleManagerMessages"
    ],
    "Saw1SaveAsCmdTitle": [
      "ScheduleManagerMessages"
    ],
    "enterTimeTitle": [
      "ScheduleManagerMessages"
    ],
    "addTimesheetEntry": [
      "ScheduleManagerMessages"
    ],
    "entry": [
      "ScheduleManagerMessages"
    ],
    "edit": [
      "ScheduleManagerMessages"
    ],
    "deleteTimesheetEntryConfirmationText": [
      "ScheduleManagerMessages"
    ],
    "openBaselineWarningMessage": [
      "ScheduleManagerMessages"
    ],
    "saw1CreateBaseline": [
      "ScheduleManagerMessages"
    ],
    "quickTaskCommandTitle": [
      "ScheduleManagerMessages"
    ],
    "quickMilestoneCommandTitle": [
      "ScheduleManagerMessages"
    ],
    "quickCreateGroupCommandTitle": [
      "ScheduleManagerMessages"
    ],
    "createScheduleGroupTitle": [
      "ScheduleManagerMessages"
    ],
    "schedulesTitle": [
      "ScheduleManagerMessages"
    ],
    "scheduleTasksTitle": [
      "ScheduleManagerMessages"
    ],
    "discipline": [
      "ScheduleManagerMessages"
    ],
    "saw1ResLoadPanelTitle": [
      "ScheduleManagerMessages"
    ],
    "insertSubScheduleErrorMessage": [
      "ScheduleManagerMessages"
    ],
    "user": [
      "Awp0ChangeOwnerMessages"
    ],
    "filters": [
      "ScheduleManagerMessages"
    ],
    "addButtonText": [
      "ScheduleManagerMessages"
    ],
    "addFilter": [
      "ScheduleManagerMessages"
    ],
    "saw1ResLoadCommandTitle": [
      "ScheduleManagerMessages"
    ],
    "saw1ClaimTask": [
      "ScheduleManagerMessages"
    ],
    "singleClaimTaskConfirmation": [
      "ScheduleManagerMessages"
    ],
    "multipleClaimTasksConfirmation": [
      "ScheduleManagerMessages"
    ],
    "editTimesheetEntry": [
      "ScheduleManagerMessages"
    ],
    "claimText": [
      "ScheduleManagerMessages"
    ],
    "singleClaimTaskConfirmationForAllTeams": [
      "ScheduleManagerMessages"
    ],
    "multipleClaimTasksConfirmationForAllTeams": [
      "ScheduleManagerMessages"
    ],
    "templateUnpublisedSchWFLaunchError": [
      "ScheduleManagerMessages"
    ],
    "launchWorkflowTaskTypeError": [
      "ScheduleManagerMessages"
    ],
    "Saw1KanbanDisplayLimit": [
      "ScheduleManagerMessages"
    ],
    "aw_addUserCellCommand": [
      "ScheduleManagerMessages"
    ],
    "aw_addScheduleCellCommand": [
      "ScheduleManagerMessages"
    ],
    "aw_removeScheduleCellCommand": [
      "ScheduleManagerMessages"
    ],
    "aw_removeUserCellCommand": [
      "ScheduleManagerMessages"
    ],
    "aw_addDisciplineCellCommand": [
      "ScheduleManagerMessages"
    ],
    "aw_removeDisciplineCellCommand": [
      "ScheduleManagerMessages"
    ],
    "aw_addResourcePoolCellCommand": [
      "ScheduleManagerMessages"
    ],
    "aw_baselineCellCommand": [
      "ScheduleManagerMessages"
    ],
    "aw_removeBaselineCellCommand": [
      "ScheduleManagerMessages"
    ],
    "aw_removeResourcePoolCellCommand": [
      "ScheduleManagerMessages"
    ],
    "saw1_NewGroup": [
      "ScheduleManagerMessages"
    ],
    "saw1_projectSectionCommands": [
      "ScheduleManagerMessages"
    ],
    "saw1_templateProjectSectionCommands": [
      "ScheduleManagerMessages"
    ],
    "saw1_userSectionCommands": [
      "ScheduleManagerMessages"
    ],
    "saw1_ownerSectionCommands": [
      "ScheduleManagerMessages"
    ],
    "saw1_addTimesheetEntry": [
      "ScheduleManagerMessages"
    ],
    "saw1_add": [
      "ScheduleManagerMessages"
    ],
    "aw_TimesheetEntryCellCommand": [
      "ScheduleManagerMessages"
    ],
    "aw_schTemplateCellCommand": [
      "ScheduleManagerMessages"
    ],
    "aw_ganttViewer": [
      "ScheduleManagerMessages"
    ],
    "aw_programGanttViewer": [
      "ScheduleManagerMessages"
    ],
    "saw1_ganttContextMenu": [
      "ScheduleManagerMessages"
    ],
    "saw1_RemoveWorkflowOwnerCellCommand": [
      "ScheduleManagerMessages"
    ],
    "saw1_RemovePrivilegeUserCellCommand": [
      "ScheduleManagerMessages"
    ],
    "scheduleTaskErrorMsg": [
      "ScheduleManagerMessages"
    ],
    "createProgramView": [
      "ScheduleManagerMessages"
    ],
    "saveBtnTitle": [
      "ScheduleManagerMessages"
    ],
    "saw1_ChangeSchedules": [
      "ScheduleManagerMessages"
    ],
    "saw1_AddSchedule": [
      "ScheduleManagerMessages"
    ],
    "saw1ReplaceRevisionCommandTitle": [
      "ScheduleManagerMessages"
    ],
    "saw1ReplaceLatestRevisionCommandTitle": [
      "ScheduleManagerMessages"
    ],
    "saw1SingleReplacewithLatestRevisionConfirmationMessage": [
      "ScheduleManagerMessages"
    ],
    "saw1ReplacewithLatestRevisionConfirmationMessage": [
      "ScheduleManagerMessages"
    ],
    "saw1Replace": [
      "ScheduleManagerMessages"
    ],
    "saw1NoOfSelectionsForReplaceRevisionErrorMsg": [
      "ScheduleManagerMessages"
    ],
    "saw1NoRevisionToReplaceRevisionErrorMsg": [
      "ScheduleManagerMessages"
    ],
    "saw1NoPermissionToReplaceRevisionErrorMsg": [
      "ScheduleManagerMessages"
    ],
    "Awp0GoSchedulesDesc": [
      "ScheduleManagerMessages"
    ],
    "Awp0GoScheduleTasksDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1CreateProgramViewDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1ProgramViewFilterDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1DesignatedDisciplineDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1RevertToDisciplineDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1ResGraphCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1RemoveDisciplineCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1AddBaselineCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1ReplaceBaselineCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1RemoveBaselineCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1RemoveResourcePoolCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1WorkflowTasksDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1RemoveWorkflowOwnerDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1RemovePrivilegedUserDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1RemoveSchDeliverableDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1StartWhatIfDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1PromoteWhatIfDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1CancelWhatIfDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1CreateScheduleDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1CreateScheduleFromTemplateDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1TodayExtendedTooltip": [
      "ScheduleManagerMessages"
    ],
    "Saw1InsertSubScheduleDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1RemoveAssignmentsDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1ReplaceMemberDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1DesignateDisciplineToMembersDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1UnassignResourceDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1CreateSchTaskDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1CreateProxyTaskDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1MirrorAsProxyTaskDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1ShiftScheduleDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1RemoveSchMemberDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1IndentTaskDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1OutdentTaskDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1DeleteDependencyDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1DeleteScheduleDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1DeleteTaskDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1CreateDependencyDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1RemoveTaskDeliverableDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1SearchFiltersDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1AddSchDeliverableDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1LaunchWorkflowDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1ShowHideCriticalPathDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1AssignScheduleDeliverableDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1AssignTaskDeliverableDesc": [
      "ScheduleManagerMessages"
    ],
    "uiwidgetAddcmdDesc": [
      "awAddDirectiveMessages"
    ],
    "Saw1ProgramFiltersAddCmdDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1UserSectionAddCmdDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1OwnerSectionAddCmdDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1AddDeliverableDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1AssignResourceDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1CreateBaselineDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1ViewBaselineScheduleDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1GanttFiltersDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1SaveAsScheduleDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1RecalculateDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1RecalculateOnGanttDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1EnterTimeDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1AddTimesheetEntryDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1EditTimesheetEntryCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1DeleteTimesheetEntryCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1EditProgramViewCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1DeleteProgramViewCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1QuickCreateTaskDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1AddDisciplineCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1AddMemberDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1AddResourcePoolCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1AddUserCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1QuickCreateMilestoneDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1ClaimTaskDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1KanbanDisplayLimitDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1Expand": [
      "ScheduleManagerMessages"
    ],
    "Saw1ExpandBelow": [
      "ScheduleManagerMessages"
    ],
    "Saw1CollapseBelow": [
      "ScheduleManagerMessages"
    ],
    "Saw1ExpandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1ExpandBelowDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1CollapseBelowDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1ShowTaskProperties": [
      "ScheduleManagerMessages"
    ],
    "Saw1ShowTaskPropertiesDesc": [
      "ScheduleManagerMessages"
    ],
    "editBaseline": [
      "ScheduleManagerMessages"
    ],
    "deleteBaseline": [
      "ScheduleManagerMessages"
    ],
    "manageBaselines": [
      "ScheduleManagerMessages"
    ],
    "Saw1ManageBaselinesDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1EditBaselineCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1DeleteBaselineCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "setBaselineActive": [
      "ScheduleManagerMessages"
    ],
    "Saw1ShowSchTaskDeliverablesCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "showSchTaskDeliverables": [
      "ScheduleManagerMessages"
    ],
    "Saw1SetBaselineActiveCellCommandDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1CreateScheduleTask": [
      "schedulemanagerjsTooltipMessages"
    ],
    "Saw1ResourcesGroupToMembers": [
      "schedulemanagerjsTooltipMessages"
    ],
    "Saw1ChangeOwnerDesc": [
      "tcuijsTooltipMessages"
    ],
    "Awp0OpenInNewTab": [
      "tcuijsTooltipMessages"
    ],
    "complete": [
      "ScheduleManagerMessages"
    ],
    "Saw1StateClosed": [
      "ScheduleManagerMessages"
    ],
    "Saw1StateAborted": [
      "ScheduleManagerMessages"
    ],
    "allTaskDelete": [
      "ScheduleManagerMessages"
    ],
    "singleTaskDeleteErrorMessage": [
      "ScheduleManagerMessages"
    ],
    "noContinousSelectionOutdentErrorMsg": [
      "ScheduleManagerMessages"
    ],
    "indentTaskErrorMessage": [
      "ScheduleManagerMessages"
    ],
    "outdentTaskErrorMessage": [
      "ScheduleManagerMessages"
    ],
    "smPreventUpdatePrefErrorMessge": [
      "ScheduleManagerMessages"
    ],
    "inlineDepFormatPredError": [
      "ScheduleManagerMessages"
    ],
    "inlineDepFormatSuccError": [
      "ScheduleManagerMessages"
    ],
    "taskNotFoundError": [
      "ScheduleManagerMessages"
    ],
    "cmdOpenInScheduleContextDesc": [
      "ScheduleManagerMessages"
    ],
    "cmdOpenInScheduleContextTitle": [
      "ScheduleManagerMessages"
    ],
    "taskbarFullScreen": [
      "UIElementsMessages"
    ],
    "taskbarFullScreenExit": [
      "UIElementsMessages"
    ],
    "Awp0TaskbarFullScreenDesc": [
      "UIElementsMessages"
    ],
    "Awp0TaskbarExitFullScreenDesc": [
      "UIElementsMessages"
    ],
    "addSubscriptionCmd": [
      "ScheduleManagerMessages"
    ],
    "deActivateSubscriptionCmd": [
      "ScheduleManagerMessages"
    ],
    "ActivateSubscriptionCmd": [
      "ScheduleManagerMessages"
    ],
    "deleteSubscriptionCmd": [
      "ScheduleManagerMessages"
    ],
    "editSubscriptionCmd": [
      "ScheduleManagerMessages"
    ],
    "followersPanelTitle": [
      "ScheduleManagerMessages"
    ],
    "subScriptionFailure": [
      "ScheduleManagerMessages"
    ],
    "assignDeliverable": [
      "ScheduleManagerMessages"
    ],
    "setActiveBaselineMsg": [
      "ScheduleManagerMessages"
    ],
    "assignButtonText": [
      "ScheduleManagerMessages"
    ],
    "addSchMemberTitle": [
      "ScheduleManagerMessages"
    ],
    "removeSchMemberTitle": [
      "ScheduleManagerMessages"
    ],
    "Saw1RoleTitle": [
      "ScheduleManagerMessages"
    ],
    "Saw1RoleDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1RoleCoordinatorTitle": [
      "ScheduleManagerMessages"
    ],
    "Saw1RoleCoordinatorDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1RoleParticipantTitle": [
      "ScheduleManagerMessages"
    ],
    "Saw1RoleParticipantDesc": [
      "ScheduleManagerMessages"
    ],
    "Saw1RoleObserverTitle": [
      "ScheduleManagerMessages"
    ],
    "Saw1RoleObserverDesc": [
      "ScheduleManagerMessages"
    ],
    "addSubscriptionToolTip": [
      "ScheduleManagerMessages"
    ],
    "deActivateSubscriptionToolTip": [
      "ScheduleManagerMessages"
    ],
    "activateSubscriptionToolTip": [
      "ScheduleManagerMessages"
    ],
    "deleteSubscriptionToolTip": [
      "ScheduleManagerMessages"
    ],
    "editSubscriptionToolTip": [
      "ScheduleManagerMessages"
    ],
    "removeSchDependencyMessageConfirmation": [
      "ScheduleManagerMessages"
    ]
  }
}
